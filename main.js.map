{"version":3,"sources":["bower_components/es6-promise/promise.min.js","platform/framework/src/Constants.js","platform/framework/src/FrameworkInitializer.js","platform/framework/src/LogLevel.js","platform/framework/src/load/Extension.js","platform/framework/src/load/Bundle.js","platform/framework/src/load/BundleLoader.js","platform/framework/src/resolve/ImplementationLoader.js","platform/framework/src/resolve/ExtensionResolver.js","platform/framework/src/resolve/BundleResolver.js","platform/framework/src/resolve/RequireConfigurator.js","platform/framework/src/register/ServiceCompositor.js","platform/framework/src/register/CustomRegistrars.js","platform/framework/src/register/PartialConstructor.js","platform/framework/src/register/ExtensionRegistrar.js","platform/framework/src/register/ExtensionSorter.js","platform/framework/src/bootstrap/ApplicationBootstrapper.js","platform/framework/src/FrameworkLayer.js","bower_components/angular/angular.min.js","bower_components/angular-route/angular-route.min.js","platform/framework/src/Main.js","src/BundleRegistry.js","src/legacyRegistry.js","platform/framework/bundle.js","platform/core/src/objects/DomainObjectProvider.js","platform/core/src/capabilities/CoreCapabilityProvider.js","platform/core/src/models/StaticModelProvider.js","platform/core/src/models/RootModelProvider.js","platform/core/src/models/ModelAggregator.js","platform/core/src/models/ModelCacheService.js","platform/core/src/models/PersistedModelProvider.js","platform/core/src/models/CachingModelDecorator.js","platform/core/src/models/MissingModelDecorator.js","platform/core/src/types/TypePropertyConversion.js","platform/core/src/types/TypeProperty.js","platform/core/src/types/TypeImpl.js","platform/core/src/types/MergeModels.js","platform/core/src/types/TypeProvider.js","platform/core/src/actions/ActionProvider.js","platform/core/src/actions/ActionAggregator.js","platform/core/src/actions/LoggingActionDecorator.js","platform/core/src/views/ViewProvider.js","bower_components/node-uuid/uuid.js","platform/core/src/identifiers/Identifier.js","platform/core/src/identifiers/IdentifierProvider.js","platform/core/src/capabilities/CompositionCapability.js","platform/core/src/capabilities/RelationshipCapability.js","platform/core/src/types/TypeCapability.js","platform/core/src/actions/ActionCapability.js","platform/core/src/views/ViewCapability.js","platform/core/src/capabilities/PersistenceCapability.js","bower_components/moment/moment.js","platform/core/src/capabilities/MetadataCapability.js","platform/core/src/capabilities/MutationCapability.js","platform/core/src/capabilities/DelegationCapability.js","platform/core/src/capabilities/InstantiationCapability.js","platform/core/src/services/Now.js","platform/core/src/services/Throttle.js","platform/core/src/services/Topic.js","platform/core/src/capabilities/ContextCapability.js","platform/core/src/capabilities/ContextualDomainObject.js","platform/core/src/services/Contextualize.js","platform/core/src/objects/DomainObjectImpl.js","platform/core/src/services/Instantiate.js","platform/core/bundle.js","platform/representation/src/MCTInclude.js","platform/representation/src/MCTRepresentation.js","platform/representation/src/gestures/GestureConstants.js","platform/representation/src/gestures/DragGesture.js","platform/representation/src/gestures/DropGesture.js","platform/representation/src/gestures/ContextMenuGesture.js","platform/representation/src/gestures/GestureProvider.js","platform/representation/src/gestures/GestureRepresenter.js","platform/representation/src/services/DndService.js","platform/representation/src/TemplateLinker.js","platform/representation/src/actions/ContextMenuAction.js","platform/representation/src/TemplatePrefetcher.js","platform/representation/bundle.js","bower_components/text/text.js","text!platform/commonUI/about/res/templates/about-dialog.html","platform/commonUI/about/src/LogoController.js","platform/commonUI/about/src/AboutController.js","platform/commonUI/about/src/LicenseController.js","text!platform/commonUI/about/res/templates/app-logo.html","text!platform/commonUI/about/res/templates/about-logo.html","text!platform/commonUI/about/res/templates/overlay-about.html","text!platform/commonUI/about/res/templates/license-apache.html","text!platform/commonUI/about/res/templates/license-mit.html","platform/commonUI/about/res/templates/licenses.html!text","text!platform/commonUI/about/res/templates/licenses-export-md.html","platform/commonUI/about/bundle.js","platform/commonUI/browse/src/BrowseController.js","platform/commonUI/browse/src/PaneController.js","platform/commonUI/browse/src/InspectorPaneController.js","platform/commonUI/browse/src/BrowseObjectController.js","platform/commonUI/browse/src/MenuArrowController.js","platform/commonUI/browse/src/navigation/NavigationService.js","platform/commonUI/browse/src/navigation/NavigateAction.js","platform/commonUI/browse/src/navigation/OrphanNavigationHandler.js","platform/commonUI/browse/src/windowing/NewTabAction.js","bower_components/screenfull/dist/screenfull.min.js","platform/commonUI/browse/src/windowing/FullscreenAction.js","platform/commonUI/browse/src/windowing/WindowTitler.js","platform/commonUI/browse/res/templates/browse.html!text","text!platform/commonUI/browse/res/templates/browse-object.html","text!platform/commonUI/browse/res/templates/items/grid-item.html","text!platform/commonUI/browse/res/templates/browse/object-header.html","text!platform/commonUI/browse/res/templates/menu-arrow.html","text!platform/commonUI/browse/res/templates/back-arrow.html","platform/commonUI/browse/res/templates/items/items.html!text","text!platform/commonUI/browse/res/templates/browse/object-properties.html","text!platform/commonUI/browse/res/templates/browse/inspector-region.html","platform/commonUI/browse/bundle.js","platform/commonUI/edit/src/controllers/EditActionController.js","platform/commonUI/edit/src/controllers/EditPanesController.js","platform/commonUI/edit/src/controllers/ElementsController.js","platform/commonUI/edit/src/controllers/EditObjectController.js","platform/commonUI/edit/src/directives/MCTBeforeUnload.js","platform/commonUI/edit/src/actions/EditAndComposeAction.js","platform/commonUI/edit/src/actions/EditAction.js","platform/commonUI/edit/src/actions/PropertiesDialog.js","platform/commonUI/edit/src/actions/PropertiesAction.js","platform/commonUI/edit/src/actions/RemoveAction.js","platform/commonUI/edit/src/actions/SaveInProgressDialog.js","platform/commonUI/edit/src/actions/SaveAction.js","platform/commonUI/edit/src/creation/CreateWizard.js","platform/commonUI/edit/src/actions/SaveAsAction.js","platform/commonUI/edit/src/actions/CancelAction.js","platform/commonUI/edit/src/policies/EditActionPolicy.js","platform/commonUI/edit/src/policies/EditableLinkPolicy.js","platform/commonUI/edit/src/policies/EditableMovePolicy.js","platform/commonUI/edit/src/policies/EditNavigationPolicy.js","platform/commonUI/edit/src/policies/EditContextualActionPolicy.js","platform/commonUI/edit/src/representers/EditRepresenter.js","platform/commonUI/edit/src/representers/EditToolbar.js","platform/commonUI/edit/src/representers/EditToolbarSelection.js","platform/commonUI/edit/src/representers/EditToolbarRepresenter.js","platform/commonUI/edit/src/capabilities/EditorCapability.js","platform/commonUI/edit/src/capabilities/TransactionalPersistenceCapability.js","platform/commonUI/edit/src/capabilities/TransactionCapabilityDecorator.js","platform/commonUI/edit/src/services/TransactionManager.js","platform/commonUI/edit/src/services/TransactionService.js","platform/commonUI/edit/src/creation/CreateMenuController.js","platform/commonUI/edit/src/creation/LocatorController.js","platform/commonUI/edit/src/creation/CreationPolicy.js","platform/commonUI/edit/src/creation/CreateAction.js","platform/commonUI/edit/src/creation/CreateActionProvider.js","platform/commonUI/edit/src/creation/AddAction.js","platform/commonUI/edit/src/creation/AddActionProvider.js","platform/commonUI/edit/src/creation/CreationService.js","platform/commonUI/edit/res/templates/create/locator.html!text","text!platform/commonUI/edit/res/templates/create/create-button.html","text!platform/commonUI/edit/res/templates/create/create-menu.html","platform/commonUI/edit/res/templates/library.html!text","text!platform/commonUI/edit/res/templates/edit-object.html","text!platform/commonUI/edit/res/templates/edit-action-buttons.html","platform/commonUI/edit/res/templates/elements.html!text","text!platform/commonUI/edit/res/templates/topbar-edit.html","platform/commonUI/edit/bundle.js","platform/commonUI/dialog/src/DialogService.js","platform/commonUI/dialog/src/OverlayService.js","text!platform/commonUI/dialog/res/templates/overlay-dialog.html","text!platform/commonUI/dialog/res/templates/overlay-options.html","platform/commonUI/dialog/res/templates/dialog.html!text","text!platform/commonUI/dialog/res/templates/overlay-blocking-message.html","platform/commonUI/dialog/res/templates/message.html!text","text!platform/commonUI/dialog/res/templates/overlay-message-list.html","platform/commonUI/dialog/res/templates/overlay.html!text","platform/commonUI/dialog/bundle.js","platform/commonUI/formats/src/FormatProvider.js","platform/commonUI/formats/src/UTCTimeFormat.js","platform/commonUI/formats/bundle.js","platform/commonUI/general/src/services/UrlService.js","platform/commonUI/general/src/services/Popup.js","platform/commonUI/general/src/services/PopupService.js","platform/commonUI/general/src/SplashScreenManager.js","platform/commonUI/general/src/StyleSheetLoader.js","platform/commonUI/general/src/controllers/TimeRangeController.js","platform/commonUI/general/src/controllers/DateTimePickerController.js","platform/commonUI/general/src/controllers/DateTimeFieldController.js","platform/commonUI/general/src/controllers/TreeNodeController.js","platform/commonUI/general/src/controllers/ActionGroupController.js","platform/commonUI/general/src/controllers/ToggleController.js","platform/commonUI/general/src/controllers/ContextMenuController.js","platform/commonUI/general/src/controllers/ClickAwayController.js","platform/commonUI/general/src/controllers/ViewSwitcherController.js","platform/commonUI/general/src/controllers/BottomBarController.js","platform/commonUI/general/src/controllers/GetterSetterController.js","platform/commonUI/general/src/controllers/SelectorController.js","platform/commonUI/general/src/controllers/ObjectInspectorController.js","platform/commonUI/general/src/controllers/BannerController.js","platform/commonUI/general/src/directives/MCTContainer.js","platform/commonUI/general/src/directives/MCTDrag.js","platform/commonUI/general/src/directives/MCTClickElsewhere.js","platform/commonUI/general/src/directives/MCTResize.js","platform/commonUI/general/src/directives/MCTPopup.js","platform/commonUI/general/src/directives/MCTScroll.js","platform/commonUI/general/src/directives/MCTSplitPane.js","platform/commonUI/general/src/directives/MCTSplitter.js","bower_components/zepto/zepto.min.js","platform/commonUI/general/res/templates/tree/node.html!text","platform/commonUI/general/res/templates/tree/toggle.html!text","platform/commonUI/general/src/ui/ToggleView.js","text!platform/commonUI/general/res/templates/tree/tree-label.html","platform/commonUI/general/src/ui/TreeLabelView.js","platform/commonUI/general/src/ui/TreeNodeView.js","text!platform/commonUI/general/res/templates/tree/wait-node.html","platform/commonUI/general/src/ui/TreeView.js","platform/commonUI/general/src/directives/MCTTree.js","platform/commonUI/general/res/templates/bottombar.html!text","text!platform/commonUI/general/res/templates/controls/action-button.html","text!platform/commonUI/general/res/templates/controls/input-filter.html","platform/commonUI/general/res/templates/indicator.html!text","text!platform/commonUI/general/res/templates/message-banner.html","text!platform/commonUI/general/res/templates/progress-bar.html","text!platform/commonUI/general/res/templates/controls/time-controller.html","platform/commonUI/general/res/templates/containers/accordion.html!text","platform/commonUI/general/res/templates/subtree.html!text","platform/commonUI/general/res/templates/tree.html!text","text!platform/commonUI/general/res/templates/tree-node.html","platform/commonUI/general/res/templates/label.html!text","text!platform/commonUI/general/res/templates/controls/action-group.html","text!platform/commonUI/general/res/templates/menu/context-menu.html","platform/commonUI/general/res/templates/controls/switcher.html!text","text!platform/commonUI/general/res/templates/object-inspector.html","platform/commonUI/general/res/templates/controls/selector.html!text","text!platform/commonUI/general/res/templates/controls/datetime-picker.html","text!platform/commonUI/general/res/templates/controls/datetime-field.html","platform/commonUI/general/bundle.js","platform/commonUI/inspect/src/gestures/InfoGesture.js","platform/commonUI/inspect/src/gestures/InfoButtonGesture.js","platform/commonUI/inspect/src/InfoConstants.js","platform/commonUI/inspect/src/services/InfoService.js","text!platform/commonUI/inspect/res/info-table.html","text!platform/commonUI/inspect/res/info-bubble.html","platform/commonUI/inspect/res/bubble.html!text","text!platform/commonUI/inspect/res/templates/info-button.html","platform/commonUI/inspect/bundle.js","platform/commonUI/mobile/src/DeviceMatchers.js","platform/commonUI/mobile/src/MCTDevice.js","platform/commonUI/mobile/src/AgentService.js","platform/commonUI/mobile/src/DeviceClassifier.js","platform/commonUI/mobile/bundle.js","platform/commonUI/themes/espresso/bundle.js","platform/commonUI/notification/src/NotificationIndicatorController.js","platform/commonUI/notification/src/NotificationIndicator.js","platform/commonUI/notification/src/NotificationService.js","text!platform/commonUI/notification/res/notification-indicator.html","platform/commonUI/notification/bundle.js","platform/containment/src/CapabilityTable.js","platform/containment/src/ContainmentTable.js","platform/containment/src/CompositionPolicy.js","platform/containment/src/CompositionMutabilityPolicy.js","platform/containment/src/CompositionModelPolicy.js","platform/containment/src/ComposeActionPolicy.js","platform/containment/bundle.js","platform/execution/src/WorkerService.js","platform/execution/bundle.js","bower_components/comma-separated-values/csv.min.js","platform/exporters/ExportService.js","bower_components/FileSaver.js/FileSaver.min.js","platform/exporters/bundle.js","platform/telemetry/src/TelemetryAggregator.js","platform/telemetry/src/TelemetryController.js","platform/telemetry/src/TelemetryCapability.js","platform/telemetry/src/TelemetryFormatter.js","platform/telemetry/src/TelemetryQueue.js","platform/telemetry/src/TelemetryTable.js","platform/telemetry/src/TelemetryDelegator.js","platform/telemetry/src/TelemetrySubscription.js","platform/telemetry/src/TelemetrySubscriber.js","platform/telemetry/src/TelemetryHandle.js","platform/telemetry/src/TelemetryHandler.js","platform/telemetry/bundle.js","platform/features/clock/src/indicators/ClockIndicator.js","platform/features/clock/src/services/TickerService.js","platform/features/clock/src/controllers/ClockController.js","bower_components/moment-duration-format/lib/moment-duration-format.js","platform/features/clock/src/controllers/TimerFormatter.js","platform/features/clock/src/controllers/TimerController.js","platform/features/clock/src/controllers/RefreshingController.js","platform/features/clock/src/actions/AbstractStartTimerAction.js","platform/features/clock/src/actions/StartTimerAction.js","platform/features/clock/src/actions/RestartTimerAction.js","platform/features/clock/res/templates/clock.html!text","platform/features/clock/res/templates/timer.html!text","platform/features/clock/bundle.js","platform/features/layout/res/templates/fixed.html!text","platform/features/fixed/bundle.js","platform/features/imagery/src/policies/ImageryViewPolicy.js","platform/features/imagery/src/controllers/ImageryController.js","platform/features/imagery/src/directives/MCTBackgroundImage.js","platform/features/imagery/res/templates/imagery.html!text","platform/features/imagery/bundle.js","platform/features/layout/src/LayoutDrag.js","platform/features/layout/src/LayoutController.js","platform/features/layout/src/elements/ElementFactory.js","platform/features/layout/src/FixedProxy.js","platform/features/layout/src/elements/AccessorMutator.js","platform/features/layout/src/elements/ResizeHandle.js","platform/features/layout/src/elements/ElementProxy.js","platform/features/layout/src/elements/BoxProxy.js","platform/features/layout/src/elements/TextProxy.js","platform/features/layout/src/elements/TelemetryProxy.js","platform/features/layout/src/elements/ImageProxy.js","platform/features/layout/src/elements/LineHandle.js","platform/features/layout/src/elements/LineProxy.js","platform/features/layout/src/elements/ElementProxies.js","platform/features/layout/src/FixedDragHandle.js","platform/features/layout/src/FixedController.js","platform/features/layout/src/LayoutCompositionPolicy.js","platform/features/layout/res/templates/layout.html!text","platform/features/layout/res/templates/frame.html!text","platform/features/layout/res/templates/elements/telemetry.html!text","platform/features/layout/res/templates/elements/box.html!text","platform/features/layout/res/templates/elements/line.html!text","platform/features/layout/res/templates/elements/text.html!text","platform/features/layout/res/templates/elements/image.html!text","platform/features/layout/bundle.js","platform/features/pages/src/EmbeddedPageController.js","platform/features/pages/res/iframe.html!text","platform/features/pages/bundle.js","platform/features/plot/src/GLChart.js","platform/features/plot/src/Canvas2DChart.js","platform/features/plot/src/MCTChart.js","platform/features/plot/src/elements/PlotSeriesWindow.js","platform/features/plot/src/elements/PlotLine.js","platform/features/plot/src/elements/PlotLineBuffer.js","platform/features/plot/src/elements/PlotUpdater.js","platform/features/plot/src/elements/PlotPalette.js","platform/features/plot/src/elements/PlotAxis.js","platform/features/plot/src/elements/PlotLimitTracker.js","platform/features/plot/src/elements/PlotTelemetryFormatter.js","platform/features/plot/src/elements/PlotPosition.js","platform/features/plot/src/elements/PlotTickGenerator.js","platform/features/plot/src/SubPlot.js","platform/features/plot/src/elements/PlotPanZoomStack.js","platform/features/plot/src/modes/PlotOverlayMode.js","platform/features/plot/src/elements/PlotPanZoomStackGroup.js","platform/features/plot/src/modes/PlotStackMode.js","platform/features/plot/src/modes/PlotModeOptions.js","platform/features/plot/src/SubPlotFactory.js","platform/features/plot/src/PlotController.js","platform/features/plot/src/policies/PlotViewPolicy.js","platform/features/plot/src/PlotOptionsForm.js","platform/features/plot/src/PlotOptionsController.js","platform/features/plot/res/templates/plot.html!text","text!platform/features/plot/res/templates/plot-options-browse.html","platform/features/plot/bundle.js","platform/features/timeline/src/actions/TimelineTraverser.js","platform/features/timeline/src/actions/IdColumn.js","platform/features/timeline/src/actions/ModeColumn.js","platform/features/timeline/src/actions/CompositionColumn.js","platform/features/timeline/src/actions/MetadataColumn.js","platform/features/timeline/src/TimelineFormatter.js","platform/features/timeline/src/actions/TimespanColumn.js","platform/features/timeline/src/actions/UtilizationColumn.js","platform/features/timeline/src/actions/TimelineColumnizer.js","platform/features/timeline/src/actions/ExportTimelineAsCSVTask.js","platform/features/timeline/src/actions/ExportTimelineAsCSVAction.js","platform/features/timeline/src/controllers/swimlane/TimelineSwimlane.js","platform/features/timeline/src/controllers/swimlane/TimelineSwimlaneDropHandler.js","platform/features/timeline/src/controllers/swimlane/TimelineSwimlaneDecorator.js","platform/features/timeline/src/controllers/swimlane/TimelineColorAssigner.js","platform/features/timeline/src/controllers/swimlane/TimelineProxy.js","platform/features/timeline/src/controllers/swimlane/TimelineSwimlanePopulator.js","platform/features/timeline/src/controllers/graph/TimelineGraph.js","platform/features/timeline/src/controllers/graph/TimelineGraphRenderer.js","platform/features/timeline/src/controllers/graph/TimelineGraphPopulator.js","platform/features/timeline/src/controllers/drag/TimelineDragHandler.js","platform/features/timeline/src/controllers/drag/TimelineSnapHandler.js","platform/features/timeline/src/TimelineConstants.js","platform/features/timeline/src/controllers/drag/TimelineStartHandle.js","platform/features/timeline/src/controllers/drag/TimelineEndHandle.js","platform/features/timeline/src/controllers/drag/TimelineMoveHandle.js","platform/features/timeline/src/controllers/drag/TimelineDragHandleFactory.js","platform/features/timeline/src/controllers/drag/TimelineDragPopulator.js","platform/features/timeline/src/controllers/TimelineController.js","platform/features/timeline/src/controllers/TimelineGraphController.js","platform/features/timeline/src/controllers/TimelineDateTimeController.js","platform/features/timeline/src/controllers/TimelineZoomController.js","platform/features/timeline/src/controllers/TimelineTickController.js","platform/features/timeline/src/controllers/TimelineTableController.js","platform/features/timeline/src/controllers/TimelineGanttController.js","platform/features/timeline/src/controllers/ActivityModeValuesController.js","platform/features/timeline/src/capabilities/ActivityTimespan.js","platform/features/timeline/src/capabilities/ActivityTimespanCapability.js","platform/features/timeline/src/capabilities/TimelineTimespan.js","platform/features/timeline/src/capabilities/TimelineTimespanCapability.js","platform/features/timeline/src/capabilities/UtilizationCapability.js","platform/features/timeline/src/capabilities/ResourceGraph.js","platform/features/timeline/src/capabilities/CumulativeGraph.js","platform/features/timeline/src/capabilities/GraphCapability.js","platform/features/timeline/src/capabilities/CostCapability.js","platform/features/timeline/src/directives/SwimlaneDragConstants.js","platform/features/timeline/src/directives/MCTSwimlaneDrop.js","platform/features/timeline/src/directives/MCTSwimlaneDrag.js","platform/features/timeline/src/services/ObjectLoader.js","platform/features/timeline/res/templates/values.html!text","platform/features/timeline/res/templates/timeline.html!text","text!platform/features/timeline/res/templates/activity-gantt.html","text!platform/features/timeline/res/templates/tabular-swimlane-cols-tree.html","text!platform/features/timeline/res/templates/tabular-swimlane-cols-data.html","text!platform/features/timeline/res/templates/resource-graphs.html","text!platform/features/timeline/res/templates/resource-graph-labels.html","text!platform/features/timeline/res/templates/legend-item.html","platform/features/timeline/res/templates/ticks.html!text","platform/features/timeline/res/templates/controls/datetime.html!text","platform/features/timeline/bundle.js","platform/features/table/src/controllers/MCTTableController.js","text!platform/features/table/res/templates/mct-table.html","platform/features/table/src/directives/MCTTable.js","platform/features/table/src/DomainColumn.js","platform/features/table/src/RangeColumn.js","platform/features/table/src/NameColumn.js","platform/features/table/src/TableConfiguration.js","platform/features/table/src/controllers/TelemetryTableController.js","platform/features/table/src/controllers/RealtimeTableController.js","platform/features/table/src/controllers/HistoricalTableController.js","platform/features/table/src/controllers/TableOptionsController.js","platform/commonUI/regions/src/Region.js","platform/commonUI/browse/src/InspectorRegion.js","platform/features/table/bundle.js","platform/forms/src/controllers/FormController.js","platform/forms/res/templates/form.html!text","platform/forms/src/MCTForm.js","platform/forms/res/templates/toolbar.html!text","platform/forms/src/MCTToolbar.js","platform/forms/src/MCTControl.js","platform/forms/src/controllers/DateTimeController.js","platform/forms/src/controllers/CompositeController.js","platform/forms/src/controllers/ColorController.js","platform/forms/src/controllers/DialogButtonController.js","platform/forms/res/templates/controls/checkbox.html!text","platform/forms/res/templates/controls/datetime.html!text","platform/forms/res/templates/controls/select.html!text","platform/forms/res/templates/controls/textfield.html!text","platform/forms/res/templates/controls/button.html!text","platform/forms/res/templates/controls/color.html!text","platform/forms/res/templates/controls/composite.html!text","text!platform/forms/res/templates/controls/menu-button.html","platform/forms/res/templates/controls/dialog.html!text","platform/forms/res/templates/controls/radio.html!text","platform/forms/bundle.js","platform/identity/src/IdentityAggregator.js","platform/identity/src/IdentityProvider.js","platform/identity/src/IdentityCreationDecorator.js","platform/identity/src/IdentityIndicator.js","platform/identity/bundle.js","platform/persistence/aggregator/src/PersistenceAggregator.js","platform/persistence/aggregator/bundle.js","platform/persistence/local/src/LocalStoragePersistenceProvider.js","platform/persistence/local/src/LocalStorageIndicator.js","platform/persistence/local/bundle.js","platform/persistence/queue/src/QueuingPersistenceCapability.js","platform/persistence/queue/src/QueuingPersistenceCapabilityDecorator.js","platform/persistence/queue/src/PersistenceQueueImpl.js","platform/persistence/queue/src/PersistenceQueueHandler.js","platform/persistence/queue/src/PersistenceFailureConstants.js","platform/persistence/queue/src/PersistenceFailureDialog.js","platform/persistence/queue/src/PersistenceFailureHandler.js","platform/persistence/queue/src/PersistenceQueue.js","platform/persistence/queue/src/PersistenceFailureController.js","text!platform/persistence/queue/res/templates/persistence-failure-dialog.html","platform/persistence/queue/bundle.js","platform/policy/src/PolicyActionDecorator.js","platform/policy/src/PolicyViewDecorator.js","platform/policy/src/PolicyProvider.js","platform/policy/bundle.js","platform/entanglement/src/actions/AbstractComposeAction.js","platform/entanglement/src/actions/MoveAction.js","platform/entanglement/src/actions/CopyAction.js","platform/entanglement/src/actions/LinkAction.js","platform/entanglement/src/actions/GoToOriginalAction.js","platform/entanglement/src/actions/SetPrimaryLocationAction.js","platform/entanglement/src/services/LocatingCreationDecorator.js","platform/entanglement/src/services/LocatingObjectDecorator.js","platform/entanglement/src/policies/CopyPolicy.js","platform/entanglement/src/policies/CrossSpacePolicy.js","platform/entanglement/src/policies/MovePolicy.js","platform/entanglement/src/capabilities/LocationCapability.js","platform/entanglement/src/services/MoveService.js","platform/entanglement/src/services/LinkService.js","platform/entanglement/src/services/CopyTask.js","platform/entanglement/src/services/CopyService.js","platform/entanglement/src/services/LocationService.js","platform/entanglement/bundle.js","platform/search/src/controllers/SearchController.js","platform/search/src/controllers/SearchMenuController.js","platform/search/src/services/GenericSearchProvider.js","platform/search/src/services/SearchAggregator.js","text!platform/search/res/templates/search-item.html","platform/search/res/templates/search.html!text","text!platform/search/res/templates/search-menu.html","platform/search/bundle.js","platform/status/src/StatusConstants.js","platform/status/src/StatusRepresenter.js","platform/status/src/StatusCapability.js","platform/status/src/StatusService.js","platform/status/bundle.js","platform/commonUI/regions/src/InspectorController.js","platform/commonUI/regions/src/EditableRegionPolicy.js","platform/commonUI/regions/bundle.js","main.js"],"names":["lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","process","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","i","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","r","require","vertx","runOnLoop","runOnContext","e","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","promise","then","error","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","value","fulfillmentHandler","rejectionHandler","call","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","constructor","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","length","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","this","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","input","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","resolve","lib$es6$promise$promise$resolve$$resolve","object","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","Error","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","Array","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","c","_settledAt","_willSettleAt","state","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","all","race","reject","_setScheduler","_setAsap","_asap","result","arguments","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","module","MODULE_NAME","BUNDLE_LISTING_FILE","BUNDLE_FILE","SEPARATOR","EXTENSION_SUFFIX","DEFAULT_BUNDLE","sources","resources","libraries","tests","configuration","extensions","PRIORITY_LEVELS","fallback","Number","NEGATIVE_INFINITY","default","none","optional","preferred","mandatory","POSITIVE_INFINITY","DEFAULT_PRIORITY","FrameworkInitializer","loader","registrar","bootstrapper","bind","method","thisArg","apply","runApplication","bundleList","loadBundles","resolveBundles","registerExtensions","bootstrap","NOOP","LogLevel","level","index","LOG_LEVELS","indexOf","configure","app","$log","decorate","log","forEach","m","decorator","$delegate","Extension","bundle","category","definition","logName","extensionDefinition","key","name","getLogName","keys","k","getDefinition","getKey","getBundle","getCategory","hasImplementation","implementation","getImplementationPath","hasImplementationValue","getSourcePath","getImplementationValue","Constants","Bundle","path","bundleDefinition","create","resolvePath","elements","concat","join","getPath","sourceFile","subpath","getResourcePath","resourceFile","getLibraryPath","libraryFile","getConfiguration","getExtensions","map","extDefinition","getExtensionCategories","BundleLoader","$http","legacyRegistry","INVALID_ARGUMENT_MESSAGE","BAD_CONTENTS_PREFIX","LOAD_ERROR_PREFIX","bundles","getJSON","file","get","response","filterBundles","array","filter","loadBundleDefinition","bundlePath","warn","loadBundle","contains","unique","element","loadBundlesFromArray","bundleArray","bundlePromises","list","loadBundlesFromFile","listFile","handleError","err","info","status","statusText","ImplementationLoader","load","fulfill","ExtensionResolver","extension","loadImplementation","ext","constructorFor","impl","attachDefinition","message","implPromise","BundleResolver","extensionResolver","requireConfigurator","mergeResolvedBundles","resolvedBundles","resolved","resolveBundle","resolveExtension","push","resolveCategory","giveResult","categories","RequireConfigurator","requirejs","clone","obj","JSON","parse","stringify","paths","mergeConfigurations","base","next","p","buildConfiguration","baseConfiguration","baseUrl","shim","bundleConfigurations","reduce","config","ServiceCompositor","latest","providerLists","registerCompositeServices","components","msg","echoMany","slice","echoSingle","hasType","type","makeName","service","registerProvider","provider","provides","dependencies","depends","registerProviderSets","registerAggregator","aggregator","providerSetName","registerDecorator","registerLatest","registerComposites","providers","aggregators","decorators","CustomRegistrars","registered","fn","customRegistrar","angularFunction","debug","registerConstant","constant","registerRun","run","registerRoute","route","templateUrl","when","$routeProvider","otherwise","registerComponents","mapUpon","func","constants","routes","directives","controllers","services","filters","runs","PartialConstructor","OuterConstructor","InnerConstructor","other","instance","ExtensionRegistrar","customRegistrars","sorter","registeredCategories","extensionGroup","identify","echo","staticFunction","makeServiceArgument","factory","registerExtensionArraysForCategory","names","registerExtensionsForCategory","registerExtension","isExtensionDependency","dependency","findEmptyExtensionDependencies","extGroup","needed","allExtensions","registerEmptyDependencies","sort","ExtensionSorter","unrecognizedPriority","priority","getPriority","prioritize","deprioritize","prioritized","compare","a","b","ApplicationBootstrapper","angular","ready","strictDi","FrameworkLayer","initializeApplication","logLevel","initializer","root","O","W","t","L","d","encodeURIComponent","replace","Da","Ya","nodeType","pa","I","G","C","hasOwnProperty","f","lc","Na","mc","nc","Ud","mb","oc","$$hashKey","Mb","g","D","h","l","n","q","ca","Date","valueOf","Oa","RegExp","Q","xa","Vd","Y","parseInt","Nb","v","Za","qa","pc","y","qc","X","sa","$a","$evalAsync","$watch","ab","rc","nodeName","prop","attr","find","Wd","split","ta","M","bb","splice","fa","Ea","sc","test","getTime","source","match","lastIndex","ia","charAt","ka","ga","cb","tc","Xd","db","uc","vc","isNaN","Ob","getTimezoneOffset","setMinutes","getMinutes","ua","z","empty","append","html","Pa","wc","decodeURIComponent","xc","substring","Pb","ma","nb","Yd","Qa","getAttribute","Zd","hasAttribute","querySelector","yc","injector","unshift","debugInfoEnabled","eb","invoke","$apply","aa","resumeBootstrap","resumeDeferredBootstrap","$d","location","reload","ae","zc","be","toLowerCase","ce","Ac","ob","la","jQuery","on","scope","Ra","isolateScope","controller","inheritedData","cleanData","Qb","_data","$destroy","triggerHandler","R","pb","Sa","Ta","Bc","qb","nextSibling","de","$$minErr","B","$$moduleName","u","_invokeQueue","_configBlocks","_runBlocks","requires","animation","directive","ee","copy","extend","merge","equals","noop","toJson","fromJson","identity","isUndefined","isDefined","isString","isFunction","isObject","isNumber","isElement","version","fe","isDate","lowercase","uppercase","rb","callbacks","counter","getTestability","$$csp","Fa","reloadWithDebugInfo","Rb","$$sanitizeUri","ge","Cc","he","Dc","textarea","form","ie","script","je","select","ke","style","le","option","me","ngBind","ne","ngBindHtml","oe","ngBindTemplate","pe","ngClass","qe","ngClassEven","re","ngClassOdd","se","ngCloak","te","ngController","ue","ngForm","ve","ngHide","we","ngIf","xe","ngInclude","ye","ngInit","ze","ngNonBindable","Ae","ngPluralize","Be","ngRepeat","Ce","ngShow","De","ngStyle","Ee","ngSwitch","Fe","ngSwitchWhen","Ge","ngSwitchDefault","He","ngOptions","Ie","ngTransclude","Je","ngModel","Ke","ngList","Le","ngChange","Me","pattern","Ec","ngPattern","required","Fc","ngRequired","minlength","Gc","ngMinlength","maxlength","Hc","ngMaxlength","ngValue","Ne","ngModelOptions","Oe","Pe","sb","Ic","$anchorScroll","Qe","$animate","Re","$animateCss","Se","$$animateQueue","Te","$$AnimateRunner","Ue","$browser","Ve","$cacheFactory","We","$controller","Xe","$document","Ye","$exceptionHandler","Ze","$filter","Jc","$$forceReflow","$e","$interpolate","af","$interval","bf","cf","$httpParamSerializer","df","$httpParamSerializerJQLike","ef","$httpBackend","ff","$location","gf","hf","$parse","jf","$rootScope","kf","$q","lf","$$q","mf","$sce","nf","$sceDelegate","of","$sniffer","pf","$templateCache","qf","$templateRequest","rf","$$testability","sf","$timeout","tf","$window","uf","$$rAF","vf","$$jqLite","wf","$$HashMap","xf","$$cookieReader","yf","fb","zf","toUpperCase","Af","Kc","Lc","createDocumentFragment","Sb","appendChild","createElement","Bf","exec","na","_default","innerHTML","Cf","lastChild","childNodes","firstChild","textContent","T","Tb","Df","Mc","Ub","cloneNode","tb","ub","querySelectorAll","Nc","vb","events","handle","removeEventListener","ng339","gb","Ef","Vb","wb","xb","setAttribute","yb","Oc","zb","documentElement","parentNode","host","Pc","removeChild","Wb","Ff","readyState","Qc","Ab","Rc","Gf","Sc","Hf","isDefaultPrevented","defaultPrevented","immediatePropagationStopped","stopImmediatePropagation","stopPropagation","isImmediatePropagationStopped","elem","$get","hasClass","addClass","removeClass","Ga","Ua","nextUid","put","If","Tc","Uc","instantiate","Ha","stack","shift","$$annotate","annotate","has","$provide","$injector","disableAutoScrolling","some","scrollIntoView","yOffset","getComputedStyle","position","getBoundingClientRect","bottom","top","scrollBy","scrollTo","hash","getElementById","getElementsByName","hb","Jf","Ia","Kf","K","pop","w","F","A","url","N","history","clearTimeout","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","href","s","H","Ja","substr","J","onUrlChange","$$applicationDestroyed","off","$$checkUrlChange","baseHref","defer","cancel","id","capacity","MAX_VALUE","remove","removeAll","destroy","size","ea","mode","collection","attrName","trim","compile","link","restrict","bindToController","S","controllerAs","ha","Vc","$$bindings","$$isolateBindings","aHrefSanitizationWhitelist","imgSrcSanitizationWhitelist","V","nodeValue","wrap","$$addScopeClass","parentBoundTranscludeFn","transcludeControllers","futureParentElement","$$boundTransclude","Xb","$$addScopeInfo","$new","$$destroyBindings","$on","transcludeOnThisElement","transclude","templateOnThisElement","E","$$element","terminal","$$transcluded","$attr","va","attributes","Xc","className","animVal","Va","wa","za","ya","Wc","directiveName","$$isolateScope","Z","$scope","$element","$attrs","$transclude","ja","$$originalDirective","identifier","$","template","newScopeDirective","controllerDirectives","newIsolateScopeDirective","templateDirective","nonTlbTranscludeDirective","hasElementTranscludeDirective","ba","Bb","$$start","$$end","$$tlb","createComment","U","contents","Yc","templateNamespace","Zc","$c","Lf","pre","post","Math","max","multiElement","$set","$$destroyed","$$addBindingClass","$$addBindingInfo","expressions","HTML","RESOURCE_URL","$$observers","$$inter","$$scope","$updateClass","context","replaceChild","hasData","cache","expando","$observe","literal","assign","$stateful","$watchCollection","$normalize","$addClass","$removeClass","ad","floor","removeAttr","startSymbol","da","endSymbol","Mf","register","allowGlobals","Nf","Yb","toISOString","Zb","Of","bd","Pf","Qf","cd","dd","ed","defaults","transformResponse","transformRequest","headers","common","Accept","$b","patch","xsrfCookieName","xsrfHeaderName","paramSerializer","useApplyAsync","useLegacyPromiseExtensions","interceptors","withCredentials","request","requestError","responseError","success","fd","$applyAsync","$$phase","pendingRequests","params","gd","timeout","responseType","Rf","XMLHttpRequest","Sf","src","async","body","called","addEventListener","abort","open","setRequestHeader","onload","responseText","Aa","protocol","getAllResponseHeaders","onerror","onabort","send","getTrusted","Ka","interr","throwNoconcat","exp","$$watchDelegate","$watchGroup","setInterval","clearInterval","$$intervalId","notify","ac","hd","$$protocol","$$host","hostname","$$port","port","Tf","$$path","pathname","$$search","search","$$hash","ra","Cb","bc","$$html5","$$parse","Db","$$compose","$$url","$$absUrl","$$parseLinkUrl","cc","jd","Eb","kd","enabled","requireBase","rewriteLinks","hashPrefix","html5Mode","$$state","$broadcast","absUrl","lastIndexOf","ctrlKey","metaKey","shiftKey","which","button","target","preventDefault","$digest","$$replace","debugEnabled","sourceURL","line","console","Wa","Ba","children","ld","Uf","Vf","Wf","Xf","md","Program","expression","Literal","toWatch","UnaryExpression","argument","BinaryExpression","left","right","LogicalExpression","ConditionalExpression","alternate","consequent","Identifier","MemberExpression","computed","property","CallExpression","callee","AssignmentExpression","ArrayExpression","ObjectExpression","properties","ThisExpression","nd","od","pd","NGValueParameter","operator","qd","rd","astBuilder","sd","Fb","dc","Yf","inputs","$$postDigest","noUnsafeEval","csp","expensiveChecks","ec","fc","td","processScheduled","pending","finally","$$reject","$$resolve","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","supported","$$watchers","$$nextSibling","$$childHead","$$childTail","$$listeners","$$listenerCount","$$watchersCount","$id","$$ChildScope","digestTtl","currentScope","$parent","$$prevSibling","$root","last","eq","$eval","locals","newVal","oldVal","$emit","targetScope","$$asyncQueue","$$postDigestQueue","$$applyAsyncQueue","Zf","Ca","ud","vd","SCE_CONTEXTS","oa","resourceUrlWhitelist","resourceUrlBlacklist","$$unwrapTrustedValue","CSS","URL","JS","trustAs","isEnabled","parseAs","navigator","userAgent","webkitTransition","webkitAnimation","pushState","hasEvent","vendorPrefix","transitions","animations","android","totalPendingRequests","getTrustedResourceUrl","findBindings","getElementsByClassName","findModels","getLocation","setLocation","whenStable","$$timeoutId","wd","xd","cookie","yd","zd","$f","ag","bg","cg","Ad","Bd","dg","gc","eg","La","NUMBER_FORMATS","CURRENCY_SYM","PATTERNS","maxFrac","Cd","GROUP_SEP","DECIMAL_SEP","abs","Infinity","isFinite","toFixed","parseFloat","Dd","min","minFrac","round","lgSize","gSize","negPre","posPre","negSuf","posSuf","Gb","Hb","Ed","getDay","Fd","getFullYear","getMonth","getDate","hc","ERAS","setUTCFullYear","setFullYear","setUTCHours","setHours","DATETIME_FORMATS","fg","gg","hg","descending","predicateValues","Ma","Gd","$$parentForm","Ib","$error","$$success","$pending","$name","$dirty","$pristine","$valid","$invalid","$submitted","$addControl","$rollbackViewValue","$commitViewValue","$$renameControl","$removeControl","$setValidity","Hd","ctrl","set","unset","parentForm","$setDirty","Xa","Jb","$setPristine","setClass","$setUntouched","$setSubmitted","ic","$formatters","$isEmpty","ib","val","ngTrim","$viewValue","$$hasNativeValidators","$setViewValue","keyCode","$render","Kb","ig","yyyy","MM","HH","getHours","mm","ss","getSeconds","sss","getMilliseconds","NaN","jb","Id","$options","timezone","$$parserName","$parsers","kb","ngMin","$validators","$validate","ngMax","validity","badInput","typeMismatch","Jd","jc","$index","lb","Kd","Ld","Md","jg","kg","getPrototypeOf","documentMode","$inject","rules","noInlineStyle","name_","full","major","minor","dot","codeName","lg","mouseleave","mouseenter","thead","col","tr","optgroup","tbody","tfoot","colgroup","caption","th","removeData","removeAttribute","css","getNamedItem","specified","text","$dv","multiple","options","selected","relatedTarget","one","replaceWith","insertBefore","contentDocument","prepend","detach","after","toggleClass","nextElementSibling","getElementsByTagName","unbind","mg","ng","Nd","chain","end","resume","pause","complete","pin","from","to","$$registeredAnimations","classNameFilter","$$classNameFilter","previousElementSibling","enter","move","leave","addclass","animate","tempClasses","done","getPromise","start","offsetWidth","Content-Type","[","{","og","$interpolateMinErr","pg","http","https","ftp","qg","Lb","rg","'","\"","lex","tokens","readString","peek","readNumber","isIdent","readIdent","is","isWhitespace","throwError","isExpOperator","String","fromCharCode","lexer","ExpressionStatement","Property","ast","program","expressionStatement","expect","filterChain","assignment","ternary","logicalOR","consume","logicalAND","equality","relational","additive","multiplicative","unary","prefix","primary","arrayDeclaration","parseArguments","peekToken","kind","peekAhead","true","false","null","nextId","vars","own","stage","computing","recurse","generateFunction","return_","watchId","USE","STRICT","filterPrefix","watchFns","varsPrefix","escape","if_","lazyAssign","computedMember","lazyRecurse","current","ifDefined","plus","not","getHasOwnProperty","nonComputedMember","addEnsureSafeObject","notNull","addEnsureSafeMemberName","ensureSafeObject","addEnsureSafeFunction","member","ensureSafeMemberName","ensureSafeFunction","stringEscapeRegex","stringEscapeFn","charCodeAt","unary+","unary-","unary!","binary+","binary-","binary*","binary/","binary%","binary===","binary!==","binary==","binary!=","binary<","binary>","binary<=","binary>=","binary&&","binary||","ternary?:","astCompiler","yy","MMMM","MMM","hh","EEEE","EEE","AMPMS","ww","GG","GGG","GGGG","ERANAMES","xlinkHref","Od","sg","tg","ug","Pd","Qd","kc","Rd","Sd","Td","date","datetime-local","time","week","month","number","email","radio","checked","checkbox","ngTrueValue","ngFalseValue","hidden","submit","reset","vg","getTrustedHtml","$viewChangeListeners","wg","blur","focus","$event","autoscroll","xg","$modelValue","$$rawModelValue","$asyncValidators","$untouched","$touched","$$setOptions","getterSetter","$$$p","$setTouched","$$lastCommittedViewValue","allowInvalid","$$runValidators","$$writeModelToScope","$$parseAndValidate","updateOnDefault","$$debounceViewValueCommit","debounce","updateOn","yg","zg","Ag","selectValue","viewValue","label","group","disabled","trackBy","getTrackByValue","getWatchables","getOptions","items","selectValueMap","getOptionFromViewValue","getViewValueFromOption","readValue","groupElement","currentOptionElement","writeValue","count","offset","pluralCat","$first","$last","$middle","$odd","$even","$$NG_REMOVED","cases","Bg","Cg","ngModelCtrl","unknownOption","renderUnknownOption","removeUnknownOption","hasOption","emptyOption","addOption","removeOption","DAY","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","minInt","pow","head","$template","caseInsensitiveMatch","originalPath","regexp","reloadOnSearch","redirectTo","$$route","pathParams","loadedTemplateUrl","updateParams","es6promise","Main","BundleRegistry","description","exports","licenses","author","website","copyright","license","DomainObjectProvider","modelService","getObjects","ids","assembleResult","models","getModels","CoreCapabilityProvider","capabilities","filterCapabilities","model","capability","appliesTo","packageCapabilities","caps","getCapabilities","StaticModelProvider","addModelToMap","modelMap","RootModelProvider","roots","baseProvider","rootModel","composition","ROOT","ModelAggregator","pick","aModified","modified","bModified","mergeModels","provided","ModelCacheService","PersistedModelProvider","persistenceService","now","space","defaultSpace","loadModel","parsedId","readObject","addPersistedTimestamp","persisted","packageResult","parsedIdsToPackage","loadModels","parsedIdsToLoad","restrictToSpaces","spaces","parsedIds","parts","listSpaces","CachingModelDecorator","cacheService","fastPromise","updateModel","oldModel","cacheAll","giveCache","neededIds","MissingModelDecorator","missingModel","addMissingModels","ArrayConversion","conversion","toModelValue","formValue","toFormValue","modelValue","TypePropertyConversion","ARRAY_SUFFIX","conversions","TypeProperty","propertyDefinition","isUnpopulatedArray","specifyValue","propertyPath","lookupValue","getValue","initialValue","setValue","TypeImpl","typeDef","inheritList","inherits","featureSet","features","feature","getName","getDescription","getCssClass","cssclass","getProperties","propertyDef","getInitialModel","instanceOf","hasFeature","modelA","modelB","merger","mergeArrays","mergeObjects","mergeOther","mergeFunction","copyKeys","removeDuplicates","collapse","typeDefs","collapsed","TO_MERGE","TO_CONCAT","TypeProvider","types","rawTypeDefinitions","typeDefinitions","typeDefArray","typeMap","listTypes","def","getType","getUndefinedType","undefinedType","asArray","lookupTypeDef","typeKey","buildTypeDef","typeKeyToBuild","ActionProvider","actions","actionsByKey","actionsByCategory","Action","getActions","actionContext","instantiateAction","ctxt","metadata","action","getMetadata","createIfApplicable","isApplicable","candidates","ActionAggregator","actionProviders","LoggingActionDecorator","actionService","addLogging","logAction","domainObject","perform","getId","ViewProvider","views","validate","view","getViews","capabilitiesMatch","domainObj","allowDelegation","hasCapability","delegation","doesDelegateCapability","and","getCapability","viewMatchesType","objType","matches","useCapability","needs","_window","setupBrowser","_crypto","crypto","msCrypto","_rng","getRandomValues","_rnds8","Uint8Array","_whatwgRNG","_rnds","_mathRNG","random","setupNode","_rb","randomBytes","_nodeRNG","buf","ii","oct","_hexToByte","unparse","bth","_byteToHex","v1","clockseq","_clockseq","msecs","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","v4","BufferClass","rnds","rng","_previousRoot","Buffer","_seedBytes","uuid","amd","noConflict","separatorIndex","definedSpace","getSpace","getDefinedSpace","IdentifierProvider","generate","CompositionCapability","contextualize","injectObjectService","objectService","add","findObject","objects","mutationResult","addIdToModel","objModel","oldIndex","getModel","contextualizeObjects","lastPromise","lastModified","RelationshipCapability","listRelationships","relationships","getRelatedObjects","packageObject","TypeCapability","typeService","ActionCapability","baseContext","ViewCapability","viewService","PersistenceCapability","identifierService","notificationService","rejectIfFalsey","formatError","notifyOnError","errorMessage","title","hint","dismissable","persist","persistenceFn","updateObject","createObject","refresh","moment","utils_hooks__hooks","hookCallback","setHookCallback","isObjectEmpty","arr","res","hasOwnProp","create_utc__createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","getParsingFlags","_pf","valid__isValid","_isValid","flags","parsedParts","_d","invalidWeekday","_strict","bigHour","valid__createInvalid","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","updateInProgress","updateOffset","isMoment","absFloor","ceil","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecateSimple","deprecations","locale_set__set","_config","_ordinalParseLenient","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","locale_calendar__calendar","mom","output","_calendar","longDateFormat","_longDateFormat","formatUpper","invalidDate","_invalidDate","ordinal","_ordinal","relative__relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priorities","getPrioritizedUnits","unitsObj","makeGetSet","keepTime","get_set__set","get_set__get","isValid","stringGet","stringSet","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","addFormatToken","token","padded","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","units_month__handleStrictParse","monthName","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","ms","createUTCDate","getUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","day_of_week__handleStrictParse","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","minutes","matchMeridiem","_meridiemParse","localeIsPM","localeMeridiem","isLower","normalizeLocale","chooseLocale","j","loadLocale","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","values","locale_locales__getLocale","defineLocale","baseConfig","abbr","parentLocale","updateLocale","locale_locales__listLocales","checkOverflow","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","currentDateArray","nowValue","_useUTC","getUTCMonth","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","weekYear","temp","weekdayOverflow","local__createLocal","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","args","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_bubble","isDuration","separator","utcOffset","offsetFromString","matcher","chunk","chunkOffset","cloneWithOffset","setTime","getDateOffset","getSetOffset","keepLocalTime","localAdjust","matchShortOffset","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","isAfter","isBefore","absRound","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","moment_calendar__calendar","formats","sod","startOf","calendarFormat","calendar","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toDate","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","to_type__valueOf","unix","toObject","toJSON","moment_valid__isValid","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","preParsePostFormat","lists__get","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","thresholds","duration_humanize__getSetRelativeTimeRounding","roundingFunction","duration_humanize__getSetRelativeTimeThreshold","threshold","limit","withSuffix","iso_string__toISOString","iso_string__abs","total","asSeconds","fun","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","ordinalParse","meridiemParse","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","zone","isDSTShifted","momentPrototype","prototype__proto","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_prototype__proto","toIsoString","invalid","relativeTimeRounding","relativeTimeThreshold","_moment","MetadataCapability","TIME_FORMAT","hasDisplayableValue","metadataProperty","formatTimestamp","timestamp","lookupProperty","typeProperty","getCommonMetadata","copyValues","destination","MutationCapability","topic","generalMutationTopic","GENERAL_TOPIC","specificMutationTopic","TOPIC_PREFIX","mutate","mutator","notifyListeners","newModel","generalTopic","specificTopic","handleMutation","useTimestamp","listen","listener","DelegationCapability","delegateCapabilities","delegates","getDelegates","filterObjectsWithCapability","promiseChildren","InstantiationCapability","instantiateFn","Now","Throttle","delay","Topic","createTopic","listeners","ERROR_PREFIX","topics","ContextCapability","parentObject","getParent","parentContext","parentPath","getRoot","ContextualDomainObject","contextualObject","contextCapability","Contextualize","editor","inEditContext","DomainObjectImpl","Instantiate","capabilityService","versions","control","MCTInclude","templates","templateLinker","changeTemplate","templateMap","parameters","MCTRepresentation","representations","representers","lookup","representationMap","attrs","refreshCapabilities","representation","uses","myCounter","used","destroyRepresenters","activeRepresenters","activeRepresenter","unchanged","canRepresent","idPath","couldRepresent","lastKey","lastIdPath","every","getIdPath","pathObject","toClear","representer","represent","statusListener","Representer","MCT_DRAG_TYPE","MCT_EXTENDED_DRAG_TYPE","MCT_MENU_DIMENSIONS","MCT_DROP_EVENT","GestureConstants","DragGesture","dndService","startDrag","event","originalEvent","dataTransfer","effectAllowed","setData","endDrag","startDragCallback","endDragCallback","DropGesture","broadcastDrop","rect","pageX","pageY","dragOver","selectedObject","getData","actionCapability","dropEffect","drop","dragOverCallback","dropCallback","ContextMenuGesture","agentService","showMenu","isPressing","longTouchTime","isMobile","touches","showMenuCallback","GestureProvider","gestures","gestureMap","gesture","releaseGesture","attachGestures","gestureKeys","attachedGestures","Gesture","GestureRepresenter","gestureService","gestureHandle","DndService","TemplateLinker","$compile","trustAsResourceUrl","destroyScope","activeScope","removeElement","activeElement","comment","addElement","populateElement","showTemplate","activeTemplateUrl","badTemplateUrl","changeTemplateUrl","templateExt","ContextMenuAction","popupService","getDocument","getRootScope","dismissExistingMenu","MENU_TEMPLATE","dismiss","popup","menu","eventCoords","menuDim","initiatingEvent","menuClass","context-menu-holder","display","marginX","marginY","goesLeft","goesUp","TemplatePrefetcher","useDefault","defaultValue","isSamePort","protocol1","protocol2","fs","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","defaultProtocol","defaultHostName","defaultPort","buildMap","masterConfig","strip","content","jsEscape","createXhr","xhr","progId","ActiveXObject","parseName","modName","isRelative","moduleName","xdRegExp","useXhr","uProtocol","uHostName","uPort","finishLoad","onLoad","isBuild","req","inlineText","parsed","nonStripName","toUrl","write","pluginName","asModule","writeFile","extPart","fileName","textWrite","env","nodeRequire","errback","readFileSync","header","onXhr","onreadystatechange","evt","onXhrComplete","Packages","java","stringBuffer","encoding","io","File","lineSeparator","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","LogoController","overlayService","showAboutDialog","createOverlay","AboutController","versionDefinitions","openLicenses","LicenseController","licenseDefinitions","aboutDialogTemplate","appLogoTemplate","aboutLogoTemplate","overlayAboutTemplate","licenseApacheTemplate","licenseMitTemplate","licensesTemplate","licensesExportMdTemplate","BrowseController","$route","navigationService","urlService","defaultPath","updateRoute","unlisten","priorRoute","urlForLocation","setScopeObjects","navigationAllowed","navigatedObject","treeModel","setNavigation","navigateTo","getNavigation","domainObjects","doNavigate","nextObject","ROOT_ID","addListener","removeListener","PaneController","opener","isPhone","isPortrait","toggle","visible","InspectorPaneController","showInspector","statuses","attachStatusListener","navigationListener","BrowseObjectController","setViewForDomainObject","selectViewIfMatching","locationViewKey","updateQueryParam","viewKey","doAction","MenuArrowController","NavigationService","navigated","NavigateAction","policyService","allow","confirm","OrphanNavigationHandler","throttle","isOrphan","navigateToParent","checkNavigation","isEditContextRoot","throttledCheckNavigation","NewTabAction","urlForNewTab","Element","requestFullscreen","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","isFullscreen","raw","defineProperties","Boolean","fullscreenElement","enumerable","fullscreenEnabled","screenfull","FullscreenAction","ENTER_FULLSCREEN","EXIT_FULLSCREEN","WindowTitler","getNavigatedObjectName","setTitle","browseTemplate","browseObjectTemplate","gridItemTemplate","objectHeaderTemplate","menuArrowTemplate","backArrowTemplate","itemsTemplate","objectPropertiesTemplate","inspectorRegionTemplate","editable","EditActionController","updateActions","editActions","ACTION_CONTEXT","EditPanesController","updateRoot","rootDomainObject","newRoot","getTrueRoot","oldId","newId","ElementsController","filterBy","searchText","searchElements","EditObjectController","getUnloadWarning","policyMessage","MCTBeforeUnload","checkUnloads","unloads","unload","mctBeforeUnload","removeUnload","onbeforeunload","oldBeforeUnload","checkLocationChange","warning","EditAndComposeAction","doPersist","persistence","doLink","editAction","EditAction","NULL_ACTION","cancelEditing","PropertiesDialog","getFormStructure","sections","rows","row","getInitialFormValue","PropertiesAction","dialogService","userInput","dialog","showDialog","getUserInput","creatable","RemoveAction","isNotObject","otherObjectId","doMutate","checkObjectNavigation","traverseObject","removeFromContext","parentType","parentCreatable","SaveInProgressDialog","show","showBlockingMessage","unknownProgress","severity","hide","SaveAction","resolveWith","doSave","save","returnToBrowse","hideBlockingDialog","CreateWizard","includeLocation","validateLocation","locatingObject","locatingType","populateObjectFromInput","formModel","createModel","createParent","SaveAsAction","creationService","copyService","createWizard","getObjectService","doWizardSave","wizard","showBlockingDialog","fetchObject","objectId","allowClone","objectToClone","allowed","isOriginal","toUndirty","cloneIntoParent","undirty","undirtyOriginals","commitEditingAfterClone","clonedObject","onFailure","CancelAction","getOriginal","original","EditActionPolicy","isEditing","countEditableViews","EditableLinkPolicy","EditableMovePolicy","isDomainObjectEditing","EditNavigationPolicy","isDirty","editorCapability","dirty","currentNavigation","EditContextualActionPolicy","editModeBlacklist","nonEditContextBlacklist","actionMetadata","EditRepresenter","commit","listenHandle","representedObject","setEditing","viewObjectTemplate","or","EditToolbar","structure","addKey","selection","convertItem","item","converted","click","convertSection","section","toolbarState","toolbarStructure","isConsistent","checkConsistency","lookupState","observed","consistent","hasProperty","exclusive","setSelection","refreshSectionApplicability","initializeState","getStructure","getState","updateState","updateProperties","updateProperty","changed","EditToolbarSelection","selecting","selectedObj","deselect","proxy","EditToolbarRepresenter","updateSelection","toolbar","toolbarObject","clearExposedToolbar","exposeToolbar","NOOP_REPRESENTER","initialize","EditorCapability","transactionService","edit","startTransaction","TransactionalPersistenceCapability","transactionManager","persistenceCapability","wrappedPersistence","isActive","addToTransaction","clearTransactionsFor","TransactionCapabilityDecorator","TransactionManager","clearTransactionFns","isScheduled","onCommit","onCancel","promiseFn","nextFn","release","releaseClearFn","TransactionService","transaction","onCommits","onCancels","promises","results","CreateMenuController","refreshActions","createActions","LocatorController","setLocatingObject","priorObject","contextRoot","rootObject","ngModelController","CreationPolicy","CreateAction","onSave","newObject","CreateActionProvider","AddAction","persistAndReturn","addToParent","populatedObject","AddActionProvider","CreationService","NON_PERSISTENT_WARNING","addToComposition","compositionCapability","addResult","newObjectPersistence","locatorTemplate","createButtonTemplate","createMenuTemplate","libraryTemplate","editObjectTemplate","editActionButtonsTemplate","elementsTemplate","topbarEditTemplate","policies","controls","DialogService","activeOverlay","dismissOverlay","overlay","getDialogResponse","resultGetter","typeClass","deferred","canShowDialog","overlayModel","getUserChoice","dialogModel","OverlayService","findBody","newScope","TEMPLATE","overlayDialogTemplate","overlayOptionsTemplate","dialogTemplate","overlayBlockingMessageTemplate","messageTemplate","overlayMessageListTemplate","overlayTemplate","containers","FormatProvider","addToMap","Format","formatMap","getFormat","UTCTimeFormat","DATE_FORMAT","DATE_FORMATS","UrlService","objectPath","viewPath","newTabPath","Popup","styles","goesRight","goesDown","PopupService","adjustNegatives","winDim","margin","innerWidth","innerHeight","offsetX","offsetY","SplashScreenManager","splash","StyleSheetLoader","stylesheets","activeTheme","addStyleSheet","stylesheet","stylesheetUrl","matchesTheme","theme","toPercent","clamp","low","high","copyBounds","bounds","TimeRangeController","formatService","tickCount","innerMinimumSpan","outerMinimumSpan","initialDragValue","formatter","formStartChanged","formEndChanged","ticks","updateViewFromModel","updateFormModel","boundFn","updateSpanWidth","updateOuterStart","updateOuterEnd","updateFormat","onFormStartChange","onFormEndChange","TICK_SPACING_PX","ts","updateTicks","span","outer","updateViewForInnerSpanFromModel","startInnerText","inner","endInnerText","startInnerPct","endInnerPct","defaultBounds","startLeftDrag","startRightDrag","startMiddleDrag","toMillis","pixels","spanWidth","leftDrag","rightDrag","middleDrag","edge","opposite","updateBoundsFromForm","newValue","oldValue","validateStart","startValue","validateEnd","endValue","DateTimePickerController","generateTable","table","updateScopeForMonth","MONTHS","updateFromModel","interacted","updateFromView","isInCurrentMonth","cell","isSelected","dateEquals","d1","d2","changeMonth","nameFor","TIME_NAMES","optionsFor","TIME_OPTIONS","DateTimeFieldController","textValue","textInvalid","lastValidValue","pickerModel","updateFromPicker","ngBlur","picker","active","setFormat","restoreTextValue","TreeNodeController","checkPath","nodePath","navPath","checkSelection","nodeObject","navObject","nodeContext","navContext","isSelectedFlag","setState","trackExpansion","hasBeenExpandedFlag","hasBeenExpanded","ActionGroupController","groupActions","assignToGroup","groups","ungrouped","updateGroups","ToggleController","newState","ContextMenuController","menuActions","ClickAwayController","clickaway","deactivate","activate","ViewSwitcherController","findMatchingOption","updateOptions","BottomBarController","indicators","present","Indicator","getIndicators","GetterSetterController","updateGetterSetter","updateNgModel","SelectorController","getTreeSelection","storeRoot","validateTreeSelection","previousSelected","updateList","updateSelectedObjects","getObject","selectedObjects","listModel","getField","setField","otherId","ObjectInspectorController","getContextualPath","currentParent","currentObj","parents","contextutalParents","getPrimaryPath","primaryParents","isLink","BannerController","notification","dismissOrMinimize","maximize","onDismiss","MCTContainer","containerMap","container","copiedAttributes","MCTDrag","fireListener","updatePosition","currentPosition","initialPosition","continueDrag","MCTClickElsewhere","clickBody","clientX","clientY","xMin","xMax","width","yMin","yMax","height","mctClickElsewhere","MCTResize","currentInterval","mctResizeInterval","DEFAULT_INTERVAL","fireEval","lastBounds","mctResize","linking","onInterval","offsetHeight","MCTPopup","div","MCTScroll","attribute","updateElement","updateScope","expr","MCTSplitPane","getSize","domElement","orientation","updateChildren","firstSize","first","reversed","splitter","splitterSize","dimension","updateElementPositions","CHILDREN_WARNING_MESSAGE","enforceExtrema","getSetPosition","prior","positionParsed","classToToggle","activeInterval","anchorKey","DEFAULT_ANCHOR","ANCHORS","ANCHOR_WARNING_MESSAGE","POLLING_INTERVAL","MCTSplitter","mctSplitPane","startMove","pixelDelta","endMove","SPLITTER_TEMPLATE","Zepto","_","DOCUMENT_NODE","getPropertyValue","baseVal","parseJSON","column-count","columns","font-weight","line-height","opacity","z-index","zoom","*","tabindex","readonly","for","class","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","matchesSelector","qsa","fragment","$1","each","__proto__","selector","isZ","isWindow","isPlainObject","isEmptyObject","inArray","camelCase","support","grep","closest","pluck","siblings","before","wrapAll","wrapInner","unwrap","prev","offsetParent","pageXOffset","pageYOffset","removeProperty","cssText","scrollTop","scrollX","scrollLeft","scrollY","eval","uniq","deserializeValue","zepto","_zid","ns","sel","del","_args","returnValue","getPreventDefault","mousedown","mouseup","mousemove","delegate","undelegate","live","die","currentTarget","liveFired","trigger","Event","dispatchEvent","createEvent","initEvent","beforeSend","rejectWith","processData","param","traditional","dataType","ajaxJSONP","ajax","jsonpCallback","ajaxSettings","accepts","json","xml","crossDomain","Deferred","jsonp","mimeType","overrideMimeType","contentType","getResponseHeader","responseXML","xhrFields","username","password","serializeArray","serialize","__Z","toggleTemplate","ToggleView","expanded","el","labelTemplate","TreeLabelView","getClass","updateView","titleEl","iconEl","activeGestures","nodeTemplate","TreeNodeView","subtreeFactory","selectFn","li","statusClasses","toggleView","subtreeView","activeObject","labelView","updateStatusClasses","statusClass","activeIdPath","selectedIdPath","onSelectionPath","spinnerTemplate","TreeView","ul","nodeViews","newTreeView","setSize","sz","nodeView","loadComposition","addNode","addNodes","updateNodeViewSelection","MCTTree","treeView","unobserve","mctModel","mctObject","bottombarTemplate","actionButtonTemplate","inputFilterTemplate","indicatorTemplate","messageBannerTemplate","progressBarTemplate","timeControllerTemplate","accordionTemplate","subtreeTemplate","treeTemplate","treeNodeTemplate","actionGroupTemplate","contextMenuTemplate","switcherTemplate","objectInspectorTemplate","selectorTemplate","datetimePickerTemplate","datetimeFieldTemplate","InfoGesture","infoService","showBubbleCallback","showBubble","hideBubbleCallback","hideBubble","trackPositionCallback","trackPosition","mousePosition","dismissBubble","pendingBubble","displayBubble","InfoGestureButton","touchPosition","BUBBLE_TEMPLATE","BUBBLE_OPTIONS","BUBBLE_MOBILE_POSITION","BUBBLE_MARGIN_LR","BUBBLE_MAX_WIDTH","InfoConstants","InfoService","MOBILE_POSITION","OPTIONS","templateKey","bubbleSpaceLR","bubbleModel","bubbleTemplate","bubbleTitle","bubbleLayout","InfoButtonGesture","infoTableTemplate","infoBubbleTemplate","infoButtonTemplate","mobile","phone","tablet","isTablet","desktop","portrait","landscape","isLandscape","touch","isTouch","DeviceMatchers","MCTDevice","deviceMatches","mctDevice","AgentService","mobileName","touchEnabled","ontouchstart","isBrowser","MobileClassifier","DeviceClassifier","NotificationIndicatorController","notifications","highest","showNotificationsList","messages","NotificationIndicator","NotificationService","DEFAULT_AUTO_DISMISS","MINIMIZE_TIMEOUT","minimize","minimized","setActiveNotification","selectNextNotification","setHighestSeverity","getActiveNotification","notificationModel","autoDismiss","alert","previous","activeNotification","notificationIndicatorTemplate","CapabilityTable","buildModel","addToTable","capabilityKey","ContainmentTable","addToSetByCapability","capabilityTable","addToSet","ANY","canContain","containerType","containedType","CompositionPolicy","getTable","candidate","CompositionMutabilityPolicy","CompositionModelPolicy","ComposeActionPolicy","getPolicyService","allowComposition","containerObject","selectedType","WorkerService","workers","addWorker","worker","workerUrls","scriptUrl","sharedWorkers","shared","Worker","SharedWorker","CSV","lineDelimiter","cellDelimiter","delimiter","isParser","isEncoder","escaped","quote","deserialize","boolean","primitive","encode","ExportService","saveAs","exportCSV","filename","csvText","blob","Blob","nativeIeSaveAs","msSaveOrOpenBlob","autoBom","FileSaver","saveUsingLinkElement","objectUrl","getURL","createObjectURL","saveLinkElement","download","setImmediate","triggerClickOnSaveLink","dispatchAll","filesaver","revoke","DONE","fixChromeSaveableType","chrome","forceSaveableType","webkitSlice","blobChanged","fixWebKitDownload","webkitReqFs","targetView","saveUsingObjectURLs","execSave","newTab","dispatch","INIT","canUseSaveLink","reqFs","saveUsingFyleSystem","fileSaverAbort","eventTypes","ex","throwOutside","getFyleSystem","getDirectory","createIfNotFound","abortable","getTempDirectory","dir","getExistentFileForRemove","existentFileNotFound","getFile","getFileForWrite","createWriter","writer","onWriterEnd","toURL","onError","code","ABORT_ERR","bindEventsToWriter","onAbort","onwriteend","WRITING","fsMinSize","TEMPORARY","webkitURL","revoker","revokeObjectURL","arbitraryRevokeTimeout","MouseEvent","createElementNS","webkitRequestFileSystem","requestFileSystem","mozRequestFileSystem","FSProto","onwritestart","onprogress","onwrite","TelemetryAggregator","telemetryProviders","mergeResults","merged","requestTelemetry","requests","subscribe","unsubscribes","unsubscribe","TelemetryController","doBroadcast","broadcasting","requestTelemetryForId","trackPending","storeData","responseObject","telemetry","requestData","telemetryCapability","subscriptions","promiseRelevantDomainObjects","tail","buildResponseContainer","buildResponseContainers","telemetryObjects","metadatas","getTelemetryObjects","startTimeout","refreshing","interval","getResponse","isRequestPending","setRefreshInterval","durationMillis","TelemetryCapability","initializeTelemetryService","telemetryService","ZERO","EMPTY_SERIES","getPointCount","getDomainValue","getRangeValue","buildRequest","typeRequest","modelTelemetry","fullRequest","getRelevantResponse","requestTelemetryFromService","update","telemetries","TelemetryFormatter","defaultFormatKey","formatDomainValue","formatRangeValue","TelemetryQueue","queue","counts","isEmpty","poll","decrementCount","getFreeObject","TelemetryTable","TelemetryDelegator","promiseTelemetryObjects","TelemetrySubscription","lossless","promiseRelevantObjects","delegator","updateValuesFromPool","pool","latestValues","fireCallback","updatePending","lookupMetadata","series","domain","range","datum","makeDatum","subscribeAll","cacheObjectReferences","metadataById","telemetryObjectPromise","unsubscribePromise","idsMatch","modelChange","unsubscribeAll","addMutationListener","mutation","unlistenToMutation","domains","ranges","latestValue","getDatum","TelemetrySubscriber","TelemetryHandle","subscription","requestSeries","telemetryObject","receiveSeries","seriesMap","getSeries","issueRequest","issueRequests","makeNewDatum","TelemetryHandler","telemetrySubscriber","ClockIndicator","tickerService","indicatorFormat","getGlyphClass","getText","TickerService","tick","millis","ClockController","lastTimestamp","ampmValue","clockFormat","baseFormat","use24","ampm","repeatZero","qty","padZero","str","isRight","findLast","compact","intersection","_b","rest","initial","reverse","tokenizer","momentTypes","foundFirst","settings","remainder","precision","momentType","wholeValue","decimalValue","isLeast","isMost","forceLength","decVal","general","lastType","TimerFormatter","toWholeSeconds","SHORT_FORMAT","LONG_FORMAT","TimerController","timeDelta","relativeTimestamp","signValue","signCssClass","FORMATTER","updateTimestamp","formatKey","timerFormat","actionKey","relevantAction","handleObjectChange","handleModification","lastSign","lastText","buttonCssClass","buttonText","clickButton","signClass","RefreshingController","triggerRefresh","AbstractStartTimerAction","setTimestamp","StartTimerAction","RestartTimerAction","clockTemplate","timerTemplate","descriptions","moment-duration-format","deps","fixedTemplate","ImageryViewPolicy","hasImageTelemetry","ImageryController","telemetryHandler","releaseSubscription","updateValuesCallback","updateValues","imageUrl","imageObject","isPaused","getZone","getImageUrl","paused","MCTBackgroundImage","nextImage","useImage","loaded","image","requested","mctBackgroundImage","imageryTemplate","LayoutDrag","rawPosition","posFactor","dimFactor","gridSize","toGridDelta","multiply","factors","getAdjustedPosition","gridDelta","dimensions","LayoutController","updateGridSize","layoutGrid","oldSize","DEFAULT_GRID_SIZE","layoutPanels","positions","handleDrop","panels","defaultDimensions","rawPositions","populatePosition","refreshComposition","thisCount","callbackCount","endDragInScope","activeDragId","shallowCopy","DEFAULT_DIMENSIONS","MINIMUM_FRAME_SIZE","convertPosition","defaultPosition","getFrameStyle","activeDrag","ElementFactory","INITIAL_STATES","fixed.image","stroke","fixed.box","fill","border","fixed.line","x2","y2","fixed.text","DIALOGS","initialState","FixedProxy","addElementCallback","AccessorMutator","updater","ResizeHandle","minWidth","minHeight","ElementProxy","resizeHandles","ORDERS","up","down","order","desired","handles","BoxProxy","TextProxy","color","TelemetryProxy","titled","SHOW","HIDE","ImageProxy","LineHandle","xProperty","yProperty","xOther","yOther","LineProxy","x1","y1","fixed.telemetry","FixedDragHandle","elementHandle","DRAG_HANDLE_SIZE","dragging","ElementProxies","FixedController","telemetryFormatter","elementProxy","updateSelectionStyle","generateDragHandle","generateDragHandles","setDisplayedValue","alarm","elementProxiesById","cssClass","updateValueFromSeries","telemetrySeries","evaluate","updateValue","maxDomainValue","elementProxies","makeProxyElement","refreshElements","updateComposition","updateDisplayBounds","getGridSize","getElements","mvHandle","clearSelection","moveHandle","LayoutCompositionPolicy","isFolderInLayout","layoutTemplate","frameTemplate","telemetryTemplate","boxTemplate","lineTemplate","textTemplate","imageTemplate","EmbeddedPageController","trust","iframeTemplate","GLChart","canvas","vertexShader","fragmentShader","aVertexPosition","uColor","uDimensions","uOrigin","gl","getContext","createShader","VERTEX_SHADER","shaderSource","compileShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getAttribLocation","getUniformLocation","enableVertexAttribArray","buffer","createBuffer","lineWidth","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","doDraw","drawType","points","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","vertexAttribPointer","FLOAT","uniform4fv","drawArrays","clear","viewport","drawingBufferWidth","drawingBufferHeight","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setDimensions","origin","uniform2fv","drawLine","LINE_STRIP","drawSquare","TRIANGLE_FAN","Float32Array","Canvas2DChart","c2d","setColor","mappedColor","strokeStyle","fillStyle","clearRect","newDimensions","newOrigin","beginPath","moveTo","lineTo","fillRect","MCTChart","getChart","Charts","Chart","linkChart","draw","chart","lines","boxes","box","drawIfResized","releaseInterval","fallbackFromWebGL","PlotSeriesWindow","mid","PlotLine","addPoint","domainValue","rangeValue","findInsertionIndex","insertPoint","addSeries","insertSeriesWindow","seriesWindow","doInsert","firstTimestamp","startIndex","endIndex","insert","PlotLineBuffer","domainOffset","initialSize","maxSize","rangeExtrema","binSearch","found","doubleBufferSize","canDouble","doubled","halveBufferSize","canHalve","subarray","getBuffer","getLength","getDomainExtrema","getRangeExtrema","fromEnd","PlotUpdater","fixedDuration","maxPoints","buffers","bufferArray","MAX_POINTS","reduceExtrema","dimensionsOf","extrema","originOf","PADDING_RATIO","INITIAL_SIZE","nextIds","prepareLines","initializeDomainOffset","expandRange","padding","updateBounds","lineBuffer","priorDomainOrigin","priorDomainDimensions","domainExtrema","hasSpecificDomainBounds","following","addPointFor","getDimensions","getOrigin","getDomainOffset","getLineBuffers","setDomainBounds","addHistorical","PlotPalette","integerPalette","stringPalette","floatPalette","getIntegerColor","getFloatColor","getStringColor","PlotAxis","axisType","optionKeys","updateMetadata","newOptions","toAdd","chooseOption","PlotLimitTracker","legendClasses","updateLimit","getLegendClass","PlotTelemetryFormatter","DIGITS","setDomainFormat","domainFormat","setRangeFormat","rangeFormat","PlotPosition","panZoomStack","convert","panZoom","getPanZoom","getDomain","getRange","getPosition","PlotTickGenerator","thisObj","generateTicks","step","generateDomainTicks","generateRangeTicks","SubPlot","domainTicks","rangeTicks","hovering","updateDrawingBounds","isNonEmpty","DOMAIN_TICKS","RANGE_TICKS","hasDomainData","mousePositionToDomainRange","toMousePosition","subPlotBounds","toDisplayable","updateHoverCoordinates","formatValue","hoverCoordinates","updateMarqueeBox","marqueeStart","tickGenerator","updatePan","nextOrigin","popPanZoom","panStart","panStartBounds","pushPanZoom","getDomainTicks","getRangeTicks","getDrawingObject","getHoverCoordinates","hover","altKey","marqueeZoom","setDomainOffset","isHovering","PlotPanZoomStack","getDepth","setBasePanZoom","clearPanZoom","PlotOverlayMode","subPlotFactory","subplot","createSubPlot","subplots","plotTelemetry","getSubPlots","isZoomed","stepBackPanZoom","unzoom","PlotPanZoomStackGroup","stacks","decorateStack","decoratedStacks","getPanZoomStack","PlotStackMode","panZoomStackGroup","plotTelemetryTo","prepared","PlotModeOptions","OVERLAID","STACKED","getModeHandler","modeHandler","getModeOptions","getMode","setMode","SubPlotFactory","PlotController","PLOT_FIXED_DURATION","setupAxes","axes","axis","updateSubplot","setupModes","cachedObjects","modeOptions","recreateUpdater","lastDomain","lastRange","limitTracker","getUpdater","addHistoricalData","replot","requery","updateDomainFormat","domainAxis","plotTelemetryFormatter","domainRequery","newDomain","rangeRequery","newRange","changeDisplayBounds","scheduleUpdate","AXIS_DEFAULTS","getColor","PlotViewPolicy","hasNumericTelemetry","PlotOptionsForm","xAxisForm","yAxisForm","inputsize","plotSeriesForm","layout","PlotOptionsController","plotOptionsForm","watches","mutationListener","hasCompositionChanged","defaultConfiguration","updateConfiguration","watchSeries","clearSeriesWatches","watch","oldComposition","newComposition","isUnchanged","currentValue","plot","xAxis","yAxis","plotTemplate","plotOptionsBrowseTemplate","TimelineTraverser","buildObjectList","addObject","addCompositionObjects","childObjects","addRelationships","relationship","modeObjects","subtasks","idSet","IdColumn","idMap","ModeColumn","modes","CompositionColumn","MetadataColumn","propertyName","TimelineFormatter","digits","formatDuration","DAYS","HOURS","MINUTES","SECONDS","TimespanColumn","isStart","timespan","getStart","getEnd","UtilizationColumn","resource","Kbps","watts","getCost","utilization","getUtilizationValue","utilizations","internal","TimelineColumnizer","addMetadataProperty","columnNames","maxComposition","maxRelationships","foundTimespan","metadataProperties","toRow","column","ExportTimelineAsCSVTask","exportService","doExport","exporter","ExportTimelineAsCSVAction","task","TimelineSwimlane","assigner","highlight","highlightBottom","depth","toggleGraph","graph","exceeded","parentTimespan","TimelineSwimlaneDropHandler","swimlane","asPromise","inEditMode","pathContains","swimlaneToCheck","pathId","expandedForDropInto","isDropInto","isReorder","targetObject","droppedObject","droppedContext","droppedParent","droppedParentId","chooseAction","chooseTargetIndex","indexOffset","myId","compId","canDrop","changeIndex","allowDropIn","allowDropAfter","dropInto","dropTarget","dropIndexOffset","TimelineSwimlaneDecorator","ACTIVITY_RELATIONSHIP","persister","dropHandler","TimelineColorAssigner","colors","freeColor","COLOR_OPTIONS","FALLBACK_COLOR","TimelineProxy","populateActionMap","actionMap","populateForSelection","TimelineSwimlanePopulator","objectLoader","trackStartEnd","populateSwimlanes","subgraph","populate","childSubgraph","nextIndex","swimlanes","reselect","recalculateSwimlanes","lastDomainObject","setSelectionObject","newConfig","TimelineGraph","renderer","minimum","maximum","updateMinMax","updateDrawingObject","drawingObject","updateLine","render","decode","populateLine","graphPromise","setBounds","TimelineGraphRenderer","TimelineGraphPopulator","objA","objB","deepEquals","keysMatch","keysA","keysB","lookupResources","getKeys","buildAssignments","assignments","makeGraph","needsGraph","createGraphs","cachedAssignments","graphs","TimelineDragHandler","toId","populateCapabilityMaps","timespanPromise","timespans","mutations","persists","compositions","populateTimespans","setStart","setEnd","setDuration","getDuration","updateStartEnd","spanId","minStart","TimelineSnapHandler","dragHandler","snap","tolerance","exclude","include","difference","HANDLE_WIDTH","SNAP_WIDTH","TimelineStartHandle","snapHandler","initialStart","begin","drag","finish","toPixels","TimelineEndHandle","initialEnd","TimelineMoveHandle","snapDelta","desiredStart","desiredEnd","snappedStart","snappedEnd","diffStart","diffEnd","chooseEnd","TimelineDragHandleFactory","Handle","TIMELINE_HANDLES","DEFAULT_HANDLES","TimelineDragPopulator","refreshHandles","populateForObject","TimelineController","MINIMUM_DURATION","modificationSum","sum","swimlanePopulator","graphMask","mask","bit","repopulateSwimlanes","dragPopulator","graphPopulator","repopulateGraphs","scroll","panes","TimelineGraphController","addToResourceMap","resourceMap","updateGraphs","labelCache","middle","DateTimeController","datetime","sec","epoch","updateForm","modelState","getModelState","TimelineZoomController","ZOOM_CONFIGURATION","tickWidth","zoomLevels","zoomIndex","setZoomLevel","setScroll","initializeZoomFromTimespan","timelineDuration","initializeZoom","levels","amount","center","fit","PADDING","TimelineTickController","calculateLabels","getLabels","startMillis","endMillis","lastFirst","lastCount","lastStep","lastStartMillis","lastEndMillis","labels","TimelineTableController","getNiceTime","niceTime","TimelineGanttController","MAXIMUM_OFFSCREEN","ActivityModeValuesController","storeMetadata","ActivityTimespan","getEpoch","ActivityTimespanCapability","promiseTimeSpan","TimelineTimespan","getTimespanEnd","TimelineTimespanCapability","lookupTimeSpan","childObject","hasTimeSpan","giveTimeSpan","buildTimeSpan","UtilizationCapability","concatenate","uniquify","flatten","arrayOfArrays","promiseComposition","promiseModes","promiseInternalUtilization","addUtilization","cost","addUtilizations","lookupTimespan","lookupUtilization","lookupUtilizationResources","mapUtilization","mapUtilizationResources","promiseExternalUtilization","getModeKeys","mapModeKeys","promiseInternalKeys","promiseExternalKeys","promiseResourceKeys","promiseAllUtilization","ResourceGraph","filterPoint","vals","addDelta","running","addStart","starts","addEnd","ends","pickStart","CumulativeGraph","rate","intercept","slope","initializeValues","change","convertToPercent","point","GraphCapability","buildGraphs","utilizationMap","power","battery","CostCapability","TIMELINE_SWIMLANE_DRAG_TYPE","SwimlaneDragConstants","MCTSwimlaneDrop","draggedObject","draggedSwimlane","lookupSwimlane","mctSwimlaneDrop","wasHighlighted","MCTSwimlaneDrag","mctSwimlaneDrag","ObjectLoader","loadSubGraph","criterion","exists","loadSubGraphFor","storeSubgraphs","subgraphs","notVisiting","visiting","mapIntoResult","TimelineDateTimeController","valuesTemplate","timelineTemplate","activityGanttTemplate","tabularSwimlaneColsTreeTemplate","tabularSwimlaneColsDataTemplate","resourceGraphsTemplate","resourceGraphLabelsTemplate","legendItemTemplate","ticksTemplate","datetimeTemplate","comms","MCTTableController","setDefaults","enableFilter","enableSort","sortColumn","sortDirection","maxDisplayRows","scrollable","sizingRow","onScroll","visibleRows","exportAsCSV","displayHeaders","displayRows","toggleSort","setRows","setHeaders","addRow","removeRow","resize","setElementSizes","scrollToBottom","autoScroll","scrollHeight","rowIndex","filterRows","insertSorted","setVisibleRows","indexInDisplayRows","firstVisible","lastVisible","totalVisible","numberOffscreen","topScroll","bottomScroll","headerHeight","rowHeight","newHeaders","columnWidth","firstRow","tableWidth","overallHeight","columnWidths","totalHeight","totalWidth","binarySearch","searchArray","searchElement","sampleAt","sortComparator","sortKey","toNumber","sortDirectionMultiplier","numberA","numberB","sortRows","rowsToSort","buildLargestRow","largestRow","prevLargest","currentColumn","currentColumnLength","largestColumn","largestColumnLength","filterAndSort","newRows","rowsToFilter","matchRow","filterMap","testVal","TableTemplate","MCTTable","DomainColumn","domainMetadata","getTitle","RangeColumn","rangeMetadata","NameColumn","TableConfiguration","configChanged","config1","config2","config1Keys","config2Keys","populateColumns","metadatum","addColumn","getColumnTitle","getHeaders","getRowValues","rowObject","columnTitle","columnValue","defaultColumnConfiguration","saveColumnConfiguration","columnConfig","buildColumnConfiguration","defaultConfig","TelemetryTableController","changeListeners","registerChangeListeners","unregisterChangeListeners","addRealtimeData","loading","setup","filterColumns","TableController","RealtimeTableController","maxRows","HistoricalTableController","timeoutHandle","batchSize","BATCH_SIZE","doneProcessing","rowData","processTelemetryObjects","pointCount","TableOptionsController","columnsForm","populateForm","newColumns","oldColumns","columnsDefinition","Region","regions","addRegion","region","removeRegion","thisRegion","InspectorRegion","buildRegion","metadataRegion","tableInspector","tableOptionsEditRegion","inspector","FormController","getRegExp","regexps","NON_WHITESPACE","mctForm","formTemplate","MCTForm","toolbarTemplate","MCTToolbar","ddo","MCTControl","controlMap","ngDisabled","fullDateTime","partiallyComplete","updateDateTime","CompositeController","toWebColor","triplet","toGradient","initializeGroups","GROUPS","BASE_COLORS","GRADIENTS","ColorController","DialogButtonController","storeResult","buttonForm","refreshStructure","buttonStructure","getButtonStructure","checkboxTemplate","selectTemplate","textfieldTemplate","buttonTemplate","colorTemplate","compositeTemplate","menuButtonTemplate","radioTemplate","IdentityAggregator","delegateGetUser","getUser","giveFirst","IdentityProvider","userPromise","IdentityCreationDecorator","identityService","user","creator","IdentityIndicator","PersistenceAggregator","providerMap","providerMapPromise","METHOD_DEFAULTS","listObjects","deleteObject","delegateArgs","LocalStoragePersistenceProvider","localStorage","spaceObj","LocalStorageIndicator","LOCAL_STORAGE_WARNING","QueuingPersistenceCapability","queuingPersistence","QueuingPersistenceCapabilityDecorator","persistenceQueue","decoratePersistence","originalPersistence","PersistenceQueueImpl","handler","persistences","lastObservedSize","activeDefer","scheduleFlush","quiescent","flush","clearFlushPromise","flushPromise","flushingDefer","pendingTimeout","maybeFlush","PersistenceQueueHandler","failureHandler","persistGroup","groupIds","persistenceCaps","domainObjs","pQueue","tryPersist","requeue","succeed","fail","failures","handleFailure","REVISION_ERROR_KEY","OVERWRITE_KEY","TIMESTAMP_FORMAT","UNKNOWN_USER","PersistenceFailureConstants","PersistenceFailureDialog","categorizeFailure","failure","isRevisionError","revisionErrors","otherErrors","revised","unrecoverable","OVERWRITE_CANCEL_OPTIONS","OK_OPTIONS","PersistenceFailureHandler","retry","failuresToRetry","cacheModel","remutate","discard","discardAll","failuresToDiscard","handleChoice","PersistenceQueue","PERSISTENCE_QUEUE_DELAY","PersistenceFailureController","formatUsername","persistenceFailureDialogTemplate","PolicyActionDecorator","PolicyViewDecorator","PolicyProvider","Policy","policy","policyMap","policyList","AbstractComposeAction","locationService","composeService","verb","suffix","newParent","cloneContext","dialogTitle","newParentObj","newContext","getLocationFromUser","applicableObject","MoveAction","moveService","CopyAction","progress","phase","totalObjects","processed","errorDetails","errorDialog","details","LinkAction","linkService","GoToOriginalAction","originalObject","SetPrimaryLocationAction","setPrimaryLocation","getContextualLocation","LocatingCreationDecorator","LocatingObjectDecorator","loadObjectInContext","attachContext","CopyPolicy","allowCreation","CrossSpacePolicy","lookupSpace","isCrossSpace","DISALLOWED_ACTIONS","MovePolicy","parentOf","allowMutation","LocationCapability","MoveService","parentCandidate","relocate","objectInNewContext","newLocationCapability","oldLocationCapability","LinkService","CopyTask","firstClone","clones","composeChild","cloneObjectModel","objectModel","persistObjects","addClonesToParent","addedClone","rewriteIdentifiers","copyComposees","composees","clonedParent","originalParent","originalComposee","clonedComposee","buildCopyPlan","domainObjectClone","CopyService","filterWithPolicy","LocationService","initialLocation","formStructure","formState","userFormState","SearchController","searchService","numberToDisplay","RESULTS_PER_PAGE","availabileResults","pendingQuery","onFilterChange","areMore","availableResults","loadMore","dispatchSearch","inputText","clearResults","queryId","query","filterPredicate","onSearchComplete","checkAll","includeTypes","hits","SearchMenuController","filtersString","GenericSearchProvider","workerService","ROOTS","indexedIds","idsToIndex","pendingIndex","pendingQueries","startWorker","indexOnMutation","rootId","scheduleForIndexing","MAX_CONCURRENT_REQUESTS","maxResults","messageEvent","onWorkerMessage","mutationTopic","mutatedObject","keepIndexing","beginIndexRequest","idToIndex","modelResults","hit","matchCount","makeQueryId","searchInput","SearchAggregator","DEFAULT_MAX_RESULTS","FUDGE_FACTOR","resultPromises","providerResults","providerResult","orderByScore","applyFilter","asObjectResults","finalLength","removedByFilter","initialLength","includedIds","objectIds","modelResult","objectResults","searchItemTemplate","searchTemplate","searchMenuTemplate","CSS_CLASS_PREFIX","StatusConstants","StatusRepresenter","lastClasses","STATUS_CLASS_PREFIX","clearClasses","updateStatus","newClasses","flag","statusCapability","StatusCapability","statusService","listStatuses","setStatus","StatusService","statusTable","STATUS_PREFIX","InspectorController","filterRegions","setRegions","typeCapability","EditableRegionPolicy","regionPart","angular-route","csv","es6-promise"],"mappings":"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B,GAGA25B,ICpHAn8E,OACA,0CAAA,+BACA,SAAAm8E,GAoBA,QAAAC,GACAC,EACAjrB,EACAlM,GAEA,MAAA,UAAA3C,EAAA/zB,GACA,GAAA6zB,GAAAg6B,EAAAz5B,gBAAAL,EAGA,OAFA/zB,GAAAA,GAAA4iC,EAAA5B,WACAtK,EAAAn6B,IAAAyD,EAAA+zB,GACA,GAAA45B,GAAA3tD,EAAA+zB,EAAAF,IAIA,MAAA+5B,KCnCAp8E,OAAA,wBACA,qCACA,4CACA,mCACA,iCACA,+BACA,iCACA,sCACA,qCACA,qCACA,2BACA,+BACA,iCACA,uCACA,2BACA,uCACA,2CACA,4CACA,6BACA,iCACA,6BACA,2CACA,wCACA,wCACA,0CACA,6CACA,qBACA,0BACA,uBACA,+BACA,6BACA,kBACA,SACA6hD,EACAO,EACAS,EACAG,EACAM,EACAO,EACAC,EACAmB,EACAQ,EACAmD,EACAgB,EACAe,EACAE,EACAO,EACAmE,EACAE,EACAe,EACAK,EACAE,EACAE,EACAE,EACAynB,EACAW,EACAgB,EACAM,EACAE,EACAC,EACAE,EACAc,EACAI,EACAl2E,GAGAA,EAAAgwB,SAAA,iBACAryB,KAAA,gBACAy9C,YAAA,qCACA9gD,QAAA,MACAI,eACAmJ,OACAilD,KAAA,SAGAnuD,YACAy7E,WAEAz4E,KAAA,UACAlL,MAAA,YACAmX,SAAA,MAGAjM,KAAA,QACAlL,MAAA,cACA2oD,YAAA,0DACAxxC,SAAA,MAGAjM,KAAA,WACAlL,MAAA,aACA2oD,YAAA,uDACAxxC,SAAA,MAGAjM,KAAA,SACAlL,MAAA,WACA2oD,YAAA,yDACAxxC,SAAA,MAGA/E,aAEAW,SAAA,gBACAL,KAAA,WACA/G,eAAAu9C,EACAj2C,SACA,eACA,iBAIAF,SAAA,oBACAL,KAAA,WACA/G,eAAA89C,EACAx2C,SACA,iBACA,UAIAF,SAAA,eACAL,KAAA,WACA/G,eAAAu+C,EACAj3C,SACA,WACA,KACA,UAIAF,SAAA,eACAL,KAAA,WACA/G,eAAA0+C,EACAp3C,SACA,UACA,KACA,UAIAF,SAAA,eA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ACAU,eAAAkoF,EACA5gF,SACA,SACA,YACA,YAIAhI,IAAA,sBACAU,eAAAyoF,EACAnhF,SACA,YAIAhI,IAAA,0BACAU,eAAA6nF,EACAr8E,SAAA,YACAlE,SACA,SACA,eACA,UACA,uBAIAmxE,kBAEAn5E,IAAA,cACAuJ,YAAA,+BAGAvJ,IAAA,gBACA8uB,SAAAy8D,EACAnO,UACA,QAEA1D,MACA,UAIA15E,IAAA,YACA8uB,SAAA08D,EACA9R,MACA,OACA,SACA,YAEA0D,UACA,OACA,UAIAp9E,IAAA,gBACA8uB,SAAA28D,EACA/R,MACA,UAIA15E,IAAA,aACA8uB,SAAA48D,EACAhS,MACA,UAEA0D,UACA,UAIAp9E,IAAA,aACA05E,MACA,WAEA5qD,SAAA68D,IAGA3rF,IAAA,oBACA8uB,SAAA+8D,IAGA7rF,IAAA,mBACA8uB,SAAAg9D,IAGA5hF,WAEAlK,IAAA,oBACAU,eAAA0oF,IAGAnjC,UAEAjmD,IAAA,WACAU,eAAA4oF,EACAthF,SACA,oBACA,KACA,gBACA,aAIAhI,IAAA,SACAC,KAAA,kBACAS,eAAAupF,EACAvsC,YAAA,4BACA99C,UACA,eACA,cAEAoI,SACA,aACA,WAEA0xC,MAAA,YACAkK,SAAA,kBACA13C,SAAA,cAGAlM,IAAA,aACAU,eAAAsqF,EACAprF,SAAA,eACA85C,MAAA,YACAxtC,SAAA,YAGAu7C,QAEAznD,IAAA,QACAC,KAAA,QACA2jD,SAAA,oBACAlG,YAAA,0BACA5uB,SAAA88D,EACAlS,MACA,eAEA0D,UACA,QAEA31E,KAAA,SACAskF,UAAA,IAGA3hF,OAEA1J,eAAAyqF,EACAnjF,SACA,oBACA,aACA,eAIAtH,eAAAgpF,EACA1hF,SACA,WACA,QACA,uBAIA41C,WAEA39C,KAAA,gBACAgY,QAAA,QACAylC,YAAA,oDACAG,OAAA,gBACAC,QAAA,iDACAC,UAAA,0EACAC,QAAA,cACAvyB,KAAA,6ECvQArvB,OACA,iEACA,WASA,QAAA4vF,GAAA19D,GAGA,QAAA29D,KACA39D,EAAA49D,YAAA59D,EAAAo4B,OACAp4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AwnB,GAAArlB,OAAA,GAAAjC,OAAA4/F,MASAD,ICtGAh9F,OAAA,mEAAA,WAAA,MAAA;ArJCA,GsJDAA,OAAA,yEAAA,WAAA,MAAA,29CCAAA,OAAA,uEAAA,WAAA,MAAA,8iECAAA,OAAA,4DAAA,WAAA,MAAA,wtCCAAA,OAAA,gEAAA,WAAA,MAAA,qsHCAAA,OAAA,wEAAA,WAAA,MAAA,4/CCAAA,OAAA,6DAAA,WAAA,MAAA,4zDCAAA,OAAA,gEAAA,WAAA,MAAA,m0DCqBAA,OAAA,iCACA,yCACA,wCACA,uCACA,yCACA,mCACA,qCACA,2BACA,iCACA,6BACA,2BACA,6BACA,6BACA,kCACA,oCACA,oCACA,sCACA,4CACA,qCACA,4CACA,sCACA,oDACA,oCACA,oCACA,sCACA,mCACA,gCACA,sCACA,mCACA,iCACA,2CACA,iDACA,+CACA,oCACA,wCACA,gDACA,qCACA,wCACA,kBACA,SACA4vF,EACAI,EACAO,EACAI,EACAG,EACAU,EACAK,EACAS,EACAO,EACAe,EACAe,EACAqB,EACAG,EACAG,EACAC,EACAE,EACAK,EACAI,EACAwC,EACAQ,EACAW,EACAC,EACAS,EACAM,EACAG,EACAM,EACAI,EACAK,EACAC,EACAM,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA33F,GAGAA,EAAAgwB,SAAA,0BACAr1B,YACAgN,cAEAjK,IAAA,uBACAU,eAAAsrF,EACAhkF,SACA,YAIAhI,IAAA,sBACAU,eAAA0rF,EACApkF,SACA,YAIAhI,IAAA,qBACAU,eAAAisF,EACA3kF,SACA,YAIAhI,IAAA,uBACAU,eAAAqsF,EACA/kF,SACA,SACA,YACA,mBAIAhI,IAAA,uBACAU,eAAAu3F,EACAjwF,SACA,YAIAhI,IAAA,oBACAU,eAAA03F,EACApwF,SACA,SACA,WACA,mBAIAgC,aAEAhK,IAAA,kBACAU,eAAAwsF,EACAllF,SACA,aAIAi+C,UAEAjmD,IAAA,UACAU,eAAAktF,IAGA5tF,IAAA,OACAU,eAAAutF,EACAjmF,SACA,YACA,oBACA,QAEA01C,YAA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kCACA,kDACA,8CACA,8CACA,6CACA,8CACA,qDACA,oDACA,kBACA,SACAggG,EACAQ,EACAQ,EACAE,EACAc,EACAiD,EACAmB,EACAW,EACAc,EACAM,EACAE,EACAE,EACAI,EACAG,EACAK,EACAG,EACAa,EACAS,EACAK,EACAI,EACAM,EACAW,EACAU,EACAE,EACAK,EACAwB,EACA4J,EACAK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjD,EACAkD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA/zG;AAGAA,AnOlHA,EmOkHAgwB,SAAA,6BACAryB,KAAA,sBACAy9C,YAAA,uDACA7gD,UAAA,MACAI,YACAiN,WAEAlK,IAAA,aACAU,eAAA07F,EACAp0F,SACA,eAIAhI,IAAA,eACAU,eAAAk8F,EACA50F,SACA,YACA,aAIAoC,OAEA1J,eAAA48F,EACAt1F,SACA,gBACA,YACA,WAIAtH,eAAA08F,EACAp1F,SACA,eAIAmC,UAEAzJ,eAAA,2BACAV,IAAA,YAGAu9F,cAEAI,cAAA,wBACAzxF,SAAA,cAGA2sE,YAEA74E,IAAA,YACA8uB,SAAAsmF,IAGAp1G,IAAA,gBACA8uB,SAAAumF,IAGAr1G,IAAA,eACA8uB,SAAAwmF,IAGAt1G,IAAA,YACA8uB,SAAAymF,IAGAv1G,IAAA,iBACA8uB,SAAA0mF,IAGAx1G,IAAA,eACA8uB,SAAA2mF,IAGAz1G,IAAA,kBACA8uB,SAAA4mF,IAGAzrG,cAEAjK,IAAA,sBACAU,eAAA09F,EACAp2F,SACA,SACA,WACA,gBACA,sBACA,SAIAhI,IAAA,2BACAU,eAAA2gG,EACAr5F,SACA,SACA,SAIAhI,IAAA,0BACAU,eAAA8hG,EACAx6F,SACA,SACA,gBACA,yBAIAhI,IAAA,qBACAU,eAAAyiG,EACAn7F,SACA,SACA,WACA,uBAIAhI,IAAA,wBACAU,eAAAujG,EACAj8F,SACA,YAIAhI,IAAA,mBACAU,eAAA6jG,IAGAvkG,IAAA,wBACAU,eAAA+jG,EACAz8F,SACA,YAIAhI,IAA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A,4CACA,kDACA,wCACA,kCACA,8CACA,kBACA,SACAmxI,EACAiJ,EACAc,EACA6H,EACAhH,EACAe,EACAW,EACAG,EACAE,EACAI,EACAI,EACAM,EACAyC,EACAK,EACAG,EACAM,EACAE,EACAW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAv9I,GAGAA,EAAAgwB,SAAA,8BACAryB,KAAA,YACAy9C,YAAA,qDACA7gD,UAAA,MACAI,YACAgpD,UAEAjmD,IAAA,kBACAC,KAAA,yBACAL,SAAA,aACAc,eAAA6sI,EACAvlI,SACA,OACA,gBACA,sBACA,iBAIA8B,YAEA9J,IAAA,4BACA09C,YAAA,iEACA3oD,MAAA,OAGAiL,IAAA,6BACA09C,YAAA,qEACA3oD,MAAA,MAGAiL,IAAA,8BACA09C,YAAA,mEACA3oD,OACA8jJ,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,QACA,QACA,SAEAxwC,MAAA,OAIApjD,QAEAjlD,IAAA,WACAC,KAAA,WACA2jD,SAAA,gBACAlG,YAAA,+MACAxxC,SAAA,IACAq3C,UACA,YAEAjgD,UACA,WACA,YAEAs4B,aAEA37B,KAAA,kBACA04E,QAAA,oBACAt7D,UAAA,EACAie,UACA,SAEAuQ,SACA,SAIA5rC,KAAA,gCACA04E,QAAA,YACAt7D,UAAA,EACA4kC,WAAA,SACA3mB,UACA,YAEApe,QAAA,uBAGAyhC,OACAa,eACAtR,OACAmnC,UAAA,MAKAr1E,IAAA,WACAC,KAAA,WACA2jD,SAAA,gBACAL,UACA,YAEAjgD,UACA,YAEAo6C,YAAA,yOACAxxC,SAAA,IACA0vB,aAEA37B,KAAA,kBACA04E,QAAA,oBACAt7D,UAAA,EACAie,UACA,SAEAuQ,SACA,SAIA5rC,KAAA,WACA04E,QAAA,WACAt7D,UAAA,EACAie,UACA,cAIAqjB,OACAa,eACAsN,eACAm+E,UAEA/8F,OACAmnC,UAAA,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xBA70J,UAAAiB,QACAX,OACA7D,eAAA,qBACAqK,QAAA,uCACAiuJ,gBAAA,mDACAC,IAAA,kDACAC,cAAA,2CACAxsG,OAAA,iCACA2/D,yBAAA,qEACAnQ,OAAA,8CACA/yB,WAAA,kDACAr/C,KAAA,6BACA0f,KAAA,kCACAokD,MAAA,oCAEA7oG,MACAgG,SACAgxC,QAAA,WAEAi9G,iBACA1sC,MAAA,YAEAD,0BACAC,MAAA,WAEAnjC,YACAptC,QAAA,cAEA6xD,OACA7xD,QAAA,YAKAvhD,OAAA,QACA,gCACA,iBAEA,8BACA,yBACA,mCACA,mCACA,oCACA,kCACA,oCACA,qCACA,qCACA,qCACA,oCACA,6CACA,0CACA,gCACA,8BACA,8BACA,8BACA,mCACA,mCACA,qCACA,oCACA,mCACA,kCACA,sCACA,mCACA,0BACA,6BACA,2CACA,sCACA,sCACA,2BACA,iCACA,2BACA,2BACA,sCACA,SAAAohD,EAAAl7C,GACA,OACAA,eAAAA,EACA8G,IAAA,WACA,OAAA,GAAAo0C,IAAAp0C,IAAA9G;AtfpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClpngjJA,ADkJA;ACjlhHA,ADiHA;AChzOA,AD0OA;ACzvttHA,ADuHA;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzGA,AD0GA;ACzxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACztEA,ADuEA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA,ADgFA;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpGA,ADqGA;ACplKA,ADmKA;AClnMA,ADoMA;ACnjMA,ADkMA;ACjhjKA,ADkKA;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA,ADiEA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvrjMA,ADkMA;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnmtLA,ADuLA;ACtpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA,ADmFA;ACljbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjhTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA,ADsDA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjIA,ADkIA;ACjtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA,AD0EA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjhDA,ADiDA;AChxKA,ADyKA;ACxzZA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjrjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA,AD+EA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA,ADgFA;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnxFA,ADyFA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA,ADoDA;ACnvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA,ADyDA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxxGA,ADyGA;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA,ADoEA;ACntJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA,ADwBA;ACvlLA,ADmLA;AClgNA;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA,ADqDA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA,ADiEA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzlrlIA,ADmIA;ACljKA,ADkKA;ACjzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA,ADuFA;ACtlpGA,ADqGA;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA,ADiFA;AChtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtzaA,AD0aA;ACzaxjrFA,ADsFA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxvTA,ADwTA;ACvxMA,ADyMA;ACxhzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA,ADoDA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA,AD0EA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxKA,ADyKA;ACxnHA,ADoHA;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzgxHA,ADyHA;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA,ADuFA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjEA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxlDA,ADmDA;AClxhlJA,ADmJA;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnHA,ADoHA;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjvGA;AACA;AACA;ACFA,ADGA;ACFA;AACA;ACFA,ADGA;ACFA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrtFA,ADuFA;ACtrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5DA,AD6DA;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClapHA,ADqHA;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA,ADgFA;AC/EA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjZA,ADkZA;ACjzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvgYA;AC/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA,AD8EA;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA,ADkEA;ACjhIA,ADiIA;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA,ADwFA;ACvpGA,ADqGA;ACpeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA,AD0EA;ACztDA,ADuDA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA,AD+DA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA,AD+DA;AC9DA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1FA,AD2FA;AC1FA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnHA,ADoHA;ACnjHA,ADkHA;ACjvEA,ADwEA;ACvjKA,ADkKA;ACjjEA,ADkEA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA,AD0EA;ACznCA,ADoCA;ACngjDA,ADkDA;ACjvDA,ADwDA;ACvDA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/JA,ADgthFA,ADiFA;AChvjWA,ADkWA;ACjrIA,ADsIA;ACrvhtGA,ADuGA;ACthaxFA,ADyFA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxxGA,ADyGA;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3JA,AD4JA;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA,AD4DA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA,ADkEA;ACjtJA,ADuJA;ACtnMA,ADoMA;ACnnFA,ADoFA;ACnpDA,ADqDA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA,ADiDA;AChtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA,ADyEA;ACxvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClOA,ADmOA;ACllHA,ADmHA;AClzpNA,ADqNA;ACpjFA,ADkFA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9JA,AD+JA;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA,ADiGA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnIA,ADoIA;ACnghJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/FA,ADgzIA,AD0IA;ACzpHA,ADqHA;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA,ADoDA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA,ADuFA;ACtxxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChOA,ADiOA;AChnJA,ADoJA;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA,ADkGA;ACjxCA,ADyCA;ACxnJA,ADoJA;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnrIA,ADsIA;ACrnkBA,ADokBA;ACnkphvGA,ADwGA;ACvjEA,ADkEA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrxtMA,ADuMA;ACtxjHA,ADkHA;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnGA,ADoGA;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACphFA,ADiFA;AChFA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5DA,AD6DA;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrxnDA,ADoDA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA,AD2DA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA,AD0FA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9FA,AD+FA;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA,AD2DA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA,ADsFA;ACrnJA,ADoJA;ACnlHA,ADmHA;AClxDA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvpEA,ADqEA;ACphDA,ADiDA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA,ADiDA;AChhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA,ADiGA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpttGA,ADuGA;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA,ADghrnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/NA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9FA,AD+FA;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1FA,AD2FA;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA,AD+DA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA,ADiEA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA,ADsDA;ACrfile":"main.js","sourcesContent":["/*!\r\n * @overview es6-promise - a tiny implementation of Promises/A+.\r\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\r\n * @license   Licensed under MIT license\r\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\r\n * @version   3.0.2\r\n */\r\n\r\n(function(){\"use strict\";function lib$es6$promise$utils$$objectOrFunction(x){return typeof x===\"function\"||typeof x===\"object\"&&x!==null}function lib$es6$promise$utils$$isFunction(x){return typeof x===\"function\"}function lib$es6$promise$utils$$isMaybeThenable(x){return typeof x===\"object\"&&x!==null}var lib$es6$promise$utils$$_isArray;if(!Array.isArray){lib$es6$promise$utils$$_isArray=function(x){return Object.prototype.toString.call(x)===\"[object Array]\"}}else{lib$es6$promise$utils$$_isArray=Array.isArray}var lib$es6$promise$utils$$isArray=lib$es6$promise$utils$$_isArray;var lib$es6$promise$asap$$len=0;var lib$es6$promise$asap$$toString={}.toString;var lib$es6$promise$asap$$vertxNext;var lib$es6$promise$asap$$customSchedulerFn;var lib$es6$promise$asap$$asap=function asap(callback,arg){lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len]=callback;lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len+1]=arg;lib$es6$promise$asap$$len+=2;if(lib$es6$promise$asap$$len===2){if(lib$es6$promise$asap$$customSchedulerFn){lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush)}else{lib$es6$promise$asap$$scheduleFlush()}}};function lib$es6$promise$asap$$setScheduler(scheduleFn){lib$es6$promise$asap$$customSchedulerFn=scheduleFn}function lib$es6$promise$asap$$setAsap(asapFn){lib$es6$promise$asap$$asap=asapFn}var lib$es6$promise$asap$$browserWindow=typeof window!==\"undefined\"?window:undefined;var lib$es6$promise$asap$$browserGlobal=lib$es6$promise$asap$$browserWindow||{};var lib$es6$promise$asap$$BrowserMutationObserver=lib$es6$promise$asap$$browserGlobal.MutationObserver||lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;var lib$es6$promise$asap$$isNode=typeof process!==\"undefined\"&&{}.toString.call(process)===\"[object process]\";var lib$es6$promise$asap$$isWorker=typeof Uint8ClampedArray!==\"undefined\"&&typeof importScripts!==\"undefined\"&&typeof MessageChannel!==\"undefined\";function lib$es6$promise$asap$$useNextTick(){return function(){process.nextTick(lib$es6$promise$asap$$flush)}}function lib$es6$promise$asap$$useVertxTimer(){return function(){lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush)}}function lib$es6$promise$asap$$useMutationObserver(){var iterations=0;var observer=new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);var node=document.createTextNode(\"\");observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2}}function lib$es6$promise$asap$$useMessageChannel(){var channel=new MessageChannel;channel.port1.onmessage=lib$es6$promise$asap$$flush;return function(){channel.port2.postMessage(0)}}function lib$es6$promise$asap$$useSetTimeout(){return function(){setTimeout(lib$es6$promise$asap$$flush,1)}}var lib$es6$promise$asap$$queue=new Array(1e3);function lib$es6$promise$asap$$flush(){for(var i=0;i<lib$es6$promise$asap$$len;i+=2){var callback=lib$es6$promise$asap$$queue[i];var arg=lib$es6$promise$asap$$queue[i+1];callback(arg);lib$es6$promise$asap$$queue[i]=undefined;lib$es6$promise$asap$$queue[i+1]=undefined}lib$es6$promise$asap$$len=0}function lib$es6$promise$asap$$attemptVertx(){try{var r=require;var vertx=r(\"vertx\");lib$es6$promise$asap$$vertxNext=vertx.runOnLoop||vertx.runOnContext;return lib$es6$promise$asap$$useVertxTimer()}catch(e){return lib$es6$promise$asap$$useSetTimeout()}}var lib$es6$promise$asap$$scheduleFlush;if(lib$es6$promise$asap$$isNode){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useNextTick()}else if(lib$es6$promise$asap$$BrowserMutationObserver){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useMutationObserver()}else if(lib$es6$promise$asap$$isWorker){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useMessageChannel()}else if(lib$es6$promise$asap$$browserWindow===undefined&&typeof require===\"function\"){lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$attemptVertx()}else{lib$es6$promise$asap$$scheduleFlush=lib$es6$promise$asap$$useSetTimeout()}function lib$es6$promise$$internal$$noop(){}var lib$es6$promise$$internal$$PENDING=void 0;var lib$es6$promise$$internal$$FULFILLED=1;var lib$es6$promise$$internal$$REJECTED=2;var lib$es6$promise$$internal$$GET_THEN_ERROR=new lib$es6$promise$$internal$$ErrorObject;function lib$es6$promise$$internal$$selfFulfillment(){return new TypeError(\"You cannot resolve a promise with itself\")}function lib$es6$promise$$internal$$cannotReturnOwn(){return new TypeError(\"A promises callback cannot return that same promise.\")}function lib$es6$promise$$internal$$getThen(promise){try{return promise.then}catch(error){lib$es6$promise$$internal$$GET_THEN_ERROR.error=error;return lib$es6$promise$$internal$$GET_THEN_ERROR}}function lib$es6$promise$$internal$$tryThen(then,value,fulfillmentHandler,rejectionHandler){try{then.call(value,fulfillmentHandler,rejectionHandler)}catch(e){return e}}function lib$es6$promise$$internal$$handleForeignThenable(promise,thenable,then){lib$es6$promise$asap$$asap(function(promise){var sealed=false;var error=lib$es6$promise$$internal$$tryThen(then,thenable,function(value){if(sealed){return}sealed=true;if(thenable!==value){lib$es6$promise$$internal$$resolve(promise,value)}else{lib$es6$promise$$internal$$fulfill(promise,value)}},function(reason){if(sealed){return}sealed=true;lib$es6$promise$$internal$$reject(promise,reason)},\"Settle: \"+(promise._label||\" unknown promise\"));if(!sealed&&error){sealed=true;lib$es6$promise$$internal$$reject(promise,error)}},promise)}function lib$es6$promise$$internal$$handleOwnThenable(promise,thenable){if(thenable._state===lib$es6$promise$$internal$$FULFILLED){lib$es6$promise$$internal$$fulfill(promise,thenable._result)}else if(thenable._state===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,thenable._result)}else{lib$es6$promise$$internal$$subscribe(thenable,undefined,function(value){lib$es6$promise$$internal$$resolve(promise,value)},function(reason){lib$es6$promise$$internal$$reject(promise,reason)})}}function lib$es6$promise$$internal$$handleMaybeThenable(promise,maybeThenable){if(maybeThenable.constructor===promise.constructor){lib$es6$promise$$internal$$handleOwnThenable(promise,maybeThenable)}else{var then=lib$es6$promise$$internal$$getThen(maybeThenable);if(then===lib$es6$promise$$internal$$GET_THEN_ERROR){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$GET_THEN_ERROR.error)}else if(then===undefined){lib$es6$promise$$internal$$fulfill(promise,maybeThenable)}else if(lib$es6$promise$utils$$isFunction(then)){lib$es6$promise$$internal$$handleForeignThenable(promise,maybeThenable,then)}else{lib$es6$promise$$internal$$fulfill(promise,maybeThenable)}}}function lib$es6$promise$$internal$$resolve(promise,value){if(promise===value){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$selfFulfillment())}else if(lib$es6$promise$utils$$objectOrFunction(value)){lib$es6$promise$$internal$$handleMaybeThenable(promise,value)}else{lib$es6$promise$$internal$$fulfill(promise,value)}}function lib$es6$promise$$internal$$publishRejection(promise){if(promise._onerror){promise._onerror(promise._result)}lib$es6$promise$$internal$$publish(promise)}function lib$es6$promise$$internal$$fulfill(promise,value){if(promise._state!==lib$es6$promise$$internal$$PENDING){return}promise._result=value;promise._state=lib$es6$promise$$internal$$FULFILLED;if(promise._subscribers.length!==0){lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish,promise)}}function lib$es6$promise$$internal$$reject(promise,reason){if(promise._state!==lib$es6$promise$$internal$$PENDING){return}promise._state=lib$es6$promise$$internal$$REJECTED;promise._result=reason;lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection,promise)}function lib$es6$promise$$internal$$subscribe(parent,child,onFulfillment,onRejection){var subscribers=parent._subscribers;var length=subscribers.length;parent._onerror=null;subscribers[length]=child;subscribers[length+lib$es6$promise$$internal$$FULFILLED]=onFulfillment;subscribers[length+lib$es6$promise$$internal$$REJECTED]=onRejection;if(length===0&&parent._state){lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish,parent)}}function lib$es6$promise$$internal$$publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(subscribers.length===0){return}var child,callback,detail=promise._result;for(var i=0;i<subscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){lib$es6$promise$$internal$$invokeCallback(settled,child,callback,detail)}else{callback(detail)}}promise._subscribers.length=0}function lib$es6$promise$$internal$$ErrorObject(){this.error=null}var lib$es6$promise$$internal$$TRY_CATCH_ERROR=new lib$es6$promise$$internal$$ErrorObject;function lib$es6$promise$$internal$$tryCatch(callback,detail){try{return callback(detail)}catch(e){lib$es6$promise$$internal$$TRY_CATCH_ERROR.error=e;return lib$es6$promise$$internal$$TRY_CATCH_ERROR}}function lib$es6$promise$$internal$$invokeCallback(settled,promise,callback,detail){var hasCallback=lib$es6$promise$utils$$isFunction(callback),value,error,succeeded,failed;if(hasCallback){value=lib$es6$promise$$internal$$tryCatch(callback,detail);if(value===lib$es6$promise$$internal$$TRY_CATCH_ERROR){failed=true;error=value.error;value=null}else{succeeded=true}if(promise===value){lib$es6$promise$$internal$$reject(promise,lib$es6$promise$$internal$$cannotReturnOwn());return}}else{value=detail;succeeded=true}if(promise._state!==lib$es6$promise$$internal$$PENDING){}else if(hasCallback&&succeeded){lib$es6$promise$$internal$$resolve(promise,value)}else if(failed){lib$es6$promise$$internal$$reject(promise,error)}else if(settled===lib$es6$promise$$internal$$FULFILLED){lib$es6$promise$$internal$$fulfill(promise,value)}else if(settled===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,value)}}function lib$es6$promise$$internal$$initializePromise(promise,resolver){try{resolver(function resolvePromise(value){lib$es6$promise$$internal$$resolve(promise,value)},function rejectPromise(reason){lib$es6$promise$$internal$$reject(promise,reason)})}catch(e){lib$es6$promise$$internal$$reject(promise,e)}}function lib$es6$promise$enumerator$$Enumerator(Constructor,input){var enumerator=this;enumerator._instanceConstructor=Constructor;enumerator.promise=new Constructor(lib$es6$promise$$internal$$noop);if(enumerator._validateInput(input)){enumerator._input=input;enumerator.length=input.length;enumerator._remaining=input.length;enumerator._init();if(enumerator.length===0){lib$es6$promise$$internal$$fulfill(enumerator.promise,enumerator._result)}else{enumerator.length=enumerator.length||0;enumerator._enumerate();if(enumerator._remaining===0){lib$es6$promise$$internal$$fulfill(enumerator.promise,enumerator._result)}}}else{lib$es6$promise$$internal$$reject(enumerator.promise,enumerator._validationError())}}lib$es6$promise$enumerator$$Enumerator.prototype._validateInput=function(input){return lib$es6$promise$utils$$isArray(input)};lib$es6$promise$enumerator$$Enumerator.prototype._validationError=function(){return new Error(\"Array Methods must be provided an Array\")};lib$es6$promise$enumerator$$Enumerator.prototype._init=function(){this._result=new Array(this.length)};var lib$es6$promise$enumerator$$default=lib$es6$promise$enumerator$$Enumerator;lib$es6$promise$enumerator$$Enumerator.prototype._enumerate=function(){var enumerator=this;var length=enumerator.length;var promise=enumerator.promise;var input=enumerator._input;for(var i=0;promise._state===lib$es6$promise$$internal$$PENDING&&i<length;i++){enumerator._eachEntry(input[i],i)}};lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry=function(entry,i){var enumerator=this;var c=enumerator._instanceConstructor;if(lib$es6$promise$utils$$isMaybeThenable(entry)){if(entry.constructor===c&&entry._state!==lib$es6$promise$$internal$$PENDING){entry._onerror=null;enumerator._settledAt(entry._state,i,entry._result)}else{enumerator._willSettleAt(c.resolve(entry),i)}}else{enumerator._remaining--;enumerator._result[i]=entry}};lib$es6$promise$enumerator$$Enumerator.prototype._settledAt=function(state,i,value){var enumerator=this;var promise=enumerator.promise;if(promise._state===lib$es6$promise$$internal$$PENDING){enumerator._remaining--;if(state===lib$es6$promise$$internal$$REJECTED){lib$es6$promise$$internal$$reject(promise,value)}else{enumerator._result[i]=value}}if(enumerator._remaining===0){lib$es6$promise$$internal$$fulfill(promise,enumerator._result)}};lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt=function(promise,i){var enumerator=this;lib$es6$promise$$internal$$subscribe(promise,undefined,function(value){enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED,i,value)},function(reason){enumerator._settledAt(lib$es6$promise$$internal$$REJECTED,i,reason)})};function lib$es6$promise$promise$all$$all(entries){return new lib$es6$promise$enumerator$$default(this,entries).promise}var lib$es6$promise$promise$all$$default=lib$es6$promise$promise$all$$all;function lib$es6$promise$promise$race$$race(entries){var Constructor=this;var promise=new Constructor(lib$es6$promise$$internal$$noop);if(!lib$es6$promise$utils$$isArray(entries)){lib$es6$promise$$internal$$reject(promise,new TypeError(\"You must pass an array to race.\"));return promise}var length=entries.length;function onFulfillment(value){lib$es6$promise$$internal$$resolve(promise,value)}function onRejection(reason){lib$es6$promise$$internal$$reject(promise,reason)}for(var i=0;promise._state===lib$es6$promise$$internal$$PENDING&&i<length;i++){lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]),undefined,onFulfillment,onRejection)}return promise}var lib$es6$promise$promise$race$$default=lib$es6$promise$promise$race$$race;function lib$es6$promise$promise$resolve$$resolve(object){var Constructor=this;if(object&&typeof object===\"object\"&&object.constructor===Constructor){return object}var promise=new Constructor(lib$es6$promise$$internal$$noop);lib$es6$promise$$internal$$resolve(promise,object);return promise}var lib$es6$promise$promise$resolve$$default=lib$es6$promise$promise$resolve$$resolve;function lib$es6$promise$promise$reject$$reject(reason){var Constructor=this;var promise=new Constructor(lib$es6$promise$$internal$$noop);lib$es6$promise$$internal$$reject(promise,reason);return promise}var lib$es6$promise$promise$reject$$default=lib$es6$promise$promise$reject$$reject;var lib$es6$promise$promise$$counter=0;function lib$es6$promise$promise$$needsResolver(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function lib$es6$promise$promise$$needsNew(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}var lib$es6$promise$promise$$default=lib$es6$promise$promise$$Promise;function lib$es6$promise$promise$$Promise(resolver){this._id=lib$es6$promise$promise$$counter++;this._state=undefined;this._result=undefined;this._subscribers=[];if(lib$es6$promise$$internal$$noop!==resolver){if(!lib$es6$promise$utils$$isFunction(resolver)){lib$es6$promise$promise$$needsResolver()}if(!(this instanceof lib$es6$promise$promise$$Promise)){lib$es6$promise$promise$$needsNew()}lib$es6$promise$$internal$$initializePromise(this,resolver)}}lib$es6$promise$promise$$Promise.all=lib$es6$promise$promise$all$$default;lib$es6$promise$promise$$Promise.race=lib$es6$promise$promise$race$$default;lib$es6$promise$promise$$Promise.resolve=lib$es6$promise$promise$resolve$$default;lib$es6$promise$promise$$Promise.reject=lib$es6$promise$promise$reject$$default;lib$es6$promise$promise$$Promise._setScheduler=lib$es6$promise$asap$$setScheduler;lib$es6$promise$promise$$Promise._setAsap=lib$es6$promise$asap$$setAsap;lib$es6$promise$promise$$Promise._asap=lib$es6$promise$asap$$asap;lib$es6$promise$promise$$Promise.prototype={constructor:lib$es6$promise$promise$$Promise,then:function(onFulfillment,onRejection){var parent=this;var state=parent._state;if(state===lib$es6$promise$$internal$$FULFILLED&&!onFulfillment||state===lib$es6$promise$$internal$$REJECTED&&!onRejection){return this}var child=new this.constructor(lib$es6$promise$$internal$$noop);var result=parent._result;if(state){var callback=arguments[state-1];lib$es6$promise$asap$$asap(function(){lib$es6$promise$$internal$$invokeCallback(state,child,callback,result)})}else{lib$es6$promise$$internal$$subscribe(parent,child,onFulfillment,onRejection)}return child},\"catch\":function(onRejection){return this.then(null,onRejection)}};function lib$es6$promise$polyfill$$polyfill(){var local;if(typeof global!==\"undefined\"){local=global}else if(typeof self!==\"undefined\"){local=self}else{try{local=Function(\"return this\")()}catch(e){throw new Error(\"polyfill failed because global object is unavailable in this environment\")}}var P=local.Promise;if(P&&Object.prototype.toString.call(P.resolve())===\"[object Promise]\"&&!P.cast){return}local.Promise=lib$es6$promise$promise$$default}var lib$es6$promise$polyfill$$default=lib$es6$promise$polyfill$$polyfill;var lib$es6$promise$umd$$ES6Promise={Promise:lib$es6$promise$promise$$default,polyfill:lib$es6$promise$polyfill$$default};if(typeof define===\"function\"&&define[\"amd\"]){define('es6-promise',[],function(){return lib$es6$promise$umd$$ES6Promise})}else if(typeof module!==\"undefined\"&&module[\"exports\"]){module[\"exports\"]=lib$es6$promise$umd$$ES6Promise}else if(typeof this!==\"undefined\"){this[\"ES6Promise\"]=lib$es6$promise$umd$$ES6Promise}lib$es6$promise$polyfill$$default()}).call(this);\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Constants used by the framework layer.\r\n */\r\ndefine('platform/framework/src/Constants',{\r\n    MODULE_NAME: \"OpenMCTWeb\",\r\n    BUNDLE_LISTING_FILE: \"bundles.json\",\r\n    BUNDLE_FILE: \"bundle.json\",\r\n    SEPARATOR: \"/\",\r\n    EXTENSION_SUFFIX: \"[]\",\r\n    DEFAULT_BUNDLE: {\r\n        \"sources\": \"src\",\r\n        \"resources\": \"res\",\r\n        \"libraries\": \"lib\",\r\n        \"tests\": \"test\",\r\n        \"configuration\": {},\r\n        \"extensions\": {}\r\n    },\r\n    PRIORITY_LEVELS: {\r\n        \"fallback\": Number.NEGATIVE_INFINITY,\r\n        \"default\": -100,\r\n        \"none\": 0,\r\n        \"optional\": 100,\r\n        \"preferred\": 1000,\r\n        \"mandatory\": Number.POSITIVE_INFINITY\r\n    },\r\n    DEFAULT_PRIORITY: 0\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining FrameworkInitializer. Created by vwoeltje on 11/3/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/FrameworkInitializer',[],\r\n    function () {\r\n\r\n        /**\r\n         * Responsible for managing the four stages of framework\r\n         * initialization:\r\n         *\r\n         * * Loading bundle metadata (JSON files)\r\n         * * Resolving extension implementations with Require\r\n         * * Registering extensions with Angular\r\n         * * Bootstrapping the Angular application.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         * @param {platform/framework.BundleLoader} loader\r\n         * @param {platform/framework.BundleResolver} resolver\r\n         * @param {platform/framework.ExtensionRegistrar} registrar\r\n         * @param {platform/framework.ApplicationBootstrapper} bootstrapper\r\n         */\r\n        function FrameworkInitializer(loader, resolver, registrar, bootstrapper) {\r\n            this.loader = loader;\r\n            this.resolver = resolver;\r\n            this.registrar = registrar;\r\n            this.bootstrapper = bootstrapper;\r\n        }\r\n\r\n        function bind(method, thisArg) {\r\n            return function () {\r\n                return method.apply(thisArg, arguments);\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Run the application defined by this set of bundles.\r\n         * @param bundleList\r\n         * @returns {*}\r\n         */\r\n        FrameworkInitializer.prototype.runApplication = function (bundleList) {\r\n            return this.loader.loadBundles(bundleList)\r\n                .then(bind(this.resolver.resolveBundles, this.resolver))\r\n                .then(bind(this.registrar.registerExtensions, this.registrar))\r\n                .then(bind(this.bootstrapper.bootstrap, this.bootstrapper));\r\n        };\r\n\r\n        return FrameworkInitializer;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/framework/src/LogLevel',[],\r\n    function () {\r\n\r\n        // Log levels; note that these must be in order of\r\n        // most-important-first for LogLevel to function correctly\r\n        // as implemented.\r\n        var LOG_LEVELS = [\r\n            'error',\r\n            'warn',\r\n            'info',\r\n            'log',\r\n            'debug'\r\n        ];\r\n\r\n        // No-op, to replace undesired log levels with\r\n        function NOOP() {}\r\n\r\n        /**\r\n         * Handles enforcement of logging at different levels, specified\r\n         * at load time. The provided level should be one of \"error\",\r\n         * \"warn\", \"info\", \"log\", or \"debug\"; otherwise, \"warn\" is used\r\n         * as a default. Only log messages of levels equal to or greater\r\n         * than the specified level will be passed to console.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         * @param {string} level the logging level\r\n         */\r\n        function LogLevel(level) {\r\n            // Find the numeric level associated with the string\r\n            this.index = LOG_LEVELS.indexOf(level);\r\n\r\n            // Default to 'warn' level if unspecified\r\n            if (this.index < 0) {\r\n                this.index = 1;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Configure logging to suppress log output if it is\r\n         * not of an appropriate level. Both the Angular app\r\n         * being initialized and a reference to `$log` should be\r\n         * passed; the former is used to configure application\r\n         * logging, while the latter is needed to apply the\r\n         * same configuration during framework initialization\r\n         * (since the framework also logs.)\r\n         *\r\n         * @param app the Angular app to configure\r\n         * @param $log Angular's $log (also configured)\r\n         * @memberof platform/framework.LogLevel#\r\n         */\r\n        LogLevel.prototype.configure = function (app, $log) {\r\n            var index = this.index;\r\n\r\n            // Replace logging methods with no-ops, if they are\r\n            // not of an appropriate level.\r\n            function decorate(log) {\r\n                LOG_LEVELS.forEach(function (m, i) {\r\n                    // Determine applicability based on index\r\n                    // (since levels are in descending order)\r\n                    if (i > index) {\r\n                        log[m] = NOOP;\r\n                    }\r\n                });\r\n            }\r\n\r\n            decorate($log);\r\n            app.decorator('$log', ['$delegate', function ($delegate) {\r\n                decorate($delegate);\r\n                return $delegate;\r\n            }]);\r\n        };\r\n\r\n        return LogLevel;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/framework/src/load/Extension',[],\r\n    function () {\r\n\r\n        /**\r\n         * An extension's plain JSON definition.\r\n         *\r\n         * @name ExtensionDefinition\r\n         * @property {string} [key] the machine-readable identifier for this\r\n         *           extension\r\n         * @property {string} [implementation] the path to the AMD module\r\n         *           which implements this extension; this path is relative\r\n         *           to the containing bundle's source folder.\r\n         * @property {string[]} [depends=[]] the dependencies needed by this\r\n         *           extension; these are strings as shall be passed to\r\n         *           Angular's dependency resolution mechanism.\r\n         * @constructor\r\n         * @memberof platform/framework\r\n         */\r\n\r\n        /**\r\n         * Instantiate a new extension based on its definition. This serves\r\n         * primarily as a wrapper around the extension's definition to expose\r\n         * a useful interface.\r\n         *\r\n         * An extension\r\n         *\r\n         * @param {Bundle} bundle the bundle which exposed this extension\r\n         * @param {string} category the type of extension being exposed\r\n         * @param {ExtensionDefinition} definition the plain definition of\r\n         *        this extension\r\n         * @constructor\r\n         */\r\n        function Extension(bundle, category, definition) {\r\n            var logName = category,\r\n                extensionDefinition = {};\r\n\r\n            // Build up the log-friendly name for this bundle\r\n            if (definition.key || definition.name) {\r\n                logName += \"(\";\r\n                logName += definition.key || \"\";\r\n                logName += (definition.key && definition.name) ? \" \" : \"\";\r\n                logName += definition.name || \"\";\r\n                logName += \")\";\r\n            }\r\n            logName += \" from \" + bundle.getLogName();\r\n\r\n            // Copy over definition. This allows us to attach the bundle\r\n            // definition without modifying the original definition object.\r\n            Object.keys(definition).forEach(function (k) {\r\n                extensionDefinition[k] = definition[k];\r\n            });\r\n\r\n            // Attach bundle metadata\r\n            extensionDefinition.bundle = bundle.getDefinition();\r\n\r\n            this.logName = logName;\r\n            this.bundle = bundle;\r\n            this.category = category;\r\n            this.definition = definition;\r\n            this.extensionDefinition = extensionDefinition;\r\n        }\r\n\r\n        /**\r\n         * Get the machine-readable identifier for this extension.\r\n         *\r\n         * @returns {string} the identifier for this extension\r\n         */\r\n        Extension.prototype.getKey = function () {\r\n            return this.definition.key || \"undefined\";\r\n        };\r\n\r\n        /**\r\n         * Get the bundle which declared this extension.\r\n         *\r\n         * @returns {Bundle} the declaring bundle\r\n         */\r\n        Extension.prototype.getBundle = function () {\r\n            return this.bundle;\r\n        };\r\n\r\n        /**\r\n         * Get the category into which this extension falls.\r\n         * (e.g. \"directives\")\r\n         *\r\n         * @returns {string} the extension category\r\n         */\r\n        Extension.prototype.getCategory = function () {\r\n            return this.category;\r\n        };\r\n\r\n        /**\r\n         * Check whether or not this extension should have an\r\n         * associated implementation module which may need to\r\n         * be loaded.\r\n         *\r\n         * @returns {boolean} true if an implementation separate\r\n         *          from this definition should also be loaded\r\n         */\r\n        Extension.prototype.hasImplementation = function () {\r\n            return this.definition.implementation !== undefined;\r\n        };\r\n\r\n        /**\r\n         * Get the path to the AMD module which implements this\r\n         * extension. Will return undefined if there is no\r\n         * implementation associated with this extension.\r\n         *\r\n         * @returns {string} path to implementation, or undefined\r\n         */\r\n        Extension.prototype.getImplementationPath = function () {\r\n            return (this.hasImplementation() && !this.hasImplementationValue()) ?\r\n                    this.bundle.getSourcePath(this.definition.implementation) :\r\n                    undefined;\r\n        };\r\n\r\n        /**\r\n         * Check if an extension has an actual implementation value\r\n         * (and not just a path to an implementation) defined.\r\n         * @returns {function} the constructor for this extension instance\r\n         */\r\n        Extension.prototype.getImplementationValue = function () {\r\n            return typeof this.definition.implementation === 'function' ?\r\n                    this.definition.implementation :\r\n                    undefined;\r\n        };\r\n\r\n        /**\r\n         * Check if an extension has an actual implementation value\r\n         * (and not just a path to an implementation) defined.\r\n         * @returns {boolean} true if a value is available\r\n         */\r\n        Extension.prototype.hasImplementationValue = function () {\r\n            return typeof this.definition.implementation === 'function';\r\n        };\r\n\r\n        /**\r\n         * Get a log-friendly name for this extension; this will\r\n         * include both the key (machine-readable name for this\r\n         * extension) and the name (human-readable name for this\r\n         * extension.)\r\n         *\r\n         * @returns {string} log-friendly name for this extension\r\n         */\r\n        Extension.prototype.getLogName = function () {\r\n            return this.logName;\r\n        };\r\n\r\n        /**\r\n         * Get the plain definition of the extension.\r\n         *\r\n         * Note that this definition will have an additional \"bundle\"\r\n         * field which points back to the bundle which defined the\r\n         * extension, as a convenience.\r\n         *\r\n         * @returns {ExtensionDefinition} the plain definition of\r\n         *          this extension, as read from the bundle\r\n         *          declaration.\r\n         */\r\n        Extension.prototype.getDefinition = function () {\r\n            return this.extensionDefinition;\r\n        };\r\n\r\n        return Extension;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/framework/src/load/Bundle',['../Constants', './Extension'],\r\n    function (Constants, Extension) {\r\n\r\n\r\n        /**\r\n         * A bundle's plain JSON definition.\r\n         *\r\n         * @name BundleDefinition\r\n         * @property {string} name the human-readable name of this bundle\r\n         * @property {string} sources the name of the directory which\r\n         *           contains source code used by this bundle\r\n         * @property {string} resources the name of the directory which\r\n         *           contains resource files used by this bundle\r\n         * @property {Object.<string,ExtensionDefinition[]>} [extensions={}]\r\n         *           all extensions exposed by this bundle\r\n         * @constructor\r\n         * @memberof platform/framework\r\n         */\r\n\r\n\r\n        /**\r\n         * Instantiate a new reference to a bundle, based on its human-readable\r\n         * definition.\r\n         *\r\n         * @param {string} path the path to the directory containing\r\n         *        this bundle\r\n         * @param {BundleDefinition} bundleDefinition\r\n         * @returns {{getDefinition: Function}}\r\n         * @constructor\r\n         */\r\n        function Bundle(path, bundleDefinition) {\r\n            // Start with defaults\r\n            var definition = Object.create(Constants.DEFAULT_BUNDLE),\r\n                logName = path;\r\n\r\n            // Override defaults with specifics from bundle definition\r\n            Object.keys(bundleDefinition).forEach(function (k) {\r\n                definition[k] = bundleDefinition[k];\r\n            });\r\n\r\n            // Record path to bundle in definition\r\n            definition.path = path;\r\n\r\n            // Build up the log-friendly name for this bundle\r\n            if (definition.key || definition.name) {\r\n                logName += \"(\";\r\n                logName += definition.key || \"\";\r\n                logName += (definition.key && definition.name) ? \" \" : \"\";\r\n                logName += definition.name || \"\";\r\n                logName += \")\";\r\n            }\r\n\r\n            this.path = path;\r\n            this.definition = definition;\r\n            this.logName = logName;\r\n        }\r\n\r\n\r\n        // Utility function for resolving paths in this bundle\r\n        Bundle.prototype.resolvePath = function (elements) {\r\n            var path = this.path;\r\n            return [path].concat(elements || []).join(Constants.SEPARATOR);\r\n        };\r\n\r\n\r\n        /**\r\n         * Get the path to this bundle.\r\n         * @returns {string} path to this bundle;\r\n         */\r\n        Bundle.prototype.getPath = function () {\r\n            return this.path;\r\n        };\r\n\r\n        /**\r\n         * Get the path to this bundle's source folder. If an\r\n         * argument is provided, the path will be to the source\r\n         * file within the bundle's source file.\r\n         *\r\n         * @param {string} [sourceFile] optionally, give a path to\r\n         *        a specific source file in the bundle.\r\n         * @returns {string} path to the source folder (or to the\r\n         *          source file within it)\r\n         */\r\n        Bundle.prototype.getSourcePath = function (sourceFile) {\r\n            var subpath = sourceFile ?\r\n                [this.definition.sources, sourceFile] :\r\n                [this.definition.sources];\r\n\r\n            return this.resolvePath(subpath);\r\n        };\r\n\r\n        /**\r\n         * Get the path to this bundle's resource folder. If an\r\n         * argument is provided, the path will be to the resource\r\n         * file within the bundle's resource file.\r\n         *\r\n         * @param {string} [resourceFile] optionally, give a path to\r\n         *        a specific resource file in the bundle.\r\n         * @returns {string} path to the resource folder (or to the\r\n         *          resource file within it)\r\n         */\r\n        Bundle.prototype.getResourcePath = function (resourceFile) {\r\n            var subpath = resourceFile ?\r\n                [this.definition.resources, resourceFile] :\r\n                [this.definition.resources];\r\n\r\n            return this.resolvePath(subpath);\r\n        };\r\n\r\n        /**\r\n         * Get the path to this bundle's library folder. If an\r\n         * argument is provided, the path will be to the library\r\n         * file within the bundle's resource file.\r\n         *\r\n         * @param {string} [libraryFile] optionally, give a path to\r\n         *        a specific library file in the bundle.\r\n         * @returns {string} path to the resource folder (or to the\r\n         *          resource file within it)\r\n         */\r\n        Bundle.prototype.getLibraryPath = function (libraryFile) {\r\n            var subpath = libraryFile ?\r\n                [this.definition.libraries, libraryFile] :\r\n                [this.definition.libraries];\r\n\r\n            return this.resolvePath(subpath);\r\n        };\r\n\r\n        /**\r\n         * Get library configuration for this bundle. This is read\r\n         * from the bundle's definition; if the bundle is well-formed,\r\n         * it will resemble a require.config object.\r\n         * @returns {object} library configuration\r\n         */\r\n        Bundle.prototype.getConfiguration = function () {\r\n            return this.definition.configuration || {};\r\n        };\r\n\r\n        /**\r\n         * Get a log-friendly name for this bundle; this will\r\n         * include both the key (machine-readable name for this\r\n         * bundle) and the name (human-readable name for this\r\n         * bundle.)\r\n         * @returns {string} log-friendly name for this bundle\r\n         */\r\n        Bundle.prototype.getLogName = function () {\r\n            return this.logName;\r\n        };\r\n\r\n        /**\r\n         * Get all extensions exposed by this bundle of a given\r\n         * category.\r\n         *\r\n         * @param {string} category name of the extension category\r\n         * @returns {Array} extension definitions of that cataegory\r\n         */\r\n        Bundle.prototype.getExtensions = function (category) {\r\n            var extensions = this.definition.extensions[category] || [],\r\n                self = this;\r\n\r\n            return extensions.map(function objectify(extDefinition) {\r\n                return new Extension(self, category, extDefinition);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Get a list of all extension categories exposed by this bundle.\r\n         *\r\n         * @returns {string[]} the extension categories\r\n         */\r\n        Bundle.prototype.getExtensionCategories = function () {\r\n            return Object.keys(this.definition.extensions);\r\n        };\r\n\r\n        /**\r\n         * Get the plain definition of this bundle, as read from\r\n         * its JSON declaration.\r\n         *\r\n         * @returns {platform/framework.BundleDefinition} the raw\r\n         *          definition of this bundle\r\n         */\r\n        Bundle.prototype.getDefinition = function () {\r\n            return this.definition;\r\n        };\r\n\r\n        return Bundle;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining BundleLoader.js. Created by vwoeltje on 10/31/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/load/BundleLoader',['../Constants', './Bundle'],\r\n    function (Constants, Bundle) {\r\n\r\n        var INVALID_ARGUMENT_MESSAGE = \"Malformed loadBundles argument; \" +\r\n            \"expected string or array\",\r\n            BAD_CONTENTS_PREFIX = \"Invalid bundle contents for \",\r\n            LOAD_ERROR_PREFIX = \"Failed to load bundle \";\r\n\r\n        /**\r\n         * Loads bundle definitions and wraps them in interfaces which are\r\n         * useful to the framework. This provides the base information which\r\n         * will be used by later phases of framework layer initialization.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         * @param $http Angular's HTTP requester\r\n         * @param $log Angular's logging service\r\n         */\r\n        function BundleLoader($http, $log, legacyRegistry) {\r\n            this.$http = $http;\r\n            this.$log = $log;\r\n            this.legacyRegistry = legacyRegistry;\r\n        }\r\n\r\n        /**\r\n         * Load a group of bundles, to be used to constitute the\r\n         * application by later framework initialization phases.\r\n         *\r\n         * @param {string|string[]} an array of bundle names to load, or\r\n         *        the name of a JSON file containing that array\r\n         * @returns {Promise.<Bundle[]>} a promise for the loaded bundles\r\n         */\r\n        BundleLoader.prototype.loadBundles = function (bundles) {\r\n            var $http = this.$http,\r\n                $log = this.$log,\r\n                legacyRegistry = this.legacyRegistry;\r\n\r\n            // Utility function; load contents of JSON file using $http\r\n            function getJSON(file) {\r\n                return $http.get(file).then(function (response) {\r\n                    return response.data;\r\n                });\r\n            }\r\n\r\n            // Remove bundles which failed to load properly.\r\n            // These should have been logged when loaded by\r\n            // loadBundleDefinition, so at this point they are safe\r\n            // to discard.\r\n            function filterBundles(array) {\r\n                return array.filter(function (x) {\r\n                    return x !== undefined;\r\n                });\r\n            }\r\n\r\n            // Load a definition for a bundle\r\n            function loadBundleDefinition(bundlePath) {\r\n                return getJSON(bundlePath + \"/\" + Constants.BUNDLE_FILE).then(\r\n                    function (x) {\r\n                        if (x === null || typeof x !== 'object') {\r\n                            $log.warn(BAD_CONTENTS_PREFIX + bundlePath);\r\n                            return undefined;\r\n                        }\r\n                        return x;\r\n                    },\r\n                    function () {\r\n                        $log.warn(LOAD_ERROR_PREFIX + bundlePath);\r\n                        return undefined;\r\n                    }\r\n                );\r\n            }\r\n\r\n            // Load an individual bundle, as a Bundle object.\r\n            // Returns undefined if the definition could not be loaded.\r\n            function loadBundle(bundlePath) {\r\n                if (legacyRegistry.contains(bundlePath)) {\r\n                    return Promise.resolve(new Bundle(\r\n                        bundlePath,\r\n                        legacyRegistry.get(bundlePath)\r\n                    ));\r\n                }\r\n\r\n                return loadBundleDefinition(bundlePath).then(function (definition) {\r\n                    return definition && (new Bundle(bundlePath, definition));\r\n                });\r\n            }\r\n\r\n            // Used to filter out redundant bundles\r\n            function unique(element, index, array) {\r\n                return array.indexOf(element) === index;\r\n            }\r\n\r\n            // Load all named bundles from the array, returned as an array\r\n            // of Bundle objects.\r\n            function loadBundlesFromArray(bundleArray) {\r\n                var bundlePromises = legacyRegistry.list()\r\n                    .concat(bundleArray)\r\n                    .filter(unique)\r\n                    .map(loadBundle);\r\n\r\n                return Promise.all(bundlePromises)\r\n                    .then(filterBundles);\r\n            }\r\n\r\n            // Load all bundles named in the referenced file. The file is\r\n            // presumed to be a JSON file\r\n            function loadBundlesFromFile(listFile) {\r\n                function handleError(err) {\r\n                    $log.info([\r\n                        \"No external bundles loaded;\",\r\n                        \"could not load bundle listing in\",\r\n                        listFile,\r\n                        \"due to error\",\r\n                        err.status,\r\n                        err.statusText\r\n                    ].join(' '));\r\n                    return loadBundlesFromArray([]);\r\n                }\r\n\r\n                return getJSON(listFile)\r\n                    .then(loadBundlesFromArray, handleError);\r\n            }\r\n\r\n            return Array.isArray(bundles) ? loadBundlesFromArray(bundles) :\r\n                    (typeof bundles === 'string') ? loadBundlesFromFile(bundles) :\r\n                            Promise.reject(new Error(INVALID_ARGUMENT_MESSAGE));\r\n        };\r\n\r\n        return BundleLoader;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ImplementationLoader. Created by vwoeltje on 11/3/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/resolve/ImplementationLoader',[],\r\n    function () {\r\n\r\n        /**\r\n         * Responsible for loading extension implementations\r\n         * (AMD modules.) Acts as a wrapper around RequireJS to\r\n         * provide a promise-like API.\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         * @param {*} require RequireJS, or an object with similar API\r\n         * @param {*} $log Angular's logging service\r\n         */\r\n        function ImplementationLoader(require) {\r\n            this.require = require;\r\n        }\r\n\r\n        /**\r\n         * Load an extension's implementation; or, equivalently,\r\n         * load an AMD module. This is fundamentally similar\r\n         * to a call to RequireJS, except that the result is\r\n         * wrapped in a promise. The promise will be fulfilled\r\n         * with the loaded module, or rejected with the error\r\n         * reported by Require.\r\n         *\r\n         * @param {string} path the path to the module to load\r\n         * @returns {Promise} a promise for the specified module.\r\n         */\r\n        ImplementationLoader.prototype.load = function loadModule(path) {\r\n            var require = this.require;\r\n            return new Promise(function (fulfill, reject) {\r\n                require([path], fulfill, reject);\r\n            });\r\n        };\r\n\r\n        return ImplementationLoader;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ExtensionResolver. Created by vwoeltje on 11/3/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/resolve/ExtensionResolver',[],\r\n    function () {\r\n\r\n        /**\r\n         * An ExtensionResolver is responsible for loading any implementation\r\n         * modules associated with specific extensions.\r\n         *\r\n         * @param {ImplementationLoader} loader used to load implementations\r\n         * @param {*} $log Angular's logging service\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function ExtensionResolver(loader, $log) {\r\n            this.loader = loader;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Resolve the provided extension; this will give a promise\r\n         * for the extension's implementation, if one has been\r\n         * specified, or for the plain definition of the extension\r\n         * otherwise. The plain definition will also be given\r\n         * if the implementation fails to load for some reason.\r\n         *\r\n         * All key-value pairs from the extension definition\r\n         * will additionally be attached to any loaded implementation.\r\n         *\r\n         * @param {Extension} extension the extension to resolve\r\n         * @returns {Promise} a promise for the resolved extension\r\n         */\r\n        ExtensionResolver.prototype.resolve = function (extension) {\r\n            var loader = this.loader,\r\n                $log = this.$log;\r\n\r\n            function loadImplementation(ext) {\r\n                var implPromise = ext.hasImplementationValue() ?\r\n                            Promise.resolve(ext.getImplementationValue()) :\r\n                            loader.load(ext.getImplementationPath()),\r\n                    definition = ext.getDefinition();\r\n\r\n                // Wrap a constructor function (to avoid modifying the original)\r\n                function constructorFor(impl) {\r\n                    function Constructor() {\r\n                        return impl.apply(this, arguments);\r\n                    }\r\n                    Constructor.prototype = impl.prototype;\r\n                    return Constructor;\r\n                }\r\n\r\n                // Attach values from the object definition to the\r\n                // loaded implementation.\r\n                function attachDefinition(impl) {\r\n                    var result = (typeof impl === 'function') ?\r\n                        constructorFor(impl) :\r\n                        Object.create(impl);\r\n\r\n                    // Copy over static properties\r\n                    Object.keys(impl).forEach(function (k) {\r\n                        result[k] = impl[k];\r\n                    });\r\n\r\n                    // Copy over definition\r\n                    Object.keys(definition).forEach(function (k) {\r\n                        if (result[k] === undefined) {\r\n                            result[k] = definition[k];\r\n                        }\r\n                    });\r\n                    result.definition = definition;\r\n\r\n                    // Log that this load was successful\r\n                    $log.info(\"Resolved \" + ext.getLogName());\r\n\r\n                    return result;\r\n                }\r\n\r\n                // Log any errors in loading the implementation, and\r\n                // return the plain extension definition instead.\r\n                function handleError(err) {\r\n                    // Build up a log message from parts\r\n                    var message = [\r\n                        \"Could not load implementation for extension \",\r\n                        ext.getLogName(),\r\n                        \" due to \",\r\n                        err.message\r\n                    ].join(\"\");\r\n\r\n                    // Log that the extension was not loaded\r\n                    $log.warn(message);\r\n\r\n                    return ext.getDefinition();\r\n                }\r\n\r\n                if (!ext.hasImplementationValue()) {\r\n                    // Log that loading has begun\r\n                    $log.info([\r\n                        \"Loading implementation \",\r\n                        ext.getImplementationPath(),\r\n                        \" for extension \",\r\n                        ext.getLogName()\r\n                    ].join(\"\"));\r\n                }\r\n\r\n                return implPromise.then(attachDefinition, handleError);\r\n            }\r\n\r\n            // Log that loading has begun\r\n            $log.info([\r\n                \"Resolving extension \",\r\n                extension.getLogName()\r\n            ].join(\"\"));\r\n\r\n            return extension.hasImplementation() ?\r\n                loadImplementation(extension) :\r\n                Promise.resolve(extension.getDefinition());\r\n        };\r\n\r\n        return ExtensionResolver;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining BundleResolver. Created by vwoeltje on 11/4/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/resolve/BundleResolver',[],\r\n    function () {\r\n\r\n        /**\r\n         * Responsible for the extension resolution phase of framework\r\n         * initialization. During this phase, any scripts implementing\r\n         * extensions provided by bundles are loaded.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function BundleResolver(extensionResolver, requireConfigurator, $log) {\r\n            this.extensionResolver = extensionResolver;\r\n            this.requireConfigurator = requireConfigurator;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Resolve all extensions exposed by these bundles.\r\n         *\r\n         * @param {Bundle[]} bundles the bundles to resolve\r\n         * @returns {Promise.<Object.<string, object[]>>} an promise\r\n         *          for an object containing\r\n         *          key-value pairs, where keys are extension\r\n         *          categories and values are arrays of resolved\r\n         *          extensions belonging to those categories\r\n         */\r\n        BundleResolver.prototype.resolveBundles = function (bundles) {\r\n            var extensionResolver = this.extensionResolver,\r\n                requireConfigurator = this.requireConfigurator,\r\n                $log = this.$log;\r\n\r\n            /*\r\n             * Merge resolved bundles (where each is expressed as an\r\n             * object containing key-value pairs, where keys are extension\r\n             * categories and values are arrays of resolved extensions)\r\n             * into one large object containing resolved extensions from\r\n             * all bundles (in the same form.)\r\n             *\r\n             * @param {Object.<string, object[]>|Array} resolvedBundles\r\n             * @returns {Object.<string, object[]>}\r\n             * @memberof platform/framework.BundleResolver#\r\n             */\r\n            function mergeResolvedBundles(resolvedBundles) {\r\n                var result = {};\r\n\r\n                resolvedBundles.forEach(function (resolved) {\r\n                    Object.keys(resolved).forEach(function (k) {\r\n                        result[k] = (result[k] || []).concat(resolved[k]);\r\n                    });\r\n                });\r\n\r\n                return result;\r\n            }\r\n\r\n            // Resolve a bundle; resolve all extensions, and return\r\n            // the resolved extensions in an object in the format described\r\n            // for mergeResolvedBundles above\r\n            function resolveBundle(bundle) {\r\n                var categories = bundle.getExtensionCategories(),\r\n                    result = {};\r\n\r\n                function resolveExtension(extension) {\r\n                    var category = extension.getCategory();\r\n\r\n                    function push(resolved) {\r\n                        result[category].push(resolved);\r\n                    }\r\n\r\n                    return extensionResolver.resolve(extension).then(push);\r\n                }\r\n\r\n                function resolveCategory(category) {\r\n                    result[category] = [];\r\n                    return Promise.all(\r\n                        bundle.getExtensions(category).map(resolveExtension)\r\n                    );\r\n                }\r\n\r\n                function giveResult() {\r\n                    return result;\r\n                }\r\n\r\n                // Log the large-scale task\r\n                $log.info(\r\n                    \"Resolving extensions for bundle \" + bundle.getLogName()\r\n                );\r\n\r\n                return Promise.all(categories.map(resolveCategory))\r\n                    .then(giveResult);\r\n            }\r\n\r\n            // First, make sure Require is suitably configured\r\n            requireConfigurator.configure(bundles);\r\n\r\n            // Then, resolve all extension implementations.\r\n            return Promise.all(bundles.map(resolveBundle))\r\n                .then(mergeResolvedBundles);\r\n        };\r\n\r\n        return BundleResolver;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/framework/src/resolve/RequireConfigurator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles configuration of RequireJS to expose libraries\r\n         * from bundles with module names that can be used from other\r\n         * bundles.\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         * @param requirejs an instance of RequireJS\r\n         */\r\n        function RequireConfigurator(requirejs) {\r\n            this.requirejs = requirejs;\r\n        }\r\n\r\n        // Utility function to clone part of a bundle definition\r\n        function clone(obj) {\r\n            return JSON.parse(JSON.stringify(obj));\r\n        }\r\n\r\n        // Look up module configuration from the bundle definition.\r\n        // This will adjust paths to libraries as-needed.\r\n        function getConfiguration(bundle) {\r\n            var configuration = bundle.getConfiguration();\r\n\r\n            // Adjust paths to point to libraries\r\n            if (configuration.paths) {\r\n                // Don't modify the actual bundle definition...\r\n                configuration = clone(configuration);\r\n                // ...replace values in a clone instead.\r\n                Object.keys(configuration.paths).forEach(function (path) {\r\n                    configuration.paths[path] =\r\n                        bundle.getLibraryPath(configuration.paths[path]);\r\n                });\r\n            }\r\n\r\n            return configuration;\r\n        }\r\n\r\n        // Build up paths and shim values from multiple bundles;\r\n        // this is sensitive to the value from baseConfiguration\r\n        // passed via reduce in buildConfiguration below, insofar\r\n        // as it assumes paths and shim will have initial empty values.\r\n        function mergeConfigurations(base, next) {\r\n            [\"paths\", \"shim\"].forEach(function (k) {\r\n                Object.keys(next[k] || {}).forEach(function (p) {\r\n                    base[k][p] = next[k][p];\r\n                });\r\n            });\r\n            return base;\r\n        }\r\n\r\n        // Build a configuration object, to pass to requirejs.config,\r\n        // based on the defined configurations for all bundles.\r\n        // The paths and shim properties from all bundles will be\r\n        // merged to allow one requirejs.config call.\r\n        function buildConfiguration(bundles) {\r\n            // Provide an initial requirejs configuration...\r\n            var baseConfiguration = {\r\n                    baseUrl: \"\",\r\n                    paths: {},\r\n                    shim: {}\r\n                },\r\n            // ...and pull out all bundle-specific parts\r\n                bundleConfigurations = bundles.map(getConfiguration);\r\n\r\n            // Reduce this into one configuration object.\r\n            return bundleConfigurations.reduce(\r\n                mergeConfigurations,\r\n                baseConfiguration\r\n            );\r\n        }\r\n\r\n        /**\r\n         * Configure RequireJS to utilize any path/shim definitions\r\n         * provided by these bundles.\r\n         *\r\n         * @param {Bundle[]} the bundles to include in this\r\n         *                   configuration\r\n         * @memberof platform/framework.RequireConfigurator#\r\n         */\r\n        RequireConfigurator.prototype.configure = function (bundles) {\r\n            return this.requirejs.config(buildConfiguration(bundles));\r\n        };\r\n\r\n        return RequireConfigurator;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ServiceCompositor. Created by vwoeltje on 11/5/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/register/ServiceCompositor',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles service compositing; that is, building up services\r\n         * from provider, aggregator, and decorator components.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function ServiceCompositor(app, $log) {\r\n            this.latest = {};\r\n            this.providerLists = {}; // Track latest services registered\r\n            this.app = app;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Register composite services with Angular. This will build\r\n         * up a dependency hierarchy between providers, aggregators,\r\n         * and/or decorators, such that a dependency upon the service\r\n         * type they expose shall be satisfied by their fully-wired\r\n         * whole.\r\n         *\r\n         * Note that this method assumes that a complete set of\r\n         * components shall be provided. Multiple calls to this\r\n         * method may not behave as expected.\r\n         *\r\n         * @param {Array} components extensions of category component\r\n         */\r\n        ServiceCompositor.prototype.registerCompositeServices = function (components) {\r\n            var latest = this.latest,\r\n                providerLists = this.providerLists,\r\n                app = this.app,\r\n                $log = this.$log;\r\n\r\n            // Log a warning; defaults to \"no service provided by\"\r\n            function warn(extension, category, message) {\r\n                var msg = message || \"No service provided by\";\r\n                $log.warn([\r\n                    msg,\r\n                    \" \",\r\n                    category,\r\n                    \" \",\r\n                    extension.key,\r\n                    \" from bundle \",\r\n                    (extension.bundle || { path: \"unknown bundle\" }).path,\r\n                    \"; skipping.\"\r\n                ].join(\"\"));\r\n            }\r\n\r\n            // Echo arguments; used to represent groups of non-built-in\r\n            // extensions as a single dependency.\r\n            function echoMany() {\r\n                return Array.prototype.slice.call(arguments);\r\n            }\r\n\r\n            // Echo arguments; used to represent groups of non-built-in\r\n            // extensions as a single dependency.\r\n            function echoSingle(value) {\r\n                return value;\r\n            }\r\n\r\n            // Generates utility functions to match types (one of\r\n            // provider, aggregator, or decorator) of component. Used\r\n            // to filter down to specific types, which are handled\r\n            // in order.\r\n            function hasType(type) {\r\n                return function (extension) {\r\n                    return extension.type === type;\r\n                };\r\n            }\r\n\r\n            // Make a unique name for a service component.\r\n            function makeName(category, service, index) {\r\n                return [\r\n                    service,\r\n                    \"[\",\r\n                    category,\r\n                    \"#\",\r\n                    index,\r\n                    \"]\"\r\n                ].join(\"\");\r\n            }\r\n\r\n            // Register a specific provider instance with Angular, and\r\n            // record its name for subsequent stages.\r\n            function registerProvider(provider, index) {\r\n                var service = provider.provides,\r\n                    dependencies = provider.depends || [],\r\n                    name = makeName(\"provider\", service, index);\r\n\r\n                if (!service) {\r\n                    return warn(provider, \"provider\");\r\n                }\r\n\r\n                providerLists[service] = providerLists[service] || [];\r\n                providerLists[service].push(name);\r\n\r\n                // This provider is the latest candidate for resolving\r\n                // the composite service.\r\n                latest[service] = name;\r\n\r\n                app.service(name, dependencies.concat([provider]));\r\n            }\r\n\r\n            // Register an array of providers as a single dependency;\r\n            // aggregators will then depend upon this to consume all\r\n            // aggregated providers as a single dependency.\r\n            function registerProviderSets() {\r\n                Object.keys(providerLists).forEach(function (service) {\r\n                    var name = makeName(\"provider\", service, \"*\"),\r\n                        list = providerLists[service];\r\n\r\n                    app.service(name, list.concat([echoMany]));\r\n                });\r\n            }\r\n\r\n            // Registers an aggregator via Angular, including both\r\n            // its declared dependencies and the additional, implicit\r\n            // dependency upon the array of all providers.\r\n            function registerAggregator(aggregator, index) {\r\n                var service = aggregator.provides,\r\n                    dependencies = aggregator.depends || [],\r\n                    providerSetName = makeName(\"provider\", service, \"*\"),\r\n                    name = makeName(\"aggregator\", service, index);\r\n\r\n                if (!service) {\r\n                    return warn(aggregator, \"aggregator\");\r\n                }\r\n\r\n                // Aggregators need other services to aggregate, otherwise they\r\n                // do nothing.\r\n                if (!latest[service]) {\r\n                    return warn(\r\n                        aggregator,\r\n                        \"aggregator\",\r\n                        \"No services to aggregate for\"\r\n                    );\r\n                }\r\n\r\n                dependencies = dependencies.concat([providerSetName]);\r\n                latest[service] = name;\r\n\r\n                app.service(name, dependencies.concat([aggregator]));\r\n            }\r\n\r\n            // Registers a decorator via Angular, including its implicit\r\n            // dependency on the latest service component which has come\r\n            // before it.\r\n            function registerDecorator(decorator, index) {\r\n                var service = decorator.provides,\r\n                    dependencies = decorator.depends || [],\r\n                    name = makeName(\"decorator\", service, index);\r\n\r\n                if (!service) {\r\n                    return warn(decorator, \"decorator\");\r\n                }\r\n\r\n                // Decorators need other services to decorate, otherwise they\r\n                // do nothing.\r\n                if (!latest[service]) {\r\n                    return warn(\r\n                        decorator,\r\n                        \"decorator\",\r\n                        \"No services to decorate for\"\r\n                    );\r\n                }\r\n\r\n                dependencies = dependencies.concat([latest[service]]);\r\n                latest[service] = name;\r\n\r\n                app.service(name, dependencies.concat([decorator]));\r\n            }\r\n\r\n            // Alias the latest services of various types back to the\r\n            // more general service declaration.\r\n            function registerLatest() {\r\n                Object.keys(latest).forEach(function (service) {\r\n                    app.service(service, [latest[service], echoSingle]);\r\n                });\r\n            }\r\n\r\n            // Register composite services in phases:\r\n            // * Register providers\r\n            // * Register aggregators (which use providers)\r\n            // * Register decorators (which use anything)\r\n            // Then, register the latest candidate as a plain service.\r\n            function registerComposites(providers, aggregators, decorators) {\r\n                providers.forEach(registerProvider);\r\n                registerProviderSets();\r\n                aggregators.forEach(registerAggregator);\r\n                decorators.forEach(registerDecorator);\r\n                registerLatest();\r\n            }\r\n\r\n            // Initial point of entry; split into three component types.\r\n            registerComposites(\r\n                components.filter(hasType(\"provider\")),\r\n                components.filter(hasType(\"aggregator\")),\r\n                components.filter(hasType(\"decorator\"))\r\n            );\r\n        };\r\n\r\n        return ServiceCompositor;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CustomRegistrars. Created by vwoeltje on 11/3/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/register/CustomRegistrars',['../Constants', './ServiceCompositor'],\r\n    function (Constants, ServiceCompositor) {\r\n        /*jshint validthis:true */\r\n\r\n        /**\r\n         * Handles registration of a few specific extension types that are\r\n         * understood natively by Angular. This includes services and\r\n         * directives.\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function CustomRegistrars(app, $log) {\r\n            this.app = app;\r\n            this.$log = $log;\r\n            this.registered = {}; // Track registered keys by extension\r\n        }\r\n\r\n        // Utility; bind a function to a \"this\" pointer\r\n        function bind(fn, thisArg) {\r\n            return function () {\r\n                return fn.apply(thisArg, arguments);\r\n            };\r\n        }\r\n\r\n        // Used to create custom registration functions which map to\r\n        // named methods on Angular modules, which follow the normal\r\n        // app.method(key, [ deps..., function ]) pattern.\r\n        function customRegistrar(angularFunction) {\r\n            return function (extension, index) {\r\n                var app = this.app,\r\n                    $log = this.$log,\r\n                    key = extension.key,\r\n                    dependencies = extension.depends || [],\r\n                    registered = this.registered[angularFunction] || {};\r\n\r\n                this.registered[angularFunction] = registered;\r\n\r\n                if (!key) {\r\n                    $log.warn([\r\n                        \"Cannot register \",\r\n                        angularFunction,\r\n                        \" \",\r\n                        index,\r\n                        \", no key specified. \",\r\n                        JSON.stringify(extension)\r\n                    ].join(\"\"));\r\n                } else if (registered[key]) {\r\n                    $log.debug([\r\n                        \"Already registered \",\r\n                        angularFunction,\r\n                        \" with key \",\r\n                        key,\r\n                        \"; skipping.\"\r\n                    ].join(\"\"));\r\n                } else {\r\n                    $log.info([\r\n                        \"Registering \",\r\n                        angularFunction,\r\n                        \": \",\r\n                        key\r\n                    ].join(\"\"));\r\n                    registered[key] = true;\r\n                    app[angularFunction](\r\n                        key,\r\n                        dependencies.concat([extension])\r\n                    );\r\n                }\r\n            };\r\n        }\r\n\r\n        function registerConstant(extension) {\r\n            var app = this.app,\r\n                $log = this.$log,\r\n                key = extension.key,\r\n                value = extension.value;\r\n\r\n            if (typeof key === \"string\" && value !== undefined) {\r\n                $log.info([\r\n                    \"Registering constant: \",\r\n                    key,\r\n                    \" with value \",\r\n                    value\r\n                ].join(\"\"));\r\n                app.constant(key, value);\r\n            } else {\r\n                $log.warn([\r\n                    \"Cannot register constant \",\r\n                    key,\r\n                    \" with value \",\r\n                    value\r\n                ].join(\"\"));\r\n            }\r\n\r\n        }\r\n\r\n        // Custom registration function for extensions of category \"runs\"\r\n        function registerRun(extension) {\r\n            var app = this.app,\r\n                $log = this.$log;\r\n\r\n            if (typeof extension === 'function') {\r\n                // Prepend dependencies, and schedule to run\r\n                app.run((extension.depends || []).concat([extension]));\r\n            } else {\r\n                // If it's not a function, no implementation was given\r\n                $log.warn([\r\n                    \"Cannot register run extension from \",\r\n                    (extension.bundle || {}).path,\r\n                    \"; no implementation.\"\r\n                ].join(\"\"));\r\n            }\r\n        }\r\n\r\n        // Custom registration function for extensions of category \"route\"\r\n        function registerRoute(extension) {\r\n            var app = this.app,\r\n                $log = this.$log,\r\n                route = Object.create(extension);\r\n\r\n            // Adjust path for bundle\r\n            if (route.templateUrl) {\r\n                route.templateUrl = [\r\n                    route.bundle.path,\r\n                    route.bundle.resources,\r\n                    route.templateUrl\r\n                ].join(Constants.SEPARATOR);\r\n            }\r\n\r\n            // Log the registration\r\n            $log.info(\"Registering route: \" + (route.key || route.when));\r\n\r\n            // Register the route with Angular\r\n            app.config(['$routeProvider', function ($routeProvider) {\r\n                if (route.when) {\r\n                    $routeProvider.when(route.when, route);\r\n                } else {\r\n                    $routeProvider.otherwise(route);\r\n                }\r\n            }]);\r\n        }\r\n\r\n        // Handle service compositing\r\n        function registerComponents(components) {\r\n            var app = this.app,\r\n                $log = this.$log;\r\n            return new ServiceCompositor(app, $log)\r\n                .registerCompositeServices(components);\r\n        }\r\n\r\n        // Utility; create a function which converts another function\r\n        // (which acts on single objects) to one which acts upon arrays.\r\n        function mapUpon(func) {\r\n            return function (array) {\r\n                return array.map(bind(func, this));\r\n            };\r\n        }\r\n\r\n        // More like key-value pairs than methods; key is the\r\n        // name of the extension category to be handled, and the value\r\n        // is the function which handles it.\r\n\r\n        /**\r\n         * Register constant values.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.constants =\r\n            mapUpon(registerConstant);\r\n\r\n        /**\r\n         * Register Angular routes.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.routes =\r\n            mapUpon(registerRoute);\r\n\r\n        /**\r\n         * Register Angular directives.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.directives =\r\n            mapUpon(customRegistrar(\"directive\"));\r\n\r\n        /**\r\n         * Register Angular controllers.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.controllers =\r\n            mapUpon(customRegistrar(\"controller\"));\r\n\r\n        /**\r\n         * Register Angular services.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.services =\r\n            mapUpon(customRegistrar(\"service\"));\r\n\r\n        /**\r\n         * Register Angular filters.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.filters =\r\n            mapUpon(customRegistrar(\"filter\"));\r\n\r\n        /**\r\n         * Register functions which will run after bootstrapping.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.runs =\r\n            mapUpon(registerRun);\r\n\r\n        /**\r\n         * Register components of composite services.\r\n         * @param {Array} extensions the resolved extensions\r\n         */\r\n        CustomRegistrars.prototype.components =\r\n            registerComponents;\r\n\r\n        return CustomRegistrars;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining PartialConstructor. Created by vwoeltje on 11/3/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/register/PartialConstructor',[],\r\n    function () {\r\n\r\n        /**\r\n         * A partial constructor is used to instantiate objects in two\r\n         * stages:\r\n         *\r\n         * * First, dependencies injected from Angular\r\n         * * Second, arguments passed at run-time\r\n         *\r\n         * This allows extensions to accept both their Angular-injected\r\n         * dependencies and their per-instance attributes all in one\r\n         * constructor invocation. User code for these extensions then\r\n         * does not see the Angular dependency arguments; they may\r\n         * instantiate instances of these extensions by passing only\r\n         * those per-instance arguments.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function PartialConstructor(Constructor) {\r\n\r\n            function OuterConstructor() { // Bind services\r\n                var dependencies = Array.prototype.slice.call(arguments);\r\n\r\n                function InnerConstructor() { // Bind everything else\r\n                    var other = Array.prototype.slice.call(arguments),\r\n                        instance = Object.create(Constructor.prototype);\r\n\r\n                    // Mimic \"new\" behavior with apply.\r\n                    instance = Constructor.apply(\r\n                        instance,\r\n                        dependencies.concat(other)\r\n                    ) || instance;\r\n\r\n                    return instance;\r\n                }\r\n\r\n                // Copy properties from original constructor\r\n                Object.keys(Constructor).forEach(function (k) {\r\n                    InnerConstructor[k] = Constructor[k];\r\n                });\r\n\r\n                return InnerConstructor;\r\n            }\r\n\r\n            return OuterConstructor;\r\n        }\r\n\r\n        return PartialConstructor;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ExtensionRegistrar. Created by vwoeltje on 11/3/14.\r\n */\r\ndefine(\r\n    'platform/framework/src/register/ExtensionRegistrar',['../Constants', './PartialConstructor'],\r\n    function (Constants, PartialConstructor) {\r\n\r\n        /**\r\n         * Responsible for registering extensions with Angular.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         * @param {angular.Module} the Angular application with which\r\n         *        extensions should be registered\r\n         * @param {Object.<string,function>} customRegistrars an object\r\n         *        containing custom registration functions, primarily for\r\n         *        Angular built-ins.\r\n         * @param {ExtensionSorter} sorter the sorter which will impose\r\n         *        priority ordering upon extensions\r\n         * @param {*} $log Angular's logging service\r\n         */\r\n        function ExtensionRegistrar(app, customRegistrars, sorter, $log) {\r\n            // Track which extension categories have already been registered.\r\n            // Exceptions will be thrown if the same extension category is\r\n            // registered twice.\r\n            this.registeredCategories = {};\r\n            this.customRegistrars = customRegistrars || {};\r\n            this.app = app;\r\n            this.sorter = sorter;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Register a group of resolved extensions with the Angular\r\n         * module managed by this registrar.\r\n         *\r\n         * For convenient chaining (particularly from the framework\r\n         * initializer's perspective), this returns the Angular\r\n         * module with which extensions were registered.\r\n         *\r\n         * @param {Object.<string, object[]>} extensionGroup an object\r\n         *        containing key-value pairs, where keys are extension\r\n         *        categories and values are arrays of resolved\r\n         *        extensions\r\n         * @returns {angular.Module} the application module with\r\n         *        which extensions were registered\r\n         */\r\n        ExtensionRegistrar.prototype.registerExtensions = function (extensionGroup) {\r\n            var registeredCategories = this.registeredCategories,\r\n                customRegistrars = this.customRegistrars,\r\n                app = this.app,\r\n                sorter = this.sorter,\r\n                $log = this.$log;\r\n\r\n            // Used to build unique identifiers for individual extensions,\r\n            // so that these can be registered separately with Angular\r\n            function identify(category, extension, index) {\r\n                var name = extension.key ?\r\n                    (\"extension-\" + extension.key + \"#\" + index) :\r\n                    (\"extension#\" + index);\r\n                return category + \"[\" + name + \"]\";\r\n            }\r\n\r\n            // Echo arguments; used to represent groups of non-built-in\r\n            // extensions as a single dependency.\r\n            function echo() {\r\n                return Array.prototype.slice.call(arguments);\r\n            }\r\n\r\n            // Always return a static value; used to represent plain\r\n            // metadata as a single dependency in Angular.\r\n            function staticFunction(value) {\r\n                return function () {\r\n                    return value;\r\n                };\r\n            }\r\n\r\n            // Utility function; create the second argument for Angular's\r\n            // .service service registration method (an array containing\r\n            // both dependencies and a factory method for the service.)\r\n            function makeServiceArgument(category, extension) {\r\n                var dependencies = extension.depends || [],\r\n                    factory = (typeof extension === 'function') ?\r\n                        new PartialConstructor(extension) :\r\n                        staticFunction(extension);\r\n\r\n                return dependencies.concat([factory]);\r\n            }\r\n\r\n            // Register extension arrays with Angular under an appropriately\r\n            // suffixed name, e.g. \"types[]\"\r\n            function registerExtensionArraysForCategory(category, names) {\r\n                var name = category + Constants.EXTENSION_SUFFIX;\r\n                app.factory(name, names.concat([echo]));\r\n            }\r\n\r\n            function registerExtensionsForCategory(category, extensions) {\r\n                var names = [];\r\n\r\n                function registerExtension(extension, index) {\r\n                    var name = identify(category, extension, index);\r\n\r\n                    // Track individual extension names as-registered\r\n                    names.push(name);\r\n\r\n                    app.factory(\r\n                        name,\r\n                        makeServiceArgument(category, extension)\r\n                    );\r\n                }\r\n\r\n                if (registeredCategories[category]) {\r\n                    $log.warn([\r\n                        \"Tried to register extensions for category \",\r\n                        category,\r\n                        \" more than once. Ignoring all but first set.\"\r\n                    ].join(\"\"));\r\n                } else {\r\n                    // Register all extensions. Use custom registration\r\n                    // code for services, directives, etc; otherwise,\r\n                    // just register them under generic names.\r\n                    if (customRegistrars[category]) {\r\n                        customRegistrars[category](extensions);\r\n                    } else {\r\n                        extensions.forEach(registerExtension);\r\n                        registerExtensionArraysForCategory(category, names);\r\n                    }\r\n                    registeredCategories[category] = true;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Check if a declared dependency looks like a dependency on\r\n            // an extension category (e.g. is suffixed by [])\r\n            function isExtensionDependency(dependency) {\r\n                var index = dependency.indexOf(\r\n                    Constants.EXTENSION_SUFFIX,\r\n                    dependency.length - Constants.EXTENSION_SUFFIX.length\r\n                );\r\n                return index !== -1;\r\n            }\r\n\r\n            // Examine a group of resolved dependencies to determine\r\n            // which extension categories still need to be satisfied.\r\n            function findEmptyExtensionDependencies(extGroup) {\r\n                var needed = {},\r\n                    categories = Object.keys(extGroup),\r\n                    allExtensions = [];\r\n\r\n                // Build up an array of all extensions\r\n                categories.forEach(function (category) {\r\n                    allExtensions =\r\n                        allExtensions.concat(extGroup[category]);\r\n                });\r\n\r\n                // Track all extension dependencies exposed therefrom\r\n                allExtensions.forEach(function (extension) {\r\n                    (extension.depends || []).filter(\r\n                        isExtensionDependency\r\n                    ).forEach(function (dependency) {\r\n                            needed[dependency] = true;\r\n                        });\r\n                });\r\n\r\n                // Remove categories which have been provided\r\n                categories.forEach(function (category) {\r\n                    var dependency = category + Constants.EXTENSION_SUFFIX;\r\n                    delete needed[dependency];\r\n                });\r\n\r\n                return Object.keys(needed);\r\n            }\r\n\r\n\r\n            // Register any extension categories that are depended-upon but\r\n            // have not been declared anywhere; such dependencies are then\r\n            // satisfied by an empty array, instead of not at all.\r\n            function registerEmptyDependencies(extGroup) {\r\n                findEmptyExtensionDependencies(extGroup)\r\n                    .forEach(function (name) {\r\n                        $log.info(\"Registering empty extension category \" + name);\r\n                        app.factory(name, [staticFunction([])]);\r\n                    });\r\n            }\r\n\r\n            // Announce we're entering a new phase\r\n            $log.info(\"Registering extensions...\");\r\n\r\n            // Register all declared extensions by category\r\n            Object.keys(extensionGroup).forEach(function (category) {\r\n                registerExtensionsForCategory(\r\n                    category,\r\n                    sorter.sort(extensionGroup[category])\r\n                );\r\n            });\r\n\r\n            // Also handle categories which are needed but not declared\r\n            registerEmptyDependencies(extensionGroup);\r\n\r\n            // Return the application to which these extensions\r\n            // have been registered\r\n            return app;\r\n        };\r\n\r\n        return ExtensionRegistrar;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/framework/src/register/ExtensionSorter',[\"../Constants\"],\r\n    function (Constants) {\r\n\r\n        /**\r\n         * Responsible for applying priority order to extensions in a\r\n         * given category. This will sort in reverse order of the numeric\r\n         * priority given for extensions in the `priority` priority (such\r\n         * that large values are registered first.) Extensions may also\r\n         * specify symbolic properties as strings (instead of numbers),\r\n         * which will be looked up from the table `Constants.PRIORITY_LEVELS`.\r\n         * @param $log Angular's logging service\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function ExtensionSorter($log) {\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Sort extensions according to priority.\r\n         *\r\n         * @param {object[]} extensions array of resolved extensions\r\n         * @returns {object[]} the same extensions, in priority order\r\n         */\r\n        ExtensionSorter.prototype.sort = function (extensions) {\r\n            var $log = this.$log;\r\n\r\n            // Handle unknown or malformed priorities specified by extensions\r\n            function unrecognizedPriority(extension) {\r\n                // Issue a warning\r\n                $log.warn([\r\n                    \"Unrecognized priority '\",\r\n                    (extension || {}).priority,\r\n                    \"' specified for extension from \",\r\n                    ((extension || {}).bundle || {}).path,\r\n                    \"; defaulting to \",\r\n                    Constants.DEFAULT_PRIORITY\r\n                ].join(''));\r\n\r\n                // Provide a return value (default priority) to make this\r\n                // useful in an expression.\r\n                return Constants.DEFAULT_PRIORITY;\r\n            }\r\n\r\n            function getPriority(extension) {\r\n                var priority =\r\n                    (extension || {}).priority || Constants.DEFAULT_PRIORITY;\r\n\r\n                // If it's a symbolic priority, look it up\r\n                if (typeof priority === 'string') {\r\n                    priority = Constants.PRIORITY_LEVELS[priority];\r\n                }\r\n\r\n                // Should be a number; otherwise, issue a warning and\r\n                // fall back to default priority level.\r\n                return (typeof priority === 'number') ?\r\n                    priority : unrecognizedPriority(extension);\r\n            }\r\n\r\n            // Attach a numeric priority to an extension; this is done in\r\n            // one pass outside of the comparator, mainly because getPriority\r\n            // may log warnings, and we only want this to happen once\r\n            // (instead of the many times that might occur during a sort.)\r\n            function prioritize(extension, index) {\r\n                return {\r\n                    // The extension itself, for later unwrapping\r\n                    extension: extension,\r\n                    // The index, to provide a stable sort (see compare)\r\n                    index: index,\r\n                    // The numeric priority of the extension\r\n                    priority: getPriority(extension)\r\n                };\r\n            }\r\n\r\n            // Unwrap the original extension\r\n            // (for use after ordering has been applied)\r\n            function deprioritize(prioritized) {\r\n                return prioritized.extension;\r\n            }\r\n\r\n            // Compare two prioritized extensions\r\n            function compare(a, b) {\r\n                // Reverse order by numeric priority; or, original order.\r\n                return (b.priority - a.priority) || (a.index - b.index);\r\n            }\r\n\r\n            return (extensions || [])\r\n                .map(prioritize)\r\n                .sort(compare)\r\n                .map(deprioritize);\r\n        };\r\n\r\n        return ExtensionSorter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining Bootstrapper. Created by vwoeltje on 11/4/14.\r\n *\r\n * The bootstrapper is responsible\r\n */\r\ndefine(\r\n    'platform/framework/src/bootstrap/ApplicationBootstrapper',[],\r\n    function () {\r\n\r\n        /**\r\n         * The application bootstrapper is responsible for issuing the\r\n         * bootstrap call to Angular. This would normally not be needed\r\n         * with an appropriately-placed ng-app directive, but the\r\n         * framework needs to wait until all extensions have been loaded\r\n         * and registered.\r\n         *\r\n         * @memberof platform/framework\r\n         * @constructor\r\n         */\r\n        function ApplicationBootstrapper(angular, document, $log) {\r\n            this.angular = angular;\r\n            this.document = document;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Bootstrap the application.\r\n         *\r\n         * @param {angular.Module} app the Angular application to\r\n         *        bootstrap\r\n         */\r\n        ApplicationBootstrapper.prototype.bootstrap = function (app) {\r\n            var angular = this.angular,\r\n                document = this.document,\r\n                $log = this.$log;\r\n            $log.info(\"Bootstrapping application \" + (app || {}).name);\r\n            angular.element(document).ready(function () {\r\n                angular.bootstrap(document, [app.name], { strictDi: true });\r\n            });\r\n        };\r\n\r\n        return ApplicationBootstrapper;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/*global window,requirejs*/\r\n\r\ndefine('platform/framework/src/FrameworkLayer',[\r\n    'require',\r\n    './Constants',\r\n    './FrameworkInitializer',\r\n    './LogLevel',\r\n    './load/BundleLoader',\r\n    './resolve/ImplementationLoader',\r\n    './resolve/ExtensionResolver',\r\n    './resolve/BundleResolver',\r\n    './resolve/RequireConfigurator',\r\n    './register/CustomRegistrars',\r\n    './register/ExtensionRegistrar',\r\n    './register/ExtensionSorter',\r\n    './bootstrap/ApplicationBootstrapper'\r\n], function (\r\n    require,\r\n    Constants,\r\n    FrameworkInitializer,\r\n    LogLevel,\r\n    BundleLoader,\r\n    ImplementationLoader,\r\n    ExtensionResolver,\r\n    BundleResolver,\r\n    RequireConfigurator,\r\n    CustomRegistrars,\r\n    ExtensionRegistrar,\r\n    ExtensionSorter,\r\n    ApplicationBootstrapper\r\n) {\r\n\r\n    function FrameworkLayer($http, $log) {\r\n        this.$http = $http;\r\n        this.$log = $log;\r\n    }\r\n\r\n    FrameworkLayer.prototype.initializeApplication = function (\r\n        angular,\r\n        legacyRegistry,\r\n        logLevel\r\n    ) {\r\n        var $http = this.$http,\r\n            $log = this.$log,\r\n            app = angular.module(Constants.MODULE_NAME, [\"ngRoute\"]),\r\n            loader = new BundleLoader($http, $log, legacyRegistry),\r\n            resolver = new BundleResolver(\r\n                new ExtensionResolver(\r\n                    new ImplementationLoader(require),\r\n                    $log\r\n                ),\r\n                new RequireConfigurator(requirejs),\r\n                $log\r\n            ),\r\n            registrar = new ExtensionRegistrar(\r\n                app,\r\n                new CustomRegistrars(app, $log),\r\n                new ExtensionSorter($log),\r\n                $log\r\n            ),\r\n            bootstrapper = new ApplicationBootstrapper(\r\n                angular,\r\n                window.document,\r\n                $log\r\n            ),\r\n            initializer = new FrameworkInitializer(\r\n                loader,\r\n                resolver,\r\n                registrar,\r\n                bootstrapper\r\n            );\r\n\r\n        // Apply logging levels; this must be done now, before the\r\n        // first log statement.\r\n        new LogLevel(logLevel).configure(app, $log);\r\n\r\n        // Initialize the application\r\n        $log.info(\"Initializing application.\");\r\n        initializer.runApplication(Constants.BUNDLE_LISTING_FILE);\r\n    };\r\n\r\n    return FrameworkLayer;\r\n});\r\n\n","(function(root) {\ndefine(\"angular\", [], function() {\n  return (function() {\n/*\r\n AngularJS v1.4.4\r\n (c) 2010-2015 Google, Inc. http://angularjs.org\r\n License: MIT\r\n*/\r\n(function(O,W,t){'use strict';function L(b){return function(){var a=arguments[0],c;c=\"[\"+(b?b+\":\":\"\")+a+\"] http://errors.angularjs.org/1.4.4/\"+(b?b+\"/\":\"\")+a;for(a=1;a<arguments.length;a++){c=c+(1==a?\"?\":\"&\")+\"p\"+(a-1)+\"=\";var d=encodeURIComponent,e;e=arguments[a];e=\"function\"==typeof e?e.toString().replace(/ \\{[\\s\\S]*$/,\"\"):\"undefined\"==typeof e?\"undefined\":\"string\"!=typeof e?JSON.stringify(e):e;c+=d(e)}return Error(c)}}function Da(b){if(null==b||Ya(b))return!1;var a=\"length\"in Object(b)&&b.length;\r\nreturn b.nodeType===pa&&a?!0:I(b)||G(b)||0===a||\"number\"===typeof a&&0<a&&a-1 in b}function m(b,a,c){var d,e;if(b)if(C(b))for(d in b)\"prototype\"==d||\"length\"==d||\"name\"==d||b.hasOwnProperty&&!b.hasOwnProperty(d)||a.call(c,b[d],d,b);else if(G(b)||Da(b)){var f=\"object\"!==typeof b;d=0;for(e=b.length;d<e;d++)(f||d in b)&&a.call(c,b[d],d,b)}else if(b.forEach&&b.forEach!==m)b.forEach(a,c,b);else if(lc(b))for(d in b)a.call(c,b[d],d,b);else if(\"function\"===typeof b.hasOwnProperty)for(d in b)b.hasOwnProperty(d)&&\r\na.call(c,b[d],d,b);else for(d in b)Na.call(b,d)&&a.call(c,b[d],d,b);return b}function mc(b,a,c){for(var d=Object.keys(b).sort(),e=0;e<d.length;e++)a.call(c,b[d[e]],d[e]);return d}function nc(b){return function(a,c){b(c,a)}}function Ud(){return++mb}function oc(b,a){a?b.$$hashKey=a:delete b.$$hashKey}function Mb(b,a,c){for(var d=b.$$hashKey,e=0,f=a.length;e<f;++e){var g=a[e];if(D(g)||C(g))for(var h=Object.keys(g),l=0,k=h.length;l<k;l++){var n=h[l],q=g[n];c&&D(q)?ca(q)?b[n]=new Date(q.valueOf()):Oa(q)?\r\nb[n]=new RegExp(q):(D(b[n])||(b[n]=G(q)?[]:{}),Mb(b[n],[q],!0)):b[n]=q}}oc(b,d);return b}function Q(b){return Mb(b,xa.call(arguments,1),!1)}function Vd(b){return Mb(b,xa.call(arguments,1),!0)}function Y(b){return parseInt(b,10)}function Nb(b,a){return Q(Object.create(b),a)}function v(){}function Za(b){return b}function qa(b){return function(){return b}}function pc(b){return C(b.toString)&&b.toString!==Object.prototype.toString}function y(b){return\"undefined\"===typeof b}function x(b){return\"undefined\"!==\r\ntypeof b}function D(b){return null!==b&&\"object\"===typeof b}function lc(b){return null!==b&&\"object\"===typeof b&&!qc(b)}function I(b){return\"string\"===typeof b}function X(b){return\"number\"===typeof b}function ca(b){return\"[object Date]\"===sa.call(b)}function C(b){return\"function\"===typeof b}function Oa(b){return\"[object RegExp]\"===sa.call(b)}function Ya(b){return b&&b.window===b}function $a(b){return b&&b.$evalAsync&&b.$watch}function ab(b){return\"boolean\"===typeof b}function rc(b){return!(!b||!(b.nodeName||\r\nb.prop&&b.attr&&b.find))}function Wd(b){var a={};b=b.split(\",\");var c;for(c=0;c<b.length;c++)a[b[c]]=!0;return a}function ta(b){return M(b.nodeName||b[0]&&b[0].nodeName)}function bb(b,a){var c=b.indexOf(a);0<=c&&b.splice(c,1);return c}function fa(b,a,c,d){if(Ya(b)||$a(b))throw Ea(\"cpws\");if(sc.test(sa.call(a)))throw Ea(\"cpta\");if(a){if(b===a)throw Ea(\"cpi\");c=c||[];d=d||[];D(b)&&(c.push(b),d.push(a));var e;if(G(b))for(e=a.length=0;e<b.length;e++)a.push(fa(b[e],null,c,d));else{var f=a.$$hashKey;G(a)?\r\na.length=0:m(a,function(b,c){delete a[c]});if(lc(b))for(e in b)a[e]=fa(b[e],null,c,d);else if(b&&\"function\"===typeof b.hasOwnProperty)for(e in b)b.hasOwnProperty(e)&&(a[e]=fa(b[e],null,c,d));else for(e in b)Na.call(b,e)&&(a[e]=fa(b[e],null,c,d));oc(a,f)}}else if(a=b,D(b)){if(c&&-1!==(f=c.indexOf(b)))return d[f];if(G(b))return fa(b,[],c,d);if(sc.test(sa.call(b)))a=new b.constructor(b);else if(ca(b))a=new Date(b.getTime());else if(Oa(b))a=new RegExp(b.source,b.toString().match(/[^\\/]*$/)[0]),a.lastIndex=\r\nb.lastIndex;else return e=Object.create(qc(b)),fa(b,e,c,d);d&&(c.push(b),d.push(a))}return a}function ia(b,a){if(G(b)){a=a||[];for(var c=0,d=b.length;c<d;c++)a[c]=b[c]}else if(D(b))for(c in a=a||{},b)if(\"$\"!==c.charAt(0)||\"$\"!==c.charAt(1))a[c]=b[c];return a||b}function ka(b,a){if(b===a)return!0;if(null===b||null===a)return!1;if(b!==b&&a!==a)return!0;var c=typeof b,d;if(c==typeof a&&\"object\"==c)if(G(b)){if(!G(a))return!1;if((c=b.length)==a.length){for(d=0;d<c;d++)if(!ka(b[d],a[d]))return!1;return!0}}else{if(ca(b))return ca(a)?\r\nka(b.getTime(),a.getTime()):!1;if(Oa(b))return Oa(a)?b.toString()==a.toString():!1;if($a(b)||$a(a)||Ya(b)||Ya(a)||G(a)||ca(a)||Oa(a))return!1;c=ga();for(d in b)if(\"$\"!==d.charAt(0)&&!C(b[d])){if(!ka(b[d],a[d]))return!1;c[d]=!0}for(d in a)if(!(d in c||\"$\"===d.charAt(0)||a[d]===t||C(a[d])))return!1;return!0}return!1}function cb(b,a,c){return b.concat(xa.call(a,c))}function tc(b,a){var c=2<arguments.length?xa.call(arguments,2):[];return!C(a)||a instanceof RegExp?a:c.length?function(){return arguments.length?\r\na.apply(b,cb(c,arguments,0)):a.apply(b,c)}:function(){return arguments.length?a.apply(b,arguments):a.call(b)}}function Xd(b,a){var c=a;\"string\"===typeof b&&\"$\"===b.charAt(0)&&\"$\"===b.charAt(1)?c=t:Ya(a)?c=\"$WINDOW\":a&&W===a?c=\"$DOCUMENT\":$a(a)&&(c=\"$SCOPE\");return c}function db(b,a){if(\"undefined\"===typeof b)return t;X(a)||(a=a?2:null);return JSON.stringify(b,Xd,a)}function uc(b){return I(b)?JSON.parse(b):b}function vc(b,a){var c=Date.parse(\"Jan 01, 1970 00:00:00 \"+b)/6E4;return isNaN(c)?a:c}function Ob(b,\r\na,c){c=c?-1:1;var d=vc(a,b.getTimezoneOffset());a=b;b=c*(d-b.getTimezoneOffset());a=new Date(a.getTime());a.setMinutes(a.getMinutes()+b);return a}function ua(b){b=z(b).clone();try{b.empty()}catch(a){}var c=z(\"<div>\").append(b).html();try{return b[0].nodeType===Pa?M(c):c.match(/^(<[^>]+>)/)[1].replace(/^<([\\w\\-]+)/,function(a,b){return\"<\"+M(b)})}catch(d){return M(c)}}function wc(b){try{return decodeURIComponent(b)}catch(a){}}function xc(b){var a={};m((b||\"\").split(\"&\"),function(b){var d,e,f;b&&(e=\r\nb=b.replace(/\\+/g,\"%20\"),d=b.indexOf(\"=\"),-1!==d&&(e=b.substring(0,d),f=b.substring(d+1)),e=wc(e),x(e)&&(f=x(f)?wc(f):!0,Na.call(a,e)?G(a[e])?a[e].push(f):a[e]=[a[e],f]:a[e]=f))});return a}function Pb(b){var a=[];m(b,function(b,d){G(b)?m(b,function(b){a.push(ma(d,!0)+(!0===b?\"\":\"=\"+ma(b,!0)))}):a.push(ma(d,!0)+(!0===b?\"\":\"=\"+ma(b,!0)))});return a.length?a.join(\"&\"):\"\"}function nb(b){return ma(b,!0).replace(/%26/gi,\"&\").replace(/%3D/gi,\"=\").replace(/%2B/gi,\"+\")}function ma(b,a){return encodeURIComponent(b).replace(/%40/gi,\r\n\"@\").replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%3B/gi,\";\").replace(/%20/g,a?\"%20\":\"+\")}function Yd(b,a){var c,d,e=Qa.length;for(d=0;d<e;++d)if(c=Qa[d]+a,I(c=b.getAttribute(c)))return c;return null}function Zd(b,a){var c,d,e={};m(Qa,function(a){a+=\"app\";!c&&b.hasAttribute&&b.hasAttribute(a)&&(c=b,d=b.getAttribute(a))});m(Qa,function(a){a+=\"app\";var e;!c&&(e=b.querySelector(\"[\"+a.replace(\":\",\"\\\\:\")+\"]\"))&&(c=e,d=e.getAttribute(a))});c&&(e.strictDi=null!==Yd(c,\"strict-di\"),\r\na(c,d?[d]:[],e))}function yc(b,a,c){D(c)||(c={});c=Q({strictDi:!1},c);var d=function(){b=z(b);if(b.injector()){var d=b[0]===W?\"document\":ua(b);throw Ea(\"btstrpd\",d.replace(/</,\"&lt;\").replace(/>/,\"&gt;\"));}a=a||[];a.unshift([\"$provide\",function(a){a.value(\"$rootElement\",b)}]);c.debugInfoEnabled&&a.push([\"$compileProvider\",function(a){a.debugInfoEnabled(!0)}]);a.unshift(\"ng\");d=eb(a,c.strictDi);d.invoke([\"$rootScope\",\"$rootElement\",\"$compile\",\"$injector\",function(a,b,c,d){a.$apply(function(){b.data(\"$injector\",\r\nd);c(b)(a)})}]);return d},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;O&&e.test(O.name)&&(c.debugInfoEnabled=!0,O.name=O.name.replace(e,\"\"));if(O&&!f.test(O.name))return d();O.name=O.name.replace(f,\"\");aa.resumeBootstrap=function(b){m(b,function(b){a.push(b)});return d()};C(aa.resumeDeferredBootstrap)&&aa.resumeDeferredBootstrap()}function $d(){O.name=\"NG_ENABLE_DEBUG_INFO!\"+O.name;O.location.reload()}function ae(b){b=aa.element(b).injector();if(!b)throw Ea(\"test\");return b.get(\"$$testability\")}\r\nfunction zc(b,a){a=a||\"_\";return b.replace(be,function(b,d){return(d?a:\"\")+b.toLowerCase()})}function ce(){var b;if(!Ac){var a=ob();la=O.jQuery;x(a)&&(la=null===a?t:O[a]);la&&la.fn.on?(z=la,Q(la.fn,{scope:Ra.scope,isolateScope:Ra.isolateScope,controller:Ra.controller,injector:Ra.injector,inheritedData:Ra.inheritedData}),b=la.cleanData,la.cleanData=function(a){var d;if(Qb)Qb=!1;else for(var e=0,f;null!=(f=a[e]);e++)(d=la._data(f,\"events\"))&&d.$destroy&&la(f).triggerHandler(\"$destroy\");b(a)}):z=R;aa.element=\r\nz;Ac=!0}}function pb(b,a,c){if(!b)throw Ea(\"areq\",a||\"?\",c||\"required\");return b}function Sa(b,a,c){c&&G(b)&&(b=b[b.length-1]);pb(C(b),a,\"not a function, got \"+(b&&\"object\"===typeof b?b.constructor.name||\"Object\":typeof b));return b}function Ta(b,a){if(\"hasOwnProperty\"===b)throw Ea(\"badname\",a);}function Bc(b,a,c){if(!a)return b;a=a.split(\".\");for(var d,e=b,f=a.length,g=0;g<f;g++)d=a[g],b&&(b=(e=b)[d]);return!c&&C(b)?tc(e,b):b}function qb(b){var a=b[0];b=b[b.length-1];var c=[a];do{a=a.nextSibling;\r\nif(!a)break;c.push(a)}while(a!==b);return z(c)}function ga(){return Object.create(null)}function de(b){function a(a,b,c){return a[b]||(a[b]=c())}var c=L(\"$injector\"),d=L(\"ng\");b=a(b,\"angular\",Object);b.$$minErr=b.$$minErr||L;return a(b,\"module\",function(){var b={};return function(f,g,h){if(\"hasOwnProperty\"===f)throw d(\"badname\",\"module\");g&&b.hasOwnProperty(f)&&(b[f]=null);return a(b,f,function(){function a(b,c,e,f){f||(f=d);return function(){f[e||\"push\"]([b,c,arguments]);return B}}function b(a,c){return function(b,\r\ne){e&&C(e)&&(e.$$moduleName=f);d.push([a,c,arguments]);return B}}if(!g)throw c(\"nomod\",f);var d=[],e=[],r=[],u=a(\"$injector\",\"invoke\",\"push\",e),B={_invokeQueue:d,_configBlocks:e,_runBlocks:r,requires:g,name:f,provider:b(\"$provide\",\"provider\"),factory:b(\"$provide\",\"factory\"),service:b(\"$provide\",\"service\"),value:a(\"$provide\",\"value\"),constant:a(\"$provide\",\"constant\",\"unshift\"),decorator:b(\"$provide\",\"decorator\"),animation:b(\"$animateProvider\",\"register\"),filter:b(\"$filterProvider\",\"register\"),controller:b(\"$controllerProvider\",\r\n\"register\"),directive:b(\"$compileProvider\",\"directive\"),config:u,run:function(a){r.push(a);return this}};h&&u(h);return B})}})}function ee(b){Q(b,{bootstrap:yc,copy:fa,extend:Q,merge:Vd,equals:ka,element:z,forEach:m,injector:eb,noop:v,bind:tc,toJson:db,fromJson:uc,identity:Za,isUndefined:y,isDefined:x,isString:I,isFunction:C,isObject:D,isNumber:X,isElement:rc,isArray:G,version:fe,isDate:ca,lowercase:M,uppercase:rb,callbacks:{counter:0},getTestability:ae,$$minErr:L,$$csp:Fa,reloadWithDebugInfo:$d});\r\nRb=de(O);Rb(\"ng\",[\"ngLocale\"],[\"$provide\",function(a){a.provider({$$sanitizeUri:ge});a.provider(\"$compile\",Cc).directive({a:he,input:Dc,textarea:Dc,form:ie,script:je,select:ke,style:le,option:me,ngBind:ne,ngBindHtml:oe,ngBindTemplate:pe,ngClass:qe,ngClassEven:re,ngClassOdd:se,ngCloak:te,ngController:ue,ngForm:ve,ngHide:we,ngIf:xe,ngInclude:ye,ngInit:ze,ngNonBindable:Ae,ngPluralize:Be,ngRepeat:Ce,ngShow:De,ngStyle:Ee,ngSwitch:Fe,ngSwitchWhen:Ge,ngSwitchDefault:He,ngOptions:Ie,ngTransclude:Je,ngModel:Ke,\r\nngList:Le,ngChange:Me,pattern:Ec,ngPattern:Ec,required:Fc,ngRequired:Fc,minlength:Gc,ngMinlength:Gc,maxlength:Hc,ngMaxlength:Hc,ngValue:Ne,ngModelOptions:Oe}).directive({ngInclude:Pe}).directive(sb).directive(Ic);a.provider({$anchorScroll:Qe,$animate:Re,$animateCss:Se,$$animateQueue:Te,$$AnimateRunner:Ue,$browser:Ve,$cacheFactory:We,$controller:Xe,$document:Ye,$exceptionHandler:Ze,$filter:Jc,$$forceReflow:$e,$interpolate:af,$interval:bf,$http:cf,$httpParamSerializer:df,$httpParamSerializerJQLike:ef,\r\n$httpBackend:ff,$location:gf,$log:hf,$parse:jf,$rootScope:kf,$q:lf,$$q:mf,$sce:nf,$sceDelegate:of,$sniffer:pf,$templateCache:qf,$templateRequest:rf,$$testability:sf,$timeout:tf,$window:uf,$$rAF:vf,$$jqLite:wf,$$HashMap:xf,$$cookieReader:yf})}])}function fb(b){return b.replace(zf,function(a,b,d,e){return e?d.toUpperCase():d}).replace(Af,\"Moz$1\")}function Kc(b){b=b.nodeType;return b===pa||!b||9===b}function Lc(b,a){var c,d,e=a.createDocumentFragment(),f=[];if(Sb.test(b)){c=c||e.appendChild(a.createElement(\"div\"));\r\nd=(Bf.exec(b)||[\"\",\"\"])[1].toLowerCase();d=na[d]||na._default;c.innerHTML=d[1]+b.replace(Cf,\"<$1></$2>\")+d[2];for(d=d[0];d--;)c=c.lastChild;f=cb(f,c.childNodes);c=e.firstChild;c.textContent=\"\"}else f.push(a.createTextNode(b));e.textContent=\"\";e.innerHTML=\"\";m(f,function(a){e.appendChild(a)});return e}function R(b){if(b instanceof R)return b;var a;I(b)&&(b=T(b),a=!0);if(!(this instanceof R)){if(a&&\"<\"!=b.charAt(0))throw Tb(\"nosel\");return new R(b)}if(a){a=W;var c;b=(c=Df.exec(b))?[a.createElement(c[1])]:\r\n(c=Lc(b,a))?c.childNodes:[]}Mc(this,b)}function Ub(b){return b.cloneNode(!0)}function tb(b,a){a||ub(b);if(b.querySelectorAll)for(var c=b.querySelectorAll(\"*\"),d=0,e=c.length;d<e;d++)ub(c[d])}function Nc(b,a,c,d){if(x(d))throw Tb(\"offargs\");var e=(d=vb(b))&&d.events,f=d&&d.handle;if(f)if(a)m(a.split(\" \"),function(a){if(x(c)){var d=e[a];bb(d||[],c);if(d&&0<d.length)return}b.removeEventListener(a,f,!1);delete e[a]});else for(a in e)\"$destroy\"!==a&&b.removeEventListener(a,f,!1),delete e[a]}function ub(b,\r\na){var c=b.ng339,d=c&&gb[c];d&&(a?delete d.data[a]:(d.handle&&(d.events.$destroy&&d.handle({},\"$destroy\"),Nc(b)),delete gb[c],b.ng339=t))}function vb(b,a){var c=b.ng339,c=c&&gb[c];a&&!c&&(b.ng339=c=++Ef,c=gb[c]={events:{},data:{},handle:t});return c}function Vb(b,a,c){if(Kc(b)){var d=x(c),e=!d&&a&&!D(a),f=!a;b=(b=vb(b,!e))&&b.data;if(d)b[a]=c;else{if(f)return b;if(e)return b&&b[a];Q(b,a)}}}function wb(b,a){return b.getAttribute?-1<(\" \"+(b.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").indexOf(\" \"+\r\na+\" \"):!1}function xb(b,a){a&&b.setAttribute&&m(a.split(\" \"),function(a){b.setAttribute(\"class\",T((\" \"+(b.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").replace(\" \"+T(a)+\" \",\" \")))})}function yb(b,a){if(a&&b.setAttribute){var c=(\" \"+(b.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \");m(a.split(\" \"),function(a){a=T(a);-1===c.indexOf(\" \"+a+\" \")&&(c+=a+\" \")});b.setAttribute(\"class\",T(c))}}function Mc(b,a){if(a)if(a.nodeType)b[b.length++]=a;else{var c=a.length;if(\"number\"===typeof c&&a.window!==\r\na){if(c)for(var d=0;d<c;d++)b[b.length++]=a[d]}else b[b.length++]=a}}function Oc(b,a){return zb(b,\"$\"+(a||\"ngController\")+\"Controller\")}function zb(b,a,c){9==b.nodeType&&(b=b.documentElement);for(a=G(a)?a:[a];b;){for(var d=0,e=a.length;d<e;d++)if((c=z.data(b,a[d]))!==t)return c;b=b.parentNode||11===b.nodeType&&b.host}}function Pc(b){for(tb(b,!0);b.firstChild;)b.removeChild(b.firstChild)}function Wb(b,a){a||tb(b);var c=b.parentNode;c&&c.removeChild(b)}function Ff(b,a){a=a||O;if(\"complete\"===a.document.readyState)a.setTimeout(b);\r\nelse z(a).on(\"load\",b)}function Qc(b,a){var c=Ab[a.toLowerCase()];return c&&Rc[ta(b)]&&c}function Gf(b,a){var c=b.nodeName;return(\"INPUT\"===c||\"TEXTAREA\"===c)&&Sc[a]}function Hf(b,a){var c=function(c,e){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=a[e||c.type],g=f?f.length:0;if(g){if(y(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();h&&h.call(c)}}c.isImmediatePropagationStopped=\r\nfunction(){return!0===c.immediatePropagationStopped};1<g&&(f=ia(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||f[l].call(b,c)}};c.elem=b;return c}function wf(){this.$get=function(){return Q(R,{hasClass:function(b,a){b.attr&&(b=b[0]);return wb(b,a)},addClass:function(b,a){b.attr&&(b=b[0]);return yb(b,a)},removeClass:function(b,a){b.attr&&(b=b[0]);return xb(b,a)}})}}function Ga(b,a){var c=b&&b.$$hashKey;if(c)return\"function\"===typeof c&&(c=b.$$hashKey()),c;c=typeof b;return c=\"function\"==\r\nc||\"object\"==c&&null!==b?b.$$hashKey=c+\":\"+(a||Ud)():c+\":\"+b}function Ua(b,a){if(a){var c=0;this.nextUid=function(){return++c}}m(b,this.put,this)}function If(b){return(b=b.toString().replace(Tc,\"\").match(Uc))?\"function(\"+(b[1]||\"\").replace(/[\\s\\r\\n]+/,\" \")+\")\":\"fn\"}function eb(b,a){function c(a){return function(b,c){if(D(b))m(b,nc(a));else return a(b,c)}}function d(a,b){Ta(a,\"service\");if(C(b)||G(b))b=r.instantiate(b);if(!b.$get)throw Ha(\"pget\",a);return q[a+\"Provider\"]=b}function e(a,b){return function(){var c=\r\nB.invoke(b,this);if(y(c))throw Ha(\"undef\",a);return c}}function f(a,b,c){return d(a,{$get:!1!==c?e(a,b):b})}function g(a){pb(y(a)||G(a),\"modulesToLoad\",\"not an array\");var b=[],c;m(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=r.get(e[0]);f[e[1]].apply(f,e[2])}}if(!n.get(a)){n.put(a,!0);try{I(a)?(c=Rb(a),b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):C(a)?b.push(r.invoke(a)):G(a)?b.push(r.invoke(a)):Sa(a,\"module\")}catch(e){throw G(a)&&\r\n(a=a[a.length-1]),e.message&&e.stack&&-1==e.stack.indexOf(e.message)&&(e=e.message+\"\\n\"+e.stack),Ha(\"modulerr\",a,e.stack||e.message||e);}}});return b}function h(b,c){function d(a,e){if(b.hasOwnProperty(a)){if(b[a]===l)throw Ha(\"cdep\",a+\" <- \"+k.join(\" <- \"));return b[a]}try{return k.unshift(a),b[a]=l,b[a]=c(a,e)}catch(f){throw b[a]===l&&delete b[a],f;}finally{k.shift()}}function e(b,c,f,g){\"string\"===typeof f&&(g=f,f=null);var h=[],k=eb.$$annotate(b,a,g),l,r,n;r=0;for(l=k.length;r<l;r++){n=k[r];if(\"string\"!==\r\ntypeof n)throw Ha(\"itkn\",n);h.push(f&&f.hasOwnProperty(n)?f[n]:d(n,g))}G(b)&&(b=b[l]);return b.apply(c,h)}return{invoke:e,instantiate:function(a,b,c){var d=Object.create((G(a)?a[a.length-1]:a).prototype||null);a=e(a,d,b,c);return D(a)||C(a)?a:d},get:d,annotate:eb.$$annotate,has:function(a){return q.hasOwnProperty(a+\"Provider\")||b.hasOwnProperty(a)}}}a=!0===a;var l={},k=[],n=new Ua([],!0),q={$provide:{provider:c(d),factory:c(f),service:c(function(a,b){return f(a,[\"$injector\",function(a){return a.instantiate(b)}])}),\r\nvalue:c(function(a,b){return f(a,qa(b),!1)}),constant:c(function(a,b){Ta(a,\"constant\");q[a]=b;u[a]=b}),decorator:function(a,b){var c=r.get(a+\"Provider\"),d=c.$get;c.$get=function(){var a=B.invoke(d,c);return B.invoke(b,null,{$delegate:a})}}}},r=q.$injector=h(q,function(a,b){aa.isString(b)&&k.push(b);throw Ha(\"unpr\",k.join(\" <- \"));}),u={},B=u.$injector=h(u,function(a,b){var c=r.get(a+\"Provider\",b);return B.invoke(c.$get,c,t,a)});m(g(b),function(a){a&&B.invoke(a)});return B}function Qe(){var b=!0;this.disableAutoScrolling=\r\nfunction(){b=!1};this.$get=[\"$window\",\"$location\",\"$rootScope\",function(a,c,d){function e(a){var b=null;Array.prototype.some.call(a,function(a){if(\"a\"===ta(a))return b=a,!0});return b}function f(b){if(b){b.scrollIntoView();var c;c=g.yOffset;C(c)?c=c():rc(c)?(c=c[0],c=\"fixed\"!==a.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):X(c)||(c=0);c&&(b=b.getBoundingClientRect().top,a.scrollBy(0,b-c))}else a.scrollTo(0,0)}function g(a){a=I(a)?a:c.hash();var b;a?(b=h.getElementById(a))?f(b):\r\n(b=e(h.getElementsByName(a)))?f(b):\"top\"===a&&f(null):f(null)}var h=a.document;b&&d.$watch(function(){return c.hash()},function(a,b){a===b&&\"\"===a||Ff(function(){d.$evalAsync(g)})});return g}]}function hb(b,a){if(!b&&!a)return\"\";if(!b)return a;if(!a)return b;G(b)&&(b=b.join(\" \"));G(a)&&(a=a.join(\" \"));return b+\" \"+a}function Jf(b){I(b)&&(b=b.split(\" \"));var a=ga();m(b,function(b){b.length&&(a[b]=!0)});return a}function Ia(b){return D(b)?b:{}}function Kf(b,a,c,d){function e(a){try{a.apply(null,xa.call(arguments,\r\n1))}finally{if(B--,0===B)for(;K.length;)try{K.pop()()}catch(b){c.error(b)}}}function f(){g();h()}function g(){a:{try{w=n.state;break a}catch(a){}w=void 0}w=y(w)?null:w;ka(w,F)&&(w=F);F=w}function h(){if(A!==l.url()||p!==w)A=l.url(),p=w,m(N,function(a){a(l.url(),w)})}var l=this,k=b.location,n=b.history,q=b.setTimeout,r=b.clearTimeout,u={};l.isMock=!1;var B=0,K=[];l.$$completeOutstandingRequest=e;l.$$incOutstandingRequestCount=function(){B++};l.notifyWhenNoOutstandingRequests=function(a){0===B?a():\r\nK.push(a)};var w,p,A=k.href,s=a.find(\"base\"),H=null;g();p=w;l.url=function(a,c,e){y(e)&&(e=null);k!==b.location&&(k=b.location);n!==b.history&&(n=b.history);if(a){var f=p===e;if(A===a&&(!d.history||f))return l;var h=A&&Ja(A)===Ja(a);A=a;p=e;if(!d.history||h&&f){if(!h||H)H=a;c?k.replace(a):h?(c=k,e=a.indexOf(\"#\"),a=-1===e?\"\":a.substr(e),c.hash=a):k.href=a}else n[c?\"replaceState\":\"pushState\"](e,\"\",a),g(),p=w;return l}return H||k.href.replace(/%27/g,\"'\")};l.state=function(){return w};var N=[],J=!1,F=\r\nnull;l.onUrlChange=function(a){if(!J){if(d.history)z(b).on(\"popstate\",f);z(b).on(\"hashchange\",f);J=!0}N.push(a);return a};l.$$applicationDestroyed=function(){z(b).off(\"hashchange popstate\",f)};l.$$checkUrlChange=h;l.baseHref=function(){var a=s.attr(\"href\");return a?a.replace(/^(https?\\:)?\\/\\/[^\\/]*/,\"\"):\"\"};l.defer=function(a,b){var c;B++;c=q(function(){delete u[c];e(a)},b||0);u[c]=!0;return c};l.defer.cancel=function(a){return u[a]?(delete u[a],r(a),e(v),!0):!1}}function Ve(){this.$get=[\"$window\",\r\n\"$log\",\"$sniffer\",\"$document\",function(b,a,c,d){return new Kf(b,d,a,c)}]}function We(){this.$get=function(){function b(b,d){function e(a){a!=q&&(r?r==a&&(r=a.n):r=a,f(a.n,a.p),f(a,q),q=a,q.n=null)}function f(a,b){a!=b&&(a&&(a.p=b),b&&(b.n=a))}if(b in a)throw L(\"$cacheFactory\")(\"iid\",b);var g=0,h=Q({},d,{id:b}),l={},k=d&&d.capacity||Number.MAX_VALUE,n={},q=null,r=null;return a[b]={put:function(a,b){if(!y(b)){if(k<Number.MAX_VALUE){var c=n[a]||(n[a]={key:a});e(c)}a in l||g++;l[a]=b;g>k&&this.remove(r.key);\r\nreturn b}},get:function(a){if(k<Number.MAX_VALUE){var b=n[a];if(!b)return;e(b)}return l[a]},remove:function(a){if(k<Number.MAX_VALUE){var b=n[a];if(!b)return;b==q&&(q=b.p);b==r&&(r=b.n);f(b.n,b.p);delete n[a]}delete l[a];g--},removeAll:function(){l={};g=0;n={};q=r=null},destroy:function(){n=h=l=null;delete a[b]},info:function(){return Q({},h,{size:g})}}}var a={};b.info=function(){var b={};m(a,function(a,e){b[e]=a.info()});return b};b.get=function(b){return a[b]};return b}}function qf(){this.$get=\r\n[\"$cacheFactory\",function(b){return b(\"templates\")}]}function Cc(b,a){function c(a,b,c){var d=/^\\s*([@&]|=(\\*?))(\\??)\\s*(\\w*)\\s*$/,e={};m(a,function(a,f){var g=a.match(d);if(!g)throw ea(\"iscp\",b,f,a,c?\"controller bindings definition\":\"isolate scope definition\");e[f]={mode:g[1][0],collection:\"*\"===g[2],optional:\"?\"===g[3],attrName:g[4]||f}});return e}function d(a){var b=a.charAt(0);if(!b||b!==M(b))throw ea(\"baddir\",a);if(a!==a.trim())throw ea(\"baddir\",a);}var e={},f=/^\\s*directive\\:\\s*([\\w\\-]+)\\s+(.*)$/,\r\ng=/(([\\w\\-]+)(?:\\:([^;]+))?;?)/,h=Wd(\"ngSrc,ngSrcset,src,srcset\"),l=/^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/,k=/^(on[a-z]+|formaction)$/;this.directive=function r(a,f){Ta(a,\"directive\");I(a)?(d(a),pb(f,\"directiveFactory\"),e.hasOwnProperty(a)||(e[a]=[],b.factory(a+\"Directive\",[\"$injector\",\"$exceptionHandler\",function(b,d){var f=[];m(e[a],function(e,g){try{var h=b.invoke(e);C(h)?h={compile:qa(h)}:!h.compile&&h.link&&(h.compile=qa(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||a;h.require=h.require||\r\nh.controller&&h.name;h.restrict=h.restrict||\"EA\";var k=h,l=h,r=h.name,n={isolateScope:null,bindToController:null};D(l.scope)&&(!0===l.bindToController?(n.bindToController=c(l.scope,r,!0),n.isolateScope={}):n.isolateScope=c(l.scope,r,!1));D(l.bindToController)&&(n.bindToController=c(l.bindToController,r,!0));if(D(n.bindToController)){var S=l.controller,B=l.controllerAs;if(!S)throw ea(\"noctrl\",r);var ha;a:if(B&&I(B))ha=B;else{if(I(S)){var m=Vc.exec(S);if(m){ha=m[3];break a}}ha=void 0}if(!ha)throw ea(\"noident\",\r\nr);}var s=k.$$bindings=n;D(s.isolateScope)&&(h.$$isolateBindings=s.isolateScope);h.$$moduleName=e.$$moduleName;f.push(h)}catch(t){d(t)}});return f}])),e[a].push(f)):m(a,nc(r));return this};this.aHrefSanitizationWhitelist=function(b){return x(b)?(a.aHrefSanitizationWhitelist(b),this):a.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=function(b){return x(b)?(a.imgSrcSanitizationWhitelist(b),this):a.imgSrcSanitizationWhitelist()};var n=!0;this.debugInfoEnabled=function(a){return x(a)?\r\n(n=a,this):n};this.$get=[\"$injector\",\"$interpolate\",\"$exceptionHandler\",\"$templateRequest\",\"$parse\",\"$controller\",\"$rootScope\",\"$document\",\"$sce\",\"$animate\",\"$$sanitizeUri\",function(a,b,c,d,w,p,A,s,H,N,J){function F(a,b){try{a.addClass(b)}catch(c){}}function V(a,b,c,d,e){a instanceof z||(a=z(a));m(a,function(b,c){b.nodeType==Pa&&b.nodeValue.match(/\\S+/)&&(a[c]=z(b).wrap(\"<span></span>\").parent()[0])});var f=S(a,b,a,c,d,e);V.$$addScopeClass(a);var g=null;return function(b,c,d){pb(b,\"scope\");d=d||{};\r\nvar e=d.parentBoundTranscludeFn,h=d.transcludeControllers;d=d.futureParentElement;e&&e.$$boundTransclude&&(e=e.$$boundTransclude);g||(g=(d=d&&d[0])?\"foreignobject\"!==ta(d)&&d.toString().match(/SVG/)?\"svg\":\"html\":\"html\");d=\"html\"!==g?z(Xb(g,z(\"<div>\").append(a).html())):c?Ra.clone.call(a):a;if(h)for(var l in h)d.data(\"$\"+l+\"Controller\",h[l].instance);V.$$addScopeInfo(d,b);c&&c(d,b);f&&f(b,d,d,e);return d}}function S(a,b,c,d,e,f){function g(a,c,d,e){var f,l,k,r,n,u,N;if(p)for(N=Array(c.length),r=0;r<\r\nh.length;r+=3)f=h[r],N[f]=c[f];else N=c;r=0;for(n=h.length;r<n;)if(l=N[h[r++]],c=h[r++],f=h[r++],c){if(c.scope){if(k=a.$new(),V.$$addScopeInfo(z(l),k),u=c.$$destroyBindings)c.$$destroyBindings=null,k.$on(\"$destroyed\",u)}else k=a;u=c.transcludeOnThisElement?P(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?P(a,b):null;c(f,k,l,d,u,c)}else f&&f(a,l.childNodes,t,e)}for(var h=[],l,k,r,n,p,u=0;u<a.length;u++){l=new aa;k=ha(a[u],[],l,0===u?d:t,e);(f=k.length?E(k,a[u],l,b,c,null,[],[],f):null)&&f.scope&&\r\nV.$$addScopeClass(l.$$element);l=f&&f.terminal||!(r=a[u].childNodes)||!r.length?null:S(r,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||l)h.push(u,f,l),n=!0,p=p||f;f=null}return n?g:null}function P(a,b,c){return function(d,e,f,g,h){d||(d=a.$new(!1,h),d.$$transcluded=!0);return b(d,e,{parentBoundTranscludeFn:c,transcludeControllers:f,futureParentElement:g})}}function ha(a,b,c,d,e){var h=c.$attr,l;switch(a.nodeType){case pa:x(b,va(ta(a)),\"E\",d,e);for(var k,r,n,p=a.attributes,\r\nu=0,N=p&&p.length;u<N;u++){var K=!1,J=!1;k=p[u];l=k.name;r=T(k.value);k=va(l);if(n=ia.test(k))l=l.replace(Xc,\"\").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()});var S=k.replace(/(Start|End)$/,\"\");L(S)&&k===S+\"Start\"&&(K=l,J=l.substr(0,l.length-5)+\"end\",l=l.substr(0,l.length-6));k=va(l.toLowerCase());h[k]=l;if(n||!c.hasOwnProperty(k))c[k]=r,Qc(a,k)&&(c[k]=!0);X(a,b,r,k,n);x(b,k,\"A\",d,e,K,J)}a=a.className;D(a)&&(a=a.animVal);if(I(a)&&\"\"!==a)for(;l=g.exec(a);)k=va(l[2]),x(b,k,\"C\",d,\r\ne)&&(c[k]=T(l[3])),a=a.substr(l.index+l[0].length);break;case Pa:if(11===Va)for(;a.parentNode&&a.nextSibling&&a.nextSibling.nodeType===Pa;)a.nodeValue+=a.nextSibling.nodeValue,a.parentNode.removeChild(a.nextSibling);wa(b,a.nodeValue);break;case 8:try{if(l=f.exec(a.nodeValue))k=va(l[1]),x(b,k,\"M\",d,e)&&(c[k]=T(l[2]))}catch(B){}}b.sort(za);return b}function ya(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw ea(\"uterdir\",b,c);a.nodeType==pa&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&\r\ne--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return z(d)}function Wc(a,b,c){return function(d,e,f,g,h){e=ya(e[0],b,c);return a(d,e,f,g,h)}}function E(a,b,d,e,f,g,h,k,r){function n(a,b,c,d){if(a){c&&(a=Wc(a,c,d));a.require=E.require;a.directiveName=x;if(P===E||E.$$isolateScope)a=Z(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=Wc(b,c,d));b.require=E.require;b.directiveName=x;if(P===E||E.$$isolateScope)b=Z(b,{isolateScope:!0});k.push(b)}}function u(a,b,c,d){var e;if(I(b)){var f=b.match(l);b=\r\nb.substring(f[0].length);var g=f[1]||f[3],f=\"?\"===f[2];\"^^\"===g?c=c.parent():e=(e=d&&d[b])&&e.instance;e||(d=\"$\"+b+\"Controller\",e=g?c.inheritedData(d):c.data(d));if(!e&&!f)throw ea(\"ctreq\",b,a);}else if(G(b))for(e=[],g=0,f=b.length;g<f;g++)e[g]=u(a,b[g],c,d);return e||null}function N(a,b,c,d,e,f){var g=ga(),h;for(h in d){var l=d[h],k={$scope:l===P||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},r=l.controller;\"@\"==r&&(r=b[l.name]);k=p(r,k,!0,l.controllerAs);g[l.name]=k;s||a.data(\"$\"+l.name+\r\n\"Controller\",k.instance)}return g}function K(a,c,e,f,g,l){function r(a,b,c){var d;$a(a)||(c=b,b=a,a=t);s&&(d=A);c||(c=s?ja.parent():ja);return g(a,b,d,c,ya)}var n,p,J,B,A,ha,ja;b===e?(f=d,ja=d.$$element):(ja=z(e),f=new aa(ja,d));P&&(B=c.$new(!0));g&&(ha=r,ha.$$boundTransclude=g);w&&(A=N(ja,f,ha,w,B,c));P&&(V.$$addScopeInfo(ja,B,!0,!(F&&(F===P||F===P.$$originalDirective))),V.$$addScopeClass(ja,!0),B.$$isolateBindings=P.$$isolateBindings,Y(c,f,B,B.$$isolateBindings,P,B));if(A){var m=P||S,H;m&&A[m.name]&&\r\n(p=m.$$bindings.bindToController,(J=A[m.name])&&J.identifier&&p&&(H=J,l.$$destroyBindings=Y(c,f,J.instance,p,m)));for(n in A){J=A[n];var E=J();E!==J.instance&&(J.instance=E,ja.data(\"$\"+n+\"Controller\",E),J===H&&(l.$$destroyBindings(),l.$$destroyBindings=Y(c,f,E,p,m)))}}n=0;for(l=h.length;n<l;n++)p=h[n],$(p,p.isolateScope?B:c,ja,f,p.require&&u(p.directiveName,p.require,ja,A),ha);var ya=c;P&&(P.template||null===P.templateUrl)&&(ya=B);a&&a(ya,e.childNodes,t,g);for(n=k.length-1;0<=n;n--)p=k[n],$(p,p.isolateScope?\r\nB:c,ja,f,p.require&&u(p.directiveName,p.require,ja,A),ha)}r=r||{};for(var J=-Number.MAX_VALUE,S=r.newScopeDirective,w=r.controllerDirectives,P=r.newIsolateScopeDirective,F=r.templateDirective,A=r.nonTlbTranscludeDirective,m=!1,H=!1,s=r.hasElementTranscludeDirective,ba=d.$$element=z(b),E,x,v,y=e,za,wa=0,L=a.length;wa<L;wa++){E=a[wa];var Bb=E.$$start,M=E.$$end;Bb&&(ba=ya(b,Bb,M));v=t;if(J>E.priority)break;if(v=E.scope)E.templateUrl||(D(v)?(O(\"new/isolated scope\",P||S,E,ba),P=E):O(\"new/isolated scope\",\r\nP,E,ba)),S=S||E;x=E.name;!E.templateUrl&&E.controller&&(v=E.controller,w=w||ga(),O(\"'\"+x+\"' controller\",w[x],E,ba),w[x]=E);if(v=E.transclude)m=!0,E.$$tlb||(O(\"transclusion\",A,E,ba),A=E),\"element\"==v?(s=!0,J=E.priority,v=ba,ba=d.$$element=z(W.createComment(\" \"+x+\": \"+d[x]+\" \")),b=ba[0],U(f,xa.call(v,0),b),y=V(v,e,J,g&&g.name,{nonTlbTranscludeDirective:A})):(v=z(Ub(b)).contents(),ba.empty(),y=V(v,e));if(E.template)if(H=!0,O(\"template\",F,E,ba),F=E,v=C(E.template)?E.template(ba,d):E.template,v=fa(v),\r\nE.replace){g=E;v=Sb.test(v)?Yc(Xb(E.templateNamespace,T(v))):[];b=v[0];if(1!=v.length||b.nodeType!==pa)throw ea(\"tplrt\",x,\"\");U(f,ba,b);L={$attr:{}};v=ha(b,[],L);var Q=a.splice(wa+1,a.length-(wa+1));P&&Zc(v);a=a.concat(v).concat(Q);$c(d,L);L=a.length}else ba.html(v);if(E.templateUrl)H=!0,O(\"template\",F,E,ba),F=E,E.replace&&(g=E),K=Lf(a.splice(wa,a.length-wa),ba,d,f,m&&y,h,k,{controllerDirectives:w,newScopeDirective:S!==E&&S,newIsolateScopeDirective:P,templateDirective:F,nonTlbTranscludeDirective:A}),\r\nL=a.length;else if(E.compile)try{za=E.compile(ba,d,y),C(za)?n(null,za,Bb,M):za&&n(za.pre,za.post,Bb,M)}catch(R){c(R,ua(ba))}E.terminal&&(K.terminal=!0,J=Math.max(J,E.priority))}K.scope=S&&!0===S.scope;K.transcludeOnThisElement=m;K.templateOnThisElement=H;K.transclude=y;r.hasElementTranscludeDirective=s;return K}function Zc(a){for(var b=0,c=a.length;b<c;b++)a[b]=Nb(a[b],{$$isolateScope:!0})}function x(b,d,f,g,h,l,k){if(d===h)return null;h=null;if(e.hasOwnProperty(d)){var n;d=a.get(d+\"Directive\");for(var p=\r\n0,u=d.length;p<u;p++)try{n=d[p],(g===t||g>n.priority)&&-1!=n.restrict.indexOf(f)&&(l&&(n=Nb(n,{$$start:l,$$end:k})),b.push(n),h=n)}catch(J){c(J)}}return h}function L(b){if(e.hasOwnProperty(b))for(var c=a.get(b+\"Directive\"),d=0,f=c.length;d<f;d++)if(b=c[d],b.multiElement)return!0;return!1}function $c(a,b){var c=b.$attr,d=a.$attr,e=a.$$element;m(a,function(d,e){\"$\"!=e.charAt(0)&&(b[e]&&b[e]!==d&&(d+=(\"style\"===e?\";\":\" \")+b[e]),a.$set(e,d,!0,c[e]))});m(b,function(b,f){\"class\"==f?(F(e,b),a[\"class\"]=(a[\"class\"]?\r\na[\"class\"]+\" \":\"\")+b):\"style\"==f?(e.attr(\"style\",e.attr(\"style\")+\";\"+b),a.style=(a.style?a.style+\";\":\"\")+b):\"$\"==f.charAt(0)||a.hasOwnProperty(f)||(a[f]=b,d[f]=c[f])})}function Lf(a,b,c,e,f,g,h,l){var k=[],r,n,p=b[0],u=a.shift(),J=Nb(u,{templateUrl:null,transclude:null,replace:null,$$originalDirective:u}),N=C(u.templateUrl)?u.templateUrl(b,c):u.templateUrl,B=u.templateNamespace;b.empty();d(N).then(function(d){var K,w;d=fa(d);if(u.replace){d=Sb.test(d)?Yc(Xb(B,T(d))):[];K=d[0];if(1!=d.length||K.nodeType!==\r\npa)throw ea(\"tplrt\",u.name,N);d={$attr:{}};U(e,b,K);var A=ha(K,[],d);D(u.scope)&&Zc(A);a=A.concat(a);$c(c,d)}else K=p,b.html(d);a.unshift(J);r=E(a,K,c,f,b,u,g,h,l);m(e,function(a,c){a==K&&(e[c]=b[0])});for(n=S(b[0].childNodes,f);k.length;){d=k.shift();w=k.shift();var H=k.shift(),V=k.shift(),A=b[0];if(!d.$$destroyed){if(w!==p){var ya=w.className;l.hasElementTranscludeDirective&&u.replace||(A=Ub(K));U(H,z(w),A);F(z(A),ya)}w=r.transcludeOnThisElement?P(d,r.transclude,V):V;r(n,d,A,e,w,r)}}k=null});return function(a,\r\nb,c,d,e){a=e;b.$$destroyed||(k?k.push(b,c,d,a):(r.transcludeOnThisElement&&(a=P(b,r.transclude,e)),r(n,b,c,d,a,r)))}}function za(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function O(a,b,c,d){function e(a){return a?\" (module: \"+a+\")\":\"\"}if(b)throw ea(\"multidir\",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,ua(d));}function wa(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&&V.$$addBindingClass(a);\r\nreturn function(a,c){var e=c.parent();b||V.$$addBindingClass(e);V.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function Xb(a,b){a=M(a||\"html\");switch(a){case \"svg\":case \"math\":var c=W.createElement(\"div\");c.innerHTML=\"<\"+a+\">\"+b+\"</\"+a+\">\";return c.childNodes[0].childNodes;default:return b}}function R(a,b){if(\"srcdoc\"==b)return H.HTML;var c=ta(a);if(\"xlinkHref\"==b||\"form\"==c&&\"action\"==b||\"img\"!=c&&(\"src\"==b||\"ngSrc\"==b))return H.RESOURCE_URL}function X(a,c,d,e,\r\nf){var g=R(a,e);f=h[e]||f;var l=b(d,!0,g,f);if(l){if(\"multiple\"===e&&\"select\"===ta(a))throw ea(\"selmulti\",ua(a));c.push({priority:100,compile:function(){return{pre:function(a,c,h){c=h.$$observers||(h.$$observers={});if(k.test(e))throw ea(\"nodomevents\");var r=h[e];r!==d&&(l=r&&b(r,!0,g,f),d=r);l&&(h[e]=l(a),(c[e]||(c[e]=[])).$$inter=!0,(h.$$observers&&h.$$observers[e].$$scope||a).$watch(l,function(a,b){\"class\"===e&&a!=b?h.$updateClass(a,b):h.$set(e,a)}))}}}})}}function U(a,b,c){var d=b[0],e=b.length,\r\nf=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var l=a.length;g<l;g++,h++)h<l?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=W.createDocumentFragment();a.appendChild(d);z.hasData(d)&&(z(c).data(z(d).data()),la?(Qb=!0,la.cleanData([d])):delete z.cache[d[z.expando]]);d=1;for(e=b.length;d<e;d++)f=b[d],z(f).remove(),a.appendChild(f),delete b[d];b[0]=c;b.length=1}function Z(a,b){return Q(function(){return a.apply(null,\r\narguments)},a,b)}function $(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,ua(d))}}function Y(a,c,d,e,f,g){var h;m(e,function(e,g){var l=e.attrName,k=e.optional,r,n,p,K;switch(e.mode){case \"@\":k||Na.call(c,l)||(d[g]=c[l]=void 0);c.$observe(l,function(a){I(a)&&(d[g]=a)});c.$$observers[l].$$scope=a;I(c[l])&&(d[g]=b(c[l])(a));break;case \"=\":if(!Na.call(c,l)){if(k)break;c[l]=void 0}if(k&&!c[l])break;n=w(c[l]);K=n.literal?ka:function(a,b){return a===b||a!==a&&b!==b};p=n.assign||function(){r=d[g]=n(a);throw ea(\"nonassign\",\r\nc[l],f.name);};r=d[g]=n(a);k=function(b){K(b,d[g])||(K(b,r)?p(a,b=d[g]):d[g]=b);return r=b};k.$stateful=!0;k=e.collection?a.$watchCollection(c[l],k):a.$watch(w(c[l],k),null,n.literal);h=h||[];h.push(k);break;case \"&\":n=c.hasOwnProperty(l)?w(c[l]):v;if(n===v&&k)break;d[g]=function(b){return n(a,b)}}});e=h?function(){for(var a=0,b=h.length;a<b;++a)h[a]()}:v;return g&&e!==v?(g.$on(\"$destroy\",e),v):e}var aa=function(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr=\r\n{};this.$$element=a};aa.prototype={$normalize:va,$addClass:function(a){a&&0<a.length&&N.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&N.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=ad(a,b);c&&c.length&&N.addClass(this.$$element,c);(c=ad(b,a))&&c.length&&N.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=this.$$element[0],g=Qc(f,a),h=Gf(f,a),f=a;g?(this.$$element.prop(a,b),e=g):h&&(this[h]=b,f=h);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=\r\ne=zc(a,\"-\"));g=ta(this.$$element);if(\"a\"===g&&\"href\"===a||\"img\"===g&&\"src\"===a)this[a]=b=J(b,\"src\"===a);else if(\"img\"===g&&\"srcset\"===a){for(var g=\"\",h=T(b),l=/(\\s+\\d+x\\s*,|\\s+\\d+w\\s*,|\\s+,|,\\s+)/,l=/\\s/.test(h)?l:/(,)/,h=h.split(l),l=Math.floor(h.length/2),k=0;k<l;k++)var r=2*k,g=g+J(T(h[r]),!0),g=g+(\" \"+T(h[r+1]));h=T(h[2*k]).split(/\\s/);g+=J(T(h[0]),!0);2===h.length&&(g+=\" \"+T(h[1]));this[a]=b=g}!1!==d&&(null===b||b===t?this.$$element.removeAttr(e):this.$$element.attr(e,b));(a=this.$$observers)&&\r\nm(a[f],function(a){try{a(b)}catch(d){c(d)}})},$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=ga()),e=d[a]||(d[a]=[]);e.push(b);A.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||y(c[a])||b(c[a])});return function(){bb(e,b)}}};var ca=b.startSymbol(),da=b.endSymbol(),fa=\"{{\"==ca||\"}}\"==da?Za:function(a){return a.replace(/\\{\\{/g,ca).replace(/}}/g,da)},ia=/^ngAttr[A-Z]/;V.$$addBindingInfo=n?function(a,b){var c=a.data(\"$binding\")||[];G(b)?c=c.concat(b):c.push(b);a.data(\"$binding\",\r\nc)}:v;V.$$addBindingClass=n?function(a){F(a,\"ng-binding\")}:v;V.$$addScopeInfo=n?function(a,b,c,d){a.data(c?d?\"$isolateScopeNoTemplate\":\"$isolateScope\":\"$scope\",b)}:v;V.$$addScopeClass=n?function(a,b){F(a,b?\"ng-isolate-scope\":\"ng-scope\")}:v;return V}]}function va(b){return fb(b.replace(Xc,\"\"))}function ad(b,a){var c=\"\",d=b.split(/\\s+/),e=a.split(/\\s+/),f=0;a:for(;f<d.length;f++){for(var g=d[f],h=0;h<e.length;h++)if(g==e[h])continue a;c+=(0<c.length?\" \":\"\")+g}return c}function Yc(b){b=z(b);var a=b.length;\r\nif(1>=a)return b;for(;a--;)8===b[a].nodeType&&Mf.call(b,a,1);return b}function Xe(){var b={},a=!1;this.register=function(a,d){Ta(a,\"controller\");D(a)?Q(b,a):b[a]=d};this.allowGlobals=function(){a=!0};this.$get=[\"$injector\",\"$window\",function(c,d){function e(a,b,c,d){if(!a||!D(a.$scope))throw L(\"$controller\")(\"noscp\",d,b);a.$scope[b]=c}return function(f,g,h,l){var k,n,q;h=!0===h;l&&I(l)&&(q=l);if(I(f)){l=f.match(Vc);if(!l)throw Nf(\"ctrlfmt\",f);n=l[1];q=q||l[3];f=b.hasOwnProperty(n)?b[n]:Bc(g.$scope,\r\nn,!0)||(a?Bc(d,n,!0):t);Sa(f,n,!0)}if(h)return h=(G(f)?f[f.length-1]:f).prototype,k=Object.create(h||null),q&&e(g,q,k,n||f.name),Q(function(){var a=c.invoke(f,k,g,n);a!==k&&(D(a)||C(a))&&(k=a,q&&e(g,q,k,n||f.name));return k},{instance:k,identifier:q});k=c.instantiate(f,g,n);q&&e(g,q,k,n||f.name);return k}}]}function Ye(){this.$get=[\"$window\",function(b){return z(b.document)}]}function Ze(){this.$get=[\"$log\",function(b){return function(a,c){b.error.apply(b,arguments)}}]}function Yb(b){return D(b)?\r\nca(b)?b.toISOString():db(b):b}function df(){this.$get=function(){return function(b){if(!b)return\"\";var a=[];mc(b,function(b,d){null===b||y(b)||(G(b)?m(b,function(b,c){a.push(ma(d)+\"=\"+ma(Yb(b)))}):a.push(ma(d)+\"=\"+ma(Yb(b))))});return a.join(\"&\")}}}function ef(){this.$get=function(){return function(b){function a(b,e,f){null===b||y(b)||(G(b)?m(b,function(b,c){a(b,e+\"[\"+(D(b)?c:\"\")+\"]\")}):D(b)&&!ca(b)?mc(b,function(b,c){a(b,e+(f?\"\":\"[\")+c+(f?\"\":\"]\"))}):c.push(ma(e)+\"=\"+ma(Yb(b))))}if(!b)return\"\";var c=\r\n[];a(b,\"\",!0);return c.join(\"&\")}}}function Zb(b,a){if(I(b)){var c=b.replace(Of,\"\").trim();if(c){var d=a(\"Content-Type\");(d=d&&0===d.indexOf(bd))||(d=(d=c.match(Pf))&&Qf[d[0]].test(c));d&&(b=uc(c))}}return b}function cd(b){var a=ga(),c;I(b)?m(b.split(\"\\n\"),function(b){c=b.indexOf(\":\");var e=M(T(b.substr(0,c)));b=T(b.substr(c+1));e&&(a[e]=a[e]?a[e]+\", \"+b:b)}):D(b)&&m(b,function(b,c){var f=M(c),g=T(b);f&&(a[f]=a[f]?a[f]+\", \"+g:g)});return a}function dd(b){var a;return function(c){a||(a=cd(b));return c?\r\n(c=a[M(c)],void 0===c&&(c=null),c):a}}function ed(b,a,c,d){if(C(d))return d(b,a,c);m(d,function(d){b=d(b,a,c)});return b}function cf(){var b=this.defaults={transformResponse:[Zb],transformRequest:[function(a){return D(a)&&\"[object File]\"!==sa.call(a)&&\"[object Blob]\"!==sa.call(a)&&\"[object FormData]\"!==sa.call(a)?db(a):a}],headers:{common:{Accept:\"application/json, text/plain, */*\"},post:ia($b),put:ia($b),patch:ia($b)},xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",paramSerializer:\"$httpParamSerializer\"},\r\na=!1;this.useApplyAsync=function(b){return x(b)?(a=!!b,this):a};var c=!0;this.useLegacyPromiseExtensions=function(a){return x(a)?(c=!!a,this):c};var d=this.interceptors=[];this.$get=[\"$httpBackend\",\"$$cookieReader\",\"$cacheFactory\",\"$rootScope\",\"$q\",\"$injector\",function(e,f,g,h,l,k){function n(a){function d(a){var b=Q({},a);b.data=a.data?ed(a.data,a.headers,a.status,f.transformResponse):a.data;a=a.status;return 200<=a&&300>a?b:l.reject(b)}function e(a,b){var c,d={};m(a,function(a,e){C(a)?(c=a(b),null!=\r\nc&&(d[e]=c)):d[e]=a});return d}if(!aa.isObject(a))throw L(\"$http\")(\"badreq\",a);var f=Q({method:\"get\",transformRequest:b.transformRequest,transformResponse:b.transformResponse,paramSerializer:b.paramSerializer},a);f.headers=function(a){var c=b.headers,d=Q({},a.headers),f,g,h,c=Q({},c.common,c[M(a.method)]);a:for(f in c){g=M(f);for(h in d)if(M(h)===g)continue a;d[f]=c[f]}return e(d,ia(a))}(a);f.method=rb(f.method);f.paramSerializer=I(f.paramSerializer)?k.get(f.paramSerializer):f.paramSerializer;var g=\r\n[function(a){var c=a.headers,e=ed(a.data,dd(c),t,a.transformRequest);y(e)&&m(c,function(a,b){\"content-type\"===M(b)&&delete c[b]});y(a.withCredentials)&&!y(b.withCredentials)&&(a.withCredentials=b.withCredentials);return q(a,e).then(d,d)},t],h=l.when(f);for(m(B,function(a){(a.request||a.requestError)&&g.unshift(a.request,a.requestError);(a.response||a.responseError)&&g.push(a.response,a.responseError)});g.length;){a=g.shift();var r=g.shift(),h=h.then(a,r)}c?(h.success=function(a){Sa(a,\"fn\");h.then(function(b){a(b.data,\r\nb.status,b.headers,f)});return h},h.error=function(a){Sa(a,\"fn\");h.then(null,function(b){a(b.data,b.status,b.headers,f)});return h}):(h.success=fd(\"success\"),h.error=fd(\"error\"));return h}function q(c,d){function g(b,c,d,e){function f(){k(c,b,d,e)}F&&(200<=b&&300>b?F.put(P,[b,c,cd(d),e]):F.remove(P));a?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function k(a,b,d,e){b=Math.max(b,0);(200<=b&&300>b?N.resolve:N.reject)({data:a,status:b,headers:dd(d),config:c,statusText:e})}function q(a){k(a.data,a.status,\r\nia(a.headers()),a.statusText)}function B(){var a=n.pendingRequests.indexOf(c);-1!==a&&n.pendingRequests.splice(a,1)}var N=l.defer(),J=N.promise,F,m,S=c.headers,P=r(c.url,c.paramSerializer(c.params));n.pendingRequests.push(c);J.then(B,B);!c.cache&&!b.cache||!1===c.cache||\"GET\"!==c.method&&\"JSONP\"!==c.method||(F=D(c.cache)?c.cache:D(b.cache)?b.cache:u);F&&(m=F.get(P),x(m)?m&&C(m.then)?m.then(q,q):G(m)?k(m[1],m[0],ia(m[2]),m[3]):k(m,200,{},\"OK\"):F.put(P,J));y(m)&&((m=gd(c.url)?f()[c.xsrfCookieName||\r\nb.xsrfCookieName]:t)&&(S[c.xsrfHeaderName||b.xsrfHeaderName]=m),e(c.method,P,d,g,S,c.timeout,c.withCredentials,c.responseType));return J}function r(a,b){0<b.length&&(a+=(-1==a.indexOf(\"?\")?\"?\":\"&\")+b);return a}var u=g(\"$http\");b.paramSerializer=I(b.paramSerializer)?k.get(b.paramSerializer):b.paramSerializer;var B=[];m(d,function(a){B.unshift(I(a)?k.get(a):k.invoke(a))});n.pendingRequests=[];(function(a){m(arguments,function(a){n[a]=function(b,c){return n(Q({},c||{},{method:a,url:b}))}})})(\"get\",\"delete\",\r\n\"head\",\"jsonp\");(function(a){m(arguments,function(a){n[a]=function(b,c,d){return n(Q({},d||{},{method:a,url:b,data:c}))}})})(\"post\",\"put\",\"patch\");n.defaults=b;return n}]}function Rf(){return new O.XMLHttpRequest}function ff(){this.$get=[\"$browser\",\"$window\",\"$document\",function(b,a,c){return Sf(b,Rf,b.defer,a.angular.callbacks,c[0])}]}function Sf(b,a,c,d,e){function f(a,b,c){var f=e.createElement(\"script\"),n=null;f.type=\"text/javascript\";f.src=a;f.async=!0;n=function(a){f.removeEventListener(\"load\",\r\nn,!1);f.removeEventListener(\"error\",n,!1);e.body.removeChild(f);f=null;var g=-1,u=\"unknown\";a&&(\"load\"!==a.type||d[b].called||(a={type:\"error\"}),u=a.type,g=\"error\"===a.type?404:200);c&&c(g,u)};f.addEventListener(\"load\",n,!1);f.addEventListener(\"error\",n,!1);e.body.appendChild(f);return n}return function(e,h,l,k,n,q,r,u){function B(){p&&p();A&&A.abort()}function K(a,d,e,f,g){H!==t&&c.cancel(H);p=A=null;a(d,e,f,g);b.$$completeOutstandingRequest(v)}b.$$incOutstandingRequestCount();h=h||b.url();if(\"jsonp\"==\r\nM(e)){var w=\"_\"+(d.counter++).toString(36);d[w]=function(a){d[w].data=a;d[w].called=!0};var p=f(h.replace(\"JSON_CALLBACK\",\"angular.callbacks.\"+w),w,function(a,b){K(k,a,d[w].data,\"\",b);d[w]=v})}else{var A=a();A.open(e,h,!0);m(n,function(a,b){x(a)&&A.setRequestHeader(b,a)});A.onload=function(){var a=A.statusText||\"\",b=\"response\"in A?A.response:A.responseText,c=1223===A.status?204:A.status;0===c&&(c=b?200:\"file\"==Aa(h).protocol?404:0);K(k,c,b,A.getAllResponseHeaders(),a)};e=function(){K(k,-1,null,null,\r\n\"\")};A.onerror=e;A.onabort=e;r&&(A.withCredentials=!0);if(u)try{A.responseType=u}catch(s){if(\"json\"!==u)throw s;}A.send(l)}if(0<q)var H=c(B,q);else q&&C(q.then)&&q.then(B)}}function af(){var b=\"{{\",a=\"}}\";this.startSymbol=function(a){return a?(b=a,this):b};this.endSymbol=function(b){return b?(a=b,this):a};this.$get=[\"$parse\",\"$exceptionHandler\",\"$sce\",function(c,d,e){function f(a){return\"\\\\\\\\\\\\\"+a}function g(c){return c.replace(n,b).replace(q,a)}function h(f,h,n,q){function w(a){try{var b=a;a=n?e.getTrusted(n,\r\nb):e.valueOf(b);var c;if(q&&!x(a))c=a;else if(null==a)c=\"\";else{switch(typeof a){case \"string\":break;case \"number\":a=\"\"+a;break;default:a=db(a)}c=a}return c}catch(g){d(Ka.interr(f,g))}}q=!!q;for(var p,m,s=0,H=[],N=[],J=f.length,F=[],V=[];s<J;)if(-1!=(p=f.indexOf(b,s))&&-1!=(m=f.indexOf(a,p+l)))s!==p&&F.push(g(f.substring(s,p))),s=f.substring(p+l,m),H.push(s),N.push(c(s,w)),s=m+k,V.push(F.length),F.push(\"\");else{s!==J&&F.push(g(f.substring(s)));break}n&&1<F.length&&Ka.throwNoconcat(f);if(!h||H.length){var S=\r\nfunction(a){for(var b=0,c=H.length;b<c;b++){if(q&&y(a[b]))return;F[V[b]]=a[b]}return F.join(\"\")};return Q(function(a){var b=0,c=H.length,e=Array(c);try{for(;b<c;b++)e[b]=N[b](a);return S(e)}catch(g){d(Ka.interr(f,g))}},{exp:f,expressions:H,$$watchDelegate:function(a,b){var c;return a.$watchGroup(N,function(d,e){var f=S(d);C(b)&&b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=b.length,k=a.length,n=new RegExp(b.replace(/./g,f),\"g\"),q=new RegExp(a.replace(/./g,f),\"g\");h.startSymbol=function(){return b};h.endSymbol=\r\nfunction(){return a};return h}]}function bf(){this.$get=[\"$rootScope\",\"$window\",\"$q\",\"$$q\",function(b,a,c,d){function e(e,h,l,k){var n=4<arguments.length,q=n?xa.call(arguments,4):[],r=a.setInterval,u=a.clearInterval,B=0,K=x(k)&&!k,w=(K?d:c).defer(),p=w.promise;l=x(l)?l:0;p.then(null,null,n?function(){e.apply(null,q)}:e);p.$$intervalId=r(function(){w.notify(B++);0<l&&B>=l&&(w.resolve(B),u(p.$$intervalId),delete f[p.$$intervalId]);K||b.$apply()},h);f[p.$$intervalId]=w;return p}var f={};e.cancel=function(b){return b&&\r\nb.$$intervalId in f?(f[b.$$intervalId].reject(\"canceled\"),a.clearInterval(b.$$intervalId),delete f[b.$$intervalId],!0):!1};return e}]}function ac(b){b=b.split(\"/\");for(var a=b.length;a--;)b[a]=nb(b[a]);return b.join(\"/\")}function hd(b,a){var c=Aa(b);a.$$protocol=c.protocol;a.$$host=c.hostname;a.$$port=Y(c.port)||Tf[c.protocol]||null}function id(b,a){var c=\"/\"!==b.charAt(0);c&&(b=\"/\"+b);var d=Aa(b);a.$$path=decodeURIComponent(c&&\"/\"===d.pathname.charAt(0)?d.pathname.substring(1):d.pathname);a.$$search=\r\nxc(d.search);a.$$hash=decodeURIComponent(d.hash);a.$$path&&\"/\"!=a.$$path.charAt(0)&&(a.$$path=\"/\"+a.$$path)}function ra(b,a){if(0===a.indexOf(b))return a.substr(b.length)}function Ja(b){var a=b.indexOf(\"#\");return-1==a?b:b.substr(0,a)}function Cb(b){return b.replace(/(#.+)|#$/,\"$1\")}function bc(b,a,c){this.$$html5=!0;c=c||\"\";hd(b,this);this.$$parse=function(b){var c=ra(a,b);if(!I(c))throw Db(\"ipthprfx\",b,a);id(c,this);this.$$path||(this.$$path=\"/\");this.$$compose()};this.$$compose=function(){var b=\r\nPb(this.$$search),c=this.$$hash?\"#\"+nb(this.$$hash):\"\";this.$$url=ac(this.$$path)+(b?\"?\"+b:\"\")+c;this.$$absUrl=a+this.$$url.substr(1)};this.$$parseLinkUrl=function(d,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;(f=ra(b,d))!==t?(g=f,g=(f=ra(c,f))!==t?a+(ra(\"/\",f)||f):b+g):(f=ra(a,d))!==t?g=a+f:a==d+\"/\"&&(g=a);g&&this.$$parse(g);return!!g}}function cc(b,a,c){hd(b,this);this.$$parse=function(d){var e=ra(b,d)||ra(a,d),f;y(e)||\"#\"!==e.charAt(0)?this.$$html5?f=e:(f=\"\",y(e)&&(b=d,this.replace())):\r\n(f=ra(c,e),y(f)&&(f=e));id(f,this);d=this.$$path;var e=b,g=/^\\/[A-Z]:(\\/.*)/;0===f.indexOf(e)&&(f=f.replace(e,\"\"));g.exec(f)||(d=(f=g.exec(d))?f[1]:d);this.$$path=d;this.$$compose()};this.$$compose=function(){var a=Pb(this.$$search),e=this.$$hash?\"#\"+nb(this.$$hash):\"\";this.$$url=ac(this.$$path)+(a?\"?\"+a:\"\")+e;this.$$absUrl=b+(this.$$url?c+this.$$url:\"\")};this.$$parseLinkUrl=function(a,c){return Ja(b)==Ja(a)?(this.$$parse(a),!0):!1}}function jd(b,a,c){this.$$html5=!0;cc.apply(this,arguments);this.$$parseLinkUrl=\r\nfunction(d,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;b==Ja(d)?f=d:(g=ra(a,d))?f=b+c+g:a===d+\"/\"&&(f=a);f&&this.$$parse(f);return!!f};this.$$compose=function(){var a=Pb(this.$$search),e=this.$$hash?\"#\"+nb(this.$$hash):\"\";this.$$url=ac(this.$$path)+(a?\"?\"+a:\"\")+e;this.$$absUrl=b+c+this.$$url}}function Eb(b){return function(){return this[b]}}function kd(b,a){return function(c){if(y(c))return this[b];this[b]=a(c);this.$$compose();return this}}function gf(){var b=\"\",a={enabled:!1,requireBase:!0,\r\nrewriteLinks:!0};this.hashPrefix=function(a){return x(a)?(b=a,this):b};this.html5Mode=function(b){return ab(b)?(a.enabled=b,this):D(b)?(ab(b.enabled)&&(a.enabled=b.enabled),ab(b.requireBase)&&(a.requireBase=b.requireBase),ab(b.rewriteLinks)&&(a.rewriteLinks=b.rewriteLinks),this):a};this.$get=[\"$rootScope\",\"$browser\",\"$sniffer\",\"$rootElement\",\"$window\",function(c,d,e,f,g){function h(a,b,c){var e=k.url(),f=k.$$state;try{d.url(a,b,c),k.$$state=d.state()}catch(g){throw k.url(e),k.$$state=f,g;}}function l(a,\r\nb){c.$broadcast(\"$locationChangeSuccess\",k.absUrl(),a,k.$$state,b)}var k,n;n=d.baseHref();var q=d.url(),r;if(a.enabled){if(!n&&a.requireBase)throw Db(\"nobase\");r=q.substring(0,q.indexOf(\"/\",q.indexOf(\"//\")+2))+(n||\"/\");n=e.history?bc:jd}else r=Ja(q),n=cc;var u=r.substr(0,Ja(r).lastIndexOf(\"/\")+1);k=new n(r,u,\"#\"+b);k.$$parseLinkUrl(q,q);k.$$state=d.state();var B=/^\\s*(javascript|mailto):/i;f.on(\"click\",function(b){if(a.rewriteLinks&&!b.ctrlKey&&!b.metaKey&&!b.shiftKey&&2!=b.which&&2!=b.button){for(var e=\r\nz(b.target);\"a\"!==ta(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;var h=e.prop(\"href\"),l=e.attr(\"href\")||e.attr(\"xlink:href\");D(h)&&\"[object SVGAnimatedString]\"===h.toString()&&(h=Aa(h.animVal).href);B.test(h)||!h||e.attr(\"target\")||b.isDefaultPrevented()||!k.$$parseLinkUrl(h,l)||(b.preventDefault(),k.absUrl()!=d.url()&&(c.$apply(),g.angular[\"ff-684208-preventDefault\"]=!0))}});Cb(k.absUrl())!=Cb(q)&&d.url(k.absUrl(),!0);var K=!0;d.onUrlChange(function(a,b){y(ra(u,a))?g.location.href=a:(c.$evalAsync(function(){var d=\r\nk.absUrl(),e=k.$$state,f;k.$$parse(a);k.$$state=b;f=c.$broadcast(\"$locationChangeStart\",a,d,b,e).defaultPrevented;k.absUrl()===a&&(f?(k.$$parse(d),k.$$state=e,h(d,!1,e)):(K=!1,l(d,e)))}),c.$$phase||c.$digest())});c.$watch(function(){var a=Cb(d.url()),b=Cb(k.absUrl()),f=d.state(),g=k.$$replace,n=a!==b||k.$$html5&&e.history&&f!==k.$$state;if(K||n)K=!1,c.$evalAsync(function(){var b=k.absUrl(),d=c.$broadcast(\"$locationChangeStart\",b,a,k.$$state,f).defaultPrevented;k.absUrl()===b&&(d?(k.$$parse(a),k.$$state=\r\nf):(n&&h(b,g,f===k.$$state?null:k.$$state),l(a,f)))});k.$$replace=!1});return k}]}function hf(){var b=!0,a=this;this.debugEnabled=function(a){return x(a)?(b=a,this):b};this.$get=[\"$window\",function(c){function d(a){a instanceof Error&&(a.stack?a=a.message&&-1===a.stack.indexOf(a.message)?\"Error: \"+a.message+\"\\n\"+a.stack:a.stack:a.sourceURL&&(a=a.message+\"\\n\"+a.sourceURL+\":\"+a.line));return a}function e(a){var b=c.console||{},e=b[a]||b.log||v;a=!1;try{a=!!e.apply}catch(l){}return a?function(){var a=\r\n[];m(arguments,function(b){a.push(d(b))});return e.apply(b,a)}:function(a,b){e(a,null==b?\"\":b)}}return{log:e(\"log\"),info:e(\"info\"),warn:e(\"warn\"),error:e(\"error\"),debug:function(){var c=e(\"debug\");return function(){b&&c.apply(a,arguments)}}()}}]}function Wa(b,a){if(\"__defineGetter__\"===b||\"__defineSetter__\"===b||\"__lookupGetter__\"===b||\"__lookupSetter__\"===b||\"__proto__\"===b)throw da(\"isecfld\",a);return b}function Ba(b,a){if(b){if(b.constructor===b)throw da(\"isecfn\",a);if(b.window===b)throw da(\"isecwindow\",\r\na);if(b.children&&(b.nodeName||b.prop&&b.attr&&b.find))throw da(\"isecdom\",a);if(b===Object)throw da(\"isecobj\",a);}return b}function ld(b,a){if(b){if(b.constructor===b)throw da(\"isecfn\",a);if(b===Uf||b===Vf||b===Wf)throw da(\"isecff\",a);}}function Xf(b,a){return\"undefined\"!==typeof b?b:a}function md(b,a){return\"undefined\"===typeof b?a:\"undefined\"===typeof a?b:b+a}function U(b,a){var c,d;switch(b.type){case s.Program:c=!0;m(b.body,function(b){U(b.expression,a);c=c&&b.expression.constant});b.constant=\r\nc;break;case s.Literal:b.constant=!0;b.toWatch=[];break;case s.UnaryExpression:U(b.argument,a);b.constant=b.argument.constant;b.toWatch=b.argument.toWatch;break;case s.BinaryExpression:U(b.left,a);U(b.right,a);b.constant=b.left.constant&&b.right.constant;b.toWatch=b.left.toWatch.concat(b.right.toWatch);break;case s.LogicalExpression:U(b.left,a);U(b.right,a);b.constant=b.left.constant&&b.right.constant;b.toWatch=b.constant?[]:[b];break;case s.ConditionalExpression:U(b.test,a);U(b.alternate,a);U(b.consequent,\r\na);b.constant=b.test.constant&&b.alternate.constant&&b.consequent.constant;b.toWatch=b.constant?[]:[b];break;case s.Identifier:b.constant=!1;b.toWatch=[b];break;case s.MemberExpression:U(b.object,a);b.computed&&U(b.property,a);b.constant=b.object.constant&&(!b.computed||b.property.constant);b.toWatch=[b];break;case s.CallExpression:c=b.filter?!a(b.callee.name).$stateful:!1;d=[];m(b.arguments,function(b){U(b,a);c=c&&b.constant;b.constant||d.push.apply(d,b.toWatch)});b.constant=c;b.toWatch=b.filter&&\r\n!a(b.callee.name).$stateful?d:[b];break;case s.AssignmentExpression:U(b.left,a);U(b.right,a);b.constant=b.left.constant&&b.right.constant;b.toWatch=[b];break;case s.ArrayExpression:c=!0;d=[];m(b.elements,function(b){U(b,a);c=c&&b.constant;b.constant||d.push.apply(d,b.toWatch)});b.constant=c;b.toWatch=d;break;case s.ObjectExpression:c=!0;d=[];m(b.properties,function(b){U(b.value,a);c=c&&b.value.constant;b.value.constant||d.push.apply(d,b.value.toWatch)});b.constant=c;b.toWatch=d;break;case s.ThisExpression:b.constant=\r\n!1,b.toWatch=[]}}function nd(b){if(1==b.length){b=b[0].expression;var a=b.toWatch;return 1!==a.length?a:a[0]!==b?a:t}}function od(b){return b.type===s.Identifier||b.type===s.MemberExpression}function pd(b){if(1===b.body.length&&od(b.body[0].expression))return{type:s.AssignmentExpression,left:b.body[0].expression,right:{type:s.NGValueParameter},operator:\"=\"}}function qd(b){return 0===b.body.length||1===b.body.length&&(b.body[0].expression.type===s.Literal||b.body[0].expression.type===s.ArrayExpression||\r\nb.body[0].expression.type===s.ObjectExpression)}function rd(b,a){this.astBuilder=b;this.$filter=a}function sd(b,a){this.astBuilder=b;this.$filter=a}function Fb(b){return\"constructor\"==b}function dc(b){return C(b.valueOf)?b.valueOf():Yf.call(b)}function jf(){var b=ga(),a=ga();this.$get=[\"$filter\",function(c){function d(a,b){return null==a||null==b?a===b:\"object\"===typeof a&&(a=dc(a),\"object\"===typeof a)?!1:a===b||a!==a&&b!==b}function e(a,b,c,e,f){var g=e.inputs,h;if(1===g.length){var l=d,g=g[0];return a.$watch(function(a){var b=\r\ng(a);d(b,l)||(h=e(a,t,t,[b]),l=b&&dc(b));return h},b,c,f)}for(var k=[],n=[],q=0,m=g.length;q<m;q++)k[q]=d,n[q]=null;return a.$watch(function(a){for(var b=!1,c=0,f=g.length;c<f;c++){var l=g[c](a);if(b||(b=!d(l,k[c])))n[c]=l,k[c]=l&&dc(l)}b&&(h=e(a,t,t,n));return h},b,c,f)}function f(a,b,c,d){var e,f;return e=a.$watch(function(a){return d(a)},function(a,c,d){f=a;C(b)&&b.apply(this,arguments);x(a)&&d.$$postDigest(function(){x(f)&&e()})},c)}function g(a,b,c,d){function e(a){var b=!0;m(a,function(a){x(a)||\r\n(b=!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;C(b)&&b.call(this,a,c,d);e(a)&&d.$$postDigest(function(){e(g)&&f()})},c)}function h(a,b,c,d){var e;return e=a.$watch(function(a){return d(a)},function(a,c,d){C(b)&&b.apply(this,arguments);e()},c)}function l(a,b){if(!b)return a;var c=a.$$watchDelegate,c=c!==g&&c!==f?function(c,d,e,f){e=a(c,d,e,f);return b(e,c,d)}:function(c,d,e,f){e=a(c,d,e,f);c=b(e,c,d);return x(e)?c:e};a.$$watchDelegate&&a.$$watchDelegate!==\r\ne?c.$$watchDelegate=a.$$watchDelegate:b.$stateful||(c.$$watchDelegate=e,c.inputs=a.inputs?a.inputs:[a]);return c}var k=Fa().noUnsafeEval,n={csp:k,expensiveChecks:!1},q={csp:k,expensiveChecks:!0};return function(d,k,B){var m,w,p;switch(typeof d){case \"string\":p=d=d.trim();var s=B?a:b;m=s[p];m||(\":\"===d.charAt(0)&&\":\"===d.charAt(1)&&(w=!0,d=d.substring(2)),B=B?q:n,m=new ec(B),m=(new fc(m,c,B)).parse(d),m.constant?m.$$watchDelegate=h:w?m.$$watchDelegate=m.literal?g:f:m.inputs&&(m.$$watchDelegate=e),\r\ns[p]=m);return l(m,k);case \"function\":return l(d,k);default:return v}}}]}function lf(){this.$get=[\"$rootScope\",\"$exceptionHandler\",function(b,a){return td(function(a){b.$evalAsync(a)},a)}]}function mf(){this.$get=[\"$browser\",\"$exceptionHandler\",function(b,a){return td(function(a){b.defer(a)},a)}]}function td(b,a){function c(a,b,c){function d(b){return function(c){e||(e=!0,b.call(a,c))}}var e=!1;return[d(b),d(c)]}function d(){this.$$state={status:0}}function e(a,b){return function(c){b.call(a,c)}}\r\nfunction f(c){!c.processScheduled&&c.pending&&(c.processScheduled=!0,b(function(){var b,d,e;e=c.pending;c.processScheduled=!1;c.pending=t;for(var f=0,g=e.length;f<g;++f){d=e[f][0];b=e[f][c.status];try{C(b)?d.resolve(b(c.value)):1===c.status?d.resolve(c.value):d.reject(c.value)}catch(h){d.reject(h),a(h)}}}))}function g(){this.promise=new d;this.resolve=e(this,this.resolve);this.reject=e(this,this.reject);this.notify=e(this,this.notify)}var h=L(\"$q\",TypeError);Q(d.prototype,{then:function(a,b,c){if(y(a)&&\r\ny(b)&&y(c))return this;var d=new g;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&f(this.$$state);return d.promise},\"catch\":function(a){return this.then(null,a)},\"finally\":function(a,b){return this.then(function(b){return k(b,!0,a)},function(b){return k(b,!1,a)},b)}});Q(g.prototype,{resolve:function(a){this.promise.$$state.status||(a===this.promise?this.$$reject(h(\"qcycle\",a)):this.$$resolve(a))},$$resolve:function(b){var d,e;e=c(this,this.$$resolve,\r\nthis.$$reject);try{if(D(b)||C(b))d=b&&b.then;C(d)?(this.promise.$$state.status=-1,d.call(b,e[0],e[1],this.notify)):(this.promise.$$state.value=b,this.promise.$$state.status=1,f(this.promise.$$state))}catch(g){e[1](g),a(g)}},reject:function(a){this.promise.$$state.status||this.$$reject(a)},$$reject:function(a){this.promise.$$state.value=a;this.promise.$$state.status=2;f(this.promise.$$state)},notify:function(c){var d=this.promise.$$state.pending;0>=this.promise.$$state.status&&d&&d.length&&b(function(){for(var b,\r\ne,f=0,g=d.length;f<g;f++){e=d[f][0];b=d[f][3];try{e.notify(C(b)?b(c):c)}catch(h){a(h)}}})}});var l=function(a,b){var c=new g;b?c.resolve(a):c.reject(a);return c.promise},k=function(a,b,c){var d=null;try{C(c)&&(d=c())}catch(e){return l(e,!1)}return d&&C(d.then)?d.then(function(){return l(a,b)},function(a){return l(a,!1)}):l(a,b)},n=function(a,b,c,d){var e=new g;e.resolve(a);return e.promise.then(b,c,d)},q=function u(a){if(!C(a))throw h(\"norslvr\",a);if(!(this instanceof u))return new u(a);var b=new g;\r\na(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};q.defer=function(){return new g};q.reject=function(a){var b=new g;b.reject(a);return b.promise};q.when=n;q.resolve=n;q.all=function(a){var b=new g,c=0,d=G(a)?[]:{};m(a,function(a,e){c++;n(a).then(function(a){d.hasOwnProperty(e)||(d[e]=a,--c||b.resolve(d))},function(a){d.hasOwnProperty(e)||b.reject(a)})});0===c&&b.resolve(d);return b.promise};return q}function vf(){this.$get=[\"$window\",\"$timeout\",function(b,a){function c(){for(var a=\r\n0;a<n.length;a++){var b=n[a];b&&(n[a]=null,b())}k=n.length=0}function d(a){var b=n.length;k++;n.push(a);0===b&&(l=h(c));return function(){0<=b&&(b=n[b]=null,0===--k&&l&&(l(),l=null,n.length=0))}}var e=b.requestAnimationFrame||b.webkitRequestAnimationFrame,f=b.cancelAnimationFrame||b.webkitCancelAnimationFrame||b.webkitCancelRequestAnimationFrame,g=!!e,h=g?function(a){var b=e(a);return function(){f(b)}}:function(b){var c=a(b,16.66,!1);return function(){a.cancel(c)}};d.supported=g;var l,k=0,n=[];return d}]}\r\nfunction kf(){function b(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++mb;this.$$ChildScope=null}b.prototype=a;return b}var a=10,c=L(\"$rootScope\"),d=null,e=null;this.digestTtl=function(b){arguments.length&&(a=b);return a};this.$get=[\"$injector\",\"$exceptionHandler\",\"$parse\",\"$browser\",function(f,g,h,l){function k(a){a.currentScope.$$destroyed=!0}function n(){this.$id=++mb;this.$$phase=\r\nthis.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null}function q(a){if(p.$$phase)throw c(\"inprog\",p.$$phase);p.$$phase=a}function r(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function u(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function s(){}function K(){for(;H.length;)try{H.shift()()}catch(a){g(a)}e=\r\nnull}function w(){null===e&&(e=l.defer(function(){p.$apply(K)}))}n.prototype={constructor:n,$new:function(a,c){var d;c=c||this;a?(d=new n,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=b(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(a||c!=this)&&d.$on(\"$destroy\",k);return d},$watch:function(a,b,c,e){var f=h(a);if(f.$$watchDelegate)return f.$$watchDelegate(this,b,c,f,\r\na);var g=this,l=g.$$watchers,k={fn:b,last:s,get:f,exp:e||a,eq:!!c};d=null;C(b)||(k.fn=v);l||(l=g.$$watchers=[]);l.unshift(k);r(this,1);return function(){0<=bb(l,k)&&r(g,-1);d=null}},$watchGroup:function(a,b){function c(){h=!1;l?(l=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,l=!0;if(!a.length){var k=!0;g.$evalAsync(function(){k&&b(e,e,g)});return function(){k=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});m(a,function(a,\r\nb){var l=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(l)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!y(e)){if(D(e))if(Da(e))for(f!==q&&(f=q,u=f.length=0,k++),a=e.length,u!==a&&(k++,f.length=u=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(k++,f[b]=g);else{f!==r&&(f=r={},u=0,k++);a=0;for(b in e)e.hasOwnProperty(b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(k++,f[b]=g)):(u++,f[b]=g,\r\nk++));if(u>a)for(b in k++,f)e.hasOwnProperty(b)||(u--,delete f[b])}else f!==e&&(f=e,k++);return k}}c.$stateful=!0;var d=this,e,f,g,l=1<b.length,k=0,n=h(a,c),q=[],r={},p=!0,u=0;return this.$watch(n,function(){p?(p=!1,b(e,e,d)):b(e,g,d);if(l)if(D(e))if(Da(e)){g=Array(e.length);for(var a=0;a<e.length;a++)g[a]=e[a]}else for(a in g={},e)Na.call(e,a)&&(g[a]=e[a]);else g=e})},$digest:function(){var b,f,h,k,n,r,u=a,m,w=[],E,H;q(\"$digest\");l.$$checkUrlChange();this===p&&null!==e&&(l.defer.cancel(e),K());d=\r\nnull;do{r=!1;for(m=this;t.length;){try{H=t.shift(),H.scope.$eval(H.expression,H.locals)}catch(v){g(v)}d=null}a:do{if(k=m.$$watchers)for(n=k.length;n--;)try{if(b=k[n])if((f=b.get(m))!==(h=b.last)&&!(b.eq?ka(f,h):\"number\"===typeof f&&\"number\"===typeof h&&isNaN(f)&&isNaN(h)))r=!0,d=b,b.last=b.eq?fa(f,null):f,b.fn(f,h===s?f:h,m),5>u&&(E=4-u,w[E]||(w[E]=[]),w[E].push({msg:C(b.exp)?\"fn: \"+(b.exp.name||b.exp.toString()):b.exp,newVal:f,oldVal:h}));else if(b===d){r=!1;break a}}catch(y){g(y)}if(!(k=m.$$watchersCount&&\r\nm.$$childHead||m!==this&&m.$$nextSibling))for(;m!==this&&!(k=m.$$nextSibling);)m=m.$parent}while(m=k);if((r||t.length)&&!u--)throw p.$$phase=null,c(\"infdig\",a,w);}while(r||t.length);for(p.$$phase=null;x.length;)try{x.shift()()}catch(z){g(z)}},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast(\"$destroy\");this.$$destroyed=!0;this===p&&l.$$applicationDestroyed();r(this,-this.$$watchersCount);for(var b in this.$$listenerCount)u(this,this.$$listenerCount[b],b);a&&a.$$childHead==\r\nthis&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail==this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=v;this.$on=this.$watch=this.$watchGroup=function(){return v};this.$$listeners={};this.$parent=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=this.$root=this.$$watchers=\r\nnull}},$eval:function(a,b){return h(a)(this,b)},$evalAsync:function(a,b){p.$$phase||t.length||l.defer(function(){t.length&&p.$digest()});t.push({scope:this,expression:a,locals:b})},$$postDigest:function(a){x.push(a)},$apply:function(a){try{q(\"$apply\");try{return this.$eval(a)}finally{p.$$phase=null}}catch(b){g(b)}finally{try{p.$digest()}catch(c){throw g(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&H.push(b);w()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=\r\nc=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(c[d]=null,u(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,f=!1,h={name:a,targetScope:e,stopPropagation:function(){f=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},l=cb([h],arguments,1),k,n;do{d=e.$$listeners[a]||c;h.currentScope=e;k=0;for(n=d.length;k<n;k++)if(d[k])try{d[k].apply(null,l)}catch(q){g(q)}else d.splice(k,\r\n1),k--,n--;if(f)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var f=cb([e],arguments,1),h,l;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(l=d.length;h<l;h++)if(d[h])try{d[h].apply(null,f)}catch(k){g(k)}else d.splice(h,1),h--,l--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&\r\nc.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var p=new n,t=p.$$asyncQueue=[],x=p.$$postDigestQueue=[],H=p.$$applyAsyncQueue=[];return p}]}function ge(){var b=/^\\s*(https?|ftp|mailto|tel|file):/,a=/^\\s*((https?|ftp|file|blob):|data:image\\/)/;this.aHrefSanitizationWhitelist=function(a){return x(a)?(b=a,this):b};this.imgSrcSanitizationWhitelist=function(b){return x(b)?(a=b,this):a};this.$get=function(){return function(c,d){var e=d?a:b,f;f=Aa(c).href;\r\nreturn\"\"===f||f.match(e)?c:\"unsafe:\"+f}}}function Zf(b){if(\"self\"===b)return b;if(I(b)){if(-1<b.indexOf(\"***\"))throw Ca(\"iwcard\",b);b=ud(b).replace(\"\\\\*\\\\*\",\".*\").replace(\"\\\\*\",\"[^:/.?&;]*\");return new RegExp(\"^\"+b+\"$\")}if(Oa(b))return new RegExp(\"^\"+b.source+\"$\");throw Ca(\"imatcher\");}function vd(b){var a=[];x(b)&&m(b,function(b){a.push(Zf(b))});return a}function of(){this.SCE_CONTEXTS=oa;var b=[\"self\"],a=[];this.resourceUrlWhitelist=function(a){arguments.length&&(b=vd(a));return b};this.resourceUrlBlacklist=\r\nfunction(b){arguments.length&&(a=vd(b));return a};this.$get=[\"$injector\",function(c){function d(a,b){return\"self\"===a?gd(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw Ca(\"unsafe\");};c.has(\"$sanitize\")&&(f=c.get(\"$sanitize\"));var g=e(),h={};h[oa.HTML]=\r\ne(g);h[oa.CSS]=e(g);h[oa.URL]=e(g);h[oa.JS]=e(g);h[oa.RESOURCE_URL]=e(h[oa.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw Ca(\"icontext\",a,b);if(null===b||b===t||\"\"===b)return b;if(\"string\"!==typeof b)throw Ca(\"itype\",a);return new c(b)},getTrusted:function(c,e){if(null===e||e===t||\"\"===e)return e;var g=h.hasOwnProperty(c)?h[c]:null;if(g&&e instanceof g)return e.$$unwrapTrustedValue();if(c===oa.RESOURCE_URL){var g=Aa(e.toString()),q,r,u=!1;q=0;for(r=b.length;q<r;q++)if(d(b[q],\r\ng)){u=!0;break}if(u)for(q=0,r=a.length;q<r;q++)if(d(a[q],g)){u=!1;break}if(u)return e;throw Ca(\"insecurl\",e.toString());}if(c===oa.HTML)return f(e);throw Ca(\"unsafe\");},valueOf:function(a){return a instanceof g?a.$$unwrapTrustedValue():a}}}]}function nf(){var b=!0;this.enabled=function(a){arguments.length&&(b=!!a);return b};this.$get=[\"$parse\",\"$sceDelegate\",function(a,c){if(b&&8>Va)throw Ca(\"iequirks\");var d=ia(oa);d.isEnabled=function(){return b};d.trustAs=c.trustAs;d.getTrusted=c.getTrusted;d.valueOf=\r\nc.valueOf;b||(d.trustAs=d.getTrusted=function(a,b){return b},d.valueOf=Za);d.parseAs=function(b,c){var e=a(c);return e.literal&&e.constant?e:a(c,function(a){return d.getTrusted(b,a)})};var e=d.parseAs,f=d.getTrusted,g=d.trustAs;m(oa,function(a,b){var c=M(b);d[fb(\"parse_as_\"+c)]=function(b){return e(a,b)};d[fb(\"get_trusted_\"+c)]=function(b){return f(a,b)};d[fb(\"trust_as_\"+c)]=function(b){return g(a,b)}});return d}]}function pf(){this.$get=[\"$window\",\"$document\",function(b,a){var c={},d=Y((/android (\\d+)/.exec(M((b.navigator||\r\n{}).userAgent))||[])[1]),e=/Boxee/i.test((b.navigator||{}).userAgent),f=a[0]||{},g,h=/^(Moz|webkit|ms)(?=[A-Z])/,l=f.body&&f.body.style,k=!1,n=!1;if(l){for(var q in l)if(k=h.exec(q)){g=k[0];g=g.substr(0,1).toUpperCase()+g.substr(1);break}g||(g=\"WebkitOpacity\"in l&&\"webkit\");k=!!(\"transition\"in l||g+\"Transition\"in l);n=!!(\"animation\"in l||g+\"Animation\"in l);!d||k&&n||(k=I(l.webkitTransition),n=I(l.webkitAnimation))}return{history:!(!b.history||!b.history.pushState||4>d||e),hasEvent:function(a){if(\"input\"===\r\na&&11>=Va)return!1;if(y(c[a])){var b=f.createElement(\"div\");c[a]=\"on\"+a in b}return c[a]},csp:Fa(),vendorPrefix:g,transitions:k,animations:n,android:d}}]}function rf(){this.$get=[\"$templateCache\",\"$http\",\"$q\",\"$sce\",function(b,a,c,d){function e(f,g){e.totalPendingRequests++;I(f)&&b.get(f)||(f=d.getTrustedResourceUrl(f));var h=a.defaults&&a.defaults.transformResponse;G(h)?h=h.filter(function(a){return a!==Zb}):h===Zb&&(h=null);return a.get(f,{cache:b,transformResponse:h})[\"finally\"](function(){e.totalPendingRequests--}).then(function(a){b.put(f,\r\na.data);return a.data},function(a){if(!g)throw ea(\"tpload\",f,a.status,a.statusText);return c.reject(a)})}e.totalPendingRequests=0;return e}]}function sf(){this.$get=[\"$rootScope\",\"$browser\",\"$location\",function(b,a,c){return{findBindings:function(a,b,c){a=a.getElementsByClassName(\"ng-binding\");var g=[];m(a,function(a){var d=aa.element(a).data(\"$binding\");d&&m(d,function(d){c?(new RegExp(\"(^|\\\\s)\"+ud(b)+\"(\\\\s|\\\\||$)\")).test(d)&&g.push(a):-1!=d.indexOf(b)&&g.push(a)})});return g},findModels:function(a,\r\nb,c){for(var g=[\"ng-\",\"data-ng-\",\"ng\\\\:\"],h=0;h<g.length;++h){var l=a.querySelectorAll(\"[\"+g[h]+\"model\"+(c?\"=\":\"*=\")+'\"'+b+'\"]');if(l.length)return l}},getLocation:function(){return c.url()},setLocation:function(a){a!==c.url()&&(c.url(a),b.$digest())},whenStable:function(b){a.notifyWhenNoOutstandingRequests(b)}}}]}function tf(){this.$get=[\"$rootScope\",\"$browser\",\"$q\",\"$$q\",\"$exceptionHandler\",function(b,a,c,d,e){function f(f,l,k){C(f)||(k=l,l=f,f=v);var n=xa.call(arguments,3),q=x(k)&&!k,r=(q?d:c).defer(),\r\nu=r.promise,m;m=a.defer(function(){try{r.resolve(f.apply(null,n))}catch(a){r.reject(a),e(a)}finally{delete g[u.$$timeoutId]}q||b.$apply()},l);u.$$timeoutId=m;g[m]=r;return u}var g={};f.cancel=function(b){return b&&b.$$timeoutId in g?(g[b.$$timeoutId].reject(\"canceled\"),delete g[b.$$timeoutId],a.defer.cancel(b.$$timeoutId)):!1};return f}]}function Aa(b){Va&&(Z.setAttribute(\"href\",b),b=Z.href);Z.setAttribute(\"href\",b);return{href:Z.href,protocol:Z.protocol?Z.protocol.replace(/:$/,\"\"):\"\",host:Z.host,\r\nsearch:Z.search?Z.search.replace(/^\\?/,\"\"):\"\",hash:Z.hash?Z.hash.replace(/^#/,\"\"):\"\",hostname:Z.hostname,port:Z.port,pathname:\"/\"===Z.pathname.charAt(0)?Z.pathname:\"/\"+Z.pathname}}function gd(b){b=I(b)?Aa(b):b;return b.protocol===wd.protocol&&b.host===wd.host}function uf(){this.$get=qa(O)}function xd(b){function a(a){try{return decodeURIComponent(a)}catch(b){return a}}var c=b[0]||{},d={},e=\"\";return function(){var b,g,h,l,k;b=c.cookie||\"\";if(b!==e)for(e=b,b=e.split(\"; \"),d={},h=0;h<b.length;h++)g=\r\nb[h],l=g.indexOf(\"=\"),0<l&&(k=a(g.substring(0,l)),d[k]===t&&(d[k]=a(g.substring(l+1))));return d}}function yf(){this.$get=xd}function Jc(b){function a(c,d){if(D(c)){var e={};m(c,function(b,c){e[c]=a(c,b)});return e}return b.factory(c+\"Filter\",d)}this.register=a;this.$get=[\"$injector\",function(a){return function(b){return a.get(b+\"Filter\")}}];a(\"currency\",yd);a(\"date\",zd);a(\"filter\",$f);a(\"json\",ag);a(\"limitTo\",bg);a(\"lowercase\",cg);a(\"number\",Ad);a(\"orderBy\",Bd);a(\"uppercase\",dg)}function $f(){return function(b,\r\na,c){if(!Da(b)){if(null==b)return b;throw L(\"filter\")(\"notarray\",b);}var d;switch(gc(a)){case \"function\":break;case \"boolean\":case \"null\":case \"number\":case \"string\":d=!0;case \"object\":a=eg(a,c,d);break;default:return b}return Array.prototype.filter.call(b,a)}}function eg(b,a,c){var d=D(b)&&\"$\"in b;!0===a?a=ka:C(a)||(a=function(a,b){if(y(a))return!1;if(null===a||null===b)return a===b;if(D(b)||D(a)&&!pc(a))return!1;a=M(\"\"+a);b=M(\"\"+b);return-1!==a.indexOf(b)});return function(e){return d&&!D(e)?La(e,\r\nb.$,a,!1):La(e,b,a,c)}}function La(b,a,c,d,e){var f=gc(b),g=gc(a);if(\"string\"===g&&\"!\"===a.charAt(0))return!La(b,a.substring(1),c,d);if(G(b))return b.some(function(b){return La(b,a,c,d)});switch(f){case \"object\":var h;if(d){for(h in b)if(\"$\"!==h.charAt(0)&&La(b[h],a,c,!0))return!0;return e?!1:La(b,a,c,!1)}if(\"object\"===g){for(h in a)if(e=a[h],!C(e)&&!y(e)&&(f=\"$\"===h,!La(f?b:b[h],e,c,f,f)))return!1;return!0}return c(b,a);case \"function\":return!1;default:return c(b,a)}}function gc(b){return null===\r\nb?\"null\":typeof b}function yd(b){var a=b.NUMBER_FORMATS;return function(b,d,e){y(d)&&(d=a.CURRENCY_SYM);y(e)&&(e=a.PATTERNS[1].maxFrac);return null==b?b:Cd(b,a.PATTERNS[1],a.GROUP_SEP,a.DECIMAL_SEP,e).replace(/\\u00A4/g,d)}}function Ad(b){var a=b.NUMBER_FORMATS;return function(b,d){return null==b?b:Cd(b,a.PATTERNS[0],a.GROUP_SEP,a.DECIMAL_SEP,d)}}function Cd(b,a,c,d,e){if(D(b))return\"\";var f=0>b;b=Math.abs(b);var g=Infinity===b;if(!g&&!isFinite(b))return\"\";var h=b+\"\",l=\"\",k=!1,n=[];g&&(l=\"\\u221e\");\r\nif(!g&&-1!==h.indexOf(\"e\")){var q=h.match(/([\\d\\.]+)e(-?)(\\d+)/);q&&\"-\"==q[2]&&q[3]>e+1?b=0:(l=h,k=!0)}if(g||k)0<e&&1>b&&(l=b.toFixed(e),b=parseFloat(l));else{g=(h.split(Dd)[1]||\"\").length;y(e)&&(e=Math.min(Math.max(a.minFrac,g),a.maxFrac));b=+(Math.round(+(b.toString()+\"e\"+e)).toString()+\"e\"+-e);var g=(\"\"+b).split(Dd),h=g[0],g=g[1]||\"\",q=0,r=a.lgSize,u=a.gSize;if(h.length>=r+u)for(q=h.length-r,k=0;k<q;k++)0===(q-k)%u&&0!==k&&(l+=c),l+=h.charAt(k);for(k=q;k<h.length;k++)0===(h.length-k)%r&&0!==k&&\r\n(l+=c),l+=h.charAt(k);for(;g.length<e;)g+=\"0\";e&&\"0\"!==e&&(l+=d+g.substr(0,e))}0===b&&(f=!1);n.push(f?a.negPre:a.posPre,l,f?a.negSuf:a.posSuf);return n.join(\"\")}function Gb(b,a,c){var d=\"\";0>b&&(d=\"-\",b=-b);for(b=\"\"+b;b.length<a;)b=\"0\"+b;c&&(b=b.substr(b.length-a));return d+b}function $(b,a,c,d){c=c||0;return function(e){e=e[\"get\"+b]();if(0<c||e>-c)e+=c;0===e&&-12==c&&(e=12);return Gb(e,a,d)}}function Hb(b,a){return function(c,d){var e=c[\"get\"+b](),f=rb(a?\"SHORT\"+b:b);return d[f][e]}}function Ed(b){var a=\r\n(new Date(b,0,1)).getDay();return new Date(b,0,(4>=a?5:12)-a)}function Fd(b){return function(a){var c=Ed(a.getFullYear());a=+new Date(a.getFullYear(),a.getMonth(),a.getDate()+(4-a.getDay()))-+c;a=1+Math.round(a/6048E5);return Gb(a,b)}}function hc(b,a){return 0>=b.getFullYear()?a.ERAS[0]:a.ERAS[1]}function zd(b){function a(a){var b;if(b=a.match(c)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,l=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=Y(b[9]+b[10]),g=Y(b[9]+b[11]));h.call(a,Y(b[1]),\r\nY(b[2])-1,Y(b[3]));f=Y(b[4]||0)-f;g=Y(b[5]||0)-g;h=Y(b[6]||0);b=Math.round(1E3*parseFloat(\"0.\"+(b[7]||0)));l.call(a,f,g,h,b)}return a}var c=/^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;return function(c,e,f){var g=\"\",h=[],l,k;e=e||\"mediumDate\";e=b.DATETIME_FORMATS[e]||e;I(c)&&(c=fg.test(c)?Y(c):a(c));X(c)&&(c=new Date(c));if(!ca(c)||!isFinite(c.getTime()))return c;for(;e;)(k=gg.exec(e))?(h=cb(h,k,1),e=h.pop()):(h.push(e),e=null);var n=c.getTimezoneOffset();\r\nf&&(n=vc(f,c.getTimezoneOffset()),c=Ob(c,f,!0));m(h,function(a){l=hg[a];g+=l?l(c,b.DATETIME_FORMATS,n):a.replace(/(^'|'$)/g,\"\").replace(/''/g,\"'\")});return g}}function ag(){return function(b,a){y(a)&&(a=2);return db(b,a)}}function bg(){return function(b,a,c){a=Infinity===Math.abs(Number(a))?Number(a):Y(a);if(isNaN(a))return b;X(b)&&(b=b.toString());if(!G(b)&&!I(b))return b;c=!c||isNaN(c)?0:Y(c);c=0>c&&c>=-b.length?b.length+c:c;return 0<=a?b.slice(c,c+a):0===c?b.slice(a,b.length):b.slice(Math.max(0,\r\nc+a),c)}}function Bd(b){function a(a,c){c=c?-1:1;return a.map(function(a){var d=1,h=Za;if(C(a))h=a;else if(I(a)){if(\"+\"==a.charAt(0)||\"-\"==a.charAt(0))d=\"-\"==a.charAt(0)?-1:1,a=a.substring(1);if(\"\"!==a&&(h=b(a),h.constant))var l=h(),h=function(a){return a[l]}}return{get:h,descending:d*c}})}function c(a){switch(typeof a){case \"number\":case \"boolean\":case \"string\":return!0;default:return!1}}return function(b,e,f){if(!Da(b))return b;G(e)||(e=[e]);0===e.length&&(e=[\"+\"]);var g=a(e,f);g.push({get:function(){return{}},\r\ndescending:f?-1:1});b=Array.prototype.map.call(b,function(a,b){return{value:a,predicateValues:g.map(function(d){var e=d.get(a);d=typeof e;if(null===e)d=\"string\",e=\"null\";else if(\"string\"===d)e=e.toLowerCase();else if(\"object\"===d)a:{if(\"function\"===typeof e.valueOf&&(e=e.valueOf(),c(e)))break a;if(pc(e)&&(e=e.toString(),c(e)))break a;e=b}return{value:e,type:d}})}});b.sort(function(a,b){for(var c=0,d=0,e=g.length;d<e;++d){var c=a.predicateValues[d],f=b.predicateValues[d],u=0;c.type===f.type?c.value!==\r\nf.value&&(u=c.value<f.value?-1:1):u=c.type<f.type?-1:1;if(c=u*g[d].descending)break}return c});return b=b.map(function(a){return a.value})}}function Ma(b){C(b)&&(b={link:b});b.restrict=b.restrict||\"AC\";return qa(b)}function Gd(b,a,c,d,e){var f=this,g=[],h=f.$$parentForm=b.parent().controller(\"form\")||Ib;f.$error={};f.$$success={};f.$pending=t;f.$name=e(a.name||a.ngForm||\"\")(c);f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=!1;f.$submitted=!1;h.$addControl(f);f.$rollbackViewValue=function(){m(g,\r\nfunction(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){m(g,function(a){a.$commitViewValue()})};f.$addControl=function(a){Ta(a.$name,\"input\");g.push(a);a.$name&&(f[a.$name]=a)};f.$$renameControl=function(a,b){var c=a.$name;f[c]===a&&delete f[c];f[b]=a;a.$name=b};f.$removeControl=function(a){a.$name&&f[a.$name]===a&&delete f[a.$name];m(f.$pending,function(b,c){f.$setValidity(c,null,a)});m(f.$error,function(b,c){f.$setValidity(c,null,a)});m(f.$$success,function(b,c){f.$setValidity(c,null,\r\na)});bb(g,a)};Hd({ctrl:this,$element:b,set:function(a,b,c){var d=a[b];d?-1===d.indexOf(c)&&d.push(c):a[b]=[c]},unset:function(a,b,c){var d=a[b];d&&(bb(d,c),0===d.length&&delete a[b])},parentForm:h,$animate:d});f.$setDirty=function(){d.removeClass(b,Xa);d.addClass(b,Jb);f.$dirty=!0;f.$pristine=!1;h.$setDirty()};f.$setPristine=function(){d.setClass(b,Xa,Jb+\" ng-submitted\");f.$dirty=!1;f.$pristine=!0;f.$submitted=!1;m(g,function(a){a.$setPristine()})};f.$setUntouched=function(){m(g,function(a){a.$setUntouched()})};\r\nf.$setSubmitted=function(){d.addClass(b,\"ng-submitted\");f.$submitted=!0;h.$setSubmitted()}}function ic(b){b.$formatters.push(function(a){return b.$isEmpty(a)?a:a.toString()})}function ib(b,a,c,d,e,f){var g=M(a[0].type);if(!e.android){var h=!1;a.on(\"compositionstart\",function(a){h=!0});a.on(\"compositionend\",function(){h=!1;l()})}var l=function(b){k&&(f.defer.cancel(k),k=null);if(!h){var e=a.val();b=b&&b.type;\"password\"===g||c.ngTrim&&\"false\"===c.ngTrim||(e=T(e));(d.$viewValue!==e||\"\"===e&&d.$$hasNativeValidators)&&\r\nd.$setViewValue(e,b)}};if(e.hasEvent(\"input\"))a.on(\"input\",l);else{var k,n=function(a,b,c){k||(k=f.defer(function(){k=null;b&&b.value===c||l(a)}))};a.on(\"keydown\",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||n(a,this,this.value)});if(e.hasEvent(\"paste\"))a.on(\"paste cut\",n)}a.on(\"change\",l);d.$render=function(){var b=d.$isEmpty(d.$viewValue)?\"\":d.$viewValue;a.val()!==b&&a.val(b)}}function Kb(b,a){return function(c,d){var e,f;if(ca(c))return c;if(I(c)){'\"'==c.charAt(0)&&'\"'==c.charAt(c.length-\r\n1)&&(c=c.substring(1,c.length-1));if(ig.test(c))return new Date(c);b.lastIndex=0;if(e=b.exec(c))return e.shift(),f=d?{yyyy:d.getFullYear(),MM:d.getMonth()+1,dd:d.getDate(),HH:d.getHours(),mm:d.getMinutes(),ss:d.getSeconds(),sss:d.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},m(e,function(b,c){c<a.length&&(f[a[c]]=+b)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function jb(b,a,c,d){return function(e,f,g,h,l,k,n){function q(a){return a&&!(a.getTime&&\r\na.getTime()!==a.getTime())}function r(a){return x(a)?ca(a)?a:c(a):t}Id(e,f,g,h);ib(e,f,g,h,l,k);var u=h&&h.$options&&h.$options.timezone,m;h.$$parserName=b;h.$parsers.push(function(b){return h.$isEmpty(b)?null:a.test(b)?(b=c(b,m),u&&(b=Ob(b,u)),b):t});h.$formatters.push(function(a){if(a&&!ca(a))throw kb(\"datefmt\",a);if(q(a))return(m=a)&&u&&(m=Ob(m,u,!0)),n(\"date\")(a,d,u);m=null;return\"\"});if(x(g.min)||g.ngMin){var s;h.$validators.min=function(a){return!q(a)||y(s)||c(a)>=s};g.$observe(\"min\",function(a){s=\r\nr(a);h.$validate()})}if(x(g.max)||g.ngMax){var w;h.$validators.max=function(a){return!q(a)||y(w)||c(a)<=w};g.$observe(\"max\",function(a){w=r(a);h.$validate()})}}}function Id(b,a,c,d){(d.$$hasNativeValidators=D(a[0].validity))&&d.$parsers.push(function(b){var c=a.prop(\"validity\")||{};return c.badInput&&!c.typeMismatch?t:b})}function Jd(b,a,c,d,e){if(x(d)){b=b(d);if(!b.constant)throw kb(\"constexpr\",c,d);return b(a)}return e}function jc(b,a){b=\"ngClass\"+b;return[\"$animate\",function(c){function d(a,b){var c=\r\n[],d=0;a:for(;d<a.length;d++){for(var e=a[d],n=0;n<b.length;n++)if(e==b[n])continue a;c.push(e)}return c}function e(a){var b=[];return G(a)?(m(a,function(a){b=b.concat(e(a))}),b):I(a)?a.split(\" \"):D(a)?(m(a,function(a,c){a&&(b=b.concat(c.split(\" \")))}),b):a}return{restrict:\"AC\",link:function(f,g,h){function l(a,b){var c=g.data(\"$classCounts\")||ga(),d=[];m(a,function(a){if(0<b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0<b)&&d.push(a)});g.data(\"$classCounts\",c);return d.join(\" \")}function k(b){if(!0===a||f.$index%\r\n2===a){var k=e(b||[]);if(!n){var m=l(k,1);h.$addClass(m)}else if(!ka(b,n)){var s=e(n),m=d(k,s),k=d(s,k),m=l(m,1),k=l(k,-1);m&&m.length&&c.addClass(g,m);k&&k.length&&c.removeClass(g,k)}}n=ia(b)}var n;f.$watch(h[b],k,!0);h.$observe(\"class\",function(a){k(f.$eval(h[b]))});\"ngClass\"!==b&&f.$watch(\"$index\",function(c,d){var g=c&1;if(g!==(d&1)){var k=e(f.$eval(h[b]));g===a?(g=l(k,1),h.$addClass(g)):(g=l(k,-1),h.$removeClass(g))}})}}}]}function Hd(b){function a(a,b){b&&!f[a]?(k.addClass(e,a),f[a]=!0):!b&&\r\nf[a]&&(k.removeClass(e,a),f[a]=!1)}function c(b,c){b=b?\"-\"+zc(b,\"-\"):\"\";a(lb+b,!0===c);a(Kd+b,!1===c)}var d=b.ctrl,e=b.$element,f={},g=b.set,h=b.unset,l=b.parentForm,k=b.$animate;f[Kd]=!(f[lb]=e.hasClass(lb));d.$setValidity=function(b,e,f){e===t?(d.$pending||(d.$pending={}),g(d.$pending,b,f)):(d.$pending&&h(d.$pending,b,f),Ld(d.$pending)&&(d.$pending=t));ab(e)?e?(h(d.$error,b,f),g(d.$$success,b,f)):(g(d.$error,b,f),h(d.$$success,b,f)):(h(d.$error,b,f),h(d.$$success,b,f));d.$pending?(a(Md,!0),d.$valid=\r\nd.$invalid=t,c(\"\",null)):(a(Md,!1),d.$valid=Ld(d.$error),d.$invalid=!d.$valid,c(\"\",d.$valid));e=d.$pending&&d.$pending[b]?t:d.$error[b]?!1:d.$$success[b]?!0:null;c(b,e);l.$setValidity(b,e,d)}}function Ld(b){if(b)for(var a in b)if(b.hasOwnProperty(a))return!1;return!0}var jg=/^\\/(.+)\\/([a-z]*)$/,M=function(b){return I(b)?b.toLowerCase():b},Na=Object.prototype.hasOwnProperty,rb=function(b){return I(b)?b.toUpperCase():b},Va,z,la,xa=[].slice,Mf=[].splice,kg=[].push,sa=Object.prototype.toString,qc=Object.getPrototypeOf,\r\nEa=L(\"ng\"),aa=O.angular||(O.angular={}),Rb,mb=0;Va=W.documentMode;v.$inject=[];Za.$inject=[];var G=Array.isArray,sc=/^\\[object (Uint8(Clamped)?)|(Uint16)|(Uint32)|(Int8)|(Int16)|(Int32)|(Float(32)|(64))Array\\]$/,T=function(b){return I(b)?b.trim():b},ud=function(b){return b.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")},Fa=function(){if(!x(Fa.rules)){var b=W.querySelector(\"[ng-csp]\")||W.querySelector(\"[data-ng-csp]\");if(b){var a=b.getAttribute(\"ng-csp\")||b.getAttribute(\"data-ng-csp\");\r\nFa.rules={noUnsafeEval:!a||-1!==a.indexOf(\"no-unsafe-eval\"),noInlineStyle:!a||-1!==a.indexOf(\"no-inline-style\")}}else{b=Fa;try{new Function(\"\"),a=!1}catch(c){a=!0}b.rules={noUnsafeEval:a,noInlineStyle:!1}}}return Fa.rules},ob=function(){if(x(ob.name_))return ob.name_;var b,a,c=Qa.length,d,e;for(a=0;a<c;++a)if(d=Qa[a],b=W.querySelector(\"[\"+d.replace(\":\",\"\\\\:\")+\"jq]\")){e=b.getAttribute(d+\"jq\");break}return ob.name_=e},Qa=[\"ng-\",\"data-ng-\",\"ng:\",\"x-ng-\"],be=/[A-Z]/g,Ac=!1,Qb,pa=1,Pa=3,fe={full:\"1.4.4\",\r\nmajor:1,minor:4,dot:4,codeName:\"pylon-requirement\"};R.expando=\"ng339\";var gb=R.cache={},Ef=1;R._data=function(b){return this.cache[b[this.expando]]||{}};var zf=/([\\:\\-\\_]+(.))/g,Af=/^moz([A-Z])/,lg={mouseleave:\"mouseout\",mouseenter:\"mouseover\"},Tb=L(\"jqLite\"),Df=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,Sb=/<|&#?\\w+;/,Bf=/<([\\w:]+)/,Cf=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,na={option:[1,'<select multiple=\"multiple\">',\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\r\n\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};na.optgroup=na.option;na.tbody=na.tfoot=na.colgroup=na.caption=na.thead;na.th=na.td;var Ra=R.prototype={ready:function(b){function a(){c||(c=!0,b())}var c=!1;\"complete\"===W.readyState?setTimeout(a):(this.on(\"DOMContentLoaded\",a),R(O).on(\"load\",a))},toString:function(){var b=[];m(this,function(a){b.push(\"\"+a)});return\"[\"+b.join(\", \")+\"]\"},eq:function(b){return 0<=\r\nb?z(this[b]):z(this[this.length+b])},length:0,push:kg,sort:[].sort,splice:[].splice},Ab={};m(\"multiple selected checked disabled readOnly required open\".split(\" \"),function(b){Ab[M(b)]=b});var Rc={};m(\"input select option textarea button form details\".split(\" \"),function(b){Rc[b]=!0});var Sc={ngMinlength:\"minlength\",ngMaxlength:\"maxlength\",ngMin:\"min\",ngMax:\"max\",ngPattern:\"pattern\"};m({data:Vb,removeData:ub,hasData:function(b){for(var a in gb[b.ng339])return!0;return!1}},function(b,a){R[a]=b});m({data:Vb,\r\ninheritedData:zb,scope:function(b){return z.data(b,\"$scope\")||zb(b.parentNode||b,[\"$isolateScope\",\"$scope\"])},isolateScope:function(b){return z.data(b,\"$isolateScope\")||z.data(b,\"$isolateScopeNoTemplate\")},controller:Oc,injector:function(b){return zb(b,\"$injector\")},removeAttr:function(b,a){b.removeAttribute(a)},hasClass:wb,css:function(b,a,c){a=fb(a);if(x(c))b.style[a]=c;else return b.style[a]},attr:function(b,a,c){var d=b.nodeType;if(d!==Pa&&2!==d&&8!==d)if(d=M(a),Ab[d])if(x(c))c?(b[a]=!0,b.setAttribute(a,\r\nd)):(b[a]=!1,b.removeAttribute(d));else return b[a]||(b.attributes.getNamedItem(a)||v).specified?d:t;else if(x(c))b.setAttribute(a,c);else if(b.getAttribute)return b=b.getAttribute(a,2),null===b?t:b},prop:function(b,a,c){if(x(c))b[a]=c;else return b[a]},text:function(){function b(a,b){if(y(b)){var d=a.nodeType;return d===pa||d===Pa?a.textContent:\"\"}a.textContent=b}b.$dv=\"\";return b}(),val:function(b,a){if(y(a)){if(b.multiple&&\"select\"===ta(b)){var c=[];m(b.options,function(a){a.selected&&c.push(a.value||\r\na.text)});return 0===c.length?null:c}return b.value}b.value=a},html:function(b,a){if(y(a))return b.innerHTML;tb(b,!0);b.innerHTML=a},empty:Pc},function(b,a){R.prototype[a]=function(a,d){var e,f,g=this.length;if(b!==Pc&&(2==b.length&&b!==wb&&b!==Oc?a:d)===t){if(D(a)){for(e=0;e<g;e++)if(b===Vb)b(this[e],a);else for(f in a)b(this[e],f,a[f]);return this}e=b.$dv;g=e===t?Math.min(g,1):g;for(f=0;f<g;f++){var h=b(this[f],a,d);e=e?e+h:h}return e}for(e=0;e<g;e++)b(this[e],a,d);return this}});m({removeData:ub,\r\non:function a(c,d,e,f){if(x(f))throw Tb(\"onargs\");if(Kc(c)){var g=vb(c,!0);f=g.events;var h=g.handle;h||(h=g.handle=Hf(c,f));for(var g=0<=d.indexOf(\" \")?d.split(\" \"):[d],l=g.length;l--;){d=g[l];var k=f[d];k||(f[d]=[],\"mouseenter\"===d||\"mouseleave\"===d?a(c,lg[d],function(a){var c=a.relatedTarget;c&&(c===this||this.contains(c))||h(a,d)}):\"$destroy\"!==d&&c.addEventListener(d,h,!1),k=f[d]);k.push(e)}}},off:Nc,one:function(a,c,d){a=z(a);a.on(c,function f(){a.off(c,d);a.off(c,f)});a.on(c,d)},replaceWith:function(a,\r\nc){var d,e=a.parentNode;tb(a);m(new R(c),function(c){d?e.insertBefore(c,d.nextSibling):e.replaceChild(c,a);d=c})},children:function(a){var c=[];m(a.childNodes,function(a){a.nodeType===pa&&c.push(a)});return c},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,c){var d=a.nodeType;if(d===pa||11===d){c=new R(c);for(var d=0,e=c.length;d<e;d++)a.appendChild(c[d])}},prepend:function(a,c){if(a.nodeType===pa){var d=a.firstChild;m(new R(c),function(c){a.insertBefore(c,d)})}},\r\nwrap:function(a,c){c=z(c).eq(0).clone()[0];var d=a.parentNode;d&&d.replaceChild(c,a);c.appendChild(a)},remove:Wb,detach:function(a){Wb(a,!0)},after:function(a,c){var d=a,e=a.parentNode;c=new R(c);for(var f=0,g=c.length;f<g;f++){var h=c[f];e.insertBefore(h,d.nextSibling);d=h}},addClass:yb,removeClass:xb,toggleClass:function(a,c,d){c&&m(c.split(\" \"),function(c){var f=d;y(f)&&(f=!wb(a,c));(f?yb:xb)(a,c)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},\r\nfind:function(a,c){return a.getElementsByTagName?a.getElementsByTagName(c):[]},clone:Ub,triggerHandler:function(a,c,d){var e,f,g=c.type||c,h=vb(a);if(h=(h=h&&h.events)&&h[g])e={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:v,type:g,target:a},c.type&&(e=Q(e,\r\nc)),c=ia(h),f=d?[e].concat(d):[e],m(c,function(c){e.isImmediatePropagationStopped()||c.apply(a,f)})}},function(a,c){R.prototype[c]=function(c,e,f){for(var g,h=0,l=this.length;h<l;h++)y(g)?(g=a(this[h],c,e,f),x(g)&&(g=z(g))):Mc(g,a(this[h],c,e,f));return x(g)?g:this};R.prototype.bind=R.prototype.on;R.prototype.unbind=R.prototype.off});Ua.prototype={put:function(a,c){this[Ga(a,this.nextUid)]=c},get:function(a){return this[Ga(a,this.nextUid)]},remove:function(a){var c=this[a=Ga(a,this.nextUid)];delete this[a];\r\nreturn c}};var xf=[function(){this.$get=[function(){return Ua}]}],Uc=/^[^\\(]*\\(\\s*([^\\)]*)\\)/m,mg=/,/,ng=/^\\s*(_?)(\\S+?)\\1\\s*$/,Tc=/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg,Ha=L(\"$injector\");eb.$$annotate=function(a,c,d){var e;if(\"function\"===typeof a){if(!(e=a.$inject)){e=[];if(a.length){if(c)throw I(d)&&d||(d=a.name||If(a)),Ha(\"strictdi\",d);c=a.toString().replace(Tc,\"\");c=c.match(Uc);m(c[1].split(mg),function(a){a.replace(ng,function(a,c,d){e.push(d)})})}a.$inject=e}}else G(a)?(c=a.length-1,Sa(a[c],\"fn\"),\r\ne=a.slice(0,c)):Sa(a,\"fn\",!0);return e};var Nd=L(\"$animate\"),Ue=function(){this.$get=[\"$q\",\"$$rAF\",function(a,c){function d(){}d.all=v;d.chain=v;d.prototype={end:v,cancel:v,resume:v,pause:v,complete:v,then:function(d,f){return a(function(a){c(function(){a()})}).then(d,f)}};return d}]},Te=function(){var a=new Ua,c=[];this.$get=[\"$$AnimateRunner\",\"$rootScope\",function(d,e){function f(d,f,l){var k=a.get(d);k||(a.put(d,k={}),c.push(d));d=function(a,c){var d=!1;a&&(a=I(a)?a.split(\" \"):G(a)?a:[],m(a,function(a){a&&\r\n(d=!0,k[a]=c)}));return d};f=d(f,!0);l=d(l,!1);!f&&!l||1<c.length||e.$$postDigest(function(){m(c,function(c){var d=a.get(c);if(d){var e=Jf(c.attr(\"class\")),f=\"\",g=\"\";m(d,function(a,c){a!==!!e[c]&&(a?f+=(f.length?\" \":\"\")+c:g+=(g.length?\" \":\"\")+c)});m(c,function(a){f&&yb(a,f);g&&xb(a,g)});a.remove(c)}});c.length=0})}return{enabled:v,on:v,off:v,pin:v,push:function(a,c,e,k){k&&k();e=e||{};e.from&&a.css(e.from);e.to&&a.css(e.to);(e.addClass||e.removeClass)&&f(a,e.addClass,e.removeClass);return new d}}}]},\r\nRe=[\"$provide\",function(a){var c=this;this.$$registeredAnimations=Object.create(null);this.register=function(d,e){if(d&&\".\"!==d.charAt(0))throw Nd(\"notcsel\",d);var f=d+\"-animation\";c.$$registeredAnimations[d.substr(1)]=f;a.factory(f,e)};this.classNameFilter=function(a){if(1===arguments.length&&(this.$$classNameFilter=a instanceof RegExp?a:null)&&/(\\s+|\\/)ng-animate(\\s+|\\/)/.test(this.$$classNameFilter.toString()))throw Nd(\"nongcls\",\"ng-animate\");return this.$$classNameFilter};this.$get=[\"$$animateQueue\",\r\nfunction(a){function c(a,d,e){if(e){var l;a:{for(l=0;l<e.length;l++){var k=e[l];if(1===k.nodeType){l=k;break a}}l=void 0}!l||l.parentNode||l.previousElementSibling||(e=null)}e?e.after(a):d.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.end&&a.end()},enter:function(f,g,h,l){g=g&&z(g);h=h&&z(h);g=g||h.parent();c(f,g,h);return a.push(f,\"enter\",Ia(l))},move:function(f,g,h,l){g=g&&z(g);h=h&&z(h);g=g||h.parent();c(f,g,h);return a.push(f,\"move\",Ia(l))},leave:function(c,\r\ne){return a.push(c,\"leave\",Ia(e),function(){c.remove()})},addClass:function(c,e,h){h=Ia(h);h.addClass=hb(h.addclass,e);return a.push(c,\"addClass\",h)},removeClass:function(c,e,h){h=Ia(h);h.removeClass=hb(h.removeClass,e);return a.push(c,\"removeClass\",h)},setClass:function(c,e,h,l){l=Ia(l);l.addClass=hb(l.addClass,e);l.removeClass=hb(l.removeClass,h);return a.push(c,\"setClass\",l)},animate:function(c,e,h,l,k){k=Ia(k);k.from=k.from?Q(k.from,e):e;k.to=k.to?Q(k.to,h):h;k.tempClasses=hb(k.tempClasses,l||\r\n\"ng-inline-animate\");return a.push(c,\"animate\",k)}}}]}],Se=function(){this.$get=[\"$$rAF\",\"$q\",function(a,c){var d=function(){};d.prototype={done:function(a){this.defer&&this.defer[!0===a?\"reject\":\"resolve\"]()},end:function(){this.done()},cancel:function(){this.done(!0)},getPromise:function(){this.defer||(this.defer=c.defer());return this.defer.promise},then:function(a,c){return this.getPromise().then(a,c)},\"catch\":function(a){return this.getPromise().catch(a)},\"finally\":function(a){return this.getPromise().finally(a)}};\r\nreturn function(c,f){function g(){a(function(){f.addClass&&(c.addClass(f.addClass),f.addClass=null);f.removeClass&&(c.removeClass(f.removeClass),f.removeClass=null);f.to&&(c.css(f.to),f.to=null);h||l.done();h=!0});return l}f.from&&(c.css(f.from),f.from=null);var h,l=new d;return{start:g,end:g}}}]},ea=L(\"$compile\");Cc.$inject=[\"$provide\",\"$$sanitizeUriProvider\"];var Xc=/^((?:x|data)[\\:\\-_])/i,Nf=L(\"$controller\"),Vc=/^(\\S+)(\\s+as\\s+(\\w+))?$/,$e=function(){this.$get=[\"$document\",function(a){return function(c){c?\r\n!c.nodeType&&c instanceof z&&(c=c[0]):c=a[0].body;return c.offsetWidth+1}}]},bd=\"application/json\",$b={\"Content-Type\":bd+\";charset=utf-8\"},Pf=/^\\[|^\\{(?!\\{)/,Qf={\"[\":/]$/,\"{\":/}$/},Of=/^\\)\\]\\}',?\\n/,og=L(\"$http\"),fd=function(a){return function(){throw og(\"legacy\",a);}},Ka=aa.$interpolateMinErr=L(\"$interpolate\");Ka.throwNoconcat=function(a){throw Ka(\"noconcat\",a);};Ka.interr=function(a,c){return Ka(\"interr\",a,c.toString())};var pg=/^([^\\?#]*)(\\?([^#]*))?(#(.*))?$/,Tf={http:80,https:443,ftp:21},Db=\r\nL(\"$location\"),qg={$$html5:!1,$$replace:!1,absUrl:Eb(\"$$absUrl\"),url:function(a){if(y(a))return this.$$url;var c=pg.exec(a);(c[1]||\"\"===a)&&this.path(decodeURIComponent(c[1]));(c[2]||c[1]||\"\"===a)&&this.search(c[3]||\"\");this.hash(c[5]||\"\");return this},protocol:Eb(\"$$protocol\"),host:Eb(\"$$host\"),port:Eb(\"$$port\"),path:kd(\"$$path\",function(a){a=null!==a?a.toString():\"\";return\"/\"==a.charAt(0)?a:\"/\"+a}),search:function(a,c){switch(arguments.length){case 0:return this.$$search;case 1:if(I(a)||X(a))a=\r\na.toString(),this.$$search=xc(a);else if(D(a))a=fa(a,{}),m(a,function(c,e){null==c&&delete a[e]}),this.$$search=a;else throw Db(\"isrcharg\");break;default:y(c)||null===c?delete this.$$search[a]:this.$$search[a]=c}this.$$compose();return this},hash:kd(\"$$hash\",function(a){return null!==a?a.toString():\"\"}),replace:function(){this.$$replace=!0;return this}};m([jd,cc,bc],function(a){a.prototype=Object.create(qg);a.prototype.state=function(c){if(!arguments.length)return this.$$state;if(a!==bc||!this.$$html5)throw Db(\"nostate\");\r\nthis.$$state=y(c)?null:c;return this}});var da=L(\"$parse\"),Uf=Function.prototype.call,Vf=Function.prototype.apply,Wf=Function.prototype.bind,Lb=ga();m(\"+ - * / % === !== == != < > <= >= && || ! = |\".split(\" \"),function(a){Lb[a]=!0});var rg={n:\"\\n\",f:\"\\f\",r:\"\\r\",t:\"\\t\",v:\"\\v\",\"'\":\"'\",'\"':'\"'},ec=function(a){this.options=a};ec.prototype={constructor:ec,lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'\"'===a||\"'\"===a)this.readString(a);\r\nelse if(this.isNumber(a)||\".\"===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdent(a))this.readIdent();else if(this.is(a,\"(){}[].,;:?\"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var c=a+this.peek(),d=c+this.peek(2),e=Lb[c],f=Lb[d];Lb[a]||e||f?(a=f?d:e?c:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError(\"Unexpected next character \",this.index,this.index+1)}return this.tokens},\r\nis:function(a,c){return-1!==c.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return\"0\"<=a&&\"9\">=a&&\"string\"===typeof a},isWhitespace:function(a){return\" \"===a||\"\\r\"===a||\"\\t\"===a||\"\\n\"===a||\"\\v\"===a||\"\\u00a0\"===a},isIdent:function(a){return\"a\"<=a&&\"z\">=a||\"A\"<=a&&\"Z\">=a||\"_\"===a||\"$\"===a},isExpOperator:function(a){return\"-\"===a||\"+\"===a||this.isNumber(a)},throwError:function(a,c,d){d=d||this.index;c=x(c)?\"s \"+c+\"-\"+\r\nthis.index+\" [\"+this.text.substring(c,d)+\"]\":\" \"+d;throw da(\"lexerr\",a,c,this.text);},readNumber:function(){for(var a=\"\",c=this.index;this.index<this.text.length;){var d=M(this.text.charAt(this.index));if(\".\"==d||this.isNumber(d))a+=d;else{var e=this.peek();if(\"e\"==d&&this.isExpOperator(e))a+=d;else if(this.isExpOperator(d)&&e&&this.isNumber(e)&&\"e\"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||e&&this.isNumber(e)||\"e\"!=a.charAt(a.length-1))break;else this.throwError(\"Invalid exponent\")}this.index++}this.tokens.push({index:c,\r\ntext:a,constant:!0,value:Number(a)})},readIdent:function(){for(var a=this.index;this.index<this.text.length;){var c=this.text.charAt(this.index);if(!this.isIdent(c)&&!this.isNumber(c))break;this.index++}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var c=this.index;this.index++;for(var d=\"\",e=a,f=!1;this.index<this.text.length;){var g=this.text.charAt(this.index),e=e+g;if(f)\"u\"===g?(f=this.text.substring(this.index+1,this.index+5),f.match(/[\\da-f]{4}/i)||\r\nthis.throwError(\"Invalid unicode escape [\\\\u\"+f+\"]\"),this.index+=4,d+=String.fromCharCode(parseInt(f,16))):d+=rg[g]||g,f=!1;else if(\"\\\\\"===g)f=!0;else{if(g===a){this.index++;this.tokens.push({index:c,text:e,constant:!0,value:d});return}d+=g}this.index++}this.throwError(\"Unterminated quote\",c)}};var s=function(a,c){this.lexer=a;this.options=c};s.Program=\"Program\";s.ExpressionStatement=\"ExpressionStatement\";s.AssignmentExpression=\"AssignmentExpression\";s.ConditionalExpression=\"ConditionalExpression\";\r\ns.LogicalExpression=\"LogicalExpression\";s.BinaryExpression=\"BinaryExpression\";s.UnaryExpression=\"UnaryExpression\";s.CallExpression=\"CallExpression\";s.MemberExpression=\"MemberExpression\";s.Identifier=\"Identifier\";s.Literal=\"Literal\";s.ArrayExpression=\"ArrayExpression\";s.Property=\"Property\";s.ObjectExpression=\"ObjectExpression\";s.ThisExpression=\"ThisExpression\";s.NGValueParameter=\"NGValueParameter\";s.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&\r\nthis.throwError(\"is an unexpected token\",this.tokens[0]);return a},program:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek(\"}\",\")\",\";\",\"]\")&&a.push(this.expressionStatement()),!this.expect(\";\"))return{type:s.Program,body:a}},expressionStatement:function(){return{type:s.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect(\"|\");)a=this.filter(a);return a},expression:function(){return this.assignment()},assignment:function(){var a=\r\nthis.ternary();this.expect(\"=\")&&(a={type:s.AssignmentExpression,left:a,right:this.assignment(),operator:\"=\"});return a},ternary:function(){var a=this.logicalOR(),c,d;return this.expect(\"?\")&&(c=this.expression(),this.consume(\":\"))?(d=this.expression(),{type:s.ConditionalExpression,test:a,alternate:c,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect(\"||\");)a={type:s.LogicalExpression,operator:\"||\",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=\r\nthis.equality();this.expect(\"&&\");)a={type:s.LogicalExpression,operator:\"&&\",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),c;c=this.expect(\"==\",\"!=\",\"===\",\"!==\");)a={type:s.BinaryExpression,operator:c.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),c;c=this.expect(\"<\",\">\",\"<=\",\">=\");)a={type:s.BinaryExpression,operator:c.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),\r\nc;c=this.expect(\"+\",\"-\");)a={type:s.BinaryExpression,operator:c.text,left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),c;c=this.expect(\"*\",\"/\",\"%\");)a={type:s.BinaryExpression,operator:c.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect(\"+\",\"-\",\"!\"))?{type:s.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect(\"(\")?(a=this.filterChain(),this.consume(\")\")):\r\nthis.expect(\"[\")?a=this.arrayDeclaration():this.expect(\"{\")?a=this.object():this.constants.hasOwnProperty(this.peek().text)?a=fa(this.constants[this.consume().text]):this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError(\"not a primary expression\",this.peek());for(var c;c=this.expect(\"(\",\"[\",\".\");)\"(\"===c.text?(a={type:s.CallExpression,callee:a,arguments:this.parseArguments()},this.consume(\")\")):\"[\"===c.text?(a={type:s.MemberExpression,object:a,property:this.expression(),\r\ncomputed:!0},this.consume(\"]\")):\".\"===c.text?a={type:s.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError(\"IMPOSSIBLE\");return a},filter:function(a){a=[a];for(var c={type:s.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(\":\");)a.push(this.expression());return c},parseArguments:function(){var a=[];if(\")\"!==this.peekToken().text){do a.push(this.expression());while(this.expect(\",\"))}return a},identifier:function(){var a=this.consume();a.identifier||\r\nthis.throwError(\"is not a valid identifier\",a);return{type:s.Identifier,name:a.text}},constant:function(){return{type:s.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if(\"]\"!==this.peekToken().text){do{if(this.peek(\"]\"))break;a.push(this.expression())}while(this.expect(\",\"))}this.consume(\"]\");return{type:s.ArrayExpression,elements:a}},object:function(){var a=[],c;if(\"}\"!==this.peekToken().text){do{if(this.peek(\"}\"))break;c={type:s.Property,kind:\"init\"};this.peek().constant?\r\nc.key=this.constant():this.peek().identifier?c.key=this.identifier():this.throwError(\"invalid key\",this.peek());this.consume(\":\");c.value=this.expression();a.push(c)}while(this.expect(\",\"))}this.consume(\"}\");return{type:s.ObjectExpression,properties:a}},throwError:function(a,c){throw da(\"syntax\",c.text,a,c.index+1,this.text,this.text.substring(c.index));},consume:function(a){if(0===this.tokens.length)throw da(\"ueoe\",this.text);var c=this.expect(a);c||this.throwError(\"is unexpected, expecting [\"+a+\r\n\"]\",this.peek());return c},peekToken:function(){if(0===this.tokens.length)throw da(\"ueoe\",this.text);return this.tokens[0]},peek:function(a,c,d,e){return this.peekAhead(0,a,c,d,e)},peekAhead:function(a,c,d,e,f){if(this.tokens.length>a){a=this.tokens[a];var g=a.text;if(g===c||g===d||g===e||g===f||!(c||d||e||f))return a}return!1},expect:function(a,c,d,e){return(a=this.peek(a,c,d,e))?(this.tokens.shift(),a):!1},constants:{\"true\":{type:s.Literal,value:!0},\"false\":{type:s.Literal,value:!1},\"null\":{type:s.Literal,\r\nvalue:null},undefined:{type:s.Literal,value:t},\"this\":{type:s.ThisExpression}}};rd.prototype={compile:function(a,c){var d=this,e=this.astBuilder.ast(a);this.state={nextId:0,filters:{},expensiveChecks:c,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};U(e,d.$filter);var f=\"\",g;this.stage=\"assign\";if(g=pd(e))this.state.computing=\"assign\",f=this.nextId(),this.recurse(g,f),f=\"fn.assign=\"+this.generateFunction(\"assign\",\"s,v,l\");g=nd(e.body);d.stage=\"inputs\";m(g,function(a,c){var e=\r\n\"fn\"+c;d.state[e]={vars:[],body:[],own:{}};d.state.computing=e;var f=d.nextId();d.recurse(a,f);d.return_(f);d.state.inputs.push(e);a.watchId=c});this.state.computing=\"fn\";this.stage=\"main\";this.recurse(e);f='\"'+this.USE+\" \"+this.STRICT+'\";\\n'+this.filterPrefix()+\"var fn=\"+this.generateFunction(\"fn\",\"s,l,a,i\")+f+this.watchFns()+\"return fn;\";f=(new Function(\"$filter\",\"ensureSafeMemberName\",\"ensureSafeObject\",\"ensureSafeFunction\",\"ifDefined\",\"plus\",\"text\",f))(this.$filter,Wa,Ba,ld,Xf,md,a);this.state=\r\nthis.stage=t;f.literal=qd(e);f.constant=e.constant;return f},USE:\"use\",STRICT:\"strict\",watchFns:function(){var a=[],c=this.state.inputs,d=this;m(c,function(c){a.push(\"var \"+c+\"=\"+d.generateFunction(c,\"s\"))});c.length&&a.push(\"fn.inputs=[\"+c.join(\",\")+\"];\");return a.join(\"\")},generateFunction:function(a,c){return\"function(\"+c+\"){\"+this.varsPrefix(a)+this.body(a)+\"};\"},filterPrefix:function(){var a=[],c=this;m(this.state.filters,function(d,e){a.push(d+\"=$filter(\"+c.escape(e)+\")\")});return a.length?\r\n\"var \"+a.join(\",\")+\";\":\"\"},varsPrefix:function(a){return this.state[a].vars.length?\"var \"+this.state[a].vars.join(\",\")+\";\":\"\"},body:function(a){return this.state[a].body.join(\"\")},recurse:function(a,c,d,e,f,g){var h,l,k=this,n,q;e=e||v;if(!g&&x(a.watchId))c=c||this.nextId(),this.if_(\"i\",this.lazyAssign(c,this.computedMember(\"i\",a.watchId)),this.lazyRecurse(a,c,d,e,f,!0));else switch(a.type){case s.Program:m(a.body,function(c,d){k.recurse(c.expression,t,t,function(a){l=a});d!==a.body.length-1?k.current().body.push(l,\r\n\";\"):k.return_(l)});break;case s.Literal:q=this.escape(a.value);this.assign(c,q);e(q);break;case s.UnaryExpression:this.recurse(a.argument,t,t,function(a){l=a});q=a.operator+\"(\"+this.ifDefined(l,0)+\")\";this.assign(c,q);e(q);break;case s.BinaryExpression:this.recurse(a.left,t,t,function(a){h=a});this.recurse(a.right,t,t,function(a){l=a});q=\"+\"===a.operator?this.plus(h,l):\"-\"===a.operator?this.ifDefined(h,0)+a.operator+this.ifDefined(l,0):\"(\"+h+\")\"+a.operator+\"(\"+l+\")\";this.assign(c,q);e(q);break;case s.LogicalExpression:c=\r\nc||this.nextId();k.recurse(a.left,c);k.if_(\"&&\"===a.operator?c:k.not(c),k.lazyRecurse(a.right,c));e(c);break;case s.ConditionalExpression:c=c||this.nextId();k.recurse(a.test,c);k.if_(c,k.lazyRecurse(a.alternate,c),k.lazyRecurse(a.consequent,c));e(c);break;case s.Identifier:c=c||this.nextId();d&&(d.context=\"inputs\"===k.stage?\"s\":this.assign(this.nextId(),this.getHasOwnProperty(\"l\",a.name)+\"?l:s\"),d.computed=!1,d.name=a.name);Wa(a.name);k.if_(\"inputs\"===k.stage||k.not(k.getHasOwnProperty(\"l\",a.name)),\r\nfunction(){k.if_(\"inputs\"===k.stage||\"s\",function(){f&&1!==f&&k.if_(k.not(k.nonComputedMember(\"s\",a.name)),k.lazyAssign(k.nonComputedMember(\"s\",a.name),\"{}\"));k.assign(c,k.nonComputedMember(\"s\",a.name))})},c&&k.lazyAssign(c,k.nonComputedMember(\"l\",a.name)));(k.state.expensiveChecks||Fb(a.name))&&k.addEnsureSafeObject(c);e(c);break;case s.MemberExpression:h=d&&(d.context=this.nextId())||this.nextId();c=c||this.nextId();k.recurse(a.object,h,t,function(){k.if_(k.notNull(h),function(){if(a.computed)l=\r\nk.nextId(),k.recurse(a.property,l),k.addEnsureSafeMemberName(l),f&&1!==f&&k.if_(k.not(k.computedMember(h,l)),k.lazyAssign(k.computedMember(h,l),\"{}\")),q=k.ensureSafeObject(k.computedMember(h,l)),k.assign(c,q),d&&(d.computed=!0,d.name=l);else{Wa(a.property.name);f&&1!==f&&k.if_(k.not(k.nonComputedMember(h,a.property.name)),k.lazyAssign(k.nonComputedMember(h,a.property.name),\"{}\"));q=k.nonComputedMember(h,a.property.name);if(k.state.expensiveChecks||Fb(a.property.name))q=k.ensureSafeObject(q);k.assign(c,\r\nq);d&&(d.computed=!1,d.name=a.property.name)}},function(){k.assign(c,\"undefined\")});e(c)},!!f);break;case s.CallExpression:c=c||this.nextId();a.filter?(l=k.filter(a.callee.name),n=[],m(a.arguments,function(a){var c=k.nextId();k.recurse(a,c);n.push(c)}),q=l+\"(\"+n.join(\",\")+\")\",k.assign(c,q),e(c)):(l=k.nextId(),h={},n=[],k.recurse(a.callee,l,h,function(){k.if_(k.notNull(l),function(){k.addEnsureSafeFunction(l);m(a.arguments,function(a){k.recurse(a,k.nextId(),t,function(a){n.push(k.ensureSafeObject(a))})});\r\nh.name?(k.state.expensiveChecks||k.addEnsureSafeObject(h.context),q=k.member(h.context,h.name,h.computed)+\"(\"+n.join(\",\")+\")\"):q=l+\"(\"+n.join(\",\")+\")\";q=k.ensureSafeObject(q);k.assign(c,q)},function(){k.assign(c,\"undefined\")});e(c)}));break;case s.AssignmentExpression:l=this.nextId();h={};if(!od(a.left))throw da(\"lval\");this.recurse(a.left,t,h,function(){k.if_(k.notNull(h.context),function(){k.recurse(a.right,l);k.addEnsureSafeObject(k.member(h.context,h.name,h.computed));q=k.member(h.context,h.name,\r\nh.computed)+a.operator+l;k.assign(c,q);e(c||q)})},1);break;case s.ArrayExpression:n=[];m(a.elements,function(a){k.recurse(a,k.nextId(),t,function(a){n.push(a)})});q=\"[\"+n.join(\",\")+\"]\";this.assign(c,q);e(q);break;case s.ObjectExpression:n=[];m(a.properties,function(a){k.recurse(a.value,k.nextId(),t,function(c){n.push(k.escape(a.key.type===s.Identifier?a.key.name:\"\"+a.key.value)+\":\"+c)})});q=\"{\"+n.join(\",\")+\"}\";this.assign(c,q);e(q);break;case s.ThisExpression:this.assign(c,\"s\");e(\"s\");break;case s.NGValueParameter:this.assign(c,\r\n\"v\"),e(\"v\")}},getHasOwnProperty:function(a,c){var d=a+\".\"+c,e=this.current().own;e.hasOwnProperty(d)||(e[d]=this.nextId(!1,a+\"&&(\"+this.escape(c)+\" in \"+a+\")\"));return e[d]},assign:function(a,c){if(a)return this.current().body.push(a,\"=\",c,\";\"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,c){return\"ifDefined(\"+a+\",\"+this.escape(c)+\")\"},plus:function(a,c){return\"plus(\"+a+\",\"+c+\")\"},return_:function(a){this.current().body.push(\"return \",\r\na,\";\")},if_:function(a,c,d){if(!0===a)c();else{var e=this.current().body;e.push(\"if(\",a,\"){\");c();e.push(\"}\");d&&(e.push(\"else{\"),d(),e.push(\"}\"))}},not:function(a){return\"!(\"+a+\")\"},notNull:function(a){return a+\"!=null\"},nonComputedMember:function(a,c){return a+\".\"+c},computedMember:function(a,c){return a+\"[\"+c+\"]\"},member:function(a,c,d){return d?this.computedMember(a,c):this.nonComputedMember(a,c)},addEnsureSafeObject:function(a){this.current().body.push(this.ensureSafeObject(a),\";\")},addEnsureSafeMemberName:function(a){this.current().body.push(this.ensureSafeMemberName(a),\r\n\";\")},addEnsureSafeFunction:function(a){this.current().body.push(this.ensureSafeFunction(a),\";\")},ensureSafeObject:function(a){return\"ensureSafeObject(\"+a+\",text)\"},ensureSafeMemberName:function(a){return\"ensureSafeMemberName(\"+a+\",text)\"},ensureSafeFunction:function(a){return\"ensureSafeFunction(\"+a+\",text)\"},lazyRecurse:function(a,c,d,e,f,g){var h=this;return function(){h.recurse(a,c,d,e,f,g)}},lazyAssign:function(a,c){var d=this;return function(){d.assign(a,c)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,\r\nstringEscapeFn:function(a){return\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(I(a))return\"'\"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+\"'\";if(X(a))return a.toString();if(!0===a)return\"true\";if(!1===a)return\"false\";if(null===a)return\"null\";if(\"undefined\"===typeof a)return\"undefined\";throw da(\"esc\");},nextId:function(a,c){var d=\"v\"+this.state.nextId++;a||this.current().vars.push(d+(c?\"=\"+c:\"\"));return d},current:function(){return this.state[this.state.computing]}};\r\nsd.prototype={compile:function(a,c){var d=this,e=this.astBuilder.ast(a);this.expression=a;this.expensiveChecks=c;U(e,d.$filter);var f,g;if(f=pd(e))g=this.recurse(f);f=nd(e.body);var h;f&&(h=[],m(f,function(a,c){var e=d.recurse(a);a.input=e;h.push(e);a.watchId=c}));var l=[];m(e.body,function(a){l.push(d.recurse(a.expression))});f=0===e.body.length?function(){}:1===e.body.length?l[0]:function(a,c){var d;m(l,function(e){d=e(a,c)});return d};g&&(f.assign=function(a,c,d){return g(a,d,c)});h&&(f.inputs=\r\nh);f.literal=qd(e);f.constant=e.constant;return f},recurse:function(a,c,d){var e,f,g=this,h;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case s.Literal:return this.value(a.value,c);case s.UnaryExpression:return f=this.recurse(a.argument),this[\"unary\"+a.operator](f,c);case s.BinaryExpression:return e=this.recurse(a.left),f=this.recurse(a.right),this[\"binary\"+a.operator](e,f,c);case s.LogicalExpression:return e=this.recurse(a.left),f=this.recurse(a.right),this[\"binary\"+a.operator](e,\r\nf,c);case s.ConditionalExpression:return this[\"ternary?:\"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),c);case s.Identifier:return Wa(a.name,g.expression),g.identifier(a.name,g.expensiveChecks||Fb(a.name),c,d,g.expression);case s.MemberExpression:return e=this.recurse(a.object,!1,!!d),a.computed||(Wa(a.property.name,g.expression),f=a.property.name),a.computed&&(f=this.recurse(a.property)),a.computed?this.computedMember(e,f,c,d,g.expression):this.nonComputedMember(e,f,\r\ng.expensiveChecks,c,d,g.expression);case s.CallExpression:return h=[],m(a.arguments,function(a){h.push(g.recurse(a))}),a.filter&&(f=this.$filter(a.callee.name)),a.filter||(f=this.recurse(a.callee,!0)),a.filter?function(a,d,e,g){for(var r=[],m=0;m<h.length;++m)r.push(h[m](a,d,e,g));a=f.apply(t,r,g);return c?{context:t,name:t,value:a}:a}:function(a,d,e,q){var r=f(a,d,e,q),m;if(null!=r.value){Ba(r.context,g.expression);ld(r.value,g.expression);m=[];for(var s=0;s<h.length;++s)m.push(Ba(h[s](a,d,e,q),\r\ng.expression));m=Ba(r.value.apply(r.context,m),g.expression)}return c?{value:m}:m};case s.AssignmentExpression:return e=this.recurse(a.left,!0,1),f=this.recurse(a.right),function(a,d,h,q){var m=e(a,d,h,q);a=f(a,d,h,q);Ba(m.value,g.expression);m.context[m.name]=a;return c?{value:a}:a};case s.ArrayExpression:return h=[],m(a.elements,function(a){h.push(g.recurse(a))}),function(a,d,e,f){for(var g=[],m=0;m<h.length;++m)g.push(h[m](a,d,e,f));return c?{value:g}:g};case s.ObjectExpression:return h=[],m(a.properties,\r\nfunction(a){h.push({key:a.key.type===s.Identifier?a.key.name:\"\"+a.key.value,value:g.recurse(a.value)})}),function(a,d,e,f){for(var g={},m=0;m<h.length;++m)g[h[m].key]=h[m].value(a,d,e,f);return c?{value:g}:g};case s.ThisExpression:return function(a){return c?{value:a}:a};case s.NGValueParameter:return function(a,d,e,f){return c?{value:e}:e}}},\"unary+\":function(a,c){return function(d,e,f,g){d=a(d,e,f,g);d=x(d)?+d:0;return c?{value:d}:d}},\"unary-\":function(a,c){return function(d,e,f,g){d=a(d,e,f,g);\r\nd=x(d)?-d:0;return c?{value:d}:d}},\"unary!\":function(a,c){return function(d,e,f,g){d=!a(d,e,f,g);return c?{value:d}:d}},\"binary+\":function(a,c,d){return function(e,f,g,h){var l=a(e,f,g,h);e=c(e,f,g,h);l=md(l,e);return d?{value:l}:l}},\"binary-\":function(a,c,d){return function(e,f,g,h){var l=a(e,f,g,h);e=c(e,f,g,h);l=(x(l)?l:0)-(x(e)?e:0);return d?{value:l}:l}},\"binary*\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)*c(e,f,g,h);return d?{value:e}:e}},\"binary/\":function(a,c,d){return function(e,\r\nf,g,h){e=a(e,f,g,h)/c(e,f,g,h);return d?{value:e}:e}},\"binary%\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)%c(e,f,g,h);return d?{value:e}:e}},\"binary===\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)===c(e,f,g,h);return d?{value:e}:e}},\"binary!==\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)!==c(e,f,g,h);return d?{value:e}:e}},\"binary==\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)==c(e,f,g,h);return d?{value:e}:e}},\"binary!=\":function(a,c,d){return function(e,\r\nf,g,h){e=a(e,f,g,h)!=c(e,f,g,h);return d?{value:e}:e}},\"binary<\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)<c(e,f,g,h);return d?{value:e}:e}},\"binary>\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)>c(e,f,g,h);return d?{value:e}:e}},\"binary<=\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)<=c(e,f,g,h);return d?{value:e}:e}},\"binary>=\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)>=c(e,f,g,h);return d?{value:e}:e}},\"binary&&\":function(a,c,d){return function(e,f,g,h){e=\r\na(e,f,g,h)&&c(e,f,g,h);return d?{value:e}:e}},\"binary||\":function(a,c,d){return function(e,f,g,h){e=a(e,f,g,h)||c(e,f,g,h);return d?{value:e}:e}},\"ternary?:\":function(a,c,d,e){return function(f,g,h,l){f=a(f,g,h,l)?c(f,g,h,l):d(f,g,h,l);return e?{value:f}:f}},value:function(a,c){return function(){return c?{context:t,name:t,value:a}:a}},identifier:function(a,c,d,e,f){return function(g,h,l,k){g=h&&a in h?h:g;e&&1!==e&&g&&!g[a]&&(g[a]={});h=g?g[a]:t;c&&Ba(h,f);return d?{context:g,name:a,value:h}:h}},\r\ncomputedMember:function(a,c,d,e,f){return function(g,h,l,k){var n=a(g,h,l,k),q,m;null!=n&&(q=c(g,h,l,k),Wa(q,f),e&&1!==e&&n&&!n[q]&&(n[q]={}),m=n[q],Ba(m,f));return d?{context:n,name:q,value:m}:m}},nonComputedMember:function(a,c,d,e,f,g){return function(h,l,k,n){h=a(h,l,k,n);f&&1!==f&&h&&!h[c]&&(h[c]={});l=null!=h?h[c]:t;(d||Fb(c))&&Ba(l,g);return e?{context:h,name:c,value:l}:l}},inputs:function(a,c){return function(d,e,f,g){return g?g[c]:a(d,e,f)}}};var fc=function(a,c,d){this.lexer=a;this.$filter=\r\nc;this.options=d;this.ast=new s(this.lexer);this.astCompiler=d.csp?new sd(this.ast,c):new rd(this.ast,c)};fc.prototype={constructor:fc,parse:function(a){return this.astCompiler.compile(a,this.options.expensiveChecks)}};ga();ga();var Yf=Object.prototype.valueOf,Ca=L(\"$sce\"),oa={HTML:\"html\",CSS:\"css\",URL:\"url\",RESOURCE_URL:\"resourceUrl\",JS:\"js\"},ea=L(\"$compile\"),Z=W.createElement(\"a\"),wd=Aa(O.location.href);xd.$inject=[\"$document\"];Jc.$inject=[\"$provide\"];yd.$inject=[\"$locale\"];Ad.$inject=[\"$locale\"];\r\nvar Dd=\".\",hg={yyyy:$(\"FullYear\",4),yy:$(\"FullYear\",2,0,!0),y:$(\"FullYear\",1),MMMM:Hb(\"Month\"),MMM:Hb(\"Month\",!0),MM:$(\"Month\",2,1),M:$(\"Month\",1,1),dd:$(\"Date\",2),d:$(\"Date\",1),HH:$(\"Hours\",2),H:$(\"Hours\",1),hh:$(\"Hours\",2,-12),h:$(\"Hours\",1,-12),mm:$(\"Minutes\",2),m:$(\"Minutes\",1),ss:$(\"Seconds\",2),s:$(\"Seconds\",1),sss:$(\"Milliseconds\",3),EEEE:Hb(\"Day\"),EEE:Hb(\"Day\",!0),a:function(a,c){return 12>a.getHours()?c.AMPMS[0]:c.AMPMS[1]},Z:function(a,c,d){a=-1*d;return a=(0<=a?\"+\":\"\")+(Gb(Math[0<a?\"floor\":\r\n\"ceil\"](a/60),2)+Gb(Math.abs(a%60),2))},ww:Fd(2),w:Fd(1),G:hc,GG:hc,GGG:hc,GGGG:function(a,c){return 0>=a.getFullYear()?c.ERANAMES[0]:c.ERANAMES[1]}},gg=/((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,fg=/^\\-?\\d+$/;zd.$inject=[\"$locale\"];var cg=qa(M),dg=qa(rb);Bd.$inject=[\"$parse\"];var he=qa({restrict:\"E\",compile:function(a,c){if(!c.href&&!c.xlinkHref)return function(a,c){if(\"a\"===c[0].nodeName.toLowerCase()){var f=\"[object SVGAnimatedString]\"===sa.call(c.prop(\"href\"))?\r\n\"xlink:href\":\"href\";c.on(\"click\",function(a){c.attr(f)||a.preventDefault()})}}}}),sb={};m(Ab,function(a,c){function d(a,d,f){a.$watch(f[e],function(a){f.$set(c,!!a)})}if(\"multiple\"!=a){var e=va(\"ng-\"+c),f=d;\"checked\"===a&&(f=function(a,c,f){f.ngModel!==f[e]&&d(a,c,f)});sb[e]=function(){return{restrict:\"A\",priority:100,link:f}}}});m(Sc,function(a,c){sb[c]=function(){return{priority:100,link:function(a,e,f){if(\"ngPattern\"===c&&\"/\"==f.ngPattern.charAt(0)&&(e=f.ngPattern.match(jg))){f.$set(\"ngPattern\",\r\nnew RegExp(e[1],e[2]));return}a.$watch(f[c],function(a){f.$set(c,a)})}}}});m([\"src\",\"srcset\",\"href\"],function(a){var c=va(\"ng-\"+a);sb[c]=function(){return{priority:99,link:function(d,e,f){var g=a,h=a;\"href\"===a&&\"[object SVGAnimatedString]\"===sa.call(e.prop(\"href\"))&&(h=\"xlinkHref\",f.$attr[h]=\"xlink:href\",g=null);f.$observe(c,function(c){c?(f.$set(h,c),Va&&g&&e.prop(g,f[h])):\"href\"===a&&f.$set(h,null)})}}}});var Ib={$addControl:v,$$renameControl:function(a,c){a.$name=c},$removeControl:v,$setValidity:v,\r\n$setDirty:v,$setPristine:v,$setSubmitted:v};Gd.$inject=[\"$element\",\"$attrs\",\"$scope\",\"$animate\",\"$interpolate\"];var Od=function(a){return[\"$timeout\",\"$parse\",function(c,d){function e(a){return\"\"===a?d('this[\"\"]').assign:d(a).assign||v}return{name:\"form\",restrict:a?\"EAC\":\"E\",controller:Gd,compile:function(d,g){d.addClass(Xa).addClass(lb);var h=g.name?\"name\":a&&g.ngForm?\"ngForm\":!1;return{pre:function(a,d,f,g){if(!(\"action\"in f)){var m=function(c){a.$apply(function(){g.$commitViewValue();g.$setSubmitted()});\r\nc.preventDefault()};d[0].addEventListener(\"submit\",m,!1);d.on(\"$destroy\",function(){c(function(){d[0].removeEventListener(\"submit\",m,!1)},0,!1)})}var s=g.$$parentForm,B=h?e(g.$name):v;h&&(B(a,g),f.$observe(h,function(c){g.$name!==c&&(B(a,t),s.$$renameControl(g,c),B=e(g.$name),B(a,g))}));d.on(\"$destroy\",function(){s.$removeControl(g);B(a,t);Q(g,Ib)})}}}}}]},ie=Od(),ve=Od(!0),ig=/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/,sg=/^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/,\r\ntg=/^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,ug=/^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))([eE][+-]?\\d+)?\\s*$/,Pd=/^(\\d{4})-(\\d{2})-(\\d{2})$/,Qd=/^(\\d{4})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,kc=/^(\\d{4})-W(\\d\\d)$/,Rd=/^(\\d{4})-(\\d\\d)$/,Sd=/^(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,Td={text:function(a,c,d,e,f,g){ib(a,c,d,e,f,g);ic(e)},date:jb(\"date\",Pd,Kb(Pd,[\"yyyy\",\"MM\",\"dd\"]),\"yyyy-MM-dd\"),\"datetime-local\":jb(\"datetimelocal\",Qd,Kb(Qd,\r\n\"yyyy MM dd HH mm ss sss\".split(\" \")),\"yyyy-MM-ddTHH:mm:ss.sss\"),time:jb(\"time\",Sd,Kb(Sd,[\"HH\",\"mm\",\"ss\",\"sss\"]),\"HH:mm:ss.sss\"),week:jb(\"week\",kc,function(a,c){if(ca(a))return a;if(I(a)){kc.lastIndex=0;var d=kc.exec(a);if(d){var e=+d[1],f=+d[2],g=d=0,h=0,l=0,k=Ed(e),f=7*(f-1);c&&(d=c.getHours(),g=c.getMinutes(),h=c.getSeconds(),l=c.getMilliseconds());return new Date(e,0,k.getDate()+f,d,g,h,l)}}return NaN},\"yyyy-Www\"),month:jb(\"month\",Rd,Kb(Rd,[\"yyyy\",\"MM\"]),\"yyyy-MM\"),number:function(a,c,d,e,f,g){Id(a,\r\nc,d,e);ib(a,c,d,e,f,g);e.$$parserName=\"number\";e.$parsers.push(function(a){return e.$isEmpty(a)?null:ug.test(a)?parseFloat(a):t});e.$formatters.push(function(a){if(!e.$isEmpty(a)){if(!X(a))throw kb(\"numfmt\",a);a=a.toString()}return a});if(x(d.min)||d.ngMin){var h;e.$validators.min=function(a){return e.$isEmpty(a)||y(h)||a>=h};d.$observe(\"min\",function(a){x(a)&&!X(a)&&(a=parseFloat(a,10));h=X(a)&&!isNaN(a)?a:t;e.$validate()})}if(x(d.max)||d.ngMax){var l;e.$validators.max=function(a){return e.$isEmpty(a)||\r\ny(l)||a<=l};d.$observe(\"max\",function(a){x(a)&&!X(a)&&(a=parseFloat(a,10));l=X(a)&&!isNaN(a)?a:t;e.$validate()})}},url:function(a,c,d,e,f,g){ib(a,c,d,e,f,g);ic(e);e.$$parserName=\"url\";e.$validators.url=function(a,c){var d=a||c;return e.$isEmpty(d)||sg.test(d)}},email:function(a,c,d,e,f,g){ib(a,c,d,e,f,g);ic(e);e.$$parserName=\"email\";e.$validators.email=function(a,c){var d=a||c;return e.$isEmpty(d)||tg.test(d)}},radio:function(a,c,d,e){y(d.name)&&c.attr(\"name\",++mb);c.on(\"click\",function(a){c[0].checked&&\r\ne.$setViewValue(d.value,a&&a.type)});e.$render=function(){c[0].checked=d.value==e.$viewValue};d.$observe(\"value\",e.$render)},checkbox:function(a,c,d,e,f,g,h,l){var k=Jd(l,a,\"ngTrueValue\",d.ngTrueValue,!0),n=Jd(l,a,\"ngFalseValue\",d.ngFalseValue,!1);c.on(\"click\",function(a){e.$setViewValue(c[0].checked,a&&a.type)});e.$render=function(){c[0].checked=e.$viewValue};e.$isEmpty=function(a){return!1===a};e.$formatters.push(function(a){return ka(a,k)});e.$parsers.push(function(a){return a?k:n})},hidden:v,\r\nbutton:v,submit:v,reset:v,file:v},Dc=[\"$browser\",\"$sniffer\",\"$filter\",\"$parse\",function(a,c,d,e){return{restrict:\"E\",require:[\"?ngModel\"],link:{pre:function(f,g,h,l){l[0]&&(Td[M(h.type)]||Td.text)(f,g,h,l[0],c,a,d,e)}}}}],vg=/^(true|false|\\d+)$/,Ne=function(){return{restrict:\"A\",priority:100,compile:function(a,c){return vg.test(c.ngValue)?function(a,c,f){f.$set(\"value\",a.$eval(f.ngValue))}:function(a,c,f){a.$watch(f.ngValue,function(a){f.$set(\"value\",a)})}}}},ne=[\"$compile\",function(a){return{restrict:\"AC\",\r\ncompile:function(c){a.$$addBindingClass(c);return function(c,e,f){a.$$addBindingInfo(e,f.ngBind);e=e[0];c.$watch(f.ngBind,function(a){e.textContent=a===t?\"\":a})}}}}],pe=[\"$interpolate\",\"$compile\",function(a,c){return{compile:function(d){c.$$addBindingClass(d);return function(d,f,g){d=a(f.attr(g.$attr.ngBindTemplate));c.$$addBindingInfo(f,d.expressions);f=f[0];g.$observe(\"ngBindTemplate\",function(a){f.textContent=a===t?\"\":a})}}}}],oe=[\"$sce\",\"$parse\",\"$compile\",function(a,c,d){return{restrict:\"A\",\r\ncompile:function(e,f){var g=c(f.ngBindHtml),h=c(f.ngBindHtml,function(a){return(a||\"\").toString()});d.$$addBindingClass(e);return function(c,e,f){d.$$addBindingInfo(e,f.ngBindHtml);c.$watch(h,function(){e.html(a.getTrustedHtml(g(c))||\"\")})}}}}],Me=qa({restrict:\"A\",require:\"ngModel\",link:function(a,c,d,e){e.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),qe=jc(\"\",!0),se=jc(\"Odd\",0),re=jc(\"Even\",1),te=Ma({compile:function(a,c){c.$set(\"ngCloak\",t);a.removeClass(\"ng-cloak\")}}),ue=[function(){return{restrict:\"A\",\r\nscope:!0,controller:\"@\",priority:500}}],Ic={},wg={blur:!0,focus:!0};m(\"click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste\".split(\" \"),function(a){var c=va(\"ng-\"+a);Ic[c]=[\"$parse\",\"$rootScope\",function(d,e){return{restrict:\"A\",compile:function(f,g){var h=d(g[c],null,!0);return function(c,d){d.on(a,function(d){var f=function(){h(c,{$event:d})};wg[a]&&e.$$phase?c.$evalAsync(f):c.$apply(f)})}}}}]});var xe=[\"$animate\",\r\nfunction(a){return{multiElement:!0,transclude:\"element\",priority:600,terminal:!0,restrict:\"A\",$$tlb:!0,link:function(c,d,e,f,g){var h,l,k;c.$watch(e.ngIf,function(c){c?l||g(function(c,f){l=f;c[c.length++]=W.createComment(\" end ngIf: \"+e.ngIf+\" \");h={clone:c};a.enter(c,d.parent(),d)}):(k&&(k.remove(),k=null),l&&(l.$destroy(),l=null),h&&(k=qb(h.clone),a.leave(k).then(function(){k=null}),h=null))})}}}],ye=[\"$templateRequest\",\"$anchorScroll\",\"$animate\",function(a,c,d){return{restrict:\"ECA\",priority:400,\r\nterminal:!0,transclude:\"element\",controller:aa.noop,compile:function(e,f){var g=f.ngInclude||f.src,h=f.onload||\"\",l=f.autoscroll;return function(e,f,m,r,s){var t=0,v,w,p,A=function(){w&&(w.remove(),w=null);v&&(v.$destroy(),v=null);p&&(d.leave(p).then(function(){w=null}),w=p,p=null)};e.$watch(g,function(g){var m=function(){!x(l)||l&&!e.$eval(l)||c()},q=++t;g?(a(g,!0).then(function(a){if(q===t){var c=e.$new();r.template=a;a=s(c,function(a){A();d.enter(a,null,f).then(m)});v=c;p=a;v.$emit(\"$includeContentLoaded\",\r\ng);e.$eval(h)}},function(){q===t&&(A(),e.$emit(\"$includeContentError\",g))}),e.$emit(\"$includeContentRequested\",g)):(A(),r.template=null)})}}}}],Pe=[\"$compile\",function(a){return{restrict:\"ECA\",priority:-400,require:\"ngInclude\",link:function(c,d,e,f){/SVG/.test(d[0].toString())?(d.empty(),a(Lc(f.template,W).childNodes)(c,function(a){d.append(a)},{futureParentElement:d})):(d.html(f.template),a(d.contents())(c))}}}],ze=Ma({priority:450,compile:function(){return{pre:function(a,c,d){a.$eval(d.ngInit)}}}}),\r\nLe=function(){return{restrict:\"A\",priority:100,require:\"ngModel\",link:function(a,c,d,e){var f=c.attr(d.$attr.ngList)||\", \",g=\"false\"!==d.ngTrim,h=g?T(f):f;e.$parsers.push(function(a){if(!y(a)){var c=[];a&&m(a.split(h),function(a){a&&c.push(g?T(a):a)});return c}});e.$formatters.push(function(a){return G(a)?a.join(f):t});e.$isEmpty=function(a){return!a||!a.length}}}},lb=\"ng-valid\",Kd=\"ng-invalid\",Xa=\"ng-pristine\",Jb=\"ng-dirty\",Md=\"ng-pending\",kb=L(\"ngModel\"),xg=[\"$scope\",\"$exceptionHandler\",\"$attrs\",\r\n\"$element\",\"$parse\",\"$animate\",\"$timeout\",\"$rootScope\",\"$q\",\"$interpolate\",function(a,c,d,e,f,g,h,l,k,n){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=t;this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=t;this.$name=n(d.name||\"\",!1)(a);var q=f(d.ngModel),r=q.assign,s=q,B=r,\r\nK=null,w,p=this;this.$$setOptions=function(a){if((p.$options=a)&&a.getterSetter){var c=f(d.ngModel+\"()\"),g=f(d.ngModel+\"($$$p)\");s=function(a){var d=q(a);C(d)&&(d=c(a));return d};B=function(a,c){C(q(a))?g(a,{$$$p:p.$modelValue}):r(a,p.$modelValue)}}else if(!q.assign)throw kb(\"nonassign\",d.ngModel,ua(e));};this.$render=v;this.$isEmpty=function(a){return y(a)||\"\"===a||null===a||a!==a};var A=e.inheritedData(\"$formController\")||Ib,z=0;Hd({ctrl:this,$element:e,set:function(a,c){a[c]=!0},unset:function(a,\r\nc){delete a[c]},parentForm:A,$animate:g});this.$setPristine=function(){p.$dirty=!1;p.$pristine=!0;g.removeClass(e,Jb);g.addClass(e,Xa)};this.$setDirty=function(){p.$dirty=!0;p.$pristine=!1;g.removeClass(e,Xa);g.addClass(e,Jb);A.$setDirty()};this.$setUntouched=function(){p.$touched=!1;p.$untouched=!0;g.setClass(e,\"ng-untouched\",\"ng-touched\")};this.$setTouched=function(){p.$touched=!0;p.$untouched=!1;g.setClass(e,\"ng-touched\",\"ng-untouched\")};this.$rollbackViewValue=function(){h.cancel(K);p.$viewValue=\r\np.$$lastCommittedViewValue;p.$render()};this.$validate=function(){if(!X(p.$modelValue)||!isNaN(p.$modelValue)){var a=p.$$rawModelValue,c=p.$valid,d=p.$modelValue,e=p.$options&&p.$options.allowInvalid;p.$$runValidators(a,p.$$lastCommittedViewValue,function(f){e||c===f||(p.$modelValue=f?a:t,p.$modelValue!==d&&p.$$writeModelToScope())})}};this.$$runValidators=function(a,c,d){function e(){var d=!0;m(p.$validators,function(e,f){var h=e(a,c);d=d&&h;g(f,h)});return d?!0:(m(p.$asyncValidators,function(a,\r\nc){g(c,null)}),!1)}function f(){var d=[],e=!0;m(p.$asyncValidators,function(f,h){var k=f(a,c);if(!k||!C(k.then))throw kb(\"$asyncValidators\",k);g(h,t);d.push(k.then(function(){g(h,!0)},function(a){e=!1;g(h,!1)}))});d.length?k.all(d).then(function(){h(e)},v):h(!0)}function g(a,c){l===z&&p.$setValidity(a,c)}function h(a){l===z&&d(a)}z++;var l=z;(function(){var a=p.$$parserName||\"parse\";if(w===t)g(a,null);else return w||(m(p.$validators,function(a,c){g(c,null)}),m(p.$asyncValidators,function(a,c){g(c,\r\nnull)})),g(a,w),w;return!0})()?e()?f():h(!1):h(!1)};this.$commitViewValue=function(){var a=p.$viewValue;h.cancel(K);if(p.$$lastCommittedViewValue!==a||\"\"===a&&p.$$hasNativeValidators)p.$$lastCommittedViewValue=a,p.$pristine&&this.$setDirty(),this.$$parseAndValidate()};this.$$parseAndValidate=function(){var c=p.$$lastCommittedViewValue;if(w=y(c)?t:!0)for(var d=0;d<p.$parsers.length;d++)if(c=p.$parsers[d](c),y(c)){w=!1;break}X(p.$modelValue)&&isNaN(p.$modelValue)&&(p.$modelValue=s(a));var e=p.$modelValue,\r\nf=p.$options&&p.$options.allowInvalid;p.$$rawModelValue=c;f&&(p.$modelValue=c,p.$modelValue!==e&&p.$$writeModelToScope());p.$$runValidators(c,p.$$lastCommittedViewValue,function(a){f||(p.$modelValue=a?c:t,p.$modelValue!==e&&p.$$writeModelToScope())})};this.$$writeModelToScope=function(){B(a,p.$modelValue);m(p.$viewChangeListeners,function(a){try{a()}catch(d){c(d)}})};this.$setViewValue=function(a,c){p.$viewValue=a;p.$options&&!p.$options.updateOnDefault||p.$$debounceViewValueCommit(c)};this.$$debounceViewValueCommit=\r\nfunction(c){var d=0,e=p.$options;e&&x(e.debounce)&&(e=e.debounce,X(e)?d=e:X(e[c])?d=e[c]:X(e[\"default\"])&&(d=e[\"default\"]));h.cancel(K);d?K=h(function(){p.$commitViewValue()},d):l.$$phase?p.$commitViewValue():a.$apply(function(){p.$commitViewValue()})};a.$watch(function(){var c=s(a);if(c!==p.$modelValue&&(p.$modelValue===p.$modelValue||c===c)){p.$modelValue=p.$$rawModelValue=c;w=t;for(var d=p.$formatters,e=d.length,f=c;e--;)f=d[e](f);p.$viewValue!==f&&(p.$viewValue=p.$$lastCommittedViewValue=f,p.$render(),\r\np.$$runValidators(c,f,v))}return c})}],Ke=[\"$rootScope\",function(a){return{restrict:\"A\",require:[\"ngModel\",\"^?form\",\"^?ngModelOptions\"],controller:xg,priority:1,compile:function(c){c.addClass(Xa).addClass(\"ng-untouched\").addClass(lb);return{pre:function(a,c,f,g){var h=g[0],l=g[1]||Ib;h.$$setOptions(g[2]&&g[2].$options);l.$addControl(h);f.$observe(\"name\",function(a){h.$name!==a&&l.$$renameControl(h,a)});a.$on(\"$destroy\",function(){l.$removeControl(h)})},post:function(c,e,f,g){var h=g[0];if(h.$options&&\r\nh.$options.updateOn)e.on(h.$options.updateOn,function(a){h.$$debounceViewValueCommit(a&&a.type)});e.on(\"blur\",function(e){h.$touched||(a.$$phase?c.$evalAsync(h.$setTouched):c.$apply(h.$setTouched))})}}}}}],yg=/(\\s+|^)default(\\s+|$)/,Oe=function(){return{restrict:\"A\",controller:[\"$scope\",\"$attrs\",function(a,c){var d=this;this.$options=fa(a.$eval(c.ngModelOptions));this.$options.updateOn!==t?(this.$options.updateOnDefault=!1,this.$options.updateOn=T(this.$options.updateOn.replace(yg,function(){d.$options.updateOnDefault=\r\n!0;return\" \"}))):this.$options.updateOnDefault=!0}]}},Ae=Ma({terminal:!0,priority:1E3}),zg=L(\"ngOptions\"),Ag=/^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?(?:\\s+disable\\s+when\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,Ie=[\"$compile\",\"$parse\",function(a,c){function d(a,d,e){function f(a,c,d,e,g){this.selectValue=a;this.viewValue=c;this.label=d;this.group=e;this.disabled=g}\r\nfunction n(a){var c;if(!s&&Da(a))c=a;else{c=[];for(var d in a)a.hasOwnProperty(d)&&\"$\"!==d.charAt(0)&&c.push(d)}return c}var m=a.match(Ag);if(!m)throw zg(\"iexp\",a,ua(d));var r=m[5]||m[7],s=m[6];a=/ as /.test(m[0])&&m[1];var t=m[9];d=c(m[2]?m[1]:r);var v=a&&c(a)||d,w=t&&c(t),p=t?function(a,c){return w(e,c)}:function(a){return Ga(a)},A=function(a,c){return p(a,C(a,c))},x=c(m[2]||m[1]),z=c(m[3]||\"\"),y=c(m[4]||\"\"),J=c(m[8]),F={},C=s?function(a,c){F[s]=c;F[r]=a;return F}:function(a){F[r]=a;return F};return{trackBy:t,\r\ngetTrackByValue:A,getWatchables:c(J,function(a){var c=[];a=a||[];for(var d=n(a),f=d.length,g=0;g<f;g++){var h=a===d?g:d[g],k=C(a[h],h),h=p(a[h],k);c.push(h);if(m[2]||m[1])h=x(e,k),c.push(h);m[4]&&(k=y(e,k),c.push(k))}return c}),getOptions:function(){for(var a=[],c={},d=J(e)||[],g=n(d),h=g.length,m=0;m<h;m++){var q=d===g?m:g[m],r=C(d[q],q),s=v(e,r),q=p(s,r),u=x(e,r),w=z(e,r),r=y(e,r),s=new f(q,s,u,w,r);a.push(s);c[q]=s}return{items:a,selectValueMap:c,getOptionFromViewValue:function(a){return c[A(a)]},\r\ngetViewValueFromOption:function(a){return t?aa.copy(a.viewValue):a.viewValue}}}}}var e=W.createElement(\"option\"),f=W.createElement(\"optgroup\");return{restrict:\"A\",terminal:!0,require:[\"select\",\"?ngModel\"],link:function(c,h,l,k){function n(a,c){a.element=c;c.disabled=a.disabled;a.value!==c.value&&(c.value=a.selectValue);a.label!==c.label&&(c.label=a.label,c.textContent=a.label)}function q(a,c,d,e){c&&M(c.nodeName)===d?d=c:(d=e.cloneNode(!1),c?a.insertBefore(d,c):a.appendChild(d));return d}function r(a){for(var c;a;)c=\r\na.nextSibling,Wb(a),a=c}function s(a){var c=p&&p[0],d=J&&J[0];if(c||d)for(;a&&(a===c||a===d);)a=a.nextSibling;return a}function t(){var a=F&&w.readValue();F=D.getOptions();var c={},d=h[0].firstChild;N&&h.prepend(p);d=s(d);F.items.forEach(function(a){var g,k;a.group?(g=c[a.group],g||(g=q(h[0],d,\"optgroup\",f),d=g.nextSibling,g.label=a.group,g=c[a.group]={groupElement:g,currentOptionElement:g.firstChild}),k=q(g.groupElement,g.currentOptionElement,\"option\",e),n(a,k),g.currentOptionElement=k.nextSibling):\r\n(k=q(h[0],d,\"option\",e),n(a,k),d=k.nextSibling)});Object.keys(c).forEach(function(a){r(c[a].currentOptionElement)});r(d);v.$render();if(!v.$isEmpty(a)){var g=w.readValue();(D.trackBy?ka(a,g):a===g)||(v.$setViewValue(g),v.$render())}}var v=k[1];if(v){var w=k[0];k=l.multiple;for(var p,x=0,y=h.children(),C=y.length;x<C;x++)if(\"\"===y[x].value){p=y.eq(x);break}var N=!!p,J=z(e.cloneNode(!1));J.val(\"?\");var F,D=d(l.ngOptions,h,c);k?(v.$isEmpty=function(a){return!a||0===a.length},w.writeValue=function(a){F.items.forEach(function(a){a.element.selected=\r\n!1});a&&a.forEach(function(a){(a=F.getOptionFromViewValue(a))&&!a.disabled&&(a.element.selected=!0)})},w.readValue=function(){var a=h.val()||[],c=[];m(a,function(a){(a=F.selectValueMap[a])&&!a.disabled&&c.push(F.getViewValueFromOption(a))});return c},D.trackBy&&c.$watchCollection(function(){if(G(v.$viewValue))return v.$viewValue.map(function(a){return D.getTrackByValue(a)})},function(){v.$render()})):(w.writeValue=function(a){var c=F.getOptionFromViewValue(a);c&&!c.disabled?h[0].value!==c.selectValue&&\r\n(J.remove(),N||p.remove(),h[0].value=c.selectValue,c.element.selected=!0,c.element.setAttribute(\"selected\",\"selected\")):null===a||N?(J.remove(),N||h.prepend(p),h.val(\"\"),p.prop(\"selected\",!0),p.attr(\"selected\",!0)):(N||p.remove(),h.prepend(J),h.val(\"?\"),J.prop(\"selected\",!0),J.attr(\"selected\",!0))},w.readValue=function(){var a=F.selectValueMap[h.val()];return a&&!a.disabled?(N||p.remove(),J.remove(),F.getViewValueFromOption(a)):null},D.trackBy&&c.$watch(function(){return D.getTrackByValue(v.$viewValue)},\r\nfunction(){v.$render()}));N?(p.remove(),a(p)(c),p.removeClass(\"ng-scope\")):p=z(e.cloneNode(!1));t();c.$watchCollection(D.getWatchables,t)}}}}],Be=[\"$locale\",\"$interpolate\",\"$log\",function(a,c,d){var e=/{}/g,f=/^when(Minus)?(.+)$/;return{link:function(g,h,l){function k(a){h.text(a||\"\")}var n=l.count,q=l.$attr.when&&h.attr(l.$attr.when),r=l.offset||0,s=g.$eval(q)||{},t={},x=c.startSymbol(),w=c.endSymbol(),p=x+n+\"-\"+r+w,A=aa.noop,z;m(l,function(a,c){var d=f.exec(c);d&&(d=(d[1]?\"-\":\"\")+M(d[2]),s[d]=h.attr(l.$attr[c]))});\r\nm(s,function(a,d){t[d]=c(a.replace(e,p))});g.$watch(n,function(c){var e=parseFloat(c),f=isNaN(e);f||e in s||(e=a.pluralCat(e-r));e===z||f&&X(z)&&isNaN(z)||(A(),f=t[e],y(f)?(null!=c&&d.debug(\"ngPluralize: no rule defined for '\"+e+\"' in \"+q),A=v,k()):A=g.$watch(f,k),z=e)})}}}],Ce=[\"$parse\",\"$animate\",function(a,c){var d=L(\"ngRepeat\"),e=function(a,c,d,e,k,n,m){a[d]=e;k&&(a[k]=n);a.$index=c;a.$first=0===c;a.$last=c===m-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(c&1))};return{restrict:\"A\",\r\nmultiElement:!0,transclude:\"element\",priority:1E3,terminal:!0,$$tlb:!0,compile:function(f,g){var h=g.ngRepeat,l=W.createComment(\" end ngRepeat: \"+h+\" \"),k=h.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);if(!k)throw d(\"iexp\",h);var n=k[1],q=k[2],r=k[3],s=k[4],k=n.match(/^(?:(\\s*[\\$\\w]+)|\\(\\s*([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\s*\\))$/);if(!k)throw d(\"iidexp\",n);var v=k[3]||k[1],x=k[2];if(r&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(r)||/^(null|undefined|this|\\$index|\\$first|\\$middle|\\$last|\\$even|\\$odd|\\$parent|\\$root|\\$id)$/.test(r)))throw d(\"badident\",\r\nr);var w,p,A,y,C={$id:Ga};s?w=a(s):(A=function(a,c){return Ga(c)},y=function(a){return a});return function(a,f,g,k,n){w&&(p=function(c,d,e){x&&(C[x]=c);C[v]=d;C.$index=e;return w(a,C)});var s=ga();a.$watchCollection(q,function(g){var k,q,u=f[0],w,C=ga(),D,F,I,G,L,H,M;r&&(a[r]=g);if(Da(g))L=g,q=p||A;else for(M in q=p||y,L=[],g)g.hasOwnProperty(M)&&\"$\"!==M.charAt(0)&&L.push(M);D=L.length;M=Array(D);for(k=0;k<D;k++)if(F=g===L?k:L[k],I=g[F],G=q(F,I,k),s[G])H=s[G],delete s[G],C[G]=H,M[k]=H;else{if(C[G])throw m(M,\r\nfunction(a){a&&a.scope&&(s[a.id]=a)}),d(\"dupes\",h,G,I);M[k]={id:G,scope:t,clone:t};C[G]=!0}for(w in s){H=s[w];G=qb(H.clone);c.leave(G);if(G[0].parentNode)for(k=0,q=G.length;k<q;k++)G[k].$$NG_REMOVED=!0;H.scope.$destroy()}for(k=0;k<D;k++)if(F=g===L?k:L[k],I=g[F],H=M[k],H.scope){w=u;do w=w.nextSibling;while(w&&w.$$NG_REMOVED);H.clone[0]!=w&&c.move(qb(H.clone),null,z(u));u=H.clone[H.clone.length-1];e(H.scope,k,v,I,x,F,D)}else n(function(a,d){H.scope=d;var f=l.cloneNode(!1);a[a.length++]=f;c.enter(a,\r\nnull,z(u));u=f;H.clone=a;C[H.id]=H;e(H.scope,k,v,I,x,F,D)});s=C})}}}}],De=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(c,d,e){c.$watch(e.ngShow,function(c){a[c?\"removeClass\":\"addClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],we=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(c,d,e){c.$watch(e.ngHide,function(c){a[c?\"addClass\":\"removeClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],Ee=Ma(function(a,c,d){a.$watch(d.ngStyle,\r\nfunction(a,d){d&&a!==d&&m(d,function(a,d){c.css(d,\"\")});a&&c.css(a)},!0)}),Fe=[\"$animate\",function(a){return{require:\"ngSwitch\",controller:[\"$scope\",function(){this.cases={}}],link:function(c,d,e,f){var g=[],h=[],l=[],k=[],n=function(a,c){return function(){a.splice(c,1)}};c.$watch(e.ngSwitch||e.on,function(c){var d,e;d=0;for(e=l.length;d<e;++d)a.cancel(l[d]);d=l.length=0;for(e=k.length;d<e;++d){var s=qb(h[d].clone);k[d].$destroy();(l[d]=a.leave(s)).then(n(l,d))}h.length=0;k.length=0;(g=f.cases[\"!\"+\r\nc]||f.cases[\"?\"])&&m(g,function(c){c.transclude(function(d,e){k.push(e);var f=c.element;d[d.length++]=W.createComment(\" end ngSwitchWhen: \");h.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],Ge=Ma({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,c,d,e,f){e.cases[\"!\"+d.ngSwitchWhen]=e.cases[\"!\"+d.ngSwitchWhen]||[];e.cases[\"!\"+d.ngSwitchWhen].push({transclude:f,element:c})}}),He=Ma({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,\r\nc,d,e,f){e.cases[\"?\"]=e.cases[\"?\"]||[];e.cases[\"?\"].push({transclude:f,element:c})}}),Je=Ma({restrict:\"EAC\",link:function(a,c,d,e,f){if(!f)throw L(\"ngTransclude\")(\"orphan\",ua(c));f(function(a){c.empty();c.append(a)})}}),je=[\"$templateCache\",function(a){return{restrict:\"E\",terminal:!0,compile:function(c,d){\"text/ng-template\"==d.type&&a.put(d.id,c[0].text)}}}],Bg={$setViewValue:v,$render:v},Cg=[\"$element\",\"$scope\",\"$attrs\",function(a,c,d){var e=this,f=new Ua;e.ngModelCtrl=Bg;e.unknownOption=z(W.createElement(\"option\"));\r\ne.renderUnknownOption=function(c){c=\"? \"+Ga(c)+\" ?\";e.unknownOption.val(c);a.prepend(e.unknownOption);a.val(c)};c.$on(\"$destroy\",function(){e.renderUnknownOption=v});e.removeUnknownOption=function(){e.unknownOption.parent()&&e.unknownOption.remove()};e.readValue=function(){e.removeUnknownOption();return a.val()};e.writeValue=function(c){e.hasOption(c)?(e.removeUnknownOption(),a.val(c),\"\"===c&&e.emptyOption.prop(\"selected\",!0)):null==c&&e.emptyOption?(e.removeUnknownOption(),a.val(\"\")):e.renderUnknownOption(c)};\r\ne.addOption=function(a,c){Ta(a,'\"option value\"');\"\"===a&&(e.emptyOption=c);var d=f.get(a)||0;f.put(a,d+1)};e.removeOption=function(a){var c=f.get(a);c&&(1===c?(f.remove(a),\"\"===a&&(e.emptyOption=t)):f.put(a,c-1))};e.hasOption=function(a){return!!f.get(a)}}],ke=function(){return{restrict:\"E\",require:[\"select\",\"?ngModel\"],controller:Cg,link:function(a,c,d,e){var f=e[1];if(f){var g=e[0];g.ngModelCtrl=f;f.$render=function(){g.writeValue(f.$viewValue)};c.on(\"change\",function(){a.$apply(function(){f.$setViewValue(g.readValue())})});\r\nif(d.multiple){g.readValue=function(){var a=[];m(c.find(\"option\"),function(c){c.selected&&a.push(c.value)});return a};g.writeValue=function(a){var d=new Ua(a);m(c.find(\"option\"),function(a){a.selected=x(d.get(a.value))})};var h,l=NaN;a.$watch(function(){l!==f.$viewValue||ka(h,f.$viewValue)||(h=ia(f.$viewValue),f.$render());l=f.$viewValue});f.$isEmpty=function(a){return!a||0===a.length}}}}}},me=[\"$interpolate\",function(a){function c(a){a[0].hasAttribute(\"selected\")&&(a[0].selected=!0)}return{restrict:\"E\",\r\npriority:100,compile:function(d,e){if(y(e.value)){var f=a(d.text(),!0);f||e.$set(\"value\",d.text())}return function(a,d,e){var k=d.parent(),m=k.data(\"$selectController\")||k.parent().data(\"$selectController\");m&&m.ngModelCtrl&&(f?a.$watch(f,function(a,f){e.$set(\"value\",a);f!==a&&m.removeOption(f);m.addOption(a,d);m.ngModelCtrl.$render();c(d)}):(m.addOption(e.value,d),m.ngModelCtrl.$render(),c(d)),d.on(\"$destroy\",function(){m.removeOption(e.value);m.ngModelCtrl.$render()}))}}}}],le=qa({restrict:\"E\",\r\nterminal:!1}),Fc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){e&&(d.required=!0,e.$validators.required=function(a,c){return!d.required||!e.$isEmpty(c)},d.$observe(\"required\",function(){e.$validate()}))}}},Ec=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){if(e){var f,g=d.ngPattern||d.pattern;d.$observe(\"pattern\",function(a){I(a)&&0<a.length&&(a=new RegExp(\"^\"+a+\"$\"));if(a&&!a.test)throw L(\"ngPattern\")(\"noregexp\",g,a,ua(c));f=a||t;e.$validate()});\r\ne.$validators.pattern=function(a){return e.$isEmpty(a)||y(f)||f.test(a)}}}}},Hc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){if(e){var f=-1;d.$observe(\"maxlength\",function(a){a=Y(a);f=isNaN(a)?-1:a;e.$validate()});e.$validators.maxlength=function(a,c){return 0>f||e.$isEmpty(c)||c.length<=f}}}}},Gc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){if(e){var f=0;d.$observe(\"minlength\",function(a){f=Y(a)||0;e.$validate()});e.$validators.minlength=function(a,\r\nc){return e.$isEmpty(c)||c.length>=f}}}}};O.angular.bootstrap?console.log(\"WARNING: Tried to load angular more than once.\"):(ce(),ee(aa),aa.module(\"ngLocale\",[],[\"$provide\",function(a){function c(a){a+=\"\";var c=a.indexOf(\".\");return-1==c?0:a.length-c-1}a.value(\"$locale\",{DATETIME_FORMATS:{AMPMS:[\"AM\",\"PM\"],DAY:\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),ERANAMES:[\"Before Christ\",\"Anno Domini\"],ERAS:[\"BC\",\"AD\"],FIRSTDAYOFWEEK:6,MONTH:\"January February March April May June July August September October November December\".split(\" \"),\r\nSHORTDAY:\"Sun Mon Tue Wed Thu Fri Sat\".split(\" \"),SHORTMONTH:\"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \"),WEEKENDRANGE:[5,6],fullDate:\"EEEE, MMMM d, y\",longDate:\"MMMM d, y\",medium:\"MMM d, y h:mm:ss a\",mediumDate:\"MMM d, y\",mediumTime:\"h:mm:ss a\",\"short\":\"M/d/yy h:mm a\",shortDate:\"M/d/yy\",shortTime:\"h:mm a\"},NUMBER_FORMATS:{CURRENCY_SYM:\"$\",DECIMAL_SEP:\".\",GROUP_SEP:\",\",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:\"-\",negSuf:\"\",posPre:\"\",posSuf:\"\"},{gSize:3,lgSize:3,\r\nmaxFrac:2,minFrac:2,minInt:1,negPre:\"-\\u00a4\",negSuf:\"\",posPre:\"\\u00a4\",posSuf:\"\"}]},id:\"en-us\",pluralCat:function(a,e){var f=a|0,g=e;t===g&&(g=Math.min(c(a),3));Math.pow(10,g);return 1==f&&0==g?\"one\":\"other\"}})}]),z(W).ready(function(){Zd(W,yc)}))})(window,document);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');\r\n//# sourceMappingURL=angular.min.js.map\r\n;\nreturn root.angular = angular;\n  }).apply(root, arguments);\n});\n}(this));\n\n","(function(root) {\ndefine(\"angular-route\", [\"angular\"], function() {\n  return (function() {\n/*\r\n AngularJS v1.4.4\r\n (c) 2010-2015 Google, Inc. http://angularjs.org\r\n License: MIT\r\n*/\r\n(function(p,c,C){'use strict';function v(r,h,g){return{restrict:\"ECA\",terminal:!0,priority:400,transclude:\"element\",link:function(a,f,b,d,y){function z(){k&&(g.cancel(k),k=null);l&&(l.$destroy(),l=null);m&&(k=g.leave(m),k.then(function(){k=null}),m=null)}function x(){var b=r.current&&r.current.locals;if(c.isDefined(b&&b.$template)){var b=a.$new(),d=r.current;m=y(b,function(b){g.enter(b,null,m||f).then(function(){!c.isDefined(t)||t&&!a.$eval(t)||h()});z()});l=d.scope=b;l.$emit(\"$viewContentLoaded\");\r\nl.$eval(w)}else z()}var l,m,k,t=b.autoscroll,w=b.onload||\"\";a.$on(\"$routeChangeSuccess\",x);x()}}}function A(c,h,g){return{restrict:\"ECA\",priority:-400,link:function(a,f){var b=g.current,d=b.locals;f.html(d.$template);var y=c(f.contents());b.controller&&(d.$scope=a,d=h(b.controller,d),b.controllerAs&&(a[b.controllerAs]=d),f.data(\"$ngControllerController\",d),f.children().data(\"$ngControllerController\",d));y(a)}}}p=c.module(\"ngRoute\",[\"ng\"]).provider(\"$route\",function(){function r(a,f){return c.extend(Object.create(a),\r\nf)}function h(a,c){var b=c.caseInsensitiveMatch,d={originalPath:a,regexp:a},g=d.keys=[];a=a.replace(/([().])/g,\"\\\\$1\").replace(/(\\/)?:(\\w+)([\\?\\*])?/g,function(a,c,b,d){a=\"?\"===d?d:null;d=\"*\"===d?d:null;g.push({name:b,optional:!!a});c=c||\"\";return\"\"+(a?\"\":c)+\"(?:\"+(a?c:\"\")+(d&&\"(.+?)\"||\"([^/]+)\")+(a||\"\")+\")\"+(a||\"\")}).replace(/([\\/$\\*])/g,\"\\\\$1\");d.regexp=new RegExp(\"^\"+a+\"$\",b?\"i\":\"\");return d}var g={};this.when=function(a,f){var b=c.copy(f);c.isUndefined(b.reloadOnSearch)&&(b.reloadOnSearch=!0);\r\nc.isUndefined(b.caseInsensitiveMatch)&&(b.caseInsensitiveMatch=this.caseInsensitiveMatch);g[a]=c.extend(b,a&&h(a,b));if(a){var d=\"/\"==a[a.length-1]?a.substr(0,a.length-1):a+\"/\";g[d]=c.extend({redirectTo:a},h(d,b))}return this};this.caseInsensitiveMatch=!1;this.otherwise=function(a){\"string\"===typeof a&&(a={redirectTo:a});this.when(null,a);return this};this.$get=[\"$rootScope\",\"$location\",\"$routeParams\",\"$q\",\"$injector\",\"$templateRequest\",\"$sce\",function(a,f,b,d,h,p,x){function l(b){var e=s.current;\r\n(v=(n=k())&&e&&n.$$route===e.$$route&&c.equals(n.pathParams,e.pathParams)&&!n.reloadOnSearch&&!w)||!e&&!n||a.$broadcast(\"$routeChangeStart\",n,e).defaultPrevented&&b&&b.preventDefault()}function m(){var u=s.current,e=n;if(v)u.params=e.params,c.copy(u.params,b),a.$broadcast(\"$routeUpdate\",u);else if(e||u)w=!1,(s.current=e)&&e.redirectTo&&(c.isString(e.redirectTo)?f.path(t(e.redirectTo,e.params)).search(e.params).replace():f.url(e.redirectTo(e.pathParams,f.path(),f.search())).replace()),d.when(e).then(function(){if(e){var a=\r\nc.extend({},e.resolve),b,f;c.forEach(a,function(b,e){a[e]=c.isString(b)?h.get(b):h.invoke(b,null,null,e)});c.isDefined(b=e.template)?c.isFunction(b)&&(b=b(e.params)):c.isDefined(f=e.templateUrl)&&(c.isFunction(f)&&(f=f(e.params)),c.isDefined(f)&&(e.loadedTemplateUrl=x.valueOf(f),b=p(f)));c.isDefined(b)&&(a.$template=b);return d.all(a)}}).then(function(f){e==s.current&&(e&&(e.locals=f,c.copy(e.params,b)),a.$broadcast(\"$routeChangeSuccess\",e,u))},function(b){e==s.current&&a.$broadcast(\"$routeChangeError\",\r\ne,u,b)})}function k(){var a,b;c.forEach(g,function(d,g){var q;if(q=!b){var h=f.path();q=d.keys;var l={};if(d.regexp)if(h=d.regexp.exec(h)){for(var k=1,m=h.length;k<m;++k){var n=q[k-1],p=h[k];n&&p&&(l[n.name]=p)}q=l}else q=null;else q=null;q=a=q}q&&(b=r(d,{params:c.extend({},f.search(),a),pathParams:a}),b.$$route=d)});return b||g[null]&&r(g[null],{params:{},pathParams:{}})}function t(a,b){var d=[];c.forEach((a||\"\").split(\":\"),function(a,c){if(0===c)d.push(a);else{var f=a.match(/(\\w+)(?:[?*])?(.*)/),\r\ng=f[1];d.push(b[g]);d.push(f[2]||\"\");delete b[g]}});return d.join(\"\")}var w=!1,n,v,s={routes:g,reload:function(){w=!0;a.$evalAsync(function(){l();m()})},updateParams:function(a){if(this.current&&this.current.$$route)a=c.extend({},this.current.params,a),f.path(t(this.current.$$route.originalPath,a)),f.search(a);else throw B(\"norout\");}};a.$on(\"$locationChangeStart\",l);a.$on(\"$locationChangeSuccess\",m);return s}]});var B=c.$$minErr(\"ngRoute\");p.provider(\"$routeParams\",function(){this.$get=function(){return{}}});\r\np.directive(\"ngView\",v);p.directive(\"ngView\",A);v.$inject=[\"$route\",\"$anchorScroll\",\"$animate\"];A.$inject=[\"$compile\",\"$controller\",\"$route\"]})(window,window.angular);\r\n//# sourceMappingURL=angular-route.min.js.map\r\n;\n\n  }).apply(root, arguments);\n});\n}(this));\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/*global window,requirejs*/\r\n\r\n/**\r\n * Implements the framework layer, which handles the loading of bundles\r\n * and the wiring-together of the extensions they expose.\r\n * @namespace platform/framework\r\n */\r\ndefine(\r\n    'platform/framework/src/Main',[\r\n        'require',\r\n        'es6-promise',\r\n        './FrameworkLayer',\r\n        'angular',\r\n        'angular-route'\r\n    ],\r\n    function (\r\n        require,\r\n        es6promise,\r\n        FrameworkLayer,\r\n        angular\r\n    ) {\r\n\r\n        function Main() {\r\n        }\r\n\r\n        Main.prototype.run = function (legacyRegistry) {\r\n            // Get a reference to Angular's injector, so we can get $http and $log\r\n            // services, which are useful to the framework layer.\r\n            var injector = angular.injector(['ng']);\r\n\r\n            // Look up log level from query string\r\n            function logLevel() {\r\n                var match = /[?&]log=([a-z]+)/.exec(window.location.search);\r\n                return match ? match[1] : \"\";\r\n            }\r\n\r\n            // Polyfill Promise, in case browser does not natively provide Promise\r\n            window.Promise = window.Promise || es6promise.Promise;\r\n\r\n            // Reconfigure base url, since bundle paths will all be relative\r\n            // to the root now.\r\n            requirejs.config({\"baseUrl\": \"\"});\r\n            injector.instantiate(['$http', '$log', FrameworkLayer])\r\n                .initializeApplication(angular, legacyRegistry, logLevel());\r\n        };\r\n\r\n        return Main;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('src/BundleRegistry',[],function () {\r\n\r\n    function BundleRegistry() {\r\n        this.bundles = {};\r\n    }\r\n\r\n    BundleRegistry.prototype.register = function (path, definition) {\r\n        this.bundles[path] = definition;\r\n    };\r\n\r\n    BundleRegistry.prototype.contains = function (path) {\r\n        return !!this.bundles[path];\r\n    };\r\n\r\n    BundleRegistry.prototype.get = function (path) {\r\n        return this.bundles[path];\r\n    };\r\n\r\n    BundleRegistry.prototype.list = function () {\r\n        return Object.keys(this.bundles);\r\n    };\r\n\r\n    BundleRegistry.prototype.remove = function (path) {\r\n        delete this.bundles[path];\r\n    };\r\n\r\n    return BundleRegistry;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('legacyRegistry',['src/BundleRegistry'], function (BundleRegistry) {\r\n    return new BundleRegistry();\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/framework/bundle',[\r\n\r\n    'legacyRegistry'\r\n], function (\r\n\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/framework\", {\r\n        \"name\": \"Open MCT Framework Component\",\r\n        \"description\": \"Framework layer for Open MCT; interprets bundle definitions and serves as an intermediary between Require and Angular\",\r\n        \"libraries\": \"lib\",\r\n        \"configuration\": {\r\n            \"paths\": {\r\n                \"angular\": \"angular.min\"\r\n            },\r\n            \"shim\": {\r\n                \"angular\": {\r\n                    \"exports\": \"angular\"\r\n                }\r\n            }\r\n        },\r\n        \"extensions\": {\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"Blanket.js\",\r\n                    \"version\": \"1.1.5\",\r\n                    \"description\": \"Code coverage measurement and reporting\",\r\n                    \"author\": \"Alex Seville\",\r\n                    \"website\": \"http://blanketjs.org/\",\r\n                    \"copyright\": \"Copyright (c) 2013 Alex Seville\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"http://opensource.org/licenses/MIT\"\r\n                },\r\n                {\r\n                    \"name\": \"Jasmine\",\r\n                    \"version\": \"1.3.1\",\r\n                    \"description\": \"Unit testing\",\r\n                    \"author\": \"Pivotal Labs\",\r\n                    \"website\": \"http://jasmine.github.io/\",\r\n                    \"copyright\": \"Copyright (c) 2008-2011 Pivotal Labs\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"http://opensource.org/licenses/MIT\"\r\n                },\r\n                {\r\n                    \"name\": \"RequireJS\",\r\n                    \"version\": \"2.1.22\",\r\n                    \"description\": \"Script loader\",\r\n                    \"author\": \"The Dojo Foundation\",\r\n                    \"website\": \"http://requirejs.org/\",\r\n                    \"copyright\": \"Copyright (c) 2010-2015, The Dojo Foundation\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/jrburke/requirejs/blob/master/LICENSE\"\r\n                },\r\n                {\r\n                    \"name\": \"AngularJS\",\r\n                    \"version\": \"1.4.4\",\r\n                    \"description\": \"Client-side web application framework\",\r\n                    \"author\": \"Google\",\r\n                    \"website\": \"http://angularjs.org/\",\r\n                    \"copyright\": \"Copyright (c) 2010-2015 Google, Inc. http://angularjs.org\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/angular/angular.js/blob/v1.4.4/LICENSE\"\r\n                },\r\n                {\r\n                    \"name\": \"Angular-Route\",\r\n                    \"version\": \"1.4.4\",\r\n                    \"description\": \"Client-side view routing\",\r\n                    \"author\": \"Google\",\r\n                    \"website\": \"http://angularjs.org/\",\r\n                    \"copyright\": \"Copyright (c) 2010-2015 Google, Inc. http://angularjs.org\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/angular/angular.js/blob/v1.4.4/LICENSE\"\r\n                },\r\n                {\r\n                    \"name\": \"ES6-Promise\",\r\n                    \"version\": \"3.0.2\",\r\n                    \"description\": \"Promise polyfill for pre-ECMAScript 6 browsers\",\r\n                    \"author\": \"Yehuda Katz, Tom Dale, Stefan Penner and contributors\",\r\n                    \"website\": \"https://github.com/jakearchibald/es6-promise\",\r\n                    \"copyright\": \"Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/jakearchibald/es6-promise/blob/master/LICENSE\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements core components of Open MCT's service\r\n * infrastructure and information model.\r\n * @namespace platform/core\r\n */\r\ndefine(\r\n    'platform/core/src/objects/DomainObjectProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provides instances of domain objects, as retrieved by their\r\n         * identifiers.\r\n         *\r\n         * @interface ObjectService\r\n         */\r\n\r\n        /**\r\n         * Get a set of objects associated with a list of identifiers.\r\n         * The provided result may contain a subset or a superset of\r\n         * the total number of objects.\r\n         *\r\n         * @method ObjectService#getObjects\r\n         * @param {string[]} ids the identifiers for domain objects\r\n         *        of interest.\r\n         * @return {Promise<object<string, DomainObject>>} a promise\r\n         *         for an object containing key-value pairs, where keys\r\n         *         are string identifiers for domain objects, and\r\n         *         values are the corresponding domain objects themselves.\r\n         */\r\n\r\n        /**\r\n         * Construct a new provider for domain objects.\r\n         *\r\n         * @param {ModelService} modelService the service which shall\r\n         *        provide models (persistent state) for domain objects\r\n         * @param {Function} instantiate a service to instantiate new\r\n         *        domain object instances\r\n         * @param $q Angular's $q, for promise consolidation\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function DomainObjectProvider(modelService, instantiate) {\r\n            this.modelService = modelService;\r\n            this.instantiate = instantiate;\r\n        }\r\n\r\n        DomainObjectProvider.prototype.getObjects = function getObjects(ids) {\r\n            var modelService = this.modelService,\r\n                instantiate = this.instantiate;\r\n\r\n            // Assemble the results from the model service and the\r\n            // capability service into one value, suitable to return\r\n            // from this service.\r\n            function assembleResult(models) {\r\n                var result = {};\r\n                ids.forEach(function (id) {\r\n                    if (models[id]) {\r\n                        // Create the domain object\r\n                        result[id] = instantiate(models[id], id);\r\n                    }\r\n                });\r\n                return result;\r\n            }\r\n\r\n            return modelService.getModels(ids).then(assembleResult);\r\n        };\r\n\r\n        return DomainObjectProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CoreCapabilityProvider. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/capabilities/CoreCapabilityProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * A capability provides an interface with dealing with some\r\n         * dynamic behavior associated with a domain object.\r\n         * @interface Capability\r\n         */\r\n\r\n        /**\r\n         * Optional; if present, will be used by `DomainObject#useCapability`\r\n         * to simplify interaction with a specific capability. Parameters\r\n         * and return values vary depending on capability type.\r\n         * @method Capability#invoke\r\n         */\r\n\r\n        /**\r\n         * Provides capabilities based on extension definitions,\r\n         * matched to domain object models.\r\n         *\r\n         * @param {Array.<function(DomainObject) : Capability>} an array\r\n         *        of constructor functions for capabilities, as\r\n         *        exposed by extensions defined at the bundle level.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function CoreCapabilityProvider(capabilities, $log) {\r\n            // Filter by invoking the capability's appliesTo method\r\n            function filterCapabilities(model) {\r\n                return capabilities.filter(function (capability) {\r\n                    return capability.appliesTo ?\r\n                            capability.appliesTo(model) :\r\n                            true;\r\n                });\r\n            }\r\n\r\n            // Package capabilities as key-value pairs\r\n            function packageCapabilities(caps) {\r\n                var result = {};\r\n                caps.forEach(function (capability) {\r\n                    if (capability.key) {\r\n                        result[capability.key] =\r\n                            result[capability.key] || capability;\r\n                    } else {\r\n                        $log.warn(\"No key defined for capability; skipping.\");\r\n                    }\r\n                });\r\n                return result;\r\n            }\r\n\r\n            function getCapabilities(model) {\r\n                return packageCapabilities(filterCapabilities(model));\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get all capabilities associated with a given domain\r\n                 * object.\r\n                 *\r\n                 * This returns a promise for an object containing key-value\r\n                 * pairs, where keys are capability names and values are\r\n                 * either:\r\n                 *\r\n                 * * Capability instances\r\n                 * * Capability constructors (which take a domain object\r\n                 *   as their argument.)\r\n                 *\r\n                 *\r\n                 * @param {*} model the object model\r\n                 * @returns {Object.<string,function|Capability>} all\r\n                 *     capabilities known to be valid for this model, as\r\n                 *     key-value pairs\r\n                 * @memberof platform/core.CoreCapabilityProvider#\r\n                 */\r\n                getCapabilities: getCapabilities\r\n            };\r\n        }\r\n\r\n        return CoreCapabilityProvider;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining StaticModelProvider. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/models/StaticModelProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * Loads static models, provided as declared extensions of bundles.\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function StaticModelProvider(models, $q, $log) {\r\n            var modelMap = {};\r\n\r\n            function addModelToMap(model) {\r\n                // Skip models which don't look right\r\n                if (typeof model !== 'object' ||\r\n                        typeof model.id !== 'string' ||\r\n                            typeof model.model !== 'object') {\r\n                    $log.warn([\r\n                        \"Skipping malformed domain object model exposed by \",\r\n                        ((model || {}).bundle || {}).path\r\n                    ].join(\"\"));\r\n                } else {\r\n                    modelMap[model.id] = model.model;\r\n                }\r\n            }\r\n\r\n            // Prepoulate maps with models to make subsequent lookup faster.\r\n            models.forEach(addModelToMap);\r\n\r\n            this.modelMap = modelMap;\r\n            this.$q = $q;\r\n        }\r\n\r\n        StaticModelProvider.prototype.getModels = function (ids) {\r\n            var modelMap = this.modelMap,\r\n                result = {};\r\n            ids.forEach(function (id) {\r\n                result[id] = modelMap[id];\r\n            });\r\n            return this.$q.when(result);\r\n        };\r\n\r\n        return StaticModelProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining RootModelProvider. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/models/RootModelProvider',['./StaticModelProvider'],\r\n    function (StaticModelProvider) {\r\n\r\n        /**\r\n         * Provides the root object (id = \"ROOT\"), which is the top-level\r\n         * domain object shown when the application is started, from which all\r\n         * other domain objects are reached.\r\n         *\r\n         * The root model provider works as the static model provider,\r\n         * except that it aggregates roots[] instead of models[], and\r\n         * exposes them all as composition of the root object ROOT,\r\n         * whose model is also provided by this service.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {ModelService}\r\n         * @param {Array} roots all `roots[]` extensions\r\n         * @param $q Angular's $q, for promises\r\n         * @param $log Anuglar's $log, for logging\r\n         */\r\n        function RootModelProvider(roots, $q, $log) {\r\n            // Pull out identifiers to used as ROOT's\r\n            var ids = roots.map(function (root) {\r\n                return root.id;\r\n            });\r\n\r\n            // Assign an initial location to root models\r\n            roots.forEach(function (root) {\r\n                if (!root.model) {\r\n                    root.model = {};\r\n                }\r\n                root.model.location = 'ROOT';\r\n            });\r\n\r\n            this.baseProvider = new StaticModelProvider(roots, $q, $log);\r\n            this.rootModel = {\r\n                name: \"The root object\",\r\n                type: \"root\",\r\n                composition: ids\r\n            };\r\n        }\r\n\r\n        RootModelProvider.prototype.getModels = function (ids) {\r\n            var rootModel = this.rootModel;\r\n            return this.baseProvider.getModels(ids).then(function (models) {\r\n                models.ROOT = rootModel;\r\n                return models;\r\n            });\r\n        };\r\n\r\n        return RootModelProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ModelAggregator. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/models/ModelAggregator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Allow domain object models to be looked up by their identifiers.\r\n         *\r\n         * @interface ModelService\r\n         */\r\n\r\n        /**\r\n         * Get domain object models.\r\n         *\r\n         * This may provide either a superset or a subset of the models\r\n         * requested. Absence of a model means it does not exist within\r\n         * this service instance.\r\n         *\r\n         * @method ModelService#getModels\r\n         * @param {string[]} ids identifiers for models desired.\r\n         * @returns {Promise.<Object>} a promise for an object mapping\r\n         *          string identifiers to domain object models.\r\n         */\r\n\r\n        /**\r\n         * Allows multiple services which provide models for domain objects\r\n         * to be treated as one.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {ModelService}\r\n         * @param $q Angular's $q, for promises\r\n         * @param {ModelService[]} providers the model providers to be\r\n         *        aggregated\r\n         */\r\n        function ModelAggregator($q, providers) {\r\n            this.providers = providers;\r\n            this.$q = $q;\r\n        }\r\n\r\n        // Pick a domain object model to use, favoring the one\r\n        // with the most recent timestamp\r\n        function pick(a, b) {\r\n            var aModified = (a || {}).modified || Number.NEGATIVE_INFINITY,\r\n                bModified = (b || {}).modified || Number.NEGATIVE_INFINITY;\r\n            return (aModified > bModified) ? a : (b || a);\r\n        }\r\n\r\n        // Merge results from multiple providers into one\r\n        // large result object.\r\n        function mergeModels(provided, ids) {\r\n            var result = {};\r\n            ids.forEach(function (id) {\r\n                provided.forEach(function (models) {\r\n                    if (models[id]) {\r\n                        result[id] = pick(result[id], models[id]);\r\n                    }\r\n                });\r\n            });\r\n            return result;\r\n        }\r\n\r\n        ModelAggregator.prototype.getModels = function (ids) {\r\n            return this.$q.all(this.providers.map(function (provider) {\r\n                return provider.getModels(ids);\r\n            })).then(function (provided) {\r\n                return mergeModels(provided, ids);\r\n            });\r\n        };\r\n\r\n        return ModelAggregator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/core/src/models/ModelCacheService',[], function () {\r\n\r\n    /**\r\n     * Provides a cache for domain object models which exist in memory,\r\n     * but may or may not exist in backing persistene stores.\r\n     * @constructor\r\n     * @memberof platform/core\r\n     */\r\n    function ModelCacheService() {\r\n        this.cache = {};\r\n    }\r\n\r\n    /**\r\n     * Put a domain object model in the cache.\r\n     * @param {string} id the domain object's identifier\r\n     * @param {object} model the domain object's model\r\n     */\r\n    ModelCacheService.prototype.put = function (id, model) {\r\n        this.cache[id] = model;\r\n    };\r\n\r\n    /**\r\n     * Retrieve a domain object model from the cache.\r\n     * @param {string} id the domain object's identifier\r\n     * @returns {object} the domain object's model\r\n     */\r\n    ModelCacheService.prototype.get = function (id) {\r\n        return this.cache[id];\r\n    };\r\n\r\n    /**\r\n     * Check if a domain object model is in the cache.\r\n     * @param {string} id the domain object's identifier\r\n     * @returns {boolean} true if present; false if not\r\n     */\r\n    ModelCacheService.prototype.has = function (id) {\r\n        return this.cache.hasOwnProperty(id);\r\n    };\r\n\r\n    /**\r\n     * Remove a domain object model from the cache.\r\n     * @param {string} id the domain object's identifier\r\n     */\r\n    ModelCacheService.prototype.remove = function (id) {\r\n        delete this.cache[id];\r\n    };\r\n\r\n    /**\r\n     * Retrieve all cached domain object models. These are given\r\n     * as an object containing key-value pairs, where keys are\r\n     * domain object identifiers and values are domain object models.\r\n     * @returns {object} all domain object models\r\n     */\r\n    ModelCacheService.prototype.all = function () {\r\n        return this.cache;\r\n    };\r\n\r\n    return ModelCacheService;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining PersistedModelProvider. Created by vwoeltje on 11/12/14.\r\n */\r\ndefine(\r\n    'platform/core/src/models/PersistedModelProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * A model service which reads domain object models from an external\r\n         * persistence service.\r\n         *\r\n         * Identifiers will be interpreted as follows:\r\n         * * If no colon is present, the model will be read from the default\r\n         *   persistence space.\r\n         * * If a colon is present, everything before the first colon will be\r\n         *   taken to refer to the persistence space, and everything after\r\n         *   will be taken to be that model's key within this space. (If\r\n         *   no such space exists within the `persistenceService`, that\r\n         *   identifier will simply be ignored.)\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {ModelService}\r\n         * @param {PersistenceService} persistenceService the service in which\r\n         *        domain object models are persisted.\r\n         * @param $q Angular's $q service, for working with promises\r\n         * @param {function} now a function which provides the current time\r\n         * @param {string} space the name of the persistence space(s)\r\n         *        from which models should be retrieved by default\r\n         */\r\n        function PersistedModelProvider(persistenceService, $q, now, space) {\r\n            this.persistenceService = persistenceService;\r\n            this.$q = $q;\r\n            this.now = now;\r\n            this.defaultSpace = space;\r\n        }\r\n\r\n        PersistedModelProvider.prototype.getModels = function (ids) {\r\n            var persistenceService = this.persistenceService,\r\n                $q = this.$q,\r\n                now = this.now,\r\n                defaultSpace = this.defaultSpace,\r\n                parsedIds;\r\n\r\n            // Load a single object model from any persistence spaces\r\n            function loadModel(parsedId) {\r\n                return persistenceService\r\n                        .readObject(parsedId.space, parsedId.key);\r\n            }\r\n\r\n            // Ensure that models read from persistence have some\r\n            // sensible timestamp indicating they've been persisted.\r\n            function addPersistedTimestamp(model) {\r\n                if (model && (model.persisted === undefined)) {\r\n                    model.persisted = model.modified !== undefined ?\r\n                            model.modified : now();\r\n                }\r\n\r\n                return model;\r\n            }\r\n\r\n            // Package the result as id->model\r\n            function packageResult(parsedIdsToPackage, models) {\r\n                var result = {};\r\n                parsedIdsToPackage.forEach(function (parsedId, index) {\r\n                    var id = parsedId.id;\r\n                    if (models[index]) {\r\n                        result[id] = models[index];\r\n                    }\r\n                });\r\n                return result;\r\n            }\r\n\r\n            function loadModels(parsedIdsToLoad) {\r\n                return $q.all(parsedIdsToLoad.map(loadModel))\r\n                    .then(function (models) {\r\n                        return packageResult(\r\n                            parsedIdsToLoad,\r\n                            models.map(addPersistedTimestamp)\r\n                        );\r\n                    });\r\n            }\r\n\r\n            function restrictToSpaces(spaces) {\r\n                return parsedIds.filter(function (parsedId) {\r\n                    return spaces.indexOf(parsedId.space) !== -1;\r\n                });\r\n            }\r\n\r\n            parsedIds = ids.map(function (id) {\r\n                var parts = id.split(\":\");\r\n                return (parts.length > 1) ?\r\n                        { id: id, space: parts[0], key: parts.slice(1).join(\":\") } :\r\n                        { id: id, space: defaultSpace, key: id };\r\n            });\r\n\r\n            return persistenceService.listSpaces()\r\n                .then(restrictToSpaces)\r\n                .then(loadModels);\r\n        };\r\n\r\n        return PersistedModelProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/models/CachingModelDecorator',[],\r\n    function () {\r\n\r\n        /**\r\n         * The caching model decorator maintains a cache of loaded domain\r\n         * object models, and ensures that duplicate models for the same\r\n         * object are not provided.\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @param {ModelService} modelService this service to decorate\r\n         * @implements {ModelService}\r\n         */\r\n        function CachingModelDecorator(cacheService, modelService) {\r\n            this.cacheService = cacheService;\r\n            this.modelService = modelService;\r\n        }\r\n\r\n        // Fast-resolving promise\r\n        function fastPromise(value) {\r\n            return (value || {}).then ? value : {\r\n                then: function (callback) {\r\n                    return fastPromise(callback(value));\r\n                }\r\n            };\r\n        }\r\n\r\n        CachingModelDecorator.prototype.getModels = function (ids) {\r\n            var cacheService = this.cacheService,\r\n                neededIds = ids.filter(function notCached(id) {\r\n                    return !cacheService.has(id);\r\n                });\r\n\r\n            // Update the cached instance of a model to a new value.\r\n            // We update in-place to ensure there is only ever one instance\r\n            // of any given model exposed by the modelService as a whole.\r\n            function updateModel(id, model) {\r\n                var oldModel = cacheService.get(id);\r\n\r\n                // Same object instance is a possibility, so don't copy\r\n                if (oldModel === model) {\r\n                    return model;\r\n                }\r\n\r\n                // If we'd previously cached an undefined value, or are now\r\n                // seeing undefined, replace the item in the cache entirely.\r\n                if (oldModel === undefined || model === undefined) {\r\n                    cacheService.put(id, model);\r\n                    return model;\r\n                }\r\n\r\n                // Otherwise, empty out the old model...\r\n                Object.keys(oldModel).forEach(function (k) {\r\n                    delete oldModel[k];\r\n                });\r\n\r\n                // ...and replace it with the contents of the new model.\r\n                Object.keys(model).forEach(function (k) {\r\n                    oldModel[k] = model[k];\r\n                });\r\n\r\n                return oldModel;\r\n            }\r\n\r\n            // Store the provided models in our cache\r\n            function cacheAll(models) {\r\n                Object.keys(models).forEach(function (id) {\r\n                    var model = cacheService.has(id) ?\r\n                        updateModel(id, models[id]) : models[id];\r\n                    cacheService.put(id, model);\r\n                });\r\n            }\r\n\r\n            // Expose the cache (for promise chaining)\r\n            function giveCache() {\r\n                return cacheService.all();\r\n            }\r\n\r\n            // Look up if we have unknown IDs\r\n            if (neededIds.length > 0) {\r\n                return this.modelService.getModels(neededIds)\r\n                    .then(cacheAll)\r\n                    .then(giveCache);\r\n            }\r\n\r\n            // Otherwise, just expose the cache directly\r\n            return fastPromise(cacheService.all());\r\n        };\r\n\r\n        return CachingModelDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/models/MissingModelDecorator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Adds placeholder domain object models for any models which\r\n         * fail to load from the underlying model service.\r\n         * @constructor\r\n         * @memberof platform/core\r\n         * @param {ModelService} modelService this service to decorate\r\n         * @implements {ModelService}\r\n         */\r\n        function MissingModelDecorator(modelService) {\r\n            this.modelService = modelService;\r\n        }\r\n\r\n        function missingModel(id) {\r\n            return {\r\n                type: \"unknown\",\r\n                name: \"Missing: \" + id\r\n            };\r\n        }\r\n\r\n        MissingModelDecorator.prototype.getModels = function (ids) {\r\n            function addMissingModels(models) {\r\n                var result = {};\r\n                ids.forEach(function (id) {\r\n                    result[id] = models[id] || missingModel(id);\r\n                });\r\n                return result;\r\n            }\r\n\r\n            return this.modelService.getModels(ids).then(addMissingModels);\r\n        };\r\n\r\n        return MissingModelDecorator;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/types/TypePropertyConversion',[],function () {\r\n\r\n\r\n        var conversions = {\r\n                number: {\r\n                    toModelValue: parseFloat,\r\n                    toFormValue: function (modelValue) {\r\n                        return (typeof modelValue === 'number') ?\r\n                                modelValue.toString(10) : undefined;\r\n                    }\r\n                },\r\n                identity: {\r\n                    toModelValue: function (v) {\r\n                        return v;\r\n                    },\r\n                    toFormValue: function (v) {\r\n                        return v;\r\n                    }\r\n                }\r\n            },\r\n            ARRAY_SUFFIX = '[]';\r\n\r\n        // Utility function to handle arrays of conversiions\r\n        function ArrayConversion(conversion) {\r\n            return {\r\n                toModelValue: function (formValue) {\r\n                    return formValue && formValue.map(conversion.toModelValue);\r\n                },\r\n                toFormValue: function (modelValue) {\r\n                    return modelValue && modelValue.map(conversion.toFormValue);\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Look up an appropriate conversion between form values and model\r\n         * values, e.g. to numeric values.\r\n         * @constructor\r\n         * @memberof platform/core\r\n         */\r\n        function TypePropertyConversion(name) {\r\n            if (name &&\r\n                    name.length > ARRAY_SUFFIX.length &&\r\n                    name.indexOf(ARRAY_SUFFIX, name.length - ARRAY_SUFFIX.length) !== -1) {\r\n                return new ArrayConversion(\r\n                    new TypePropertyConversion(\r\n                        name.substring(0, name.length - ARRAY_SUFFIX.length)\r\n                    )\r\n                );\r\n            } else {\r\n                if (!conversions[name]) {\r\n                    throw new Error(\"Unknown conversion type: \" + name);\r\n                }\r\n                return conversions[name];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Convert a value from its format as read from a form, to a\r\n         * format appropriate to store in a model.\r\n         * @method platform/core.TypePropertyConversion#toModelValue\r\n         * @param {*} formValue value as read from a form\r\n         * @returns {*} value to store in a model\r\n         */\r\n\r\n        /**\r\n         * Convert a value from its format as stored in a model, to a\r\n         * format appropriate to display in a form.\r\n         * @method platform/core.TypePropertyConversion#toFormValue\r\n         * @param {*} modelValue value as stored in a model\r\n         * @returns {*} value to display within a form\r\n         */\r\n\r\n\r\n        return TypePropertyConversion;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/types/TypeProperty',['./TypePropertyConversion'],\r\n    function (TypePropertyConversion) {\r\n\r\n        /**\r\n         * Instantiate a property associated with domain objects of a\r\n         * given type. This provides an interface by which\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function TypeProperty(propertyDefinition) {\r\n            // Load an appropriate conversion\r\n            this.conversion = new TypePropertyConversion(\r\n                propertyDefinition.conversion || \"identity\"\r\n            );\r\n            this.propertyDefinition = propertyDefinition;\r\n        }\r\n\r\n        // Check if a value is defined; used to check if initial array\r\n        // values have been populated.\r\n        function isUnpopulatedArray(value) {\r\n            var i;\r\n\r\n            if (!Array.isArray(value) || value.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            for (i = 0; i < value.length; i += 1) {\r\n                if (value[i] !== undefined) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        // Specify a field deeply within an object\r\n        function specifyValue(object, propertyPath, value) {\r\n            // If path is not an array, just set the property\r\n            if (!Array.isArray(propertyPath)) {\r\n                object[propertyPath] = value;\r\n            } else if (propertyPath.length > 1) {\r\n                // Otherwise, look up in defined sequence\r\n                object[propertyPath[0]] = object[propertyPath[0]] || {};\r\n                specifyValue(\r\n                    object[propertyPath[0]],\r\n                    propertyPath.slice(1),\r\n                    value\r\n                );\r\n            } else if (propertyPath.length === 1) {\r\n                object[propertyPath[0]] = value;\r\n            }\r\n        }\r\n\r\n        // Perform a lookup for a value from an object,\r\n        // which may recursively look at contained objects\r\n        // based on the path provided.\r\n        function lookupValue(object, propertyPath) {\r\n            var value;\r\n\r\n            // Can't look up from a non-object\r\n            if (!object) {\r\n                return undefined;\r\n            }\r\n\r\n            // If path is not an array, just look up the property\r\n            if (!Array.isArray(propertyPath)) {\r\n                return object[propertyPath];\r\n            }\r\n\r\n            // Otherwise, look up in the sequence defined in the array\r\n            if (propertyPath.length > 0) {\r\n                value = object[propertyPath[0]];\r\n                return propertyPath.length > 1 ?\r\n                    lookupValue(value, propertyPath.slice(1)) :\r\n                    value;\r\n            }\r\n\r\n            // Fallback; property path was empty\r\n            return undefined;\r\n        }\r\n\r\n        /**\r\n         * Retrieve the value associated with this property\r\n         * from a given model.\r\n         * @param {object} model a domain object model to read from\r\n         * @returns {*} the value for this property, as read from the model\r\n         */\r\n        TypeProperty.prototype.getValue = function (model) {\r\n            var property = this.propertyDefinition.property ||\r\n                    this.propertyDefinition.key,\r\n                initialValue =\r\n                    property && lookupValue(model, property);\r\n\r\n            // Provide an empty array if this is a multi-item\r\n            // property.\r\n            if (Array.isArray(this.propertyDefinition.items)) {\r\n                initialValue = initialValue ||\r\n                    new Array(this.propertyDefinition.items.length);\r\n            }\r\n\r\n            return this.conversion.toFormValue(initialValue);\r\n        };\r\n\r\n        /**\r\n         * Set a value associated with this property in\r\n         * an object's model.\r\n         * @param {object} model a domain object model to update\r\n         * @param {*} value the new value to set for this property\r\n         */\r\n        TypeProperty.prototype.setValue = function (model, value) {\r\n            var property = this.propertyDefinition.property ||\r\n                    this.propertyDefinition.key;\r\n\r\n            // If an array contains all undefined values, treat it\r\n            // as undefined, to filter back out arrays for input\r\n            // that never got entered.\r\n            value = isUnpopulatedArray(value) ? undefined : value;\r\n\r\n            // Convert to a value suitable for storage in the\r\n            // domain object's model\r\n            value = this.conversion.toModelValue(value);\r\n\r\n            return property ?\r\n                specifyValue(model, property, value) :\r\n                undefined;\r\n        };\r\n\r\n        /**\r\n         * Get the raw definition for this property.\r\n         * @returns {TypePropertyDefinition}\r\n         */\r\n        TypeProperty.prototype.getDefinition = function () {\r\n            return this.propertyDefinition;\r\n        };\r\n\r\n        return TypeProperty;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/types/TypeImpl',['./TypeProperty'],\r\n    function (TypeProperty) {\r\n\r\n        /**\r\n         * Describes a type of domain object.\r\n         *\r\n         * @interface Type\r\n         */\r\n\r\n        /**\r\n         * Get the string key which identifies this type.\r\n         * This is the type's machine-readable name/identifier,\r\n         * and will correspond to the \"type\" field of the models\r\n         * of domain objects of this type.\r\n         *\r\n         * @returns {string} the key which identifies this type\r\n         * @method Type#getKey\r\n         */\r\n        /**\r\n         * Get the human-readable name for this type, as should\r\n         * be displayed in the user interface when referencing\r\n         * this type.\r\n         *\r\n         * @returns {string} the human-readable name of this type\r\n         * @method Type#getName\r\n         */\r\n        /**\r\n         * Get the human-readable description for this type, as should\r\n         * be displayed in the user interface when describing\r\n         * this type.\r\n         *\r\n         * @returns {string} the human-readable description of this type\r\n         * @method Type#getDescription\r\n         */\r\n        /**\r\n         * Get the cssclass associated with this type. cssclass is a\r\n         * string which will appear as an icon (when\r\n         * displayed in an appropriate font) which visually\r\n         * distinguish types from one another.\r\n         *\r\n         * @returns {string} the cssclass for this type\r\n         * @method Type#getCssClass\r\n         */\r\n        /**\r\n         * Get an array of properties associated with objects of\r\n         * this type, as might be shown in a Create wizard or\r\n         * an Edit Properties view.\r\n         *\r\n         * @return {TypeProperty[]} properties associated with\r\n         *         objects of this type\r\n         * @method Type#getPropertiees\r\n         */\r\n        /**\r\n         * Get the initial state of a model for domain objects of\r\n         * this type.\r\n         *\r\n         * @return {object} initial domain object model\r\n         * @method Type#getInitialModel\r\n         */\r\n        /**\r\n         * Get the raw type definition for this type. This is an\r\n         * object containing key-value pairs of type metadata;\r\n         * this allows the retrieval and use of custom type\r\n         * properties which are not recognized within this interface.\r\n         *\r\n         * @returns {object} the raw definition for this type\r\n         * @method Type#getDefinition\r\n         */\r\n        /**\r\n         * Check if this type is or inherits from some other type.\r\n         *\r\n         * @param {string|Type} key either\r\n         *        a string key for a type, or an instance of a type\r\n         *        object, which this\r\n         * @returns {boolean} true\r\n         * @method Type#instanceOf\r\n         */\r\n        /**\r\n         * Check if a type should support a given feature. This simply\r\n         * checks for the presence or absence of the feature key in\r\n         * the type definition's \"feature\" field.\r\n         * @param {string} feature a string identifying the feature\r\n         * @returns {boolean} true if the feature is supported\r\n         * @method Type#hasFeature\r\n         */\r\n\r\n\r\n        /**\r\n         * Construct a new type. Types describe categories of\r\n         * domain objects.\r\n         *\r\n         * @implements {Type}\r\n         * @param {TypeDefinition} typeDef an object containing\r\n         *        key-value pairs describing a type and its\r\n         *        relationship to other types.\r\n         * @constructor\r\n         * @memberof platform/core\r\n         */\r\n        function TypeImpl(typeDef) {\r\n            var inheritList = typeDef.inherits || [],\r\n                featureSet = {};\r\n\r\n            (typeDef.features || []).forEach(function (feature) {\r\n                featureSet[feature] = true;\r\n            });\r\n\r\n            this.typeDef = typeDef;\r\n            this.featureSet = featureSet;\r\n            this.inheritList = inheritList;\r\n        }\r\n\r\n        TypeImpl.prototype.getKey = function () {\r\n            return this.typeDef.key;\r\n        };\r\n\r\n        TypeImpl.prototype.getName = function () {\r\n            return this.typeDef.name;\r\n        };\r\n\r\n        TypeImpl.prototype.getDescription = function () {\r\n            return this.typeDef.description;\r\n        };\r\n\r\n        TypeImpl.prototype.getCssClass = function () {\r\n            return this.typeDef.cssclass;\r\n        };\r\n\r\n        TypeImpl.prototype.getProperties = function () {\r\n            return (this.typeDef.properties || []).map(function (propertyDef) {\r\n                return new TypeProperty(propertyDef);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Returns the default model for an object of this type. Note that\r\n         * this method returns a clone of the original model, so if using this\r\n         * method heavily, consider caching the result to optimize performance.\r\n         *\r\n         * @return {object} The default model for an object of this type.\r\n         */\r\n        TypeImpl.prototype.getInitialModel = function () {\r\n            return JSON.parse(JSON.stringify(this.typeDef.model || {}));\r\n        };\r\n\r\n        TypeImpl.prototype.getDefinition = function () {\r\n            return this.typeDef;\r\n        };\r\n\r\n        TypeImpl.prototype.instanceOf = function instanceOf(key) {\r\n            var typeDef = this.typeDef,\r\n                inheritList = this.inheritList;\r\n\r\n            if (key === typeDef.key) {\r\n                return true;\r\n            } else if (inheritList.indexOf(key) > -1) {\r\n                return true;\r\n            } else if (!key) {\r\n                return true;\r\n            } else if (key !== null && typeof key === 'object') {\r\n                return key.getKey ? this.instanceOf(key.getKey()) : false;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        TypeImpl.prototype.hasFeature = function (feature) {\r\n            return this.featureSet[feature] || false;\r\n        };\r\n\r\n        return TypeImpl;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Defines MergedModel, which allows a deep merge of domain object\r\n * models, or JSONifiable JavaScript objects generally.\r\n *\r\n */\r\ndefine(\r\n    'platform/core/src/types/MergeModels',[],function () {\r\n\r\n        /**\r\n         * Utility function for merging domain object models (or any\r\n         * JavaScript object which follows the same conventions.)\r\n         * Performs a \"deep merge\", resolving conflicts (occurrences\r\n         * of the same property in both objects) such that:\r\n         *\r\n         * * Non-conflicting properties are both contained in the\r\n         *   result object.\r\n         * * Conflicting properties which are both arrays are\r\n         *   concatenated.\r\n         * * Conflicting properties which are both objects are\r\n         *   merged recursively.\r\n         * * Conflicting properties which do not fall into any of the\r\n         *   preceding categories are taken from the second argument,\r\n         *   shadowing any values from the first.\r\n         *\r\n         * An optional third argument, the \"merger\", may be provided.\r\n         * This may be either a function, or an object containing\r\n         * key-value pairs where keys are strings (corresponding to\r\n         * the names of properties) and values are other mergers\r\n         * (either functions or objects.)\r\n         *\r\n         * * If the merger is a function, it will be used upon the\r\n         *   two input objects in lieu of the behavior described\r\n         *   above.\r\n         * * If the merger is an object, then its values will be\r\n         *   used as mergers when resolving properties with\r\n         *   corresponding keys in the recursive step.\r\n         *\r\n         *\r\n         * @param modelA the first object to be merged\r\n         * @param modelB the second object to be merged\r\n         * @param merger the merger, as described above\r\n         * @returns {*} the result of merging `modelA` and `modelB`\r\n         * @constructor\r\n         * @memberof platform/core\r\n         */\r\n        function mergeModels(modelA, modelB, merger) {\r\n            var mergeFunction;\r\n\r\n            function mergeArrays(a, b) {\r\n                return a.concat(b);\r\n            }\r\n\r\n            function mergeObjects(a, b) {\r\n                var result = {};\r\n                Object.keys(a).forEach(function (k) {\r\n                    result[k] = b.hasOwnProperty(k) ?\r\n                            mergeModels(a[k], b[k], (merger || {})[k]) :\r\n                            a[k];\r\n                });\r\n                Object.keys(b).forEach(function (k) {\r\n                    // Copy any properties not already merged\r\n                    if (!a.hasOwnProperty(k)) {\r\n                        result[k] = b[k];\r\n                    }\r\n                });\r\n                return result;\r\n            }\r\n\r\n            function mergeOther(a, b) {\r\n                return b;\r\n            }\r\n\r\n            mergeFunction = (merger && Function.isFunction(merger)) ? merger :\r\n                    (Array.isArray(modelA) && Array.isArray(modelB)) ? mergeArrays :\r\n                            (modelA instanceof Object && modelB instanceof Object) ? mergeObjects :\r\n                                    mergeOther;\r\n\r\n            return mergeFunction(modelA, modelB);\r\n        }\r\n\r\n        return mergeModels;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/types/TypeProvider',['./TypeImpl', './MergeModels'],\r\n    function (TypeImpl, mergeModels) {\r\n\r\n        /**\r\n         * Provides domain object types that are available/recognized within\r\n         * the system.\r\n         *\r\n         * @interface TypeService\r\n         */\r\n        /**\r\n         * Get a specific type by name.\r\n         *\r\n         * @method TypeService#getType\r\n         * @param {string} key the key (machine-readable identifier)\r\n         *        for the type of interest\r\n         * @returns {Type} the type identified by this key\r\n         */\r\n        /**\r\n         * List all known types.\r\n         *\r\n         * @method TypeService#listTypes\r\n         * @returns {Type[]} all known types\r\n         */\r\n\r\n        var TO_CONCAT = ['inherits', 'capabilities', 'properties', 'features'],\r\n            TO_MERGE = ['model'];\r\n\r\n        function copyKeys(a, b) {\r\n            Object.keys(b).forEach(function (k) {\r\n                a[k] = b[k];\r\n            });\r\n        }\r\n\r\n        function removeDuplicates(array) {\r\n            var set = {};\r\n            return array ? array.filter(function (element) {\r\n                // Don't filter objects (e.g. property definitions)\r\n                if (element instanceof Object && !(element instanceof String)) {\r\n                    return true;\r\n                }\r\n\r\n                return set[element] ?\r\n                        false :\r\n                        (set[element] = true);\r\n            }) : array;\r\n        }\r\n\r\n        // Reduce an array of type definitions to a single type definiton,\r\n        // which has merged all properties in order.\r\n        function collapse(typeDefs) {\r\n            var collapsed = typeDefs.reduce(function (a, b) {\r\n                var result = {};\r\n                copyKeys(result, a);\r\n                copyKeys(result, b);\r\n\r\n                // Special case: Do a merge, e.g. on \"model\"\r\n                TO_MERGE.forEach(function (k) {\r\n                    if (a[k] && b[k]) {\r\n                        result[k] = mergeModels(a[k], b[k]);\r\n                    }\r\n                });\r\n\r\n                // Special case: Concatenate certain arrays\r\n                TO_CONCAT.forEach(function (k) {\r\n                    if (a[k] || b[k]) {\r\n                        result[k] = (a[k] || []).concat(b[k] || []);\r\n                    }\r\n                });\r\n                return result;\r\n            }, {});\r\n\r\n            // Remove any duplicates from the collapsed array\r\n            TO_CONCAT.forEach(function (k) {\r\n                if (collapsed[k]) {\r\n                    collapsed[k] = removeDuplicates(collapsed[k]);\r\n                }\r\n            });\r\n            return collapsed;\r\n        }\r\n\r\n        /**\r\n         * A type provider provides information about types of domain objects\r\n         * within the running Open MCT instance.\r\n         *\r\n         * @param {Array<TypeDefinition>} types the raw type\r\n         *        definitions for this type.\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function TypeProvider(types) {\r\n            var rawTypeDefinitions = types,\r\n                typeDefinitions = (function (typeDefArray) {\r\n                    var result = {};\r\n                    typeDefArray.forEach(function (typeDef) {\r\n                        var k = typeDef.key;\r\n                        if (k) {\r\n                            result[k] = (result[k] || []).concat(typeDef);\r\n                        }\r\n                    });\r\n                    return result;\r\n                }(rawTypeDefinitions));\r\n\r\n\r\n            this.typeMap = {};\r\n            this.typeDefinitions = typeDefinitions;\r\n            this.rawTypeDefinitions = types;\r\n        }\r\n\r\n        TypeProvider.prototype.listTypes = function () {\r\n            var self = this;\r\n            return removeDuplicates(\r\n                this.rawTypeDefinitions.filter(function (def) {\r\n                    return def.key;\r\n                }).map(function (def) {\r\n                    return def.key;\r\n                }).map(function (key) {\r\n                    return self.getType(key);\r\n                })\r\n            );\r\n        };\r\n\r\n        TypeProvider.prototype.getType = function (key) {\r\n            var typeDefinitions = this.typeDefinitions,\r\n                self = this;\r\n\r\n            function getUndefinedType() {\r\n                return (self.undefinedType = self.undefinedType || collapse(\r\n                    self.rawTypeDefinitions.filter(function (typeDef) {\r\n                        return !typeDef.key;\r\n                    })\r\n                ));\r\n            }\r\n\r\n            function asArray(value) {\r\n                return Array.isArray(value) ? value : [value];\r\n            }\r\n\r\n            function lookupTypeDef(typeKey) {\r\n                function buildTypeDef(typeKeyToBuild) {\r\n                    var typeDefs = typeDefinitions[typeKeyToBuild] || [],\r\n                        inherits = typeDefs.map(function (typeDef) {\r\n                            return asArray(typeDef.inherits || []);\r\n                        }).reduce(function (a, b) {\r\n                            return a.concat(b);\r\n                        }, []),\r\n                        def = collapse(\r\n                            [getUndefinedType()].concat(\r\n                                inherits.map(lookupTypeDef)\r\n                            ).concat(typeDefs)\r\n                        );\r\n\r\n                    // Always provide a default name\r\n                    def.model = def.model || {};\r\n                    def.model.name = def.model.name ||\r\n                        (\"Unnamed \" + (def.name || \"Object\"));\r\n\r\n                    return def;\r\n                }\r\n\r\n                return (self.typeMap[typeKey] =\r\n                    self.typeMap[typeKey] || buildTypeDef(typeKey));\r\n            }\r\n\r\n            return new TypeImpl(lookupTypeDef(key));\r\n        };\r\n\r\n        return TypeProvider;\r\n    }\r\n\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ActionProvider. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/actions/ActionProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * An ActionProvider (implementing ActionService) provides actions\r\n         * that are applicable in specific contexts, chosen from a set\r\n         * of actions exposed via extension (specifically, the \"actions\"\r\n         * category of extension.)\r\n         *\r\n         * @memberof platform/core\r\n         * @imeplements {ActionService}\r\n         * @constructor\r\n         */\r\n        function ActionProvider(actions, $log) {\r\n            var self = this;\r\n\r\n            this.$log = $log;\r\n\r\n            // Build up look-up tables\r\n            this.actions = actions;\r\n            this.actionsByKey = {};\r\n            this.actionsByCategory = {};\r\n            actions.forEach(function (Action) {\r\n                // Get an action's category or categories\r\n                var categories = Action.category || [];\r\n\r\n                // Convert to an array if necessary\r\n                categories = Array.isArray(categories) ?\r\n                        categories : [categories];\r\n\r\n                // Store action under all relevant categories\r\n                categories.forEach(function (category) {\r\n                    self.actionsByCategory[category] =\r\n                        self.actionsByCategory[category] || [];\r\n                    self.actionsByCategory[category].push(Action);\r\n                });\r\n\r\n                // Store action by ekey as well\r\n                if (Action.key) {\r\n                    self.actionsByKey[Action.key] =\r\n                        self.actionsByKey[Action.key] || [];\r\n                    self.actionsByKey[Action.key].push(Action);\r\n                }\r\n            });\r\n        }\r\n\r\n        ActionProvider.prototype.getActions = function (actionContext) {\r\n            var context = (actionContext || {}),\r\n                category = context.category,\r\n                key = context.key,\r\n                $log = this.$log,\r\n                candidates;\r\n\r\n            // Instantiate an action; invokes the constructor and\r\n            // additionally fills in the action's getMetadata method\r\n            // with the extension definition (if no getMetadata\r\n            // method was supplied.)\r\n            function instantiateAction(Action, ctxt) {\r\n                var action = new Action(ctxt),\r\n                    metadata;\r\n\r\n                // Provide a getMetadata method that echos\r\n                // declarative bindings, as well as context,\r\n                // unless the action has defined its own.\r\n                if (!action.getMetadata) {\r\n                    metadata = Object.create(Action.definition || {});\r\n                    metadata.context = ctxt;\r\n                    action.getMetadata = function () {\r\n                        return metadata;\r\n                    };\r\n                }\r\n\r\n                return action;\r\n            }\r\n\r\n            // Filter the array of actions down to those which are\r\n            // applicable in a given context, according to the static\r\n            // appliesTo method of given actions (if defined), and\r\n            // instantiate those applicable actions.\r\n            function createIfApplicable(actions, ctxt) {\r\n                function isApplicable(Action) {\r\n                    return Action.appliesTo ? Action.appliesTo(ctxt) : true;\r\n                }\r\n\r\n                function instantiate(Action) {\r\n                    try {\r\n                        return instantiateAction(Action, ctxt);\r\n                    } catch (e) {\r\n                        $log.error([\r\n                            \"Could not instantiate action\",\r\n                            Action.key,\r\n                            \"due to:\",\r\n                            e.message\r\n                        ].join(\" \"));\r\n                        return undefined;\r\n                    }\r\n                }\r\n\r\n                function isDefined(action) {\r\n                    return action !== undefined;\r\n                }\r\n\r\n                return (actions || []).filter(isApplicable)\r\n                    .map(instantiate)\r\n                    .filter(isDefined);\r\n            }\r\n\r\n            // Match actions to the provided context by comparing \"key\"\r\n            // and/or \"category\" parameters, if specified.\r\n            candidates = this.actions;\r\n            if (key) {\r\n                candidates = this.actionsByKey[key];\r\n                if (category) {\r\n                    candidates = candidates.filter(function (Action) {\r\n                        return Action.category === category;\r\n                    });\r\n                }\r\n            } else if (category) {\r\n                candidates = this.actionsByCategory[category];\r\n            }\r\n\r\n            // Instantiate those remaining actions, with additional\r\n            // filtering per any appliesTo methods defined on those\r\n            // actions.\r\n            return createIfApplicable(candidates, context);\r\n        };\r\n\r\n        return ActionProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/actions/ActionAggregator',[],function () {\r\n\r\n        /**\r\n         * Actions are reusable processes/behaviors performed by users within\r\n         * the system, typically upon domain objects. Actions are commonly\r\n         * exposed to users as menu items or buttons.\r\n         *\r\n         * Actions are usually registered via the `actions` extension\r\n         * category, or (in advanced cases) via an `actionService`\r\n         * implementation.\r\n         *\r\n         * @interface Action\r\n         */\r\n\r\n        /**\r\n         * Perform the behavior associated with this action. The return type\r\n         * may vary depending on which action has been performed; in general,\r\n         * no return value should be expected.\r\n         *\r\n         * @method Action#perform\r\n         */\r\n\r\n        /**\r\n         * Get metadata associated with this action.\r\n         *\r\n         * @method Action#getMetadata\r\n         * @returns {ActionMetadata}\r\n         */\r\n\r\n        /**\r\n         * Metadata associated with an Action. Actions of specific types may\r\n         * extend this with additional properties.\r\n         *\r\n         * @typedef {Object} ActionMetadata\r\n         * @property {string} key machine-readable identifier for this action\r\n         * @property {string} name human-readable name for this action\r\n         * @property {string} description human-readable description\r\n         * @property {string} cssclass CSS class for icon\r\n         * @property {ActionContext} context the context in which the action\r\n         *           will be performed.\r\n         */\r\n\r\n        /**\r\n         * Provides actions that can be performed within specific contexts.\r\n         *\r\n         * @interface ActionService\r\n         */\r\n\r\n        /**\r\n         * Get actions which can be performed within a certain context.\r\n         *\r\n         * @method ActionService#getActions\r\n         * @param {ActionContext} context the context in which the action will\r\n         *        be performed\r\n         * @return {Action[]} relevant actions\r\n         */\r\n\r\n        /**\r\n         * A description of the context in which an action may occur.\r\n         *\r\n         * @typedef ActionContext\r\n         * @property {DomainObject} [domainObject] the domain object being\r\n         *           acted upon.\r\n         * @property {DomainObject} [selectedObject] the selection at the\r\n         *           time of action (e.g. the dragged object in a\r\n         *           drag-and-drop operation.)\r\n         * @property {string} [key] the machine-readable identifier of\r\n         *           the relevant action\r\n         * @property {string} [category] a string identifying the category\r\n         *           of action being performed\r\n         */\r\n\r\n        /**\r\n         * The ActionAggregator makes several actionService\r\n         * instances act as those they were one. When requesting\r\n         * actions for a given context, results from all\r\n         * services will be assembled and concatenated.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {ActionService}\r\n         * @param {ActionService[]} actionProviders an array\r\n         *        of action services\r\n         */\r\n        function ActionAggregator(actionProviders) {\r\n            this.actionProviders = actionProviders;\r\n        }\r\n\r\n        ActionAggregator.prototype.getActions = function (context) {\r\n            // Get all actions from all providers, reduce down\r\n            // to one array by concatenation\r\n            return this.actionProviders.map(function (provider) {\r\n                return provider.getActions(context);\r\n            }).reduce(function (a, b) {\r\n                return a.concat(b);\r\n            }, []);\r\n        };\r\n\r\n        return ActionAggregator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining LoggingActionDecorator. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/core/src/actions/LoggingActionDecorator',[],\r\n    function () {\r\n\r\n        /**\r\n         * The LoggingActionDecorator decorates an ActionService such that\r\n         * the actions it exposes always emit a log message when they are\r\n         * performed.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {ActionService}\r\n         * @param $log Angular's logging service\r\n         * @param {ActionService} actionService the decorated action service\r\n         */\r\n        function LoggingActionDecorator($log, actionService) {\r\n            this.$log = $log;\r\n            this.actionService = actionService;\r\n        }\r\n\r\n        LoggingActionDecorator.prototype.getActions = function () {\r\n            var actionService = this.actionService,\r\n                $log = this.$log;\r\n\r\n            // Decorate the perform method of the specified action, such that\r\n            // it emits a log message whenever performed.\r\n            function addLogging(action) {\r\n                var logAction = Object.create(action),\r\n                    metadata = action.getMetadata() || {},\r\n                    context = metadata.context || {},\r\n                    domainObject = context.domainObject;\r\n\r\n                logAction.perform = function () {\r\n                    $log.info([\r\n                        \"Performing action \",\r\n                        metadata.key,\r\n                        \" upon \",\r\n                        domainObject && domainObject.getId()\r\n                    ].join(\"\"));\r\n                    return action.perform.apply(action, arguments);\r\n                };\r\n\r\n                return logAction;\r\n            }\r\n\r\n            return actionService.getActions.apply(\r\n                actionService,\r\n                arguments\r\n            ).map(addLogging);\r\n        };\r\n\r\n        return LoggingActionDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ViewProvider. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/core/src/views/ViewProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provides definitions for views that are available for specific\r\n         * domain objects.\r\n         *\r\n         * @interface ViewService\r\n         */\r\n\r\n        /**\r\n         * Get all views which are applicable to this domain object.\r\n         *\r\n         * @method ViewService#getViews\r\n         * @param {DomainObject} domainObject the domain object to view\r\n         * @returns {View[]} all views which can be used to visualize\r\n         *          this domain object.\r\n         */\r\n\r\n        /**\r\n         * A view provider allows view definitions (defined as extensions)\r\n         * to be read, and takes responsibility for filtering these down\r\n         * to a set that is applicable to specific domain objects. This\r\n         * filtering is parameterized by the extension definitions\r\n         * themselves; specifically:\r\n         *\r\n         * * Definitions with a `needs` property containing an array of\r\n         *   strings are only applicable to domain objects which have\r\n         *   all those capabilities.\r\n         *   * If the view definition has a `delegation` property that\r\n         *     is truthy, then domain objects which delegate capabilities\r\n         *     from the `needs` property will be treated as having those\r\n         *     capabilities for purposes of determining view applicability.\r\n         * * Definitions with a `type` property are only applicable to\r\n         *   domain object's whose `type` capability matches or inherits\r\n         *   from that type.\r\n         *\r\n         * Views themselves are primarily metadata, such as name, icon and\r\n         * description (to be shown in the UI); they do not contain any\r\n         * information directly applicable to rendering to the DOM, although\r\n         * they do contain sufficient information (such as a `templateUrl`,\r\n         * used in the representation bundle) to retrieve those details.\r\n         * The role of a view provider and of a view capability is to\r\n         * describe what views are available, not how to instantiate them.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @param {View[]} an array of view definitions\r\n         * @param $log Angular's logging service\r\n         * @implements {ViewService}\r\n         */\r\n        function ViewProvider(views, $log) {\r\n\r\n            // Views without defined keys cannot be used in the user\r\n            // interface, and can result in unexpected behavior. These\r\n            // are filtered out using this function.\r\n            function validate(view) {\r\n                var key = view.key;\r\n\r\n                // Leave a log message to support detection of this issue.\r\n                if (!key) {\r\n                    $log.warn([\r\n                        \"No key specified for view in \",\r\n                        (view.bundle || {}).path,\r\n                        \"; omitting this view.\"\r\n                    ].join(\"\"));\r\n                }\r\n\r\n                return key;\r\n            }\r\n\r\n            // Filter out any key-less views\r\n            this.views = views.filter(validate);\r\n        }\r\n\r\n        ViewProvider.prototype.getViews = function (domainObject) {\r\n            var type = domainObject.useCapability(\"type\");\r\n\r\n            // Check if an object has all capabilities designated as `needs`\r\n            // for a view. Exposing a capability via delegation is taken to\r\n            // satisfy this filter if `allowDelegation` is true.\r\n            function capabilitiesMatch(domainObj, capabilities, allowDelegation) {\r\n                var delegation = domainObj.getCapability(\"delegation\");\r\n\r\n                allowDelegation = allowDelegation && (delegation !== undefined);\r\n\r\n                // Check if an object has (or delegates, if allowed) a\r\n                // capability.\r\n                function hasCapability(c) {\r\n                    return domainObj.hasCapability(c) ||\r\n                        (allowDelegation && delegation.doesDelegateCapability(c));\r\n                }\r\n\r\n                // For the reduce step below.\r\n                function and(a, b) {\r\n                    return a && b;\r\n                }\r\n\r\n                // Do a bulk `and` operation over all needed capabilities.\r\n                return capabilities.map(hasCapability).reduce(and, true);\r\n            }\r\n\r\n            // Check if a view and domain object type can be paired;\r\n            // both can restrict the others they accept.\r\n            function viewMatchesType(view, objType) {\r\n                var views = objType && (objType.getDefinition() || {}).views,\r\n                    matches = true;\r\n\r\n                // View is restricted to a certain type\r\n                if (view.type) {\r\n                    matches = matches && objType && objType.instanceOf(view.type);\r\n                }\r\n\r\n                // Type wishes to restrict its specific views\r\n                if (Array.isArray(views)) {\r\n                    matches = matches && (views.indexOf(view.key) > -1);\r\n                }\r\n\r\n                return matches;\r\n            }\r\n\r\n            // First, filter views by type (matched to domain object type.)\r\n            // Second, filter by matching capabilities.\r\n            return this.views.filter(function (view) {\r\n                return viewMatchesType(view, type) && capabilitiesMatch(\r\n                        domainObject,\r\n                        view.needs || [],\r\n                        view.delegation || false\r\n                    );\r\n            });\r\n        };\r\n\r\n        return ViewProvider;\r\n    }\r\n);\r\n\n","//     uuid.js\r\n//\r\n//     Copyright (c) 2010-2012 Robert Kieffer\r\n//     MIT License - http://opensource.org/licenses/mit-license.php\r\n\r\n/*global window, require, define */\r\n(function(_window) {\r\n  'use strict';\r\n\r\n  // Unique ID creation requires a high quality random # generator.  We feature\r\n  // detect to determine the best RNG source, normalizing to a function that\r\n  // returns 128-bits of randomness, since that's what's usually required\r\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\r\n\r\n  function setupBrowser() {\r\n    // Allow for MSIE11 msCrypto\r\n    var _crypto = _window.crypto || _window.msCrypto;\r\n\r\n    if (!_rng && _crypto && _crypto.getRandomValues) {\r\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\r\n      //\r\n      // Moderately fast, high quality\r\n      try {\r\n        var _rnds8 = new Uint8Array(16);\r\n        _whatwgRNG = _rng = function whatwgRNG() {\r\n          _crypto.getRandomValues(_rnds8);\r\n          return _rnds8;\r\n        };\r\n        _rng();\r\n      } catch(e) {}\r\n    }\r\n\r\n    if (!_rng) {\r\n      // Math.random()-based (RNG)\r\n      //\r\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\r\n      // quality.\r\n      var  _rnds = new Array(16);\r\n      _mathRNG = _rng = function() {\r\n        for (var i = 0, r; i < 16; i++) {\r\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\r\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\r\n        }\r\n\r\n        return _rnds;\r\n      };\r\n      if ('undefined' !== typeof console && console.warn) {\r\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function setupNode() {\r\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\r\n    //\r\n    // Moderately fast, high quality\r\n    if ('function' === typeof require) {\r\n      try {\r\n        var _rb = require('crypto').randomBytes;\r\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\r\n        _rng();\r\n      } catch(e) {}\r\n    }\r\n  }\r\n\r\n  if (_window) {\r\n    setupBrowser();\r\n  } else {\r\n    setupNode();\r\n  }\r\n\r\n  // Buffer class to use\r\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\r\n\r\n  // Maps for number <-> hex string conversion\r\n  var _byteToHex = [];\r\n  var _hexToByte = {};\r\n  for (var i = 0; i < 256; i++) {\r\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\r\n    _hexToByte[_byteToHex[i]] = i;\r\n  }\r\n\r\n  // **`parse()` - Parse a UUID into it's component bytes**\r\n  function parse(s, buf, offset) {\r\n    var i = (buf && offset) || 0, ii = 0;\r\n\r\n    buf = buf || [];\r\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\r\n      if (ii < 16) { // Don't overflow!\r\n        buf[i + ii++] = _hexToByte[oct];\r\n      }\r\n    });\r\n\r\n    // Zero out remaining bytes if string was short\r\n    while (ii < 16) {\r\n      buf[i + ii++] = 0;\r\n    }\r\n\r\n    return buf;\r\n  }\r\n\r\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\r\n  function unparse(buf, offset) {\r\n    var i = offset || 0, bth = _byteToHex;\r\n    return  bth[buf[i++]] + bth[buf[i++]] +\r\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n            bth[buf[i++]] + bth[buf[i++]] +\r\n            bth[buf[i++]] + bth[buf[i++]] +\r\n            bth[buf[i++]] + bth[buf[i++]];\r\n  }\r\n\r\n  // **`v1()` - Generate time-based UUID**\r\n  //\r\n  // Inspired by https://github.com/LiosK/UUID.js\r\n  // and http://docs.python.org/library/uuid.html\r\n\r\n  // random #'s we need to init node and clockseq\r\n  var _seedBytes = _rng();\r\n\r\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\r\n  var _nodeId = [\r\n    _seedBytes[0] | 0x01,\r\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\r\n  ];\r\n\r\n  // Per 4.2.2, randomize (14 bit) clockseq\r\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\r\n\r\n  // Previous uuid creation time\r\n  var _lastMSecs = 0, _lastNSecs = 0;\r\n\r\n  // See https://github.com/broofa/node-uuid for API details\r\n  function v1(options, buf, offset) {\r\n    var i = buf && offset || 0;\r\n    var b = buf || [];\r\n\r\n    options = options || {};\r\n\r\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\r\n\r\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\r\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\r\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\r\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\r\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\r\n\r\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\r\n    // cycle to simulate higher resolution clock\r\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\r\n\r\n    // Time since last uuid creation (in msecs)\r\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\r\n\r\n    // Per 4.2.1.2, Bump clockseq on clock regression\r\n    if (dt < 0 && options.clockseq == null) {\r\n      clockseq = clockseq + 1 & 0x3fff;\r\n    }\r\n\r\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\r\n    // time interval\r\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\r\n      nsecs = 0;\r\n    }\r\n\r\n    // Per 4.2.1.2 Throw error if too many uuids are requested\r\n    if (nsecs >= 10000) {\r\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\r\n    }\r\n\r\n    _lastMSecs = msecs;\r\n    _lastNSecs = nsecs;\r\n    _clockseq = clockseq;\r\n\r\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\r\n    msecs += 12219292800000;\r\n\r\n    // `time_low`\r\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\r\n    b[i++] = tl >>> 24 & 0xff;\r\n    b[i++] = tl >>> 16 & 0xff;\r\n    b[i++] = tl >>> 8 & 0xff;\r\n    b[i++] = tl & 0xff;\r\n\r\n    // `time_mid`\r\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\r\n    b[i++] = tmh >>> 8 & 0xff;\r\n    b[i++] = tmh & 0xff;\r\n\r\n    // `time_high_and_version`\r\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\r\n    b[i++] = tmh >>> 16 & 0xff;\r\n\r\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\r\n    b[i++] = clockseq >>> 8 | 0x80;\r\n\r\n    // `clock_seq_low`\r\n    b[i++] = clockseq & 0xff;\r\n\r\n    // `node`\r\n    var node = options.node || _nodeId;\r\n    for (var n = 0; n < 6; n++) {\r\n      b[i + n] = node[n];\r\n    }\r\n\r\n    return buf ? buf : unparse(b);\r\n  }\r\n\r\n  // **`v4()` - Generate random UUID**\r\n\r\n  // See https://github.com/broofa/node-uuid for API details\r\n  function v4(options, buf, offset) {\r\n    // Deprecated - 'format' argument, as supported in v1.2\r\n    var i = buf && offset || 0;\r\n\r\n    if (typeof(options) === 'string') {\r\n      buf = (options === 'binary') ? new BufferClass(16) : null;\r\n      options = null;\r\n    }\r\n    options = options || {};\r\n\r\n    var rnds = options.random || (options.rng || _rng)();\r\n\r\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\r\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\r\n\r\n    // Copy bytes to buffer, if provided\r\n    if (buf) {\r\n      for (var ii = 0; ii < 16; ii++) {\r\n        buf[i + ii] = rnds[ii];\r\n      }\r\n    }\r\n\r\n    return buf || unparse(rnds);\r\n  }\r\n\r\n  // Export public API\r\n  var uuid = v4;\r\n  uuid.v1 = v1;\r\n  uuid.v4 = v4;\r\n  uuid.parse = parse;\r\n  uuid.unparse = unparse;\r\n  uuid.BufferClass = BufferClass;\r\n  uuid._rng = _rng;\r\n  uuid._mathRNG = _mathRNG;\r\n  uuid._nodeRNG = _nodeRNG;\r\n  uuid._whatwgRNG = _whatwgRNG;\r\n\r\n  if (('undefined' !== typeof module) && module.exports) {\r\n    // Publish as node.js module\r\n    module.exports = uuid;\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    // Publish as AMD module\r\n    define('uuid',[],function() {return uuid;});\r\n\r\n\r\n  } else {\r\n    // Publish as global (in browsers)\r\n    _previousRoot = _window.uuid;\r\n\r\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\r\n    uuid.noConflict = function() {\r\n      _window.uuid = _previousRoot;\r\n      return uuid;\r\n    };\r\n\r\n    _window.uuid = uuid;\r\n  }\r\n})('undefined' !== typeof window ? window : null);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/identifiers/Identifier',[],\r\n    function () {\r\n\r\n        var SEPARATOR = \":\";\r\n\r\n        /**\r\n         * Provides an interface for interpreting domain object identifiers;\r\n         * in particular, parses out persistence space/key pairs associated\r\n         * with the domain object.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @param {string} id the domain object identifier\r\n         * @param {string} defaultSpace the persistence space to use if\r\n         *        one is not encoded in the identifier\r\n         */\r\n        function Identifier(id, defaultSpace) {\r\n            var separatorIndex = id.indexOf(SEPARATOR);\r\n\r\n            if (separatorIndex > -1) {\r\n                this.key = id.substring(separatorIndex + 1);\r\n                this.space = id.substring(0, separatorIndex);\r\n                this.definedSpace = this.space;\r\n            } else {\r\n                this.key = id;\r\n                this.space = defaultSpace;\r\n                this.definedSpace = undefined;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get the key under which the identified domain object's model\r\n         * should be persisted, within its persistence space.\r\n         * @returns {string} the key within its persistence space\r\n         */\r\n        Identifier.prototype.getKey = function () {\r\n            return this.key;\r\n        };\r\n\r\n        /**\r\n         * Get the space in which the identified domain object's model should\r\n         * be persisted.\r\n         * @returns {string} the persistence space\r\n         */\r\n        Identifier.prototype.getSpace = function () {\r\n            return this.space;\r\n        };\r\n\r\n        /**\r\n         * Get the persistence space, if any, which has been explicitly\r\n         * encoded in this domain object's identifier. Returns undefined\r\n         * if no such space has been specified.\r\n         * @returns {string} the persistence space, or undefined\r\n         */\r\n        Identifier.prototype.getDefinedSpace = function () {\r\n            return this.definedSpace;\r\n        };\r\n\r\n        return Identifier;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/identifiers/IdentifierProvider',[\"uuid\", \"./Identifier\"],\r\n    function (uuid, Identifier) {\r\n\r\n        /**\r\n         * Parses and generates domain object identifiers.\r\n         * @param {string} defaultSpace the default persistence space\r\n         * @constructor\r\n         * @memberof {platform/core}\r\n         */\r\n        function IdentifierProvider(defaultSpace) {\r\n            this.defaultSpace = defaultSpace;\r\n        }\r\n\r\n        /**\r\n         * Generate a new domain object identifier. A persistence space\r\n         * may optionally be included; if not specified, no space will\r\n         * be encoded into the identifier.\r\n         * @param {string} [space] the persistence space to encode\r\n         *        in this identifier\r\n         * @returns {string} a new domain object identifier\r\n         */\r\n        IdentifierProvider.prototype.generate = function (space) {\r\n            var id = uuid();\r\n            if (space !== undefined) {\r\n                id = space + \":\" + id;\r\n            }\r\n            return id;\r\n        };\r\n\r\n        /**\r\n         * Parse a domain object identifier to examine its component\r\n         * parts (e.g. its persistence space.)\r\n         * @returns {platform/core.Identifier} the parsed identifier\r\n         */\r\n        IdentifierProvider.prototype.parse = function (id) {\r\n            return new Identifier(id, this.defaultSpace);\r\n        };\r\n\r\n        return IdentifierProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CompositionCapability. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/capabilities/CompositionCapability',[],function () {\r\n\r\n        /**\r\n         * Composition capability. A domain object's composition is the set of\r\n         * domain objects it contains. This is available as an array of\r\n         * identifiers in the model; the composition capability makes this\r\n         * available as an array of domain object instances, which may\r\n         * require consulting the object service (e.g. to trigger a database\r\n         * query to retrieve the nested object models.)\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {Capability}\r\n         */\r\n        function CompositionCapability($injector, contextualize, domainObject) {\r\n            // Get a reference to the object service from $injector\r\n            this.injectObjectService = function () {\r\n                this.objectService = $injector.get(\"objectService\");\r\n            };\r\n\r\n            this.contextualize = contextualize;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Add a domain object to the composition of the field.\r\n         * This mutates but does not persist the modified object.\r\n         *\r\n         * If no index is given, this is added to the end of the composition.\r\n         *\r\n         * @param {DomainObject|string} domainObject the domain object to add,\r\n         *        or simply its identifier\r\n         * @param {number} [index] the index at which to add the object\r\n         * @returns {Promise.<DomainObject>} a promise for the added object\r\n         *          in its new context\r\n         */\r\n        CompositionCapability.prototype.add = function (domainObject, index) {\r\n            var self = this,\r\n                id = typeof domainObject === 'string' ?\r\n                        domainObject : domainObject.getId(),\r\n                model = self.domainObject.getModel(),\r\n                composition = model.composition,\r\n                oldIndex = composition.indexOf(id);\r\n\r\n            // Find the object with the above id, used to contextualize\r\n            function findObject(objects) {\r\n                var i;\r\n                for (i = 0; i < objects.length; i += 1) {\r\n                    if (objects[i].getId() === id) {\r\n                        return objects[i];\r\n                    }\r\n                }\r\n            }\r\n\r\n            function contextualize(mutationResult) {\r\n                return mutationResult && self.invoke().then(findObject);\r\n            }\r\n\r\n            function addIdToModel(objModel) {\r\n                // Pick a specific index if needed.\r\n                index = isNaN(index) ? composition.length : index;\r\n                // Also, don't put past the end of the array\r\n                index = Math.min(composition.length, index);\r\n\r\n                // Remove the existing instance of the id\r\n                if (oldIndex !== -1) {\r\n                    objModel.composition.splice(oldIndex, 1);\r\n                }\r\n\r\n                // ...and add it back at the appropriate index.\r\n                objModel.composition.splice(index, 0, id);\r\n            }\r\n\r\n            // If no index has been specified already and the id is already\r\n            // present, nothing to do. If the id is already at that index,\r\n            // also nothing to do, so cancel mutation.\r\n            if ((isNaN(index) && oldIndex !== -1) || (index === oldIndex)) {\r\n                return contextualize(true);\r\n            }\r\n\r\n            return this.domainObject.useCapability('mutation', addIdToModel)\r\n                    .then(contextualize);\r\n        };\r\n\r\n        /**\r\n         * Request the composition of this object.\r\n         * @returns {Promise.<DomainObject[]>} a list of all domain\r\n         *     objects which compose this domain object.\r\n         */\r\n        CompositionCapability.prototype.invoke = function () {\r\n            var domainObject = this.domainObject,\r\n                model = domainObject.getModel(),\r\n                contextualize = this.contextualize,\r\n                ids;\r\n\r\n            // Then filter out non-existent objects,\r\n            // and wrap others (such that they expose a\r\n            // \"context\" capability)\r\n            function contextualizeObjects(objects) {\r\n                return ids.filter(function (id) {\r\n                    return objects[id];\r\n                }).map(function (id) {\r\n                    return contextualize(objects[id], domainObject);\r\n                });\r\n            }\r\n\r\n            // Lazily acquire object service (avoids cyclical dependency)\r\n            if (!this.objectService) {\r\n                this.injectObjectService();\r\n            }\r\n\r\n            // Make a new request if we haven't made one, or if the\r\n            // object has been modified.\r\n            if (!this.lastPromise || this.lastModified !== model.modified) {\r\n                ids = model.composition || [];\r\n                this.lastModified = model.modified;\r\n                // Load from the underlying object service\r\n                this.lastPromise = this.objectService.getObjects(ids)\r\n                    .then(contextualizeObjects);\r\n            }\r\n\r\n            return this.lastPromise;\r\n        };\r\n\r\n        /**\r\n         * Test to determine whether or not this capability should be exposed\r\n         * by a domain object based on its model. Checks for the presence of\r\n         * a composition field, that must be an array.\r\n         * @param model the domain object model\r\n         * @returns {boolean} true if this object has a composition\r\n         */\r\n        CompositionCapability.appliesTo = function (model) {\r\n            return Array.isArray((model || {}).composition);\r\n        };\r\n\r\n        return CompositionCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/capabilities/RelationshipCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * Relationship capability. Describes a domain objects relationship\r\n         * to other domain objects within the system, and provides a way to\r\n         * access related objects.\r\n         *\r\n         * For most cases, this is not the capability to use; the\r\n         * `composition` capability describes the more general relationship\r\n         * between objects typically seen (e.g. in the tree.) This capability\r\n         * is instead intended for the more unusual case of relationships\r\n         * which are not intended to appear in the tree, but are instead\r\n         * intended only for special, limited usage.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {Capability}\r\n         */\r\n        function RelationshipCapability($injector, domainObject) {\r\n            // Get a reference to the object service from $injector\r\n            this.injectObjectService = function () {\r\n                this.objectService = $injector.get(\"objectService\");\r\n            };\r\n\r\n            this.lastPromise = {};\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * List all types of relationships exposed by this\r\n         * object.\r\n         * @returns {string[]} a list of all relationship types\r\n         */\r\n        RelationshipCapability.prototype.listRelationships = function listRelationships() {\r\n            var relationships =\r\n                (this.domainObject.getModel() || {}).relationships || {};\r\n\r\n            // Check if this key really does expose an array of ids\r\n            // (to filter out malformed relationships)\r\n            function isArray(key) {\r\n                return Array.isArray(relationships[key]);\r\n            }\r\n\r\n            return Object.keys(relationships).filter(isArray).sort();\r\n        };\r\n\r\n        /**\r\n         * Request related objects, with a given relationship type.\r\n         * This will typically require asynchronous lookup, so this\r\n         * returns a promise.\r\n         * @param {string} key the type of relationship\r\n         * @returns {Promise.<DomainObject[]>} a promise for related\r\n         *          domain objects\r\n         */\r\n        RelationshipCapability.prototype.getRelatedObjects = function (key) {\r\n            var model = this.domainObject.getModel(),\r\n                ids;\r\n\r\n            // Package objects as an array\r\n            function packageObject(objects) {\r\n                return ids.map(function (id) {\r\n                    return objects[id];\r\n                }).filter(function (obj) {\r\n                    return obj;\r\n                });\r\n            }\r\n\r\n            // Clear cached promises if modification has occurred\r\n            if (this.lastModified !== model.modified) {\r\n                this.lastPromise = {};\r\n                this.lastModified = model.modified;\r\n            }\r\n\r\n            // Make a new request if needed\r\n            if (!this.lastPromise[key]) {\r\n                ids = (model.relationships || {})[key] || [];\r\n                this.lastModified = model.modified;\r\n                // Lazily initialize object service now that we need it\r\n                if (!this.objectService) {\r\n                    this.injectObjectService();\r\n                }\r\n                // Load from the underlying object service\r\n                this.lastPromise[key] = this.objectService.getObjects(ids)\r\n                    .then(packageObject);\r\n            }\r\n\r\n            return this.lastPromise[key];\r\n        };\r\n\r\n\r\n        /**\r\n         * Test to determine whether or not this capability should be exposed\r\n         * by a domain object based on its model. Checks for the presence of\r\n         * a `relationships` field, that must be an object.\r\n         * @param model the domain object model\r\n         * @returns {boolean} true if this object has relationships\r\n         */\r\n        RelationshipCapability.appliesTo = function (model) {\r\n            return !!(model || {}).relationships;\r\n        };\r\n\r\n        return RelationshipCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining TypeCapability. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/core/src/types/TypeCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `type` capability makes information about a domain object's\r\n         * type directly available when working with that object, by way\r\n         * of a `domainObject.getCapability('type')` invocation.\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @augments {Type}\r\n         * @implements {Capability}\r\n         * @param {TypeService} typeService the service which\r\n         *        provides type information\r\n         * @param {DomainObject} domainObject the domain object\r\n         *        which exposes the type capability\r\n         */\r\n        function TypeCapability(typeService, domainObject) {\r\n            var typeKey = domainObject.getModel().type,\r\n                type = typeService.getType(typeKey);\r\n\r\n            // Simply return the type, but wrap with Object.create\r\n            // to avoid exposing the type object directly.\r\n            return Object.create(type);\r\n        }\r\n\r\n        return TypeCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ActionCapability. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/core/src/actions/ActionCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * The ActionCapability allows applicable Actions to be retrieved and\r\n         * performed for specific domain objects, e.g.:\r\n         *\r\n         * `domainObject.getCapability(\"action\").perform(\"navigate\");`\r\n         *\r\n         * ...will initiate a navigate action upon the domain object,\r\n         * if an action with key \"navigate\" is defined.\r\n         *\r\n         * @param {*} $q Angular's $q service, for promises\r\n         * @param {ActionService} actionService the service from\r\n         *        which to retrieve actions.\r\n         * @param {DomainObject} domainObject the object upon\r\n         *        which the action will be performed (also, the\r\n         *        action which exposes the capability.)\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function ActionCapability($q, actionService, domainObject) {\r\n            this.$q = $q;\r\n            this.actionService = actionService;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Perform an action. This will find and perform the\r\n         * first matching action available for the specified\r\n         * context or key.\r\n         *\r\n         * @param {ActionContext|string} context the context in which\r\n         *       to perform the action; this is passed along to\r\n         *       the action service to match against available\r\n         *       actions. The \"domainObject\" field will automatically\r\n         *       be populated with the domain object that exposed\r\n         *       this capability. If given as a string, this will\r\n         *       be taken as the \"key\" field to match against\r\n         *       specific actions.\r\n         * @returns {Promise} the result of the action that was\r\n         *       performed, or undefined if no matching action\r\n         *       was found.\r\n         * @memberof platform/core.ActionCapability#\r\n         */\r\n        ActionCapability.prototype.getActions = function (context) {\r\n            // Get all actions which are valid in this context;\r\n            // this simply redirects to the action service,\r\n            // but additionally adds a domainObject field.\r\n            var baseContext = typeof context === 'string' ?\r\n                        { key: context } : (context || {}),\r\n                actionContext = Object.create(baseContext);\r\n\r\n            actionContext.domainObject = this.domainObject;\r\n\r\n            return this.actionService.getActions(actionContext);\r\n        };\r\n\r\n        /**\r\n         * Get actions which are available for this domain object,\r\n         * in this context.\r\n         *\r\n         * @param {ActionContext|string} context the context in which\r\n         *       to perform the action; this is passed along to\r\n         *       the action service to match against available\r\n         *       actions. The \"domainObject\" field will automatically\r\n         *       be populated with the domain object that exposed\r\n         *       this capability. If given as a string, this will\r\n         *       be taken as the \"key\" field to match against\r\n         *       specific actions.\r\n         * @returns {Action[]} an array of matching actions\r\n         * @memberof platform/core.ActionCapability#\r\n         */\r\n        ActionCapability.prototype.perform = function (context) {\r\n            // Alias to getActions(context)[0].perform, with a\r\n            // check for empty arrays.\r\n            var actions = this.getActions(context);\r\n\r\n            return this.$q.when(\r\n                (actions && actions.length > 0) ?\r\n                    actions[0].perform() :\r\n                    undefined\r\n            );\r\n        };\r\n\r\n\r\n        return ActionCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ViewCapability. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/core/src/views/ViewCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * A `view` capability can be used to retrieve an array of\r\n         * all views (or, more specifically, the declarative metadata\r\n         * thereabout) which are applicable to a specific domain\r\n         * object.\r\n         *\r\n         * @memberof platform/core\r\n         * @implements {Capability}\r\n         * @constructor\r\n         */\r\n        function ViewCapability(viewService, domainObject) {\r\n            this.viewService = viewService;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Get all view definitions which are applicable to\r\n         * this object.\r\n         * @returns {View[]} an array of view definitions\r\n         *          which are applicable to this object.\r\n         * @memberof platform/core.ViewCapability#\r\n         */\r\n        ViewCapability.prototype.invoke = function () {\r\n            return this.viewService.getViews(this.domainObject);\r\n        };\r\n\r\n        return ViewCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/capabilities/PersistenceCapability',[],function () {\r\n\r\n        /**\r\n         * Defines the `persistence` capability, used to trigger the\r\n         * writing of changes to a domain object to an underlying\r\n         * persistence store.\r\n         *\r\n         * @param {PersistenceService} persistenceService the underlying\r\n         *        provider of persistence capabilities.\r\n         * @param {string} space the name of the persistence space to\r\n         *        use (this is an arbitrary string, useful in principle\r\n         *        for distinguishing different persistence stores from\r\n         *        one another.)\r\n         * @param {DomainObject} the domain object which shall expose\r\n         *        this capability\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {Capability}\r\n         */\r\n        function PersistenceCapability(\r\n            cacheService,\r\n            persistenceService,\r\n            identifierService,\r\n            notificationService,\r\n            $q,\r\n            domainObject\r\n        ) {\r\n            // Cache modified timestamp\r\n            this.modified = domainObject.getModel().modified;\r\n\r\n            this.domainObject = domainObject;\r\n            this.cacheService = cacheService;\r\n            this.identifierService = identifierService;\r\n            this.persistenceService = persistenceService;\r\n            this.notificationService = notificationService;\r\n            this.$q = $q;\r\n        }\r\n\r\n        /**\r\n         * Checks if the value returned is falsey, and if so returns a\r\n         * rejected promise\r\n         */\r\n        function rejectIfFalsey(value, $q) {\r\n            if (!value) {\r\n                return $q.reject(\"Error persisting object\");\r\n            } else {\r\n                return value;\r\n            }\r\n        }\r\n\r\n        function formatError(error) {\r\n            if (error && error.message) {\r\n                return error.message;\r\n            } else if (error && typeof error === \"string\") {\r\n                return error;\r\n            } else {\r\n                return \"unknown error\";\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Display a notification message if an error has occurred during\r\n         * persistence.\r\n         */\r\n        function notifyOnError(error, domainObject, notificationService, $q) {\r\n            var errorMessage = \"Unable to persist \" + domainObject.getModel().name;\r\n            if (error) {\r\n                errorMessage += \": \" + formatError(error);\r\n            }\r\n\r\n            notificationService.error({\r\n                title: \"Error persisting \" + domainObject.getModel().name,\r\n                hint: errorMessage,\r\n                dismissable: true\r\n            });\r\n\r\n            return $q.reject(error);\r\n        }\r\n\r\n        /**\r\n         * Persist any changes which have been made to this\r\n         * domain object's model.\r\n         * @returns {Promise} a promise which will be resolved\r\n         *          if persistence is successful, and rejected\r\n         *          if not.\r\n         */\r\n        PersistenceCapability.prototype.persist = function () {\r\n            var self = this,\r\n                domainObject = this.domainObject,\r\n                model = domainObject.getModel(),\r\n                modified = model.modified,\r\n                persistenceService = this.persistenceService,\r\n                persistenceFn = model.persisted !== undefined ?\r\n                    this.persistenceService.updateObject :\r\n                    this.persistenceService.createObject;\r\n\r\n            // Update persistence timestamp...\r\n            domainObject.useCapability(\"mutation\", function (m) {\r\n                m.persisted = modified;\r\n            }, modified);\r\n\r\n            // ...and persist\r\n            return persistenceFn.apply(persistenceService, [\r\n                this.getSpace(),\r\n                this.getKey(),\r\n                domainObject.getModel()\r\n            ]).then(function (result) {\r\n                return rejectIfFalsey(result, self.$q);\r\n            }).catch(function (error) {\r\n                return notifyOnError(error, domainObject, self.notificationService, self.$q);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Update this domain object to match the latest from\r\n         * persistence.\r\n         * @returns {Promise} a promise which will be resolved\r\n         *          when the update is complete\r\n         */\r\n        PersistenceCapability.prototype.refresh = function () {\r\n            var domainObject = this.domainObject;\r\n\r\n            // Update a domain object's model upon refresh\r\n            function updateModel(model) {\r\n                var modified = model.modified;\r\n                return domainObject.useCapability(\"mutation\", function () {\r\n                    return model;\r\n                }, modified);\r\n            }\r\n\r\n            if (domainObject.getModel().persisted === undefined) {\r\n                return this.$q.when(true);\r\n            }\r\n\r\n            return this.persistenceService.readObject(\r\n                    this.getSpace(),\r\n                    this.getKey()\r\n                ).then(updateModel);\r\n        };\r\n\r\n        /**\r\n         * Get the space in which this domain object is persisted;\r\n         * this is useful when, for example, decided which space a\r\n         * newly-created domain object should be persisted to (by\r\n         * default, this should be the space of its containing\r\n         * object.)\r\n         *\r\n         * @returns {string} the name of the space which should\r\n         *          be used to persist this object\r\n         */\r\n        PersistenceCapability.prototype.getSpace = function () {\r\n            var id = this.domainObject.getId();\r\n            return this.identifierService.parse(id).getSpace();\r\n        };\r\n\r\n\r\n        /**\r\n         * Get the key for this domain object in the given space.\r\n         *\r\n         * @returns {string} the key of the object in it's space.\r\n         */\r\n        PersistenceCapability.prototype.getKey = function () {\r\n            var id = this.domainObject.getId();\r\n            return this.identifierService.parse(id).getKey();\r\n        };\r\n\r\n        return PersistenceCapability;\r\n    }\r\n);\r\n\n","//! moment.js\r\n//! version : 2.14.1\r\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\r\n//! license : MIT\r\n//! momentjs.com\r\n\r\n;(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define('moment',factory) :\r\n    global.moment = factory()\r\n}(this, function () { 'use strict';\r\n\r\n    var hookCallback;\r\n\r\n    function utils_hooks__hooks () {\r\n        return hookCallback.apply(null, arguments);\r\n    }\r\n\r\n    // This is done to register the method called with moment()\r\n    // without creating circular dependencies.\r\n    function setHookCallback (callback) {\r\n        hookCallback = callback;\r\n    }\r\n\r\n    function isArray(input) {\r\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\r\n    }\r\n\r\n    function isObject(input) {\r\n        return Object.prototype.toString.call(input) === '[object Object]';\r\n    }\r\n\r\n    function isObjectEmpty(obj) {\r\n        var k;\r\n        for (k in obj) {\r\n            // even if its not own property I'd still call it non-empty\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isDate(input) {\r\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\r\n    }\r\n\r\n    function map(arr, fn) {\r\n        var res = [], i;\r\n        for (i = 0; i < arr.length; ++i) {\r\n            res.push(fn(arr[i], i));\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function hasOwnProp(a, b) {\r\n        return Object.prototype.hasOwnProperty.call(a, b);\r\n    }\r\n\r\n    function extend(a, b) {\r\n        for (var i in b) {\r\n            if (hasOwnProp(b, i)) {\r\n                a[i] = b[i];\r\n            }\r\n        }\r\n\r\n        if (hasOwnProp(b, 'toString')) {\r\n            a.toString = b.toString;\r\n        }\r\n\r\n        if (hasOwnProp(b, 'valueOf')) {\r\n            a.valueOf = b.valueOf;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    function create_utc__createUTC (input, format, locale, strict) {\r\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\r\n    }\r\n\r\n    function defaultParsingFlags() {\r\n        // We need to deep clone this object.\r\n        return {\r\n            empty           : false,\r\n            unusedTokens    : [],\r\n            unusedInput     : [],\r\n            overflow        : -2,\r\n            charsLeftOver   : 0,\r\n            nullInput       : false,\r\n            invalidMonth    : null,\r\n            invalidFormat   : false,\r\n            userInvalidated : false,\r\n            iso             : false,\r\n            parsedDateParts : [],\r\n            meridiem        : null\r\n        };\r\n    }\r\n\r\n    function getParsingFlags(m) {\r\n        if (m._pf == null) {\r\n            m._pf = defaultParsingFlags();\r\n        }\r\n        return m._pf;\r\n    }\r\n\r\n    var some;\r\n    if (Array.prototype.some) {\r\n        some = Array.prototype.some;\r\n    } else {\r\n        some = function (fun) {\r\n            var t = Object(this);\r\n            var len = t.length >>> 0;\r\n\r\n            for (var i = 0; i < len; i++) {\r\n                if (i in t && fun.call(this, t[i], i, t)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n    }\r\n\r\n    function valid__isValid(m) {\r\n        if (m._isValid == null) {\r\n            var flags = getParsingFlags(m);\r\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\r\n                return i != null;\r\n            });\r\n            m._isValid = !isNaN(m._d.getTime()) &&\r\n                flags.overflow < 0 &&\r\n                !flags.empty &&\r\n                !flags.invalidMonth &&\r\n                !flags.invalidWeekday &&\r\n                !flags.nullInput &&\r\n                !flags.invalidFormat &&\r\n                !flags.userInvalidated &&\r\n                (!flags.meridiem || (flags.meridiem && parsedParts));\r\n\r\n            if (m._strict) {\r\n                m._isValid = m._isValid &&\r\n                    flags.charsLeftOver === 0 &&\r\n                    flags.unusedTokens.length === 0 &&\r\n                    flags.bigHour === undefined;\r\n            }\r\n        }\r\n        return m._isValid;\r\n    }\r\n\r\n    function valid__createInvalid (flags) {\r\n        var m = create_utc__createUTC(NaN);\r\n        if (flags != null) {\r\n            extend(getParsingFlags(m), flags);\r\n        }\r\n        else {\r\n            getParsingFlags(m).userInvalidated = true;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    function isUndefined(input) {\r\n        return input === void 0;\r\n    }\r\n\r\n    // Plugins that add properties should also add the key here (null value),\r\n    // so we can properly clone ourselves.\r\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\r\n\r\n    function copyConfig(to, from) {\r\n        var i, prop, val;\r\n\r\n        if (!isUndefined(from._isAMomentObject)) {\r\n            to._isAMomentObject = from._isAMomentObject;\r\n        }\r\n        if (!isUndefined(from._i)) {\r\n            to._i = from._i;\r\n        }\r\n        if (!isUndefined(from._f)) {\r\n            to._f = from._f;\r\n        }\r\n        if (!isUndefined(from._l)) {\r\n            to._l = from._l;\r\n        }\r\n        if (!isUndefined(from._strict)) {\r\n            to._strict = from._strict;\r\n        }\r\n        if (!isUndefined(from._tzm)) {\r\n            to._tzm = from._tzm;\r\n        }\r\n        if (!isUndefined(from._isUTC)) {\r\n            to._isUTC = from._isUTC;\r\n        }\r\n        if (!isUndefined(from._offset)) {\r\n            to._offset = from._offset;\r\n        }\r\n        if (!isUndefined(from._pf)) {\r\n            to._pf = getParsingFlags(from);\r\n        }\r\n        if (!isUndefined(from._locale)) {\r\n            to._locale = from._locale;\r\n        }\r\n\r\n        if (momentProperties.length > 0) {\r\n            for (i in momentProperties) {\r\n                prop = momentProperties[i];\r\n                val = from[prop];\r\n                if (!isUndefined(val)) {\r\n                    to[prop] = val;\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    var updateInProgress = false;\r\n\r\n    // Moment prototype object\r\n    function Moment(config) {\r\n        copyConfig(this, config);\r\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\r\n        // Prevent infinite loop in case updateOffset creates new moment\r\n        // objects.\r\n        if (updateInProgress === false) {\r\n            updateInProgress = true;\r\n            utils_hooks__hooks.updateOffset(this);\r\n            updateInProgress = false;\r\n        }\r\n    }\r\n\r\n    function isMoment (obj) {\r\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\r\n    }\r\n\r\n    function absFloor (number) {\r\n        if (number < 0) {\r\n            // -0 -> 0\r\n            return Math.ceil(number) || 0;\r\n        } else {\r\n            return Math.floor(number);\r\n        }\r\n    }\r\n\r\n    function toInt(argumentForCoercion) {\r\n        var coercedNumber = +argumentForCoercion,\r\n            value = 0;\r\n\r\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\r\n            value = absFloor(coercedNumber);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    // compare two arrays, return the number of differences\r\n    function compareArrays(array1, array2, dontConvert) {\r\n        var len = Math.min(array1.length, array2.length),\r\n            lengthDiff = Math.abs(array1.length - array2.length),\r\n            diffs = 0,\r\n            i;\r\n        for (i = 0; i < len; i++) {\r\n            if ((dontConvert && array1[i] !== array2[i]) ||\r\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\r\n                diffs++;\r\n            }\r\n        }\r\n        return diffs + lengthDiff;\r\n    }\r\n\r\n    function warn(msg) {\r\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\r\n                (typeof console !==  'undefined') && console.warn) {\r\n            console.warn('Deprecation warning: ' + msg);\r\n        }\r\n    }\r\n\r\n    function deprecate(msg, fn) {\r\n        var firstTime = true;\r\n\r\n        return extend(function () {\r\n            if (utils_hooks__hooks.deprecationHandler != null) {\r\n                utils_hooks__hooks.deprecationHandler(null, msg);\r\n            }\r\n            if (firstTime) {\r\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\r\n                firstTime = false;\r\n            }\r\n            return fn.apply(this, arguments);\r\n        }, fn);\r\n    }\r\n\r\n    var deprecations = {};\r\n\r\n    function deprecateSimple(name, msg) {\r\n        if (utils_hooks__hooks.deprecationHandler != null) {\r\n            utils_hooks__hooks.deprecationHandler(name, msg);\r\n        }\r\n        if (!deprecations[name]) {\r\n            warn(msg);\r\n            deprecations[name] = true;\r\n        }\r\n    }\r\n\r\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\r\n    utils_hooks__hooks.deprecationHandler = null;\r\n\r\n    function isFunction(input) {\r\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\r\n    }\r\n\r\n    function locale_set__set (config) {\r\n        var prop, i;\r\n        for (i in config) {\r\n            prop = config[i];\r\n            if (isFunction(prop)) {\r\n                this[i] = prop;\r\n            } else {\r\n                this['_' + i] = prop;\r\n            }\r\n        }\r\n        this._config = config;\r\n        // Lenient ordinal parsing accepts just a number in addition to\r\n        // number + (possibly) stuff coming from _ordinalParseLenient.\r\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\r\n    }\r\n\r\n    function mergeConfigs(parentConfig, childConfig) {\r\n        var res = extend({}, parentConfig), prop;\r\n        for (prop in childConfig) {\r\n            if (hasOwnProp(childConfig, prop)) {\r\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\r\n                    res[prop] = {};\r\n                    extend(res[prop], parentConfig[prop]);\r\n                    extend(res[prop], childConfig[prop]);\r\n                } else if (childConfig[prop] != null) {\r\n                    res[prop] = childConfig[prop];\r\n                } else {\r\n                    delete res[prop];\r\n                }\r\n            }\r\n        }\r\n        for (prop in parentConfig) {\r\n            if (hasOwnProp(parentConfig, prop) &&\r\n                    !hasOwnProp(childConfig, prop) &&\r\n                    isObject(parentConfig[prop])) {\r\n                // make sure changes to properties don't modify parent config\r\n                res[prop] = extend({}, res[prop]);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function Locale(config) {\r\n        if (config != null) {\r\n            this.set(config);\r\n        }\r\n    }\r\n\r\n    var keys;\r\n\r\n    if (Object.keys) {\r\n        keys = Object.keys;\r\n    } else {\r\n        keys = function (obj) {\r\n            var i, res = [];\r\n            for (i in obj) {\r\n                if (hasOwnProp(obj, i)) {\r\n                    res.push(i);\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n    }\r\n\r\n    var defaultCalendar = {\r\n        sameDay : '[Today at] LT',\r\n        nextDay : '[Tomorrow at] LT',\r\n        nextWeek : 'dddd [at] LT',\r\n        lastDay : '[Yesterday at] LT',\r\n        lastWeek : '[Last] dddd [at] LT',\r\n        sameElse : 'L'\r\n    };\r\n\r\n    function locale_calendar__calendar (key, mom, now) {\r\n        var output = this._calendar[key] || this._calendar['sameElse'];\r\n        return isFunction(output) ? output.call(mom, now) : output;\r\n    }\r\n\r\n    var defaultLongDateFormat = {\r\n        LTS  : 'h:mm:ss A',\r\n        LT   : 'h:mm A',\r\n        L    : 'MM/DD/YYYY',\r\n        LL   : 'MMMM D, YYYY',\r\n        LLL  : 'MMMM D, YYYY h:mm A',\r\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\r\n    };\r\n\r\n    function longDateFormat (key) {\r\n        var format = this._longDateFormat[key],\r\n            formatUpper = this._longDateFormat[key.toUpperCase()];\r\n\r\n        if (format || !formatUpper) {\r\n            return format;\r\n        }\r\n\r\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\r\n            return val.slice(1);\r\n        });\r\n\r\n        return this._longDateFormat[key];\r\n    }\r\n\r\n    var defaultInvalidDate = 'Invalid date';\r\n\r\n    function invalidDate () {\r\n        return this._invalidDate;\r\n    }\r\n\r\n    var defaultOrdinal = '%d';\r\n    var defaultOrdinalParse = /\\d{1,2}/;\r\n\r\n    function ordinal (number) {\r\n        return this._ordinal.replace('%d', number);\r\n    }\r\n\r\n    var defaultRelativeTime = {\r\n        future : 'in %s',\r\n        past   : '%s ago',\r\n        s  : 'a few seconds',\r\n        m  : 'a minute',\r\n        mm : '%d minutes',\r\n        h  : 'an hour',\r\n        hh : '%d hours',\r\n        d  : 'a day',\r\n        dd : '%d days',\r\n        M  : 'a month',\r\n        MM : '%d months',\r\n        y  : 'a year',\r\n        yy : '%d years'\r\n    };\r\n\r\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\r\n        var output = this._relativeTime[string];\r\n        return (isFunction(output)) ?\r\n            output(number, withoutSuffix, string, isFuture) :\r\n            output.replace(/%d/i, number);\r\n    }\r\n\r\n    function pastFuture (diff, output) {\r\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\r\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\r\n    }\r\n\r\n    var aliases = {};\r\n\r\n    function addUnitAlias (unit, shorthand) {\r\n        var lowerCase = unit.toLowerCase();\r\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\r\n    }\r\n\r\n    function normalizeUnits(units) {\r\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\r\n    }\r\n\r\n    function normalizeObjectUnits(inputObject) {\r\n        var normalizedInput = {},\r\n            normalizedProp,\r\n            prop;\r\n\r\n        for (prop in inputObject) {\r\n            if (hasOwnProp(inputObject, prop)) {\r\n                normalizedProp = normalizeUnits(prop);\r\n                if (normalizedProp) {\r\n                    normalizedInput[normalizedProp] = inputObject[prop];\r\n                }\r\n            }\r\n        }\r\n\r\n        return normalizedInput;\r\n    }\r\n\r\n    var priorities = {};\r\n\r\n    function addUnitPriority(unit, priority) {\r\n        priorities[unit] = priority;\r\n    }\r\n\r\n    function getPrioritizedUnits(unitsObj) {\r\n        var units = [];\r\n        for (var u in unitsObj) {\r\n            units.push({unit: u, priority: priorities[u]});\r\n        }\r\n        units.sort(function (a, b) {\r\n            return a.priority - b.priority;\r\n        });\r\n        return units;\r\n    }\r\n\r\n    function makeGetSet (unit, keepTime) {\r\n        return function (value) {\r\n            if (value != null) {\r\n                get_set__set(this, unit, value);\r\n                utils_hooks__hooks.updateOffset(this, keepTime);\r\n                return this;\r\n            } else {\r\n                return get_set__get(this, unit);\r\n            }\r\n        };\r\n    }\r\n\r\n    function get_set__get (mom, unit) {\r\n        return mom.isValid() ?\r\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\r\n    }\r\n\r\n    function get_set__set (mom, unit, value) {\r\n        if (mom.isValid()) {\r\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\r\n        }\r\n    }\r\n\r\n    // MOMENTS\r\n\r\n    function stringGet (units) {\r\n        units = normalizeUnits(units);\r\n        if (isFunction(this[units])) {\r\n            return this[units]();\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function stringSet (units, value) {\r\n        if (typeof units === 'object') {\r\n            units = normalizeObjectUnits(units);\r\n            var prioritized = getPrioritizedUnits(units);\r\n            for (var i = 0; i < prioritized.length; i++) {\r\n                this[prioritized[i].unit](units[prioritized[i].unit]);\r\n            }\r\n        } else {\r\n            units = normalizeUnits(units);\r\n            if (isFunction(this[units])) {\r\n                return this[units](value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function zeroFill(number, targetLength, forceSign) {\r\n        var absNumber = '' + Math.abs(number),\r\n            zerosToFill = targetLength - absNumber.length,\r\n            sign = number >= 0;\r\n        return (sign ? (forceSign ? '+' : '') : '-') +\r\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\r\n    }\r\n\r\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\r\n\r\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\r\n\r\n    var formatFunctions = {};\r\n\r\n    var formatTokenFunctions = {};\r\n\r\n    // token:    'M'\r\n    // padded:   ['MM', 2]\r\n    // ordinal:  'Mo'\r\n    // callback: function () { this.month() + 1 }\r\n    function addFormatToken (token, padded, ordinal, callback) {\r\n        var func = callback;\r\n        if (typeof callback === 'string') {\r\n            func = function () {\r\n                return this[callback]();\r\n            };\r\n        }\r\n        if (token) {\r\n            formatTokenFunctions[token] = func;\r\n        }\r\n        if (padded) {\r\n            formatTokenFunctions[padded[0]] = function () {\r\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\r\n            };\r\n        }\r\n        if (ordinal) {\r\n            formatTokenFunctions[ordinal] = function () {\r\n                return this.localeData().ordinal(func.apply(this, arguments), token);\r\n            };\r\n        }\r\n    }\r\n\r\n    function removeFormattingTokens(input) {\r\n        if (input.match(/\\[[\\s\\S]/)) {\r\n            return input.replace(/^\\[|\\]$/g, '');\r\n        }\r\n        return input.replace(/\\\\/g, '');\r\n    }\r\n\r\n    function makeFormatFunction(format) {\r\n        var array = format.match(formattingTokens), i, length;\r\n\r\n        for (i = 0, length = array.length; i < length; i++) {\r\n            if (formatTokenFunctions[array[i]]) {\r\n                array[i] = formatTokenFunctions[array[i]];\r\n            } else {\r\n                array[i] = removeFormattingTokens(array[i]);\r\n            }\r\n        }\r\n\r\n        return function (mom) {\r\n            var output = '', i;\r\n            for (i = 0; i < length; i++) {\r\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\r\n            }\r\n            return output;\r\n        };\r\n    }\r\n\r\n    // format date using native date object\r\n    function formatMoment(m, format) {\r\n        if (!m.isValid()) {\r\n            return m.localeData().invalidDate();\r\n        }\r\n\r\n        format = expandFormat(format, m.localeData());\r\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\r\n\r\n        return formatFunctions[format](m);\r\n    }\r\n\r\n    function expandFormat(format, locale) {\r\n        var i = 5;\r\n\r\n        function replaceLongDateFormatTokens(input) {\r\n            return locale.longDateFormat(input) || input;\r\n        }\r\n\r\n        localFormattingTokens.lastIndex = 0;\r\n        while (i >= 0 && localFormattingTokens.test(format)) {\r\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\r\n            localFormattingTokens.lastIndex = 0;\r\n            i -= 1;\r\n        }\r\n\r\n        return format;\r\n    }\r\n\r\n    var match1         = /\\d/;            //       0 - 9\r\n    var match2         = /\\d\\d/;          //      00 - 99\r\n    var match3         = /\\d{3}/;         //     000 - 999\r\n    var match4         = /\\d{4}/;         //    0000 - 9999\r\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\r\n    var match1to2      = /\\d\\d?/;         //       0 - 99\r\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\r\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\r\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\r\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\r\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\r\n\r\n    var matchUnsigned  = /\\d+/;           //       0 - inf\r\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\r\n\r\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\r\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\r\n\r\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\r\n\r\n    // any word (or two) characters or numbers including two/three word month in arabic.\r\n    // includes scottish gaelic two word and hyphenated months\r\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n\r\n\r\n    var regexes = {};\r\n\r\n    function addRegexToken (token, regex, strictRegex) {\r\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\r\n            return (isStrict && strictRegex) ? strictRegex : regex;\r\n        };\r\n    }\r\n\r\n    function getParseRegexForToken (token, config) {\r\n        if (!hasOwnProp(regexes, token)) {\r\n            return new RegExp(unescapeFormat(token));\r\n        }\r\n\r\n        return regexes[token](config._strict, config._locale);\r\n    }\r\n\r\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\r\n    function unescapeFormat(s) {\r\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\r\n            return p1 || p2 || p3 || p4;\r\n        }));\r\n    }\r\n\r\n    function regexEscape(s) {\r\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    }\r\n\r\n    var tokens = {};\r\n\r\n    function addParseToken (token, callback) {\r\n        var i, func = callback;\r\n        if (typeof token === 'string') {\r\n            token = [token];\r\n        }\r\n        if (typeof callback === 'number') {\r\n            func = function (input, array) {\r\n                array[callback] = toInt(input);\r\n            };\r\n        }\r\n        for (i = 0; i < token.length; i++) {\r\n            tokens[token[i]] = func;\r\n        }\r\n    }\r\n\r\n    function addWeekParseToken (token, callback) {\r\n        addParseToken(token, function (input, array, config, token) {\r\n            config._w = config._w || {};\r\n            callback(input, config._w, config, token);\r\n        });\r\n    }\r\n\r\n    function addTimeToArrayFromToken(token, input, config) {\r\n        if (input != null && hasOwnProp(tokens, token)) {\r\n            tokens[token](input, config._a, config, token);\r\n        }\r\n    }\r\n\r\n    var YEAR = 0;\r\n    var MONTH = 1;\r\n    var DATE = 2;\r\n    var HOUR = 3;\r\n    var MINUTE = 4;\r\n    var SECOND = 5;\r\n    var MILLISECOND = 6;\r\n    var WEEK = 7;\r\n    var WEEKDAY = 8;\r\n\r\n    var indexOf;\r\n\r\n    if (Array.prototype.indexOf) {\r\n        indexOf = Array.prototype.indexOf;\r\n    } else {\r\n        indexOf = function (o) {\r\n            // I know\r\n            var i;\r\n            for (i = 0; i < this.length; ++i) {\r\n                if (this[i] === o) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n    }\r\n\r\n    function daysInMonth(year, month) {\r\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\r\n        return this.month() + 1;\r\n    });\r\n\r\n    addFormatToken('MMM', 0, 0, function (format) {\r\n        return this.localeData().monthsShort(this, format);\r\n    });\r\n\r\n    addFormatToken('MMMM', 0, 0, function (format) {\r\n        return this.localeData().months(this, format);\r\n    });\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('month', 'M');\r\n\r\n    // PRIORITY\r\n\r\n    addUnitPriority('month', 8);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('M',    match1to2);\r\n    addRegexToken('MM',   match1to2, match2);\r\n    addRegexToken('MMM',  function (isStrict, locale) {\r\n        return locale.monthsShortRegex(isStrict);\r\n    });\r\n    addRegexToken('MMMM', function (isStrict, locale) {\r\n        return locale.monthsRegex(isStrict);\r\n    });\r\n\r\n    addParseToken(['M', 'MM'], function (input, array) {\r\n        array[MONTH] = toInt(input) - 1;\r\n    });\r\n\r\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\r\n        var month = config._locale.monthsParse(input, token, config._strict);\r\n        // if we didn't find a month name, mark the date as invalid.\r\n        if (month != null) {\r\n            array[MONTH] = month;\r\n        } else {\r\n            getParsingFlags(config).invalidMonth = input;\r\n        }\r\n    });\r\n\r\n    // LOCALES\r\n\r\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\r\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\r\n    function localeMonths (m, format) {\r\n        return isArray(this._months) ? this._months[m.month()] :\r\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\r\n    }\r\n\r\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\r\n    function localeMonthsShort (m, format) {\r\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\r\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\r\n    }\r\n\r\n    function units_month__handleStrictParse(monthName, format, strict) {\r\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\r\n        if (!this._monthsParse) {\r\n            // this is not used\r\n            this._monthsParse = [];\r\n            this._longMonthsParse = [];\r\n            this._shortMonthsParse = [];\r\n            for (i = 0; i < 12; ++i) {\r\n                mom = create_utc__createUTC([2000, i]);\r\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\r\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\r\n            }\r\n        }\r\n\r\n        if (strict) {\r\n            if (format === 'MMM') {\r\n                ii = indexOf.call(this._shortMonthsParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            } else {\r\n                ii = indexOf.call(this._longMonthsParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            }\r\n        } else {\r\n            if (format === 'MMM') {\r\n                ii = indexOf.call(this._shortMonthsParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._longMonthsParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            } else {\r\n                ii = indexOf.call(this._longMonthsParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._shortMonthsParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    function localeMonthsParse (monthName, format, strict) {\r\n        var i, mom, regex;\r\n\r\n        if (this._monthsParseExact) {\r\n            return units_month__handleStrictParse.call(this, monthName, format, strict);\r\n        }\r\n\r\n        if (!this._monthsParse) {\r\n            this._monthsParse = [];\r\n            this._longMonthsParse = [];\r\n            this._shortMonthsParse = [];\r\n        }\r\n\r\n        // TODO: add sorting\r\n        // Sorting makes sure if one month (or abbr) is a prefix of another\r\n        // see sorting in computeMonthsParse\r\n        for (i = 0; i < 12; i++) {\r\n            // make the regex if we don't have it already\r\n            mom = create_utc__createUTC([2000, i]);\r\n            if (strict && !this._longMonthsParse[i]) {\r\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\r\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\r\n            }\r\n            if (!strict && !this._monthsParse[i]) {\r\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\r\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n            }\r\n            // test the regex\r\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\r\n                return i;\r\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\r\n                return i;\r\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    // MOMENTS\r\n\r\n    function setMonth (mom, value) {\r\n        var dayOfMonth;\r\n\r\n        if (!mom.isValid()) {\r\n            // No op\r\n            return mom;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            if (/^\\d+$/.test(value)) {\r\n                value = toInt(value);\r\n            } else {\r\n                value = mom.localeData().monthsParse(value);\r\n                // TODO: Another silent failure?\r\n                if (typeof value !== 'number') {\r\n                    return mom;\r\n                }\r\n            }\r\n        }\r\n\r\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\r\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\r\n        return mom;\r\n    }\r\n\r\n    function getSetMonth (value) {\r\n        if (value != null) {\r\n            setMonth(this, value);\r\n            utils_hooks__hooks.updateOffset(this, true);\r\n            return this;\r\n        } else {\r\n            return get_set__get(this, 'Month');\r\n        }\r\n    }\r\n\r\n    function getDaysInMonth () {\r\n        return daysInMonth(this.year(), this.month());\r\n    }\r\n\r\n    var defaultMonthsShortRegex = matchWord;\r\n    function monthsShortRegex (isStrict) {\r\n        if (this._monthsParseExact) {\r\n            if (!hasOwnProp(this, '_monthsRegex')) {\r\n                computeMonthsParse.call(this);\r\n            }\r\n            if (isStrict) {\r\n                return this._monthsShortStrictRegex;\r\n            } else {\r\n                return this._monthsShortRegex;\r\n            }\r\n        } else {\r\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\r\n                this._monthsShortRegex = defaultMonthsShortRegex;\r\n            }\r\n            return this._monthsShortStrictRegex && isStrict ?\r\n                this._monthsShortStrictRegex : this._monthsShortRegex;\r\n        }\r\n    }\r\n\r\n    var defaultMonthsRegex = matchWord;\r\n    function monthsRegex (isStrict) {\r\n        if (this._monthsParseExact) {\r\n            if (!hasOwnProp(this, '_monthsRegex')) {\r\n                computeMonthsParse.call(this);\r\n            }\r\n            if (isStrict) {\r\n                return this._monthsStrictRegex;\r\n            } else {\r\n                return this._monthsRegex;\r\n            }\r\n        } else {\r\n            if (!hasOwnProp(this, '_monthsRegex')) {\r\n                this._monthsRegex = defaultMonthsRegex;\r\n            }\r\n            return this._monthsStrictRegex && isStrict ?\r\n                this._monthsStrictRegex : this._monthsRegex;\r\n        }\r\n    }\r\n\r\n    function computeMonthsParse () {\r\n        function cmpLenRev(a, b) {\r\n            return b.length - a.length;\r\n        }\r\n\r\n        var shortPieces = [], longPieces = [], mixedPieces = [],\r\n            i, mom;\r\n        for (i = 0; i < 12; i++) {\r\n            // make the regex if we don't have it already\r\n            mom = create_utc__createUTC([2000, i]);\r\n            shortPieces.push(this.monthsShort(mom, ''));\r\n            longPieces.push(this.months(mom, ''));\r\n            mixedPieces.push(this.months(mom, ''));\r\n            mixedPieces.push(this.monthsShort(mom, ''));\r\n        }\r\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\r\n        // will match the longer piece.\r\n        shortPieces.sort(cmpLenRev);\r\n        longPieces.sort(cmpLenRev);\r\n        mixedPieces.sort(cmpLenRev);\r\n        for (i = 0; i < 12; i++) {\r\n            shortPieces[i] = regexEscape(shortPieces[i]);\r\n            longPieces[i] = regexEscape(longPieces[i]);\r\n        }\r\n        for (i = 0; i < 24; i++) {\r\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n        }\r\n\r\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\r\n        this._monthsShortRegex = this._monthsRegex;\r\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\r\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('Y', 0, 0, function () {\r\n        var y = this.year();\r\n        return y <= 9999 ? '' + y : '+' + y;\r\n    });\r\n\r\n    addFormatToken(0, ['YY', 2], 0, function () {\r\n        return this.year() % 100;\r\n    });\r\n\r\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\r\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\r\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('year', 'y');\r\n\r\n    // PRIORITIES\r\n\r\n    addUnitPriority('year', 1);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('Y',      matchSigned);\r\n    addRegexToken('YY',     match1to2, match2);\r\n    addRegexToken('YYYY',   match1to4, match4);\r\n    addRegexToken('YYYYY',  match1to6, match6);\r\n    addRegexToken('YYYYYY', match1to6, match6);\r\n\r\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\r\n    addParseToken('YYYY', function (input, array) {\r\n        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\r\n    });\r\n    addParseToken('YY', function (input, array) {\r\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\r\n    });\r\n    addParseToken('Y', function (input, array) {\r\n        array[YEAR] = parseInt(input, 10);\r\n    });\r\n\r\n    // HELPERS\r\n\r\n    function daysInYear(year) {\r\n        return isLeapYear(year) ? 366 : 365;\r\n    }\r\n\r\n    function isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n    }\r\n\r\n    // HOOKS\r\n\r\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\r\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\r\n    };\r\n\r\n    // MOMENTS\r\n\r\n    var getSetYear = makeGetSet('FullYear', true);\r\n\r\n    function getIsLeapYear () {\r\n        return isLeapYear(this.year());\r\n    }\r\n\r\n    function createDate (y, m, d, h, M, s, ms) {\r\n        //can't just apply() to create a date:\r\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\r\n        var date = new Date(y, m, d, h, M, s, ms);\r\n\r\n        //the date constructor remaps years 0-99 to 1900-1999\r\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\r\n            date.setFullYear(y);\r\n        }\r\n        return date;\r\n    }\r\n\r\n    function createUTCDate (y) {\r\n        var date = new Date(Date.UTC.apply(null, arguments));\r\n\r\n        //the Date.UTC function remaps years 0-99 to 1900-1999\r\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\r\n            date.setUTCFullYear(y);\r\n        }\r\n        return date;\r\n    }\r\n\r\n    // start-of-first-week - start-of-year\r\n    function firstWeekOffset(year, dow, doy) {\r\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\r\n            fwd = 7 + dow - doy,\r\n            // first-week day local weekday -- which local weekday is fwd\r\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\r\n\r\n        return -fwdlw + fwd - 1;\r\n    }\r\n\r\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\r\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\r\n        var localWeekday = (7 + weekday - dow) % 7,\r\n            weekOffset = firstWeekOffset(year, dow, doy),\r\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\r\n            resYear, resDayOfYear;\r\n\r\n        if (dayOfYear <= 0) {\r\n            resYear = year - 1;\r\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\r\n        } else if (dayOfYear > daysInYear(year)) {\r\n            resYear = year + 1;\r\n            resDayOfYear = dayOfYear - daysInYear(year);\r\n        } else {\r\n            resYear = year;\r\n            resDayOfYear = dayOfYear;\r\n        }\r\n\r\n        return {\r\n            year: resYear,\r\n            dayOfYear: resDayOfYear\r\n        };\r\n    }\r\n\r\n    function weekOfYear(mom, dow, doy) {\r\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\r\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\r\n            resWeek, resYear;\r\n\r\n        if (week < 1) {\r\n            resYear = mom.year() - 1;\r\n            resWeek = week + weeksInYear(resYear, dow, doy);\r\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\r\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\r\n            resYear = mom.year() + 1;\r\n        } else {\r\n            resYear = mom.year();\r\n            resWeek = week;\r\n        }\r\n\r\n        return {\r\n            week: resWeek,\r\n            year: resYear\r\n        };\r\n    }\r\n\r\n    function weeksInYear(year, dow, doy) {\r\n        var weekOffset = firstWeekOffset(year, dow, doy),\r\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\r\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\r\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('week', 'w');\r\n    addUnitAlias('isoWeek', 'W');\r\n\r\n    // PRIORITIES\r\n\r\n    addUnitPriority('week', 5);\r\n    addUnitPriority('isoWeek', 5);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('w',  match1to2);\r\n    addRegexToken('ww', match1to2, match2);\r\n    addRegexToken('W',  match1to2);\r\n    addRegexToken('WW', match1to2, match2);\r\n\r\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\r\n        week[token.substr(0, 1)] = toInt(input);\r\n    });\r\n\r\n    // HELPERS\r\n\r\n    // LOCALES\r\n\r\n    function localeWeek (mom) {\r\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\r\n    }\r\n\r\n    var defaultLocaleWeek = {\r\n        dow : 0, // Sunday is the first day of the week.\r\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\r\n    };\r\n\r\n    function localeFirstDayOfWeek () {\r\n        return this._week.dow;\r\n    }\r\n\r\n    function localeFirstDayOfYear () {\r\n        return this._week.doy;\r\n    }\r\n\r\n    // MOMENTS\r\n\r\n    function getSetWeek (input) {\r\n        var week = this.localeData().week(this);\r\n        return input == null ? week : this.add((input - week) * 7, 'd');\r\n    }\r\n\r\n    function getSetISOWeek (input) {\r\n        var week = weekOfYear(this, 1, 4).week;\r\n        return input == null ? week : this.add((input - week) * 7, 'd');\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('d', 0, 'do', 'day');\r\n\r\n    addFormatToken('dd', 0, 0, function (format) {\r\n        return this.localeData().weekdaysMin(this, format);\r\n    });\r\n\r\n    addFormatToken('ddd', 0, 0, function (format) {\r\n        return this.localeData().weekdaysShort(this, format);\r\n    });\r\n\r\n    addFormatToken('dddd', 0, 0, function (format) {\r\n        return this.localeData().weekdays(this, format);\r\n    });\r\n\r\n    addFormatToken('e', 0, 0, 'weekday');\r\n    addFormatToken('E', 0, 0, 'isoWeekday');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('day', 'd');\r\n    addUnitAlias('weekday', 'e');\r\n    addUnitAlias('isoWeekday', 'E');\r\n\r\n    // PRIORITY\r\n    addUnitPriority('day', 11);\r\n    addUnitPriority('weekday', 11);\r\n    addUnitPriority('isoWeekday', 11);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('d',    match1to2);\r\n    addRegexToken('e',    match1to2);\r\n    addRegexToken('E',    match1to2);\r\n    addRegexToken('dd',   function (isStrict, locale) {\r\n        return locale.weekdaysMinRegex(isStrict);\r\n    });\r\n    addRegexToken('ddd',   function (isStrict, locale) {\r\n        return locale.weekdaysShortRegex(isStrict);\r\n    });\r\n    addRegexToken('dddd',   function (isStrict, locale) {\r\n        return locale.weekdaysRegex(isStrict);\r\n    });\r\n\r\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\r\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\r\n        // if we didn't get a weekday name, mark the date as invalid\r\n        if (weekday != null) {\r\n            week.d = weekday;\r\n        } else {\r\n            getParsingFlags(config).invalidWeekday = input;\r\n        }\r\n    });\r\n\r\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\r\n        week[token] = toInt(input);\r\n    });\r\n\r\n    // HELPERS\r\n\r\n    function parseWeekday(input, locale) {\r\n        if (typeof input !== 'string') {\r\n            return input;\r\n        }\r\n\r\n        if (!isNaN(input)) {\r\n            return parseInt(input, 10);\r\n        }\r\n\r\n        input = locale.weekdaysParse(input);\r\n        if (typeof input === 'number') {\r\n            return input;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function parseIsoWeekday(input, locale) {\r\n        if (typeof input === 'string') {\r\n            return locale.weekdaysParse(input) % 7 || 7;\r\n        }\r\n        return isNaN(input) ? null : input;\r\n    }\r\n\r\n    // LOCALES\r\n\r\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\r\n    function localeWeekdays (m, format) {\r\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\r\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\r\n    }\r\n\r\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\r\n    function localeWeekdaysShort (m) {\r\n        return this._weekdaysShort[m.day()];\r\n    }\r\n\r\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\r\n    function localeWeekdaysMin (m) {\r\n        return this._weekdaysMin[m.day()];\r\n    }\r\n\r\n    function day_of_week__handleStrictParse(weekdayName, format, strict) {\r\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\r\n        if (!this._weekdaysParse) {\r\n            this._weekdaysParse = [];\r\n            this._shortWeekdaysParse = [];\r\n            this._minWeekdaysParse = [];\r\n\r\n            for (i = 0; i < 7; ++i) {\r\n                mom = create_utc__createUTC([2000, 1]).day(i);\r\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\r\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\r\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\r\n            }\r\n        }\r\n\r\n        if (strict) {\r\n            if (format === 'dddd') {\r\n                ii = indexOf.call(this._weekdaysParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            } else if (format === 'ddd') {\r\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            } else {\r\n                ii = indexOf.call(this._minWeekdaysParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            }\r\n        } else {\r\n            if (format === 'dddd') {\r\n                ii = indexOf.call(this._weekdaysParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._minWeekdaysParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            } else if (format === 'ddd') {\r\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._weekdaysParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._minWeekdaysParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            } else {\r\n                ii = indexOf.call(this._minWeekdaysParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._weekdaysParse, llc);\r\n                if (ii !== -1) {\r\n                    return ii;\r\n                }\r\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\r\n                return ii !== -1 ? ii : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    function localeWeekdaysParse (weekdayName, format, strict) {\r\n        var i, mom, regex;\r\n\r\n        if (this._weekdaysParseExact) {\r\n            return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);\r\n        }\r\n\r\n        if (!this._weekdaysParse) {\r\n            this._weekdaysParse = [];\r\n            this._minWeekdaysParse = [];\r\n            this._shortWeekdaysParse = [];\r\n            this._fullWeekdaysParse = [];\r\n        }\r\n\r\n        for (i = 0; i < 7; i++) {\r\n            // make the regex if we don't have it already\r\n\r\n            mom = create_utc__createUTC([2000, 1]).day(i);\r\n            if (strict && !this._fullWeekdaysParse[i]) {\r\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\r\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\r\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\r\n            }\r\n            if (!this._weekdaysParse[i]) {\r\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\r\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n            }\r\n            // test the regex\r\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\r\n                return i;\r\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\r\n                return i;\r\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\r\n                return i;\r\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    // MOMENTS\r\n\r\n    function getSetDayOfWeek (input) {\r\n        if (!this.isValid()) {\r\n            return input != null ? this : NaN;\r\n        }\r\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\r\n        if (input != null) {\r\n            input = parseWeekday(input, this.localeData());\r\n            return this.add(input - day, 'd');\r\n        } else {\r\n            return day;\r\n        }\r\n    }\r\n\r\n    function getSetLocaleDayOfWeek (input) {\r\n        if (!this.isValid()) {\r\n            return input != null ? this : NaN;\r\n        }\r\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\r\n        return input == null ? weekday : this.add(input - weekday, 'd');\r\n    }\r\n\r\n    function getSetISODayOfWeek (input) {\r\n        if (!this.isValid()) {\r\n            return input != null ? this : NaN;\r\n        }\r\n\r\n        // behaves the same as moment#day except\r\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\r\n        // as a setter, sunday should belong to the previous week.\r\n\r\n        if (input != null) {\r\n            var weekday = parseIsoWeekday(input, this.localeData());\r\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\r\n        } else {\r\n            return this.day() || 7;\r\n        }\r\n    }\r\n\r\n    var defaultWeekdaysRegex = matchWord;\r\n    function weekdaysRegex (isStrict) {\r\n        if (this._weekdaysParseExact) {\r\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n                computeWeekdaysParse.call(this);\r\n            }\r\n            if (isStrict) {\r\n                return this._weekdaysStrictRegex;\r\n            } else {\r\n                return this._weekdaysRegex;\r\n            }\r\n        } else {\r\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n                this._weekdaysRegex = defaultWeekdaysRegex;\r\n            }\r\n            return this._weekdaysStrictRegex && isStrict ?\r\n                this._weekdaysStrictRegex : this._weekdaysRegex;\r\n        }\r\n    }\r\n\r\n    var defaultWeekdaysShortRegex = matchWord;\r\n    function weekdaysShortRegex (isStrict) {\r\n        if (this._weekdaysParseExact) {\r\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n                computeWeekdaysParse.call(this);\r\n            }\r\n            if (isStrict) {\r\n                return this._weekdaysShortStrictRegex;\r\n            } else {\r\n                return this._weekdaysShortRegex;\r\n            }\r\n        } else {\r\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\r\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\r\n            }\r\n            return this._weekdaysShortStrictRegex && isStrict ?\r\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\r\n        }\r\n    }\r\n\r\n    var defaultWeekdaysMinRegex = matchWord;\r\n    function weekdaysMinRegex (isStrict) {\r\n        if (this._weekdaysParseExact) {\r\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n                computeWeekdaysParse.call(this);\r\n            }\r\n            if (isStrict) {\r\n                return this._weekdaysMinStrictRegex;\r\n            } else {\r\n                return this._weekdaysMinRegex;\r\n            }\r\n        } else {\r\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\r\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\r\n            }\r\n            return this._weekdaysMinStrictRegex && isStrict ?\r\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\r\n        }\r\n    }\r\n\r\n\r\n    function computeWeekdaysParse () {\r\n        function cmpLenRev(a, b) {\r\n            return b.length - a.length;\r\n        }\r\n\r\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\r\n            i, mom, minp, shortp, longp;\r\n        for (i = 0; i < 7; i++) {\r\n            // make the regex if we don't have it already\r\n            mom = create_utc__createUTC([2000, 1]).day(i);\r\n            minp = this.weekdaysMin(mom, '');\r\n            shortp = this.weekdaysShort(mom, '');\r\n            longp = this.weekdays(mom, '');\r\n            minPieces.push(minp);\r\n            shortPieces.push(shortp);\r\n            longPieces.push(longp);\r\n            mixedPieces.push(minp);\r\n            mixedPieces.push(shortp);\r\n            mixedPieces.push(longp);\r\n        }\r\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\r\n        // will match the longer piece.\r\n        minPieces.sort(cmpLenRev);\r\n        shortPieces.sort(cmpLenRev);\r\n        longPieces.sort(cmpLenRev);\r\n        mixedPieces.sort(cmpLenRev);\r\n        for (i = 0; i < 7; i++) {\r\n            shortPieces[i] = regexEscape(shortPieces[i]);\r\n            longPieces[i] = regexEscape(longPieces[i]);\r\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n        }\r\n\r\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\r\n        this._weekdaysShortRegex = this._weekdaysRegex;\r\n        this._weekdaysMinRegex = this._weekdaysRegex;\r\n\r\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\r\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\r\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    function hFormat() {\r\n        return this.hours() % 12 || 12;\r\n    }\r\n\r\n    function kFormat() {\r\n        return this.hours() || 24;\r\n    }\r\n\r\n    addFormatToken('H', ['HH', 2], 0, 'hour');\r\n    addFormatToken('h', ['hh', 2], 0, hFormat);\r\n    addFormatToken('k', ['kk', 2], 0, kFormat);\r\n\r\n    addFormatToken('hmm', 0, 0, function () {\r\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\r\n    });\r\n\r\n    addFormatToken('hmmss', 0, 0, function () {\r\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\r\n            zeroFill(this.seconds(), 2);\r\n    });\r\n\r\n    addFormatToken('Hmm', 0, 0, function () {\r\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\r\n    });\r\n\r\n    addFormatToken('Hmmss', 0, 0, function () {\r\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\r\n            zeroFill(this.seconds(), 2);\r\n    });\r\n\r\n    function meridiem (token, lowercase) {\r\n        addFormatToken(token, 0, 0, function () {\r\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\r\n        });\r\n    }\r\n\r\n    meridiem('a', true);\r\n    meridiem('A', false);\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('hour', 'h');\r\n\r\n    // PRIORITY\r\n    addUnitPriority('hour', 13);\r\n\r\n    // PARSING\r\n\r\n    function matchMeridiem (isStrict, locale) {\r\n        return locale._meridiemParse;\r\n    }\r\n\r\n    addRegexToken('a',  matchMeridiem);\r\n    addRegexToken('A',  matchMeridiem);\r\n    addRegexToken('H',  match1to2);\r\n    addRegexToken('h',  match1to2);\r\n    addRegexToken('HH', match1to2, match2);\r\n    addRegexToken('hh', match1to2, match2);\r\n\r\n    addRegexToken('hmm', match3to4);\r\n    addRegexToken('hmmss', match5to6);\r\n    addRegexToken('Hmm', match3to4);\r\n    addRegexToken('Hmmss', match5to6);\r\n\r\n    addParseToken(['H', 'HH'], HOUR);\r\n    addParseToken(['a', 'A'], function (input, array, config) {\r\n        config._isPm = config._locale.isPM(input);\r\n        config._meridiem = input;\r\n    });\r\n    addParseToken(['h', 'hh'], function (input, array, config) {\r\n        array[HOUR] = toInt(input);\r\n        getParsingFlags(config).bigHour = true;\r\n    });\r\n    addParseToken('hmm', function (input, array, config) {\r\n        var pos = input.length - 2;\r\n        array[HOUR] = toInt(input.substr(0, pos));\r\n        array[MINUTE] = toInt(input.substr(pos));\r\n        getParsingFlags(config).bigHour = true;\r\n    });\r\n    addParseToken('hmmss', function (input, array, config) {\r\n        var pos1 = input.length - 4;\r\n        var pos2 = input.length - 2;\r\n        array[HOUR] = toInt(input.substr(0, pos1));\r\n        array[MINUTE] = toInt(input.substr(pos1, 2));\r\n        array[SECOND] = toInt(input.substr(pos2));\r\n        getParsingFlags(config).bigHour = true;\r\n    });\r\n    addParseToken('Hmm', function (input, array, config) {\r\n        var pos = input.length - 2;\r\n        array[HOUR] = toInt(input.substr(0, pos));\r\n        array[MINUTE] = toInt(input.substr(pos));\r\n    });\r\n    addParseToken('Hmmss', function (input, array, config) {\r\n        var pos1 = input.length - 4;\r\n        var pos2 = input.length - 2;\r\n        array[HOUR] = toInt(input.substr(0, pos1));\r\n        array[MINUTE] = toInt(input.substr(pos1, 2));\r\n        array[SECOND] = toInt(input.substr(pos2));\r\n    });\r\n\r\n    // LOCALES\r\n\r\n    function localeIsPM (input) {\r\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\r\n        // Using charAt should be more compatible.\r\n        return ((input + '').toLowerCase().charAt(0) === 'p');\r\n    }\r\n\r\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\r\n    function localeMeridiem (hours, minutes, isLower) {\r\n        if (hours > 11) {\r\n            return isLower ? 'pm' : 'PM';\r\n        } else {\r\n            return isLower ? 'am' : 'AM';\r\n        }\r\n    }\r\n\r\n\r\n    // MOMENTS\r\n\r\n    // Setting the hour should keep the time, because the user explicitly\r\n    // specified which hour he wants. So trying to maintain the same hour (in\r\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\r\n    // this rule.\r\n    var getSetHour = makeGetSet('Hours', true);\r\n\r\n    var baseConfig = {\r\n        calendar: defaultCalendar,\r\n        longDateFormat: defaultLongDateFormat,\r\n        invalidDate: defaultInvalidDate,\r\n        ordinal: defaultOrdinal,\r\n        ordinalParse: defaultOrdinalParse,\r\n        relativeTime: defaultRelativeTime,\r\n\r\n        months: defaultLocaleMonths,\r\n        monthsShort: defaultLocaleMonthsShort,\r\n\r\n        week: defaultLocaleWeek,\r\n\r\n        weekdays: defaultLocaleWeekdays,\r\n        weekdaysMin: defaultLocaleWeekdaysMin,\r\n        weekdaysShort: defaultLocaleWeekdaysShort,\r\n\r\n        meridiemParse: defaultLocaleMeridiemParse\r\n    };\r\n\r\n    // internal storage for locale config files\r\n    var locales = {};\r\n    var globalLocale;\r\n\r\n    function normalizeLocale(key) {\r\n        return key ? key.toLowerCase().replace('_', '-') : key;\r\n    }\r\n\r\n    // pick the locale from the array\r\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\r\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\r\n    function chooseLocale(names) {\r\n        var i = 0, j, next, locale, split;\r\n\r\n        while (i < names.length) {\r\n            split = normalizeLocale(names[i]).split('-');\r\n            j = split.length;\r\n            next = normalizeLocale(names[i + 1]);\r\n            next = next ? next.split('-') : null;\r\n            while (j > 0) {\r\n                locale = loadLocale(split.slice(0, j).join('-'));\r\n                if (locale) {\r\n                    return locale;\r\n                }\r\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\r\n                    //the next array item is better than a shallower substring of this one\r\n                    break;\r\n                }\r\n                j--;\r\n            }\r\n            i++;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function loadLocale(name) {\r\n        var oldLocale = null;\r\n        // TODO: Find a better way to register and load all the locales in Node\r\n        if (!locales[name] && (typeof module !== 'undefined') &&\r\n                module && module.exports) {\r\n            try {\r\n                oldLocale = globalLocale._abbr;\r\n                require('./locale/' + name);\r\n                // because defineLocale currently also sets the global locale, we\r\n                // want to undo that for lazy loaded locales\r\n                locale_locales__getSetGlobalLocale(oldLocale);\r\n            } catch (e) { }\r\n        }\r\n        return locales[name];\r\n    }\r\n\r\n    // This function will load locale and then set the global locale.  If\r\n    // no arguments are passed in, it will simply return the current global\r\n    // locale key.\r\n    function locale_locales__getSetGlobalLocale (key, values) {\r\n        var data;\r\n        if (key) {\r\n            if (isUndefined(values)) {\r\n                data = locale_locales__getLocale(key);\r\n            }\r\n            else {\r\n                data = defineLocale(key, values);\r\n            }\r\n\r\n            if (data) {\r\n                // moment.duration._locale = moment._locale = data;\r\n                globalLocale = data;\r\n            }\r\n        }\r\n\r\n        return globalLocale._abbr;\r\n    }\r\n\r\n    function defineLocale (name, config) {\r\n        if (config !== null) {\r\n            var parentConfig = baseConfig;\r\n            config.abbr = name;\r\n            if (locales[name] != null) {\r\n                deprecateSimple('defineLocaleOverride',\r\n                        'use moment.updateLocale(localeName, config) to change ' +\r\n                        'an existing locale. moment.defineLocale(localeName, ' +\r\n                        'config) should only be used for creating a new locale ' +\r\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\r\n                parentConfig = locales[name]._config;\r\n            } else if (config.parentLocale != null) {\r\n                if (locales[config.parentLocale] != null) {\r\n                    parentConfig = locales[config.parentLocale]._config;\r\n                } else {\r\n                    // treat as if there is no base config\r\n                    deprecateSimple('parentLocaleUndefined',\r\n                            'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');\r\n                }\r\n            }\r\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\r\n\r\n            // backwards compat for now: also set the locale\r\n            locale_locales__getSetGlobalLocale(name);\r\n\r\n            return locales[name];\r\n        } else {\r\n            // useful for testing\r\n            delete locales[name];\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function updateLocale(name, config) {\r\n        if (config != null) {\r\n            var locale, parentConfig = baseConfig;\r\n            // MERGE\r\n            if (locales[name] != null) {\r\n                parentConfig = locales[name]._config;\r\n            }\r\n            config = mergeConfigs(parentConfig, config);\r\n            locale = new Locale(config);\r\n            locale.parentLocale = locales[name];\r\n            locales[name] = locale;\r\n\r\n            // backwards compat for now: also set the locale\r\n            locale_locales__getSetGlobalLocale(name);\r\n        } else {\r\n            // pass null for config to unupdate, useful for tests\r\n            if (locales[name] != null) {\r\n                if (locales[name].parentLocale != null) {\r\n                    locales[name] = locales[name].parentLocale;\r\n                } else if (locales[name] != null) {\r\n                    delete locales[name];\r\n                }\r\n            }\r\n        }\r\n        return locales[name];\r\n    }\r\n\r\n    // returns locale data\r\n    function locale_locales__getLocale (key) {\r\n        var locale;\r\n\r\n        if (key && key._locale && key._locale._abbr) {\r\n            key = key._locale._abbr;\r\n        }\r\n\r\n        if (!key) {\r\n            return globalLocale;\r\n        }\r\n\r\n        if (!isArray(key)) {\r\n            //short-circuit everything else\r\n            locale = loadLocale(key);\r\n            if (locale) {\r\n                return locale;\r\n            }\r\n            key = [key];\r\n        }\r\n\r\n        return chooseLocale(key);\r\n    }\r\n\r\n    function locale_locales__listLocales() {\r\n        return keys(locales);\r\n    }\r\n\r\n    function checkOverflow (m) {\r\n        var overflow;\r\n        var a = m._a;\r\n\r\n        if (a && getParsingFlags(m).overflow === -2) {\r\n            overflow =\r\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\r\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\r\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\r\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\r\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\r\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\r\n                -1;\r\n\r\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\r\n                overflow = DATE;\r\n            }\r\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\r\n                overflow = WEEK;\r\n            }\r\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\r\n                overflow = WEEKDAY;\r\n            }\r\n\r\n            getParsingFlags(m).overflow = overflow;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    // iso 8601 regex\r\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\r\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\r\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\r\n\r\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\r\n\r\n    var isoDates = [\r\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\r\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\r\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\r\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\r\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\r\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\r\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\r\n        ['YYYYMMDD', /\\d{8}/],\r\n        // YYYYMM is NOT allowed by the standard\r\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\r\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\r\n        ['YYYYDDD', /\\d{7}/]\r\n    ];\r\n\r\n    // iso time formats and regexes\r\n    var isoTimes = [\r\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\r\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\r\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\r\n        ['HH:mm', /\\d\\d:\\d\\d/],\r\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\r\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\r\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\r\n        ['HHmm', /\\d\\d\\d\\d/],\r\n        ['HH', /\\d\\d/]\r\n    ];\r\n\r\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\r\n\r\n    // date from iso format\r\n    function configFromISO(config) {\r\n        var i, l,\r\n            string = config._i,\r\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\r\n            allowTime, dateFormat, timeFormat, tzFormat;\r\n\r\n        if (match) {\r\n            getParsingFlags(config).iso = true;\r\n\r\n            for (i = 0, l = isoDates.length; i < l; i++) {\r\n                if (isoDates[i][1].exec(match[1])) {\r\n                    dateFormat = isoDates[i][0];\r\n                    allowTime = isoDates[i][2] !== false;\r\n                    break;\r\n                }\r\n            }\r\n            if (dateFormat == null) {\r\n                config._isValid = false;\r\n                return;\r\n            }\r\n            if (match[3]) {\r\n                for (i = 0, l = isoTimes.length; i < l; i++) {\r\n                    if (isoTimes[i][1].exec(match[3])) {\r\n                        // match[2] should be 'T' or space\r\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\r\n                        break;\r\n                    }\r\n                }\r\n                if (timeFormat == null) {\r\n                    config._isValid = false;\r\n                    return;\r\n                }\r\n            }\r\n            if (!allowTime && timeFormat != null) {\r\n                config._isValid = false;\r\n                return;\r\n            }\r\n            if (match[4]) {\r\n                if (tzRegex.exec(match[4])) {\r\n                    tzFormat = 'Z';\r\n                } else {\r\n                    config._isValid = false;\r\n                    return;\r\n                }\r\n            }\r\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\r\n            configFromStringAndFormat(config);\r\n        } else {\r\n            config._isValid = false;\r\n        }\r\n    }\r\n\r\n    // date from iso format or fallback\r\n    function configFromString(config) {\r\n        var matched = aspNetJsonRegex.exec(config._i);\r\n\r\n        if (matched !== null) {\r\n            config._d = new Date(+matched[1]);\r\n            return;\r\n        }\r\n\r\n        configFromISO(config);\r\n        if (config._isValid === false) {\r\n            delete config._isValid;\r\n            utils_hooks__hooks.createFromInputFallback(config);\r\n        }\r\n    }\r\n\r\n    utils_hooks__hooks.createFromInputFallback = deprecate(\r\n        'moment construction falls back to js Date. This is ' +\r\n        'discouraged and will be removed in upcoming major ' +\r\n        'release. Please refer to ' +\r\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\r\n        function (config) {\r\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\r\n        }\r\n    );\r\n\r\n    // Pick the first defined of two or three arguments.\r\n    function defaults(a, b, c) {\r\n        if (a != null) {\r\n            return a;\r\n        }\r\n        if (b != null) {\r\n            return b;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    function currentDateArray(config) {\r\n        // hooks is actually the exported moment object\r\n        var nowValue = new Date(utils_hooks__hooks.now());\r\n        if (config._useUTC) {\r\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\r\n        }\r\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\r\n    }\r\n\r\n    // convert an array to a date.\r\n    // the array should mirror the parameters below\r\n    // note: all values past the year are optional and will default to the lowest possible value.\r\n    // [year, month, day , hour, minute, second, millisecond]\r\n    function configFromArray (config) {\r\n        var i, date, input = [], currentDate, yearToUse;\r\n\r\n        if (config._d) {\r\n            return;\r\n        }\r\n\r\n        currentDate = currentDateArray(config);\r\n\r\n        //compute day of the year from weeks and weekdays\r\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\r\n            dayOfYearFromWeekInfo(config);\r\n        }\r\n\r\n        //if the day of the year is set, figure out what it is\r\n        if (config._dayOfYear) {\r\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\r\n\r\n            if (config._dayOfYear > daysInYear(yearToUse)) {\r\n                getParsingFlags(config)._overflowDayOfYear = true;\r\n            }\r\n\r\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\r\n            config._a[MONTH] = date.getUTCMonth();\r\n            config._a[DATE] = date.getUTCDate();\r\n        }\r\n\r\n        // Default to current date.\r\n        // * if no year, month, day of month are given, default to today\r\n        // * if day of month is given, default month and year\r\n        // * if month is given, default only year\r\n        // * if year is given, don't default anything\r\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\r\n            config._a[i] = input[i] = currentDate[i];\r\n        }\r\n\r\n        // Zero out whatever was not defaulted, including time\r\n        for (; i < 7; i++) {\r\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\r\n        }\r\n\r\n        // Check for 24:00:00.000\r\n        if (config._a[HOUR] === 24 &&\r\n                config._a[MINUTE] === 0 &&\r\n                config._a[SECOND] === 0 &&\r\n                config._a[MILLISECOND] === 0) {\r\n            config._nextDay = true;\r\n            config._a[HOUR] = 0;\r\n        }\r\n\r\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\r\n        // Apply timezone offset from input. The actual utcOffset can be changed\r\n        // with parseZone.\r\n        if (config._tzm != null) {\r\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\r\n        }\r\n\r\n        if (config._nextDay) {\r\n            config._a[HOUR] = 24;\r\n        }\r\n    }\r\n\r\n    function dayOfYearFromWeekInfo(config) {\r\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\r\n\r\n        w = config._w;\r\n        if (w.GG != null || w.W != null || w.E != null) {\r\n            dow = 1;\r\n            doy = 4;\r\n\r\n            // TODO: We need to take the current isoWeekYear, but that depends on\r\n            // how we interpret now (local, utc, fixed offset). So create\r\n            // a now version of current config (take local/utc/offset flags, and\r\n            // create now).\r\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\r\n            week = defaults(w.W, 1);\r\n            weekday = defaults(w.E, 1);\r\n            if (weekday < 1 || weekday > 7) {\r\n                weekdayOverflow = true;\r\n            }\r\n        } else {\r\n            dow = config._locale._week.dow;\r\n            doy = config._locale._week.doy;\r\n\r\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\r\n            week = defaults(w.w, 1);\r\n\r\n            if (w.d != null) {\r\n                // weekday -- low day numbers are considered next week\r\n                weekday = w.d;\r\n                if (weekday < 0 || weekday > 6) {\r\n                    weekdayOverflow = true;\r\n                }\r\n            } else if (w.e != null) {\r\n                // local weekday -- counting starts from begining of week\r\n                weekday = w.e + dow;\r\n                if (w.e < 0 || w.e > 6) {\r\n                    weekdayOverflow = true;\r\n                }\r\n            } else {\r\n                // default to begining of week\r\n                weekday = dow;\r\n            }\r\n        }\r\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\r\n            getParsingFlags(config)._overflowWeeks = true;\r\n        } else if (weekdayOverflow != null) {\r\n            getParsingFlags(config)._overflowWeekday = true;\r\n        } else {\r\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\r\n            config._a[YEAR] = temp.year;\r\n            config._dayOfYear = temp.dayOfYear;\r\n        }\r\n    }\r\n\r\n    // constant that refers to the ISO standard\r\n    utils_hooks__hooks.ISO_8601 = function () {};\r\n\r\n    // date from string and format string\r\n    function configFromStringAndFormat(config) {\r\n        // TODO: Move this to another part of the creation flow to prevent circular deps\r\n        if (config._f === utils_hooks__hooks.ISO_8601) {\r\n            configFromISO(config);\r\n            return;\r\n        }\r\n\r\n        config._a = [];\r\n        getParsingFlags(config).empty = true;\r\n\r\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\r\n        var string = '' + config._i,\r\n            i, parsedInput, tokens, token, skipped,\r\n            stringLength = string.length,\r\n            totalParsedInputLength = 0;\r\n\r\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\r\n\r\n        for (i = 0; i < tokens.length; i++) {\r\n            token = tokens[i];\r\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\r\n            // console.log('token', token, 'parsedInput', parsedInput,\r\n            //         'regex', getParseRegexForToken(token, config));\r\n            if (parsedInput) {\r\n                skipped = string.substr(0, string.indexOf(parsedInput));\r\n                if (skipped.length > 0) {\r\n                    getParsingFlags(config).unusedInput.push(skipped);\r\n                }\r\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\r\n                totalParsedInputLength += parsedInput.length;\r\n            }\r\n            // don't parse if it's not a known token\r\n            if (formatTokenFunctions[token]) {\r\n                if (parsedInput) {\r\n                    getParsingFlags(config).empty = false;\r\n                }\r\n                else {\r\n                    getParsingFlags(config).unusedTokens.push(token);\r\n                }\r\n                addTimeToArrayFromToken(token, parsedInput, config);\r\n            }\r\n            else if (config._strict && !parsedInput) {\r\n                getParsingFlags(config).unusedTokens.push(token);\r\n            }\r\n        }\r\n\r\n        // add remaining unparsed input length to the string\r\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\r\n        if (string.length > 0) {\r\n            getParsingFlags(config).unusedInput.push(string);\r\n        }\r\n\r\n        // clear _12h flag if hour is <= 12\r\n        if (config._a[HOUR] <= 12 &&\r\n            getParsingFlags(config).bigHour === true &&\r\n            config._a[HOUR] > 0) {\r\n            getParsingFlags(config).bigHour = undefined;\r\n        }\r\n\r\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\r\n        getParsingFlags(config).meridiem = config._meridiem;\r\n        // handle meridiem\r\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\r\n\r\n        configFromArray(config);\r\n        checkOverflow(config);\r\n    }\r\n\r\n\r\n    function meridiemFixWrap (locale, hour, meridiem) {\r\n        var isPm;\r\n\r\n        if (meridiem == null) {\r\n            // nothing to do\r\n            return hour;\r\n        }\r\n        if (locale.meridiemHour != null) {\r\n            return locale.meridiemHour(hour, meridiem);\r\n        } else if (locale.isPM != null) {\r\n            // Fallback\r\n            isPm = locale.isPM(meridiem);\r\n            if (isPm && hour < 12) {\r\n                hour += 12;\r\n            }\r\n            if (!isPm && hour === 12) {\r\n                hour = 0;\r\n            }\r\n            return hour;\r\n        } else {\r\n            // this is not supposed to happen\r\n            return hour;\r\n        }\r\n    }\r\n\r\n    // date from string and array of format strings\r\n    function configFromStringAndArray(config) {\r\n        var tempConfig,\r\n            bestMoment,\r\n\r\n            scoreToBeat,\r\n            i,\r\n            currentScore;\r\n\r\n        if (config._f.length === 0) {\r\n            getParsingFlags(config).invalidFormat = true;\r\n            config._d = new Date(NaN);\r\n            return;\r\n        }\r\n\r\n        for (i = 0; i < config._f.length; i++) {\r\n            currentScore = 0;\r\n            tempConfig = copyConfig({}, config);\r\n            if (config._useUTC != null) {\r\n                tempConfig._useUTC = config._useUTC;\r\n            }\r\n            tempConfig._f = config._f[i];\r\n            configFromStringAndFormat(tempConfig);\r\n\r\n            if (!valid__isValid(tempConfig)) {\r\n                continue;\r\n            }\r\n\r\n            // if there is any input that was not parsed add a penalty for that format\r\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\r\n\r\n            //or tokens\r\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\r\n\r\n            getParsingFlags(tempConfig).score = currentScore;\r\n\r\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\r\n                scoreToBeat = currentScore;\r\n                bestMoment = tempConfig;\r\n            }\r\n        }\r\n\r\n        extend(config, bestMoment || tempConfig);\r\n    }\r\n\r\n    function configFromObject(config) {\r\n        if (config._d) {\r\n            return;\r\n        }\r\n\r\n        var i = normalizeObjectUnits(config._i);\r\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\r\n            return obj && parseInt(obj, 10);\r\n        });\r\n\r\n        configFromArray(config);\r\n    }\r\n\r\n    function createFromConfig (config) {\r\n        var res = new Moment(checkOverflow(prepareConfig(config)));\r\n        if (res._nextDay) {\r\n            // Adding is smart enough around DST\r\n            res.add(1, 'd');\r\n            res._nextDay = undefined;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function prepareConfig (config) {\r\n        var input = config._i,\r\n            format = config._f;\r\n\r\n        config._locale = config._locale || locale_locales__getLocale(config._l);\r\n\r\n        if (input === null || (format === undefined && input === '')) {\r\n            return valid__createInvalid({nullInput: true});\r\n        }\r\n\r\n        if (typeof input === 'string') {\r\n            config._i = input = config._locale.preparse(input);\r\n        }\r\n\r\n        if (isMoment(input)) {\r\n            return new Moment(checkOverflow(input));\r\n        } else if (isArray(format)) {\r\n            configFromStringAndArray(config);\r\n        } else if (isDate(input)) {\r\n            config._d = input;\r\n        } else if (format) {\r\n            configFromStringAndFormat(config);\r\n        }  else {\r\n            configFromInput(config);\r\n        }\r\n\r\n        if (!valid__isValid(config)) {\r\n            config._d = null;\r\n        }\r\n\r\n        return config;\r\n    }\r\n\r\n    function configFromInput(config) {\r\n        var input = config._i;\r\n        if (input === undefined) {\r\n            config._d = new Date(utils_hooks__hooks.now());\r\n        } else if (isDate(input)) {\r\n            config._d = new Date(input.valueOf());\r\n        } else if (typeof input === 'string') {\r\n            configFromString(config);\r\n        } else if (isArray(input)) {\r\n            config._a = map(input.slice(0), function (obj) {\r\n                return parseInt(obj, 10);\r\n            });\r\n            configFromArray(config);\r\n        } else if (typeof(input) === 'object') {\r\n            configFromObject(config);\r\n        } else if (typeof(input) === 'number') {\r\n            // from milliseconds\r\n            config._d = new Date(input);\r\n        } else {\r\n            utils_hooks__hooks.createFromInputFallback(config);\r\n        }\r\n    }\r\n\r\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\r\n        var c = {};\r\n\r\n        if (typeof(locale) === 'boolean') {\r\n            strict = locale;\r\n            locale = undefined;\r\n        }\r\n\r\n        if ((isObject(input) && isObjectEmpty(input)) ||\r\n                (isArray(input) && input.length === 0)) {\r\n            input = undefined;\r\n        }\r\n        // object construction must be done this way.\r\n        // https://github.com/moment/moment/issues/1423\r\n        c._isAMomentObject = true;\r\n        c._useUTC = c._isUTC = isUTC;\r\n        c._l = locale;\r\n        c._i = input;\r\n        c._f = format;\r\n        c._strict = strict;\r\n\r\n        return createFromConfig(c);\r\n    }\r\n\r\n    function local__createLocal (input, format, locale, strict) {\r\n        return createLocalOrUTC(input, format, locale, strict, false);\r\n    }\r\n\r\n    var prototypeMin = deprecate(\r\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\r\n        function () {\r\n            var other = local__createLocal.apply(null, arguments);\r\n            if (this.isValid() && other.isValid()) {\r\n                return other < this ? this : other;\r\n            } else {\r\n                return valid__createInvalid();\r\n            }\r\n        }\r\n    );\r\n\r\n    var prototypeMax = deprecate(\r\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\r\n        function () {\r\n            var other = local__createLocal.apply(null, arguments);\r\n            if (this.isValid() && other.isValid()) {\r\n                return other > this ? this : other;\r\n            } else {\r\n                return valid__createInvalid();\r\n            }\r\n        }\r\n    );\r\n\r\n    // Pick a moment m from moments so that m[fn](other) is true for all\r\n    // other. This relies on the function fn to be transitive.\r\n    //\r\n    // moments should either be an array of moment objects or an array, whose\r\n    // first element is an array of moment objects.\r\n    function pickBy(fn, moments) {\r\n        var res, i;\r\n        if (moments.length === 1 && isArray(moments[0])) {\r\n            moments = moments[0];\r\n        }\r\n        if (!moments.length) {\r\n            return local__createLocal();\r\n        }\r\n        res = moments[0];\r\n        for (i = 1; i < moments.length; ++i) {\r\n            if (!moments[i].isValid() || moments[i][fn](res)) {\r\n                res = moments[i];\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    // TODO: Use [].sort instead?\r\n    function min () {\r\n        var args = [].slice.call(arguments, 0);\r\n\r\n        return pickBy('isBefore', args);\r\n    }\r\n\r\n    function max () {\r\n        var args = [].slice.call(arguments, 0);\r\n\r\n        return pickBy('isAfter', args);\r\n    }\r\n\r\n    var now = function () {\r\n        return Date.now ? Date.now() : +(new Date());\r\n    };\r\n\r\n    function Duration (duration) {\r\n        var normalizedInput = normalizeObjectUnits(duration),\r\n            years = normalizedInput.year || 0,\r\n            quarters = normalizedInput.quarter || 0,\r\n            months = normalizedInput.month || 0,\r\n            weeks = normalizedInput.week || 0,\r\n            days = normalizedInput.day || 0,\r\n            hours = normalizedInput.hour || 0,\r\n            minutes = normalizedInput.minute || 0,\r\n            seconds = normalizedInput.second || 0,\r\n            milliseconds = normalizedInput.millisecond || 0;\r\n\r\n        // representation for dateAddRemove\r\n        this._milliseconds = +milliseconds +\r\n            seconds * 1e3 + // 1000\r\n            minutes * 6e4 + // 1000 * 60\r\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\r\n        // Because of dateAddRemove treats 24 hours as different from a\r\n        // day when working around DST, we need to store them separately\r\n        this._days = +days +\r\n            weeks * 7;\r\n        // It is impossible translate months into days without knowing\r\n        // which months you are are talking about, so we have to store\r\n        // it separately.\r\n        this._months = +months +\r\n            quarters * 3 +\r\n            years * 12;\r\n\r\n        this._data = {};\r\n\r\n        this._locale = locale_locales__getLocale();\r\n\r\n        this._bubble();\r\n    }\r\n\r\n    function isDuration (obj) {\r\n        return obj instanceof Duration;\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    function offset (token, separator) {\r\n        addFormatToken(token, 0, 0, function () {\r\n            var offset = this.utcOffset();\r\n            var sign = '+';\r\n            if (offset < 0) {\r\n                offset = -offset;\r\n                sign = '-';\r\n            }\r\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\r\n        });\r\n    }\r\n\r\n    offset('Z', ':');\r\n    offset('ZZ', '');\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('Z',  matchShortOffset);\r\n    addRegexToken('ZZ', matchShortOffset);\r\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\r\n        config._useUTC = true;\r\n        config._tzm = offsetFromString(matchShortOffset, input);\r\n    });\r\n\r\n    // HELPERS\r\n\r\n    // timezone chunker\r\n    // '+10:00' > ['10',  '00']\r\n    // '-1530'  > ['-15', '30']\r\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\r\n\r\n    function offsetFromString(matcher, string) {\r\n        var matches = ((string || '').match(matcher) || []);\r\n        var chunk   = matches[matches.length - 1] || [];\r\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\r\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\r\n\r\n        return parts[0] === '+' ? minutes : -minutes;\r\n    }\r\n\r\n    // Return a moment from input, that is local/utc/zone equivalent to model.\r\n    function cloneWithOffset(input, model) {\r\n        var res, diff;\r\n        if (model._isUTC) {\r\n            res = model.clone();\r\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();\r\n            // Use low-level api, because this fn is low-level api.\r\n            res._d.setTime(res._d.valueOf() + diff);\r\n            utils_hooks__hooks.updateOffset(res, false);\r\n            return res;\r\n        } else {\r\n            return local__createLocal(input).local();\r\n        }\r\n    }\r\n\r\n    function getDateOffset (m) {\r\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\r\n        // https://github.com/moment/moment/pull/1871\r\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\r\n    }\r\n\r\n    // HOOKS\r\n\r\n    // This function will be called whenever a moment is mutated.\r\n    // It is intended to keep the offset in sync with the timezone.\r\n    utils_hooks__hooks.updateOffset = function () {};\r\n\r\n    // MOMENTS\r\n\r\n    // keepLocalTime = true means only change the timezone, without\r\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\r\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\r\n    // +0200, so we adjust the time as needed, to be valid.\r\n    //\r\n    // Keeping the time actually adds/subtracts (one hour)\r\n    // from the actual represented time. That is why we call updateOffset\r\n    // a second time. In case it wants us to change the offset again\r\n    // _changeInProgress == true case, then we have to adjust, because\r\n    // there is no such time in the given timezone.\r\n    function getSetOffset (input, keepLocalTime) {\r\n        var offset = this._offset || 0,\r\n            localAdjust;\r\n        if (!this.isValid()) {\r\n            return input != null ? this : NaN;\r\n        }\r\n        if (input != null) {\r\n            if (typeof input === 'string') {\r\n                input = offsetFromString(matchShortOffset, input);\r\n            } else if (Math.abs(input) < 16) {\r\n                input = input * 60;\r\n            }\r\n            if (!this._isUTC && keepLocalTime) {\r\n                localAdjust = getDateOffset(this);\r\n            }\r\n            this._offset = input;\r\n            this._isUTC = true;\r\n            if (localAdjust != null) {\r\n                this.add(localAdjust, 'm');\r\n            }\r\n            if (offset !== input) {\r\n                if (!keepLocalTime || this._changeInProgress) {\r\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\r\n                } else if (!this._changeInProgress) {\r\n                    this._changeInProgress = true;\r\n                    utils_hooks__hooks.updateOffset(this, true);\r\n                    this._changeInProgress = null;\r\n                }\r\n            }\r\n            return this;\r\n        } else {\r\n            return this._isUTC ? offset : getDateOffset(this);\r\n        }\r\n    }\r\n\r\n    function getSetZone (input, keepLocalTime) {\r\n        if (input != null) {\r\n            if (typeof input !== 'string') {\r\n                input = -input;\r\n            }\r\n\r\n            this.utcOffset(input, keepLocalTime);\r\n\r\n            return this;\r\n        } else {\r\n            return -this.utcOffset();\r\n        }\r\n    }\r\n\r\n    function setOffsetToUTC (keepLocalTime) {\r\n        return this.utcOffset(0, keepLocalTime);\r\n    }\r\n\r\n    function setOffsetToLocal (keepLocalTime) {\r\n        if (this._isUTC) {\r\n            this.utcOffset(0, keepLocalTime);\r\n            this._isUTC = false;\r\n\r\n            if (keepLocalTime) {\r\n                this.subtract(getDateOffset(this), 'm');\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function setOffsetToParsedOffset () {\r\n        if (this._tzm) {\r\n            this.utcOffset(this._tzm);\r\n        } else if (typeof this._i === 'string') {\r\n            this.utcOffset(offsetFromString(matchOffset, this._i));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function hasAlignedHourOffset (input) {\r\n        if (!this.isValid()) {\r\n            return false;\r\n        }\r\n        input = input ? local__createLocal(input).utcOffset() : 0;\r\n\r\n        return (this.utcOffset() - input) % 60 === 0;\r\n    }\r\n\r\n    function isDaylightSavingTime () {\r\n        return (\r\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\r\n            this.utcOffset() > this.clone().month(5).utcOffset()\r\n        );\r\n    }\r\n\r\n    function isDaylightSavingTimeShifted () {\r\n        if (!isUndefined(this._isDSTShifted)) {\r\n            return this._isDSTShifted;\r\n        }\r\n\r\n        var c = {};\r\n\r\n        copyConfig(c, this);\r\n        c = prepareConfig(c);\r\n\r\n        if (c._a) {\r\n            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\r\n            this._isDSTShifted = this.isValid() &&\r\n                compareArrays(c._a, other.toArray()) > 0;\r\n        } else {\r\n            this._isDSTShifted = false;\r\n        }\r\n\r\n        return this._isDSTShifted;\r\n    }\r\n\r\n    function isLocal () {\r\n        return this.isValid() ? !this._isUTC : false;\r\n    }\r\n\r\n    function isUtcOffset () {\r\n        return this.isValid() ? this._isUTC : false;\r\n    }\r\n\r\n    function isUtc () {\r\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\r\n    }\r\n\r\n    // ASP.NET json date format regex\r\n    var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;\r\n\r\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\r\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\r\n    // and further modified to allow for strings containing both week and day\r\n    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\r\n\r\n    function create__createDuration (input, key) {\r\n        var duration = input,\r\n            // matching against regexp is expensive, do it on demand\r\n            match = null,\r\n            sign,\r\n            ret,\r\n            diffRes;\r\n\r\n        if (isDuration(input)) {\r\n            duration = {\r\n                ms : input._milliseconds,\r\n                d  : input._days,\r\n                M  : input._months\r\n            };\r\n        } else if (typeof input === 'number') {\r\n            duration = {};\r\n            if (key) {\r\n                duration[key] = input;\r\n            } else {\r\n                duration.milliseconds = input;\r\n            }\r\n        } else if (!!(match = aspNetRegex.exec(input))) {\r\n            sign = (match[1] === '-') ? -1 : 1;\r\n            duration = {\r\n                y  : 0,\r\n                d  : toInt(match[DATE])        * sign,\r\n                h  : toInt(match[HOUR])        * sign,\r\n                m  : toInt(match[MINUTE])      * sign,\r\n                s  : toInt(match[SECOND])      * sign,\r\n                ms : toInt(match[MILLISECOND]) * sign\r\n            };\r\n        } else if (!!(match = isoRegex.exec(input))) {\r\n            sign = (match[1] === '-') ? -1 : 1;\r\n            duration = {\r\n                y : parseIso(match[2], sign),\r\n                M : parseIso(match[3], sign),\r\n                w : parseIso(match[4], sign),\r\n                d : parseIso(match[5], sign),\r\n                h : parseIso(match[6], sign),\r\n                m : parseIso(match[7], sign),\r\n                s : parseIso(match[8], sign)\r\n            };\r\n        } else if (duration == null) {// checks for null or undefined\r\n            duration = {};\r\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\r\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\r\n\r\n            duration = {};\r\n            duration.ms = diffRes.milliseconds;\r\n            duration.M = diffRes.months;\r\n        }\r\n\r\n        ret = new Duration(duration);\r\n\r\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\r\n            ret._locale = input._locale;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    create__createDuration.fn = Duration.prototype;\r\n\r\n    function parseIso (inp, sign) {\r\n        // We'd normally use ~~inp for this, but unfortunately it also\r\n        // converts floats to ints.\r\n        // inp may be undefined, so careful calling replace on it.\r\n        var res = inp && parseFloat(inp.replace(',', '.'));\r\n        // apply sign while we're at it\r\n        return (isNaN(res) ? 0 : res) * sign;\r\n    }\r\n\r\n    function positiveMomentsDifference(base, other) {\r\n        var res = {milliseconds: 0, months: 0};\r\n\r\n        res.months = other.month() - base.month() +\r\n            (other.year() - base.year()) * 12;\r\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\r\n            --res.months;\r\n        }\r\n\r\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\r\n\r\n        return res;\r\n    }\r\n\r\n    function momentsDifference(base, other) {\r\n        var res;\r\n        if (!(base.isValid() && other.isValid())) {\r\n            return {milliseconds: 0, months: 0};\r\n        }\r\n\r\n        other = cloneWithOffset(other, base);\r\n        if (base.isBefore(other)) {\r\n            res = positiveMomentsDifference(base, other);\r\n        } else {\r\n            res = positiveMomentsDifference(other, base);\r\n            res.milliseconds = -res.milliseconds;\r\n            res.months = -res.months;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function absRound (number) {\r\n        if (number < 0) {\r\n            return Math.round(-1 * number) * -1;\r\n        } else {\r\n            return Math.round(number);\r\n        }\r\n    }\r\n\r\n    // TODO: remove 'name' arg after deprecation is removed\r\n    function createAdder(direction, name) {\r\n        return function (val, period) {\r\n            var dur, tmp;\r\n            //invert the arguments, but complain about it\r\n            if (period !== null && !isNaN(+period)) {\r\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\r\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\r\n                tmp = val; val = period; period = tmp;\r\n            }\r\n\r\n            val = typeof val === 'string' ? +val : val;\r\n            dur = create__createDuration(val, period);\r\n            add_subtract__addSubtract(this, dur, direction);\r\n            return this;\r\n        };\r\n    }\r\n\r\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\r\n        var milliseconds = duration._milliseconds,\r\n            days = absRound(duration._days),\r\n            months = absRound(duration._months);\r\n\r\n        if (!mom.isValid()) {\r\n            // No op\r\n            return;\r\n        }\r\n\r\n        updateOffset = updateOffset == null ? true : updateOffset;\r\n\r\n        if (milliseconds) {\r\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\r\n        }\r\n        if (days) {\r\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\r\n        }\r\n        if (months) {\r\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\r\n        }\r\n        if (updateOffset) {\r\n            utils_hooks__hooks.updateOffset(mom, days || months);\r\n        }\r\n    }\r\n\r\n    var add_subtract__add      = createAdder(1, 'add');\r\n    var add_subtract__subtract = createAdder(-1, 'subtract');\r\n\r\n    function getCalendarFormat(myMoment, now) {\r\n        var diff = myMoment.diff(now, 'days', true);\r\n        return diff < -6 ? 'sameElse' :\r\n                diff < -1 ? 'lastWeek' :\r\n                diff < 0 ? 'lastDay' :\r\n                diff < 1 ? 'sameDay' :\r\n                diff < 2 ? 'nextDay' :\r\n                diff < 7 ? 'nextWeek' : 'sameElse';\r\n    }\r\n\r\n    function moment_calendar__calendar (time, formats) {\r\n        // We want to compare the start of today, vs this.\r\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\r\n        var now = time || local__createLocal(),\r\n            sod = cloneWithOffset(now, this).startOf('day'),\r\n            format = utils_hooks__hooks.calendarFormat(this, sod) || 'sameElse';\r\n\r\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\r\n\r\n        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\r\n    }\r\n\r\n    function clone () {\r\n        return new Moment(this);\r\n    }\r\n\r\n    function isAfter (input, units) {\r\n        var localInput = isMoment(input) ? input : local__createLocal(input);\r\n        if (!(this.isValid() && localInput.isValid())) {\r\n            return false;\r\n        }\r\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\r\n        if (units === 'millisecond') {\r\n            return this.valueOf() > localInput.valueOf();\r\n        } else {\r\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\r\n        }\r\n    }\r\n\r\n    function isBefore (input, units) {\r\n        var localInput = isMoment(input) ? input : local__createLocal(input);\r\n        if (!(this.isValid() && localInput.isValid())) {\r\n            return false;\r\n        }\r\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\r\n        if (units === 'millisecond') {\r\n            return this.valueOf() < localInput.valueOf();\r\n        } else {\r\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\r\n        }\r\n    }\r\n\r\n    function isBetween (from, to, units, inclusivity) {\r\n        inclusivity = inclusivity || '()';\r\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\r\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\r\n    }\r\n\r\n    function isSame (input, units) {\r\n        var localInput = isMoment(input) ? input : local__createLocal(input),\r\n            inputMs;\r\n        if (!(this.isValid() && localInput.isValid())) {\r\n            return false;\r\n        }\r\n        units = normalizeUnits(units || 'millisecond');\r\n        if (units === 'millisecond') {\r\n            return this.valueOf() === localInput.valueOf();\r\n        } else {\r\n            inputMs = localInput.valueOf();\r\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\r\n        }\r\n    }\r\n\r\n    function isSameOrAfter (input, units) {\r\n        return this.isSame(input, units) || this.isAfter(input,units);\r\n    }\r\n\r\n    function isSameOrBefore (input, units) {\r\n        return this.isSame(input, units) || this.isBefore(input,units);\r\n    }\r\n\r\n    function diff (input, units, asFloat) {\r\n        var that,\r\n            zoneDelta,\r\n            delta, output;\r\n\r\n        if (!this.isValid()) {\r\n            return NaN;\r\n        }\r\n\r\n        that = cloneWithOffset(input, this);\r\n\r\n        if (!that.isValid()) {\r\n            return NaN;\r\n        }\r\n\r\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\r\n\r\n        units = normalizeUnits(units);\r\n\r\n        if (units === 'year' || units === 'month' || units === 'quarter') {\r\n            output = monthDiff(this, that);\r\n            if (units === 'quarter') {\r\n                output = output / 3;\r\n            } else if (units === 'year') {\r\n                output = output / 12;\r\n            }\r\n        } else {\r\n            delta = this - that;\r\n            output = units === 'second' ? delta / 1e3 : // 1000\r\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\r\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\r\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\r\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\r\n                delta;\r\n        }\r\n        return asFloat ? output : absFloor(output);\r\n    }\r\n\r\n    function monthDiff (a, b) {\r\n        // difference in months\r\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\r\n            // b is in (anchor - 1 month, anchor + 1 month)\r\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\r\n            anchor2, adjust;\r\n\r\n        if (b - anchor < 0) {\r\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\r\n            // linear across the month\r\n            adjust = (b - anchor) / (anchor - anchor2);\r\n        } else {\r\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\r\n            // linear across the month\r\n            adjust = (b - anchor) / (anchor2 - anchor);\r\n        }\r\n\r\n        //check for negative zero, return zero if negative zero\r\n        return -(wholeMonthDiff + adjust) || 0;\r\n    }\r\n\r\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\r\n\r\n    function toString () {\r\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\r\n    }\r\n\r\n    function moment_format__toISOString () {\r\n        var m = this.clone().utc();\r\n        if (0 < m.year() && m.year() <= 9999) {\r\n            if (isFunction(Date.prototype.toISOString)) {\r\n                // native implementation is ~50x faster, use it when we can\r\n                return this.toDate().toISOString();\r\n            } else {\r\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\r\n            }\r\n        } else {\r\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\r\n        }\r\n    }\r\n\r\n    function format (inputString) {\r\n        if (!inputString) {\r\n            inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;\r\n        }\r\n        var output = formatMoment(this, inputString);\r\n        return this.localeData().postformat(output);\r\n    }\r\n\r\n    function from (time, withoutSuffix) {\r\n        if (this.isValid() &&\r\n                ((isMoment(time) && time.isValid()) ||\r\n                 local__createLocal(time).isValid())) {\r\n            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\r\n        } else {\r\n            return this.localeData().invalidDate();\r\n        }\r\n    }\r\n\r\n    function fromNow (withoutSuffix) {\r\n        return this.from(local__createLocal(), withoutSuffix);\r\n    }\r\n\r\n    function to (time, withoutSuffix) {\r\n        if (this.isValid() &&\r\n                ((isMoment(time) && time.isValid()) ||\r\n                 local__createLocal(time).isValid())) {\r\n            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\r\n        } else {\r\n            return this.localeData().invalidDate();\r\n        }\r\n    }\r\n\r\n    function toNow (withoutSuffix) {\r\n        return this.to(local__createLocal(), withoutSuffix);\r\n    }\r\n\r\n    // If passed a locale key, it will set the locale for this\r\n    // instance.  Otherwise, it will return the locale configuration\r\n    // variables for this instance.\r\n    function locale (key) {\r\n        var newLocaleData;\r\n\r\n        if (key === undefined) {\r\n            return this._locale._abbr;\r\n        } else {\r\n            newLocaleData = locale_locales__getLocale(key);\r\n            if (newLocaleData != null) {\r\n                this._locale = newLocaleData;\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    var lang = deprecate(\r\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\r\n        function (key) {\r\n            if (key === undefined) {\r\n                return this.localeData();\r\n            } else {\r\n                return this.locale(key);\r\n            }\r\n        }\r\n    );\r\n\r\n    function localeData () {\r\n        return this._locale;\r\n    }\r\n\r\n    function startOf (units) {\r\n        units = normalizeUnits(units);\r\n        // the following switch intentionally omits break keywords\r\n        // to utilize falling through the cases.\r\n        switch (units) {\r\n            case 'year':\r\n                this.month(0);\r\n                /* falls through */\r\n            case 'quarter':\r\n            case 'month':\r\n                this.date(1);\r\n                /* falls through */\r\n            case 'week':\r\n            case 'isoWeek':\r\n            case 'day':\r\n            case 'date':\r\n                this.hours(0);\r\n                /* falls through */\r\n            case 'hour':\r\n                this.minutes(0);\r\n                /* falls through */\r\n            case 'minute':\r\n                this.seconds(0);\r\n                /* falls through */\r\n            case 'second':\r\n                this.milliseconds(0);\r\n        }\r\n\r\n        // weeks are a special case\r\n        if (units === 'week') {\r\n            this.weekday(0);\r\n        }\r\n        if (units === 'isoWeek') {\r\n            this.isoWeekday(1);\r\n        }\r\n\r\n        // quarters are also special\r\n        if (units === 'quarter') {\r\n            this.month(Math.floor(this.month() / 3) * 3);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function endOf (units) {\r\n        units = normalizeUnits(units);\r\n        if (units === undefined || units === 'millisecond') {\r\n            return this;\r\n        }\r\n\r\n        // 'date' is an alias for 'day', so it should be considered as such.\r\n        if (units === 'date') {\r\n            units = 'day';\r\n        }\r\n\r\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\r\n    }\r\n\r\n    function to_type__valueOf () {\r\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\r\n    }\r\n\r\n    function unix () {\r\n        return Math.floor(this.valueOf() / 1000);\r\n    }\r\n\r\n    function toDate () {\r\n        return new Date(this.valueOf());\r\n    }\r\n\r\n    function toArray () {\r\n        var m = this;\r\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\r\n    }\r\n\r\n    function toObject () {\r\n        var m = this;\r\n        return {\r\n            years: m.year(),\r\n            months: m.month(),\r\n            date: m.date(),\r\n            hours: m.hours(),\r\n            minutes: m.minutes(),\r\n            seconds: m.seconds(),\r\n            milliseconds: m.milliseconds()\r\n        };\r\n    }\r\n\r\n    function toJSON () {\r\n        // new Date(NaN).toJSON() === null\r\n        return this.isValid() ? this.toISOString() : null;\r\n    }\r\n\r\n    function moment_valid__isValid () {\r\n        return valid__isValid(this);\r\n    }\r\n\r\n    function parsingFlags () {\r\n        return extend({}, getParsingFlags(this));\r\n    }\r\n\r\n    function invalidAt () {\r\n        return getParsingFlags(this).overflow;\r\n    }\r\n\r\n    function creationData() {\r\n        return {\r\n            input: this._i,\r\n            format: this._f,\r\n            locale: this._locale,\r\n            isUTC: this._isUTC,\r\n            strict: this._strict\r\n        };\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken(0, ['gg', 2], 0, function () {\r\n        return this.weekYear() % 100;\r\n    });\r\n\r\n    addFormatToken(0, ['GG', 2], 0, function () {\r\n        return this.isoWeekYear() % 100;\r\n    });\r\n\r\n    function addWeekYearFormatToken (token, getter) {\r\n        addFormatToken(0, [token, token.length], 0, getter);\r\n    }\r\n\r\n    addWeekYearFormatToken('gggg',     'weekYear');\r\n    addWeekYearFormatToken('ggggg',    'weekYear');\r\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\r\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('weekYear', 'gg');\r\n    addUnitAlias('isoWeekYear', 'GG');\r\n\r\n    // PRIORITY\r\n\r\n    addUnitPriority('weekYear', 1);\r\n    addUnitPriority('isoWeekYear', 1);\r\n\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('G',      matchSigned);\r\n    addRegexToken('g',      matchSigned);\r\n    addRegexToken('GG',     match1to2, match2);\r\n    addRegexToken('gg',     match1to2, match2);\r\n    addRegexToken('GGGG',   match1to4, match4);\r\n    addRegexToken('gggg',   match1to4, match4);\r\n    addRegexToken('GGGGG',  match1to6, match6);\r\n    addRegexToken('ggggg',  match1to6, match6);\r\n\r\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\r\n        week[token.substr(0, 2)] = toInt(input);\r\n    });\r\n\r\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\r\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\r\n    });\r\n\r\n    // MOMENTS\r\n\r\n    function getSetWeekYear (input) {\r\n        return getSetWeekYearHelper.call(this,\r\n                input,\r\n                this.week(),\r\n                this.weekday(),\r\n                this.localeData()._week.dow,\r\n                this.localeData()._week.doy);\r\n    }\r\n\r\n    function getSetISOWeekYear (input) {\r\n        return getSetWeekYearHelper.call(this,\r\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\r\n    }\r\n\r\n    function getISOWeeksInYear () {\r\n        return weeksInYear(this.year(), 1, 4);\r\n    }\r\n\r\n    function getWeeksInYear () {\r\n        var weekInfo = this.localeData()._week;\r\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\r\n    }\r\n\r\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\r\n        var weeksTarget;\r\n        if (input == null) {\r\n            return weekOfYear(this, dow, doy).year;\r\n        } else {\r\n            weeksTarget = weeksInYear(input, dow, doy);\r\n            if (week > weeksTarget) {\r\n                week = weeksTarget;\r\n            }\r\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\r\n        }\r\n    }\r\n\r\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\r\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\r\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\r\n\r\n        this.year(date.getUTCFullYear());\r\n        this.month(date.getUTCMonth());\r\n        this.date(date.getUTCDate());\r\n        return this;\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('Q', 0, 'Qo', 'quarter');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('quarter', 'Q');\r\n\r\n    // PRIORITY\r\n\r\n    addUnitPriority('quarter', 7);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('Q', match1);\r\n    addParseToken('Q', function (input, array) {\r\n        array[MONTH] = (toInt(input) - 1) * 3;\r\n    });\r\n\r\n    // MOMENTS\r\n\r\n    function getSetQuarter (input) {\r\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('date', 'D');\r\n\r\n    // PRIOROITY\r\n    addUnitPriority('date', 9);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('D',  match1to2);\r\n    addRegexToken('DD', match1to2, match2);\r\n    addRegexToken('Do', function (isStrict, locale) {\r\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\r\n    });\r\n\r\n    addParseToken(['D', 'DD'], DATE);\r\n    addParseToken('Do', function (input, array) {\r\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\r\n    });\r\n\r\n    // MOMENTS\r\n\r\n    var getSetDayOfMonth = makeGetSet('Date', true);\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('dayOfYear', 'DDD');\r\n\r\n    // PRIORITY\r\n    addUnitPriority('dayOfYear', 4);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('DDD',  match1to3);\r\n    addRegexToken('DDDD', match3);\r\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\r\n        config._dayOfYear = toInt(input);\r\n    });\r\n\r\n    // HELPERS\r\n\r\n    // MOMENTS\r\n\r\n    function getSetDayOfYear (input) {\r\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\r\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\r\n    }\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('m', ['mm', 2], 0, 'minute');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('minute', 'm');\r\n\r\n    // PRIORITY\r\n\r\n    addUnitPriority('minute', 14);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('m',  match1to2);\r\n    addRegexToken('mm', match1to2, match2);\r\n    addParseToken(['m', 'mm'], MINUTE);\r\n\r\n    // MOMENTS\r\n\r\n    var getSetMinute = makeGetSet('Minutes', false);\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('s', ['ss', 2], 0, 'second');\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('second', 's');\r\n\r\n    // PRIORITY\r\n\r\n    addUnitPriority('second', 15);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('s',  match1to2);\r\n    addRegexToken('ss', match1to2, match2);\r\n    addParseToken(['s', 'ss'], SECOND);\r\n\r\n    // MOMENTS\r\n\r\n    var getSetSecond = makeGetSet('Seconds', false);\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('S', 0, 0, function () {\r\n        return ~~(this.millisecond() / 100);\r\n    });\r\n\r\n    addFormatToken(0, ['SS', 2], 0, function () {\r\n        return ~~(this.millisecond() / 10);\r\n    });\r\n\r\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\r\n    addFormatToken(0, ['SSSS', 4], 0, function () {\r\n        return this.millisecond() * 10;\r\n    });\r\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\r\n        return this.millisecond() * 100;\r\n    });\r\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\r\n        return this.millisecond() * 1000;\r\n    });\r\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\r\n        return this.millisecond() * 10000;\r\n    });\r\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\r\n        return this.millisecond() * 100000;\r\n    });\r\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\r\n        return this.millisecond() * 1000000;\r\n    });\r\n\r\n\r\n    // ALIASES\r\n\r\n    addUnitAlias('millisecond', 'ms');\r\n\r\n    // PRIORITY\r\n\r\n    addUnitPriority('millisecond', 16);\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('S',    match1to3, match1);\r\n    addRegexToken('SS',   match1to3, match2);\r\n    addRegexToken('SSS',  match1to3, match3);\r\n\r\n    var token;\r\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\r\n        addRegexToken(token, matchUnsigned);\r\n    }\r\n\r\n    function parseMs(input, array) {\r\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\r\n    }\r\n\r\n    for (token = 'S'; token.length <= 9; token += 'S') {\r\n        addParseToken(token, parseMs);\r\n    }\r\n    // MOMENTS\r\n\r\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('z',  0, 0, 'zoneAbbr');\r\n    addFormatToken('zz', 0, 0, 'zoneName');\r\n\r\n    // MOMENTS\r\n\r\n    function getZoneAbbr () {\r\n        return this._isUTC ? 'UTC' : '';\r\n    }\r\n\r\n    function getZoneName () {\r\n        return this._isUTC ? 'Coordinated Universal Time' : '';\r\n    }\r\n\r\n    var momentPrototype__proto = Moment.prototype;\r\n\r\n    momentPrototype__proto.add               = add_subtract__add;\r\n    momentPrototype__proto.calendar          = moment_calendar__calendar;\r\n    momentPrototype__proto.clone             = clone;\r\n    momentPrototype__proto.diff              = diff;\r\n    momentPrototype__proto.endOf             = endOf;\r\n    momentPrototype__proto.format            = format;\r\n    momentPrototype__proto.from              = from;\r\n    momentPrototype__proto.fromNow           = fromNow;\r\n    momentPrototype__proto.to                = to;\r\n    momentPrototype__proto.toNow             = toNow;\r\n    momentPrototype__proto.get               = stringGet;\r\n    momentPrototype__proto.invalidAt         = invalidAt;\r\n    momentPrototype__proto.isAfter           = isAfter;\r\n    momentPrototype__proto.isBefore          = isBefore;\r\n    momentPrototype__proto.isBetween         = isBetween;\r\n    momentPrototype__proto.isSame            = isSame;\r\n    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;\r\n    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;\r\n    momentPrototype__proto.isValid           = moment_valid__isValid;\r\n    momentPrototype__proto.lang              = lang;\r\n    momentPrototype__proto.locale            = locale;\r\n    momentPrototype__proto.localeData        = localeData;\r\n    momentPrototype__proto.max               = prototypeMax;\r\n    momentPrototype__proto.min               = prototypeMin;\r\n    momentPrototype__proto.parsingFlags      = parsingFlags;\r\n    momentPrototype__proto.set               = stringSet;\r\n    momentPrototype__proto.startOf           = startOf;\r\n    momentPrototype__proto.subtract          = add_subtract__subtract;\r\n    momentPrototype__proto.toArray           = toArray;\r\n    momentPrototype__proto.toObject          = toObject;\r\n    momentPrototype__proto.toDate            = toDate;\r\n    momentPrototype__proto.toISOString       = moment_format__toISOString;\r\n    momentPrototype__proto.toJSON            = toJSON;\r\n    momentPrototype__proto.toString          = toString;\r\n    momentPrototype__proto.unix              = unix;\r\n    momentPrototype__proto.valueOf           = to_type__valueOf;\r\n    momentPrototype__proto.creationData      = creationData;\r\n\r\n    // Year\r\n    momentPrototype__proto.year       = getSetYear;\r\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\r\n\r\n    // Week Year\r\n    momentPrototype__proto.weekYear    = getSetWeekYear;\r\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\r\n\r\n    // Quarter\r\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\r\n\r\n    // Month\r\n    momentPrototype__proto.month       = getSetMonth;\r\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\r\n\r\n    // Week\r\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\r\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\r\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\r\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\r\n\r\n    // Day\r\n    momentPrototype__proto.date       = getSetDayOfMonth;\r\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\r\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\r\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\r\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\r\n\r\n    // Hour\r\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\r\n\r\n    // Minute\r\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\r\n\r\n    // Second\r\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\r\n\r\n    // Millisecond\r\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\r\n\r\n    // Offset\r\n    momentPrototype__proto.utcOffset            = getSetOffset;\r\n    momentPrototype__proto.utc                  = setOffsetToUTC;\r\n    momentPrototype__proto.local                = setOffsetToLocal;\r\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\r\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\r\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\r\n    momentPrototype__proto.isLocal              = isLocal;\r\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\r\n    momentPrototype__proto.isUtc                = isUtc;\r\n    momentPrototype__proto.isUTC                = isUtc;\r\n\r\n    // Timezone\r\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\r\n    momentPrototype__proto.zoneName = getZoneName;\r\n\r\n    // Deprecations\r\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\r\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\r\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\r\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\r\n    momentPrototype__proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\r\n\r\n    var momentPrototype = momentPrototype__proto;\r\n\r\n    function moment__createUnix (input) {\r\n        return local__createLocal(input * 1000);\r\n    }\r\n\r\n    function moment__createInZone () {\r\n        return local__createLocal.apply(null, arguments).parseZone();\r\n    }\r\n\r\n    function preParsePostFormat (string) {\r\n        return string;\r\n    }\r\n\r\n    var prototype__proto = Locale.prototype;\r\n\r\n    prototype__proto.calendar        = locale_calendar__calendar;\r\n    prototype__proto.longDateFormat  = longDateFormat;\r\n    prototype__proto.invalidDate     = invalidDate;\r\n    prototype__proto.ordinal         = ordinal;\r\n    prototype__proto.preparse        = preParsePostFormat;\r\n    prototype__proto.postformat      = preParsePostFormat;\r\n    prototype__proto.relativeTime    = relative__relativeTime;\r\n    prototype__proto.pastFuture      = pastFuture;\r\n    prototype__proto.set             = locale_set__set;\r\n\r\n    // Month\r\n    prototype__proto.months            =        localeMonths;\r\n    prototype__proto.monthsShort       =        localeMonthsShort;\r\n    prototype__proto.monthsParse       =        localeMonthsParse;\r\n    prototype__proto.monthsRegex       = monthsRegex;\r\n    prototype__proto.monthsShortRegex  = monthsShortRegex;\r\n\r\n    // Week\r\n    prototype__proto.week = localeWeek;\r\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\r\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\r\n\r\n    // Day of Week\r\n    prototype__proto.weekdays       =        localeWeekdays;\r\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\r\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\r\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\r\n\r\n    prototype__proto.weekdaysRegex       =        weekdaysRegex;\r\n    prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;\r\n    prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;\r\n\r\n    // Hours\r\n    prototype__proto.isPM = localeIsPM;\r\n    prototype__proto.meridiem = localeMeridiem;\r\n\r\n    function lists__get (format, index, field, setter) {\r\n        var locale = locale_locales__getLocale();\r\n        var utc = create_utc__createUTC().set(setter, index);\r\n        return locale[field](utc, format);\r\n    }\r\n\r\n    function listMonthsImpl (format, index, field) {\r\n        if (typeof format === 'number') {\r\n            index = format;\r\n            format = undefined;\r\n        }\r\n\r\n        format = format || '';\r\n\r\n        if (index != null) {\r\n            return lists__get(format, index, field, 'month');\r\n        }\r\n\r\n        var i;\r\n        var out = [];\r\n        for (i = 0; i < 12; i++) {\r\n            out[i] = lists__get(format, i, field, 'month');\r\n        }\r\n        return out;\r\n    }\r\n\r\n    // ()\r\n    // (5)\r\n    // (fmt, 5)\r\n    // (fmt)\r\n    // (true)\r\n    // (true, 5)\r\n    // (true, fmt, 5)\r\n    // (true, fmt)\r\n    function listWeekdaysImpl (localeSorted, format, index, field) {\r\n        if (typeof localeSorted === 'boolean') {\r\n            if (typeof format === 'number') {\r\n                index = format;\r\n                format = undefined;\r\n            }\r\n\r\n            format = format || '';\r\n        } else {\r\n            format = localeSorted;\r\n            index = format;\r\n            localeSorted = false;\r\n\r\n            if (typeof format === 'number') {\r\n                index = format;\r\n                format = undefined;\r\n            }\r\n\r\n            format = format || '';\r\n        }\r\n\r\n        var locale = locale_locales__getLocale(),\r\n            shift = localeSorted ? locale._week.dow : 0;\r\n\r\n        if (index != null) {\r\n            return lists__get(format, (index + shift) % 7, field, 'day');\r\n        }\r\n\r\n        var i;\r\n        var out = [];\r\n        for (i = 0; i < 7; i++) {\r\n            out[i] = lists__get(format, (i + shift) % 7, field, 'day');\r\n        }\r\n        return out;\r\n    }\r\n\r\n    function lists__listMonths (format, index) {\r\n        return listMonthsImpl(format, index, 'months');\r\n    }\r\n\r\n    function lists__listMonthsShort (format, index) {\r\n        return listMonthsImpl(format, index, 'monthsShort');\r\n    }\r\n\r\n    function lists__listWeekdays (localeSorted, format, index) {\r\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\r\n    }\r\n\r\n    function lists__listWeekdaysShort (localeSorted, format, index) {\r\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\r\n    }\r\n\r\n    function lists__listWeekdaysMin (localeSorted, format, index) {\r\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\r\n    }\r\n\r\n    locale_locales__getSetGlobalLocale('en', {\r\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\r\n        ordinal : function (number) {\r\n            var b = number % 10,\r\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\r\n                (b === 1) ? 'st' :\r\n                (b === 2) ? 'nd' :\r\n                (b === 3) ? 'rd' : 'th';\r\n            return number + output;\r\n        }\r\n    });\r\n\r\n    // Side effect imports\r\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\r\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\r\n\r\n    var mathAbs = Math.abs;\r\n\r\n    function duration_abs__abs () {\r\n        var data           = this._data;\r\n\r\n        this._milliseconds = mathAbs(this._milliseconds);\r\n        this._days         = mathAbs(this._days);\r\n        this._months       = mathAbs(this._months);\r\n\r\n        data.milliseconds  = mathAbs(data.milliseconds);\r\n        data.seconds       = mathAbs(data.seconds);\r\n        data.minutes       = mathAbs(data.minutes);\r\n        data.hours         = mathAbs(data.hours);\r\n        data.months        = mathAbs(data.months);\r\n        data.years         = mathAbs(data.years);\r\n\r\n        return this;\r\n    }\r\n\r\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\r\n        var other = create__createDuration(input, value);\r\n\r\n        duration._milliseconds += direction * other._milliseconds;\r\n        duration._days         += direction * other._days;\r\n        duration._months       += direction * other._months;\r\n\r\n        return duration._bubble();\r\n    }\r\n\r\n    // supports only 2.0-style add(1, 's') or add(duration)\r\n    function duration_add_subtract__add (input, value) {\r\n        return duration_add_subtract__addSubtract(this, input, value, 1);\r\n    }\r\n\r\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\r\n    function duration_add_subtract__subtract (input, value) {\r\n        return duration_add_subtract__addSubtract(this, input, value, -1);\r\n    }\r\n\r\n    function absCeil (number) {\r\n        if (number < 0) {\r\n            return Math.floor(number);\r\n        } else {\r\n            return Math.ceil(number);\r\n        }\r\n    }\r\n\r\n    function bubble () {\r\n        var milliseconds = this._milliseconds;\r\n        var days         = this._days;\r\n        var months       = this._months;\r\n        var data         = this._data;\r\n        var seconds, minutes, hours, years, monthsFromDays;\r\n\r\n        // if we have a mix of positive and negative values, bubble down first\r\n        // check: https://github.com/moment/moment/issues/2166\r\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\r\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\r\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\r\n            days = 0;\r\n            months = 0;\r\n        }\r\n\r\n        // The following code bubbles up values, see the tests for\r\n        // examples of what that means.\r\n        data.milliseconds = milliseconds % 1000;\r\n\r\n        seconds           = absFloor(milliseconds / 1000);\r\n        data.seconds      = seconds % 60;\r\n\r\n        minutes           = absFloor(seconds / 60);\r\n        data.minutes      = minutes % 60;\r\n\r\n        hours             = absFloor(minutes / 60);\r\n        data.hours        = hours % 24;\r\n\r\n        days += absFloor(hours / 24);\r\n\r\n        // convert days to months\r\n        monthsFromDays = absFloor(daysToMonths(days));\r\n        months += monthsFromDays;\r\n        days -= absCeil(monthsToDays(monthsFromDays));\r\n\r\n        // 12 months -> 1 year\r\n        years = absFloor(months / 12);\r\n        months %= 12;\r\n\r\n        data.days   = days;\r\n        data.months = months;\r\n        data.years  = years;\r\n\r\n        return this;\r\n    }\r\n\r\n    function daysToMonths (days) {\r\n        // 400 years have 146097 days (taking into account leap year rules)\r\n        // 400 years have 12 months === 4800\r\n        return days * 4800 / 146097;\r\n    }\r\n\r\n    function monthsToDays (months) {\r\n        // the reverse of daysToMonths\r\n        return months * 146097 / 4800;\r\n    }\r\n\r\n    function as (units) {\r\n        var days;\r\n        var months;\r\n        var milliseconds = this._milliseconds;\r\n\r\n        units = normalizeUnits(units);\r\n\r\n        if (units === 'month' || units === 'year') {\r\n            days   = this._days   + milliseconds / 864e5;\r\n            months = this._months + daysToMonths(days);\r\n            return units === 'month' ? months : months / 12;\r\n        } else {\r\n            // handle milliseconds separately because of floating point math errors (issue #1867)\r\n            days = this._days + Math.round(monthsToDays(this._months));\r\n            switch (units) {\r\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\r\n                case 'day'    : return days         + milliseconds / 864e5;\r\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\r\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\r\n                case 'second' : return days * 86400 + milliseconds / 1000;\r\n                // Math.floor prevents floating point math errors here\r\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\r\n                default: throw new Error('Unknown unit ' + units);\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: Use this.as('ms')?\r\n    function duration_as__valueOf () {\r\n        return (\r\n            this._milliseconds +\r\n            this._days * 864e5 +\r\n            (this._months % 12) * 2592e6 +\r\n            toInt(this._months / 12) * 31536e6\r\n        );\r\n    }\r\n\r\n    function makeAs (alias) {\r\n        return function () {\r\n            return this.as(alias);\r\n        };\r\n    }\r\n\r\n    var asMilliseconds = makeAs('ms');\r\n    var asSeconds      = makeAs('s');\r\n    var asMinutes      = makeAs('m');\r\n    var asHours        = makeAs('h');\r\n    var asDays         = makeAs('d');\r\n    var asWeeks        = makeAs('w');\r\n    var asMonths       = makeAs('M');\r\n    var asYears        = makeAs('y');\r\n\r\n    function duration_get__get (units) {\r\n        units = normalizeUnits(units);\r\n        return this[units + 's']();\r\n    }\r\n\r\n    function makeGetter(name) {\r\n        return function () {\r\n            return this._data[name];\r\n        };\r\n    }\r\n\r\n    var milliseconds = makeGetter('milliseconds');\r\n    var seconds      = makeGetter('seconds');\r\n    var minutes      = makeGetter('minutes');\r\n    var hours        = makeGetter('hours');\r\n    var days         = makeGetter('days');\r\n    var months       = makeGetter('months');\r\n    var years        = makeGetter('years');\r\n\r\n    function weeks () {\r\n        return absFloor(this.days() / 7);\r\n    }\r\n\r\n    var round = Math.round;\r\n    var thresholds = {\r\n        s: 45,  // seconds to minute\r\n        m: 45,  // minutes to hour\r\n        h: 22,  // hours to day\r\n        d: 26,  // days to month\r\n        M: 11   // months to year\r\n    };\r\n\r\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\r\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\r\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\r\n    }\r\n\r\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\r\n        var duration = create__createDuration(posNegDuration).abs();\r\n        var seconds  = round(duration.as('s'));\r\n        var minutes  = round(duration.as('m'));\r\n        var hours    = round(duration.as('h'));\r\n        var days     = round(duration.as('d'));\r\n        var months   = round(duration.as('M'));\r\n        var years    = round(duration.as('y'));\r\n\r\n        var a = seconds < thresholds.s && ['s', seconds]  ||\r\n                minutes <= 1           && ['m']           ||\r\n                minutes < thresholds.m && ['mm', minutes] ||\r\n                hours   <= 1           && ['h']           ||\r\n                hours   < thresholds.h && ['hh', hours]   ||\r\n                days    <= 1           && ['d']           ||\r\n                days    < thresholds.d && ['dd', days]    ||\r\n                months  <= 1           && ['M']           ||\r\n                months  < thresholds.M && ['MM', months]  ||\r\n                years   <= 1           && ['y']           || ['yy', years];\r\n\r\n        a[2] = withoutSuffix;\r\n        a[3] = +posNegDuration > 0;\r\n        a[4] = locale;\r\n        return substituteTimeAgo.apply(null, a);\r\n    }\r\n\r\n    // This function allows you to set the rounding function for relative time strings\r\n    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) {\r\n        if (roundingFunction === undefined) {\r\n            return round;\r\n        }\r\n        if (typeof(roundingFunction) === 'function') {\r\n            round = roundingFunction;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // This function allows you to set a threshold for relative time strings\r\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\r\n        if (thresholds[threshold] === undefined) {\r\n            return false;\r\n        }\r\n        if (limit === undefined) {\r\n            return thresholds[threshold];\r\n        }\r\n        thresholds[threshold] = limit;\r\n        return true;\r\n    }\r\n\r\n    function humanize (withSuffix) {\r\n        var locale = this.localeData();\r\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\r\n\r\n        if (withSuffix) {\r\n            output = locale.pastFuture(+this, output);\r\n        }\r\n\r\n        return locale.postformat(output);\r\n    }\r\n\r\n    var iso_string__abs = Math.abs;\r\n\r\n    function iso_string__toISOString() {\r\n        // for ISO strings we do not use the normal bubbling rules:\r\n        //  * milliseconds bubble up until they become hours\r\n        //  * days do not bubble at all\r\n        //  * months bubble up until they become years\r\n        // This is because there is no context-free conversion between hours and days\r\n        // (think of clock changes)\r\n        // and also not between days and months (28-31 days per month)\r\n        var seconds = iso_string__abs(this._milliseconds) / 1000;\r\n        var days         = iso_string__abs(this._days);\r\n        var months       = iso_string__abs(this._months);\r\n        var minutes, hours, years;\r\n\r\n        // 3600 seconds -> 60 minutes -> 1 hour\r\n        minutes           = absFloor(seconds / 60);\r\n        hours             = absFloor(minutes / 60);\r\n        seconds %= 60;\r\n        minutes %= 60;\r\n\r\n        // 12 months -> 1 year\r\n        years  = absFloor(months / 12);\r\n        months %= 12;\r\n\r\n\r\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\r\n        var Y = years;\r\n        var M = months;\r\n        var D = days;\r\n        var h = hours;\r\n        var m = minutes;\r\n        var s = seconds;\r\n        var total = this.asSeconds();\r\n\r\n        if (!total) {\r\n            // this is the same as C#'s (Noda) and python (isodate)...\r\n            // but not other JS (goog.date)\r\n            return 'P0D';\r\n        }\r\n\r\n        return (total < 0 ? '-' : '') +\r\n            'P' +\r\n            (Y ? Y + 'Y' : '') +\r\n            (M ? M + 'M' : '') +\r\n            (D ? D + 'D' : '') +\r\n            ((h || m || s) ? 'T' : '') +\r\n            (h ? h + 'H' : '') +\r\n            (m ? m + 'M' : '') +\r\n            (s ? s + 'S' : '');\r\n    }\r\n\r\n    var duration_prototype__proto = Duration.prototype;\r\n\r\n    duration_prototype__proto.abs            = duration_abs__abs;\r\n    duration_prototype__proto.add            = duration_add_subtract__add;\r\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\r\n    duration_prototype__proto.as             = as;\r\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\r\n    duration_prototype__proto.asSeconds      = asSeconds;\r\n    duration_prototype__proto.asMinutes      = asMinutes;\r\n    duration_prototype__proto.asHours        = asHours;\r\n    duration_prototype__proto.asDays         = asDays;\r\n    duration_prototype__proto.asWeeks        = asWeeks;\r\n    duration_prototype__proto.asMonths       = asMonths;\r\n    duration_prototype__proto.asYears        = asYears;\r\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\r\n    duration_prototype__proto._bubble        = bubble;\r\n    duration_prototype__proto.get            = duration_get__get;\r\n    duration_prototype__proto.milliseconds   = milliseconds;\r\n    duration_prototype__proto.seconds        = seconds;\r\n    duration_prototype__proto.minutes        = minutes;\r\n    duration_prototype__proto.hours          = hours;\r\n    duration_prototype__proto.days           = days;\r\n    duration_prototype__proto.weeks          = weeks;\r\n    duration_prototype__proto.months         = months;\r\n    duration_prototype__proto.years          = years;\r\n    duration_prototype__proto.humanize       = humanize;\r\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\r\n    duration_prototype__proto.toString       = iso_string__toISOString;\r\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\r\n    duration_prototype__proto.locale         = locale;\r\n    duration_prototype__proto.localeData     = localeData;\r\n\r\n    // Deprecations\r\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\r\n    duration_prototype__proto.lang = lang;\r\n\r\n    // Side effect imports\r\n\r\n    // FORMATTING\r\n\r\n    addFormatToken('X', 0, 0, 'unix');\r\n    addFormatToken('x', 0, 0, 'valueOf');\r\n\r\n    // PARSING\r\n\r\n    addRegexToken('x', matchSigned);\r\n    addRegexToken('X', matchTimestamp);\r\n    addParseToken('X', function (input, array, config) {\r\n        config._d = new Date(parseFloat(input, 10) * 1000);\r\n    });\r\n    addParseToken('x', function (input, array, config) {\r\n        config._d = new Date(toInt(input));\r\n    });\r\n\r\n    // Side effect imports\r\n\r\n\r\n    utils_hooks__hooks.version = '2.14.1';\r\n\r\n    setHookCallback(local__createLocal);\r\n\r\n    utils_hooks__hooks.fn                    = momentPrototype;\r\n    utils_hooks__hooks.min                   = min;\r\n    utils_hooks__hooks.max                   = max;\r\n    utils_hooks__hooks.now                   = now;\r\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\r\n    utils_hooks__hooks.unix                  = moment__createUnix;\r\n    utils_hooks__hooks.months                = lists__listMonths;\r\n    utils_hooks__hooks.isDate                = isDate;\r\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\r\n    utils_hooks__hooks.invalid               = valid__createInvalid;\r\n    utils_hooks__hooks.duration              = create__createDuration;\r\n    utils_hooks__hooks.isMoment              = isMoment;\r\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\r\n    utils_hooks__hooks.parseZone             = moment__createInZone;\r\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\r\n    utils_hooks__hooks.isDuration            = isDuration;\r\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\r\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\r\n    utils_hooks__hooks.defineLocale          = defineLocale;\r\n    utils_hooks__hooks.updateLocale          = updateLocale;\r\n    utils_hooks__hooks.locales               = locale_locales__listLocales;\r\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\r\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\r\n    utils_hooks__hooks.relativeTimeRounding = duration_humanize__getSetRelativeTimeRounding;\r\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\r\n    utils_hooks__hooks.calendarFormat        = getCalendarFormat;\r\n    utils_hooks__hooks.prototype             = momentPrototype;\r\n\r\n    var _moment = utils_hooks__hooks;\r\n\r\n    return _moment;\r\n\r\n}));\n","\r\ndefine(\r\n    'platform/core/src/capabilities/MetadataCapability',['moment'],\r\n    function (moment) {\r\n\r\n        /**\r\n         * A piece of information about a domain object.\r\n         * @typedef {Object} MetadataProperty\r\n         * @property {string} name the human-readable name of this property\r\n         * @property {string} value the human-readable value of this property,\r\n         *           for this specific domain object\r\n         */\r\n\r\n        var TIME_FORMAT = \"YYYY-MM-DD HH:mm:ss\";\r\n\r\n        /**\r\n         * Implements the `metadata` capability of a domain object, providing\r\n         * properties of that object for display.\r\n         *\r\n         * Usage: `domainObject.useCapability(\"metadata\")`\r\n         *\r\n         * ...which will return an array of objects containing `name` and\r\n         * `value` properties describing that domain object (suitable for\r\n         * display.)\r\n         *\r\n         * @param {DomainObject} domainObject the domain object whose\r\n         *        metadata is to be exposed\r\n         * @implements {Capability}\r\n         * @constructor\r\n         * @memberof platform/core\r\n         */\r\n        function MetadataCapability(domainObject) {\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Get metadata about this object.\r\n         * @returns {MetadataProperty[]} metadata about this object\r\n         */\r\n        MetadataCapability.prototype.invoke = function () {\r\n            var domainObject = this.domainObject,\r\n                model = domainObject.getModel();\r\n\r\n            function hasDisplayableValue(metadataProperty) {\r\n                var t = typeof metadataProperty.value;\r\n                return (t === 'string' || t === 'number');\r\n            }\r\n\r\n            function formatTimestamp(timestamp) {\r\n                return typeof timestamp === 'number' ?\r\n                        (moment.utc(timestamp).format(TIME_FORMAT) + \" UTC\") :\r\n                        undefined;\r\n            }\r\n\r\n            function getProperties() {\r\n                var type = domainObject.getCapability('type');\r\n\r\n                function lookupProperty(typeProperty) {\r\n                    return {\r\n                        name: typeProperty.getDefinition().name,\r\n                        value: typeProperty.getValue(model)\r\n                    };\r\n                }\r\n\r\n                return (type ? type.getProperties() : []).map(lookupProperty);\r\n            }\r\n\r\n            function getCommonMetadata() {\r\n                var type = domainObject.getCapability('type');\r\n                // Note that invalid values will be filtered out later\r\n                return [\r\n                    {\r\n                        name: \"Updated\",\r\n                        value: formatTimestamp(model.modified)\r\n                    },\r\n                    {\r\n                        name: \"Type\",\r\n                        value: type && type.getName()\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return getProperties().concat(getCommonMetadata())\r\n                .filter(hasDisplayableValue);\r\n        };\r\n\r\n        return MetadataCapability;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining MutationCapability. Created by vwoeltje on 11/12/14.\r\n */\r\ndefine(\r\n    'platform/core/src/capabilities/MutationCapability',[],\r\n    function () {\r\n\r\n        var GENERAL_TOPIC = \"mutation\",\r\n            TOPIC_PREFIX = \"mutation:\";\r\n\r\n        // Utility function to overwrite a destination object\r\n        // with the contents of a source object.\r\n        function copyValues(destination, source) {\r\n            // First, remove all previously-existing keys\r\n            Object.keys(destination).forEach(function (k) {\r\n                delete destination[k];\r\n            });\r\n            // Second, write all new keys\r\n            Object.keys(source).forEach(function (k) {\r\n                destination[k] = source[k];\r\n            });\r\n        }\r\n\r\n        // Utility function to cast to a promise, without waiting\r\n        // for nextTick if a value is non-promise-like.\r\n        function fastPromise(value) {\r\n            return (value || {}).then ? value : {\r\n                then: function (callback) {\r\n                    return fastPromise(callback(value));\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * The `mutation` capability allows a domain object's model to be\r\n         * modified. Wrapping such modifications in calls made through\r\n         * this capability allows these changes to be tracked (e.g. to\r\n         * ensure that a domain object's `modified` timestamp is kept\r\n         * up-to-date.)\r\n         *\r\n         * Usage:\r\n         *\r\n         * ```\r\n         * domainObject.useCapability(\"mutation\", function (model) {\r\n         *     // make changes to model here...\r\n         * });\r\n         * ```\r\n         *\r\n         * @param {Function} topic a service for creating listeners\r\n         * @param {Function} now a service to get the current time\r\n         * @param {DomainObject} domainObject the domain object\r\n         *        which will expose this capability\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {Capability}\r\n         */\r\n        function MutationCapability(topic, now, domainObject) {\r\n            this.generalMutationTopic =\r\n                topic(GENERAL_TOPIC);\r\n            this.specificMutationTopic =\r\n                topic(TOPIC_PREFIX + domainObject.getId());\r\n\r\n            this.now = now;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Modify the domain object's model, using a provided\r\n         * function. This function will receive a copy of the\r\n         * domain object's model as an argument; behavior\r\n         * varies depending on that function's return value:\r\n         *\r\n         * * If no value (or undefined) is returned by the mutator,\r\n         *   the state of the model object delivered as the mutator's\r\n         *   argument will become the domain object's new model.\r\n         *   This is useful for writing code that modifies the model\r\n         *   directly.\r\n         * * If a plain object is returned, that object will be used\r\n         *   as the domain object's new model.\r\n         * * If boolean `false` is returned, the mutation will be\r\n         *   cancelled.\r\n         * * If a promise is returned, its resolved value will be\r\n         *   handled as one of the above.\r\n         *\r\n         *\r\n         * @param  {Function} mutator the function which will make\r\n         *         changes to the domain object's model.\r\n         * @param  {number} [timestamp] timestamp to record for\r\n         *         this mutation (otherwise, system time will be\r\n         *         used)\r\n         * @returns {Promise.<boolean>} a promise for the result\r\n         *         of the mutation; true if changes were made.\r\n         */\r\n        MutationCapability.prototype.mutate = function (mutator, timestamp) {\r\n            // Get the object's model and clone it, so the\r\n            // mutator function has a temporary copy to work with.\r\n            var domainObject = this.domainObject,\r\n                now = this.now,\r\n                generalTopic = this.generalMutationTopic,\r\n                specificTopic = this.specificMutationTopic,\r\n                model = domainObject.getModel(),\r\n                clone = JSON.parse(JSON.stringify(model)),\r\n                useTimestamp = arguments.length > 1;\r\n\r\n            function notifyListeners(newModel) {\r\n                generalTopic.notify(domainObject);\r\n                specificTopic.notify(newModel);\r\n            }\r\n\r\n            // Function to handle copying values to the actual\r\n            function handleMutation(mutationResult) {\r\n                // If mutation result was undefined, just use\r\n                // the clone; this allows the mutator to omit return\r\n                // values and just change the model directly.\r\n                var result = mutationResult || clone;\r\n\r\n                // Allow mutators to change their mind by\r\n                // returning false.\r\n                if (mutationResult !== false) {\r\n                    // Copy values if result was a different object\r\n                    // (either our clone or some other new thing)\r\n                    if (model !== result) {\r\n                        copyValues(model, result);\r\n                    }\r\n                    model.modified = useTimestamp ? timestamp : now();\r\n                    notifyListeners(model);\r\n                }\r\n\r\n                // Report the result of the mutation\r\n                return mutationResult !== false;\r\n            }\r\n\r\n            // Invoke the provided mutator, then make changes to\r\n            // the underlying model (if applicable.)\r\n            return fastPromise(mutator(clone)).then(handleMutation);\r\n        };\r\n\r\n        /**\r\n         * Listen for mutations of this domain object's model.\r\n         * The provided listener will be invoked with the domain\r\n         * object's new model after any changes. To stop listening,\r\n         * invoke the function returned by this method.\r\n         * @param {Function} listener function to call on mutation\r\n         * @returns {Function} a function to stop listening\r\n         * @memberof platform/core.MutationCapability#\r\n         */\r\n        MutationCapability.prototype.listen = function (listener) {\r\n            return this.specificMutationTopic.listen(listener);\r\n        };\r\n\r\n        /**\r\n         * Alias of `mutate`, used to support useCapability.\r\n         */\r\n        MutationCapability.prototype.invoke =\r\n            MutationCapability.prototype.mutate;\r\n\r\n        return MutationCapability;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining DelegationCapability. Created by vwoeltje on 11/18/14.\r\n */\r\ndefine(\r\n    'platform/core/src/capabilities/DelegationCapability',[],\r\n    function () {\r\n\r\n\r\n        /**\r\n         * The `delegation` capability allows a domain object to indicate\r\n         * that it wishes to delegate responsibility for some other\r\n         * capability to some other domain objects.\r\n         *\r\n         * This is specifically useful in the case of telemetry panels,\r\n         * which delegate responsibility for the `telemetry` capability\r\n         * to their contained objects.\r\n         *\r\n         * A type of domain object may indicate that it wishes to delegate\r\n         * responsibility for one or more capabilities to the members of\r\n         * its composition; this is done by included a `delegates` field\r\n         * in the type's definition, which contains an array of names of\r\n         * capabilities to be delegated.\r\n         *\r\n         * @param $q Angular's $q, for promises\r\n         * @param {DomainObject} domainObject the delegating domain object\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {Capability}\r\n         */\r\n        function DelegationCapability($q, domainObject) {\r\n            var type = domainObject.getCapability(\"type\"),\r\n                self = this;\r\n\r\n            this.$q = $q;\r\n            this.delegateCapabilities = {};\r\n            this.domainObject = domainObject;\r\n\r\n            // Generate set for easy lookup of capability delegation\r\n            if (type && type.getDefinition) {\r\n                (type.getDefinition().delegates || []).forEach(function (key) {\r\n                    self.delegateCapabilities[key] = true;\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Get the domain objects which are intended to be delegated\r\n         * responsibility for some specific capability.\r\n         *\r\n         * @param {string} key the name of the delegated capability\r\n         * @returns {DomainObject[]} the domain objects to which\r\n         *          responsibility for this capability is delegated.\r\n         * @memberof platform/core.DelegationCapability#\r\n         */\r\n        DelegationCapability.prototype.getDelegates = function (key) {\r\n            var domainObject = this.domainObject;\r\n\r\n            function filterObjectsWithCapability(capability) {\r\n                return function (objects) {\r\n                    return objects.filter(function (obj) {\r\n                        return obj.hasCapability(capability);\r\n                    });\r\n                };\r\n            }\r\n\r\n            function promiseChildren() {\r\n                return domainObject.useCapability('composition');\r\n            }\r\n\r\n            return this.doesDelegateCapability(key) ?\r\n                    promiseChildren().then(\r\n                        filterObjectsWithCapability(key)\r\n                    ) :\r\n                    this.$q.when([]);\r\n        };\r\n\r\n        /**\r\n         * Check if the domain object which exposed this capability\r\n         * wishes to delegate another capability.\r\n         *\r\n         * @param {string} key the capability to check for\r\n         * @returns {boolean} true if the capability is delegated\r\n         */\r\n        DelegationCapability.prototype.doesDelegateCapability = function (key) {\r\n            return !!(this.delegateCapabilities[key]);\r\n        };\r\n\r\n        /**\r\n         * Invoke this capability; alias of `getDelegates`, used to\r\n         * simplify usage, e.g.:\r\n         *\r\n         * `domainObject.useCapability(\"delegation\", \"telemetry\")`\r\n         *\r\n         * ...will retrieve all members of a domain object's\r\n         * composition which have a \"telemetry\" capability.\r\n         *\r\n         * @param {string} the name of the delegated capability\r\n         * @returns {DomainObject[]} the domain objects to which\r\n         *          responsibility for this capability is delegated.\r\n         * @memberof platform/core.DelegationCapability#\r\n         */\r\n        DelegationCapability.prototype.invoke =\r\n            DelegationCapability.prototype.getDelegates;\r\n\r\n        return DelegationCapability;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/capabilities/InstantiationCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * Implements the `instantiation` capability. This allows new domain\r\n         * objects to be instantiated.\r\n         *\r\n         * @constructor\r\n         * @memberof platform/core\r\n         * @param $injector Angular's `$injector`\r\n         * @implements {Capability}\r\n         */\r\n        function InstantiationCapability(\r\n            $injector,\r\n            identifierService,\r\n            now,\r\n            domainObject\r\n        ) {\r\n            this.$injector = $injector;\r\n            this.identifierService = identifierService;\r\n            this.domainObject = domainObject;\r\n            this.now = now;\r\n        }\r\n\r\n        /**\r\n         * Instantiate a new domain object with the provided model.\r\n         *\r\n         * This domain object will have been simply instantiated; it will not\r\n         * have been persisted, nor will it have been added to the\r\n         * composition of the object which exposed this capability.\r\n         *\r\n         * @param {object} the model for the new domain object\r\n         * @returns {DomainObject} the new domain object\r\n         */\r\n        InstantiationCapability.prototype.instantiate = function (model) {\r\n            var parsedId =\r\n                    this.identifierService.parse(this.domainObject.getId()),\r\n                space = parsedId.getDefinedSpace(),\r\n                id = this.identifierService.generate(space);\r\n\r\n            model.modified = this.now();\r\n\r\n            // Lazily initialize; instantiate depends on capabilityService,\r\n            // which depends on all capabilities, including this one.\r\n            this.instantiateFn = this.instantiateFn ||\r\n                this.$injector.get(\"instantiate\");\r\n\r\n            return this.instantiateFn(model, id);\r\n        };\r\n\r\n        /**\r\n         * Alias of `instantiate`.\r\n         * @see {platform/core.CreationCapability#instantiate}\r\n         */\r\n        InstantiationCapability.prototype.invoke =\r\n            InstantiationCapability.prototype.instantiate;\r\n\r\n        return InstantiationCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/services/Now',[],\r\n    function () {\r\n\r\n        /**\r\n         * Defines the `now` service, which is a simple wrapper upon\r\n         * `Date.now()` which can be injected to support testability.\r\n         *\r\n         * @returns {Function} a function which returns current system time\r\n         * @memberof platform/core\r\n         */\r\n        function Now() {\r\n            /**\r\n             * Get the current time.\r\n             * @returns {number} current time, in milliseconds since\r\n             *          1970-01-01 00:00:00Z\r\n             * @memberof platform/core.Now#\r\n             */\r\n            return function () {\r\n                return Date.now();\r\n            };\r\n        }\r\n\r\n        return Now;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/services/Throttle',[],\r\n    function () {\r\n\r\n        /**\r\n         * Throttler for function executions, registered as the `throttle`\r\n         * service.\r\n         *\r\n         * Usage:\r\n         *\r\n         *     throttle(fn, delay, [apply])\r\n         *\r\n         * Returns a function that, when invoked, will invoke `fn` after\r\n         * `delay` milliseconds, only if no other invocations are pending.\r\n         * The optional argument `apply` determines whether or not a\r\n         * digest cycle should be triggered.\r\n         *\r\n         * The returned function will itself return a `Promise` which will\r\n         * resolve to the returned value of `fn` whenever that is invoked.\r\n         *\r\n         * In cases where arguments are provided, only the most recent\r\n         * set of arguments will be passed on to the throttled function\r\n         * at the time it is executed.\r\n         *\r\n         * @returns {Function}\r\n         * @memberof platform/core\r\n         */\r\n        function Throttle($timeout) {\r\n            /**\r\n             * Throttle this function.\r\n             * @param {Function} fn the function to throttle\r\n             * @param {number} [delay] the delay, in milliseconds, before\r\n             *        executing this function; defaults to 0.\r\n             * @param {boolean} apply true if a `$apply` call should be\r\n             *        invoked after this function executes; defaults to\r\n             *        `false`.\r\n             * @memberof platform/core.Throttle#\r\n             */\r\n            return function (fn, delay, apply) {\r\n                var promise,\r\n                    args = [];\r\n\r\n                function invoke() {\r\n                    // Clear the active timeout so a new one starts next time.\r\n                    promise = undefined;\r\n                    // Invoke the function with the latest supplied arguments.\r\n                    return fn.apply(null, args);\r\n                }\r\n\r\n                // Defaults\r\n                delay = delay || 0;\r\n                apply = apply || false;\r\n\r\n                return function () {\r\n                    // Store arguments from this invocation\r\n                    args = Array.prototype.slice.apply(arguments, [0]);\r\n                    // Start a timeout if needed\r\n                    promise = promise || $timeout(invoke, delay, apply);\r\n                    // Return whichever timeout is active (to get\r\n                    // a promise for the results of fn)\r\n                    return promise;\r\n                };\r\n            };\r\n        }\r\n\r\n        return Throttle;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/services/Topic',[],\r\n    function () {\r\n\r\n        var ERROR_PREFIX = \"Error when notifying listener: \";\r\n\r\n        /**\r\n         * The `topic` service provides a way to create both named,\r\n         * shared listeners and anonymous, private listeners.\r\n         *\r\n         * Usage:\r\n         *\r\n         * ```\r\n         * var t = topic('foo'); // Use/create a named topic\r\n         * t.listen(function () { ... });\r\n         * t.notify({ some: \"message\" });\r\n         * ```\r\n         *\r\n         * Named topics are shared; multiple calls to `topic`\r\n         * with the same argument will return a single object instance.\r\n         * Anonymous topics (where `topic` has been called with no\r\n         * arguments) are private; each call returns a new instance.\r\n         *\r\n         * @returns {Function}\r\n         * @memberof platform/core\r\n         */\r\n        function Topic($log) {\r\n            var topics = {};\r\n\r\n            function createTopic() {\r\n                var listeners = [];\r\n\r\n                return {\r\n                    listen: function (listener) {\r\n                        listeners.push(listener);\r\n                        return function unlisten() {\r\n                            listeners = listeners.filter(function (l) {\r\n                                return l !== listener;\r\n                            });\r\n                        };\r\n                    },\r\n                    notify: function (message) {\r\n                        listeners.forEach(function (listener) {\r\n                            try {\r\n                                listener(message);\r\n                            } catch (e) {\r\n                                $log.error(ERROR_PREFIX + e.message);\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Use and (if necessary) create a new topic.\r\n             * @param {string} [key] name of the topic to use\r\n             * @memberof platform/core.Topic#\r\n             */\r\n            return function (key) {\r\n                if (arguments.length < 1) {\r\n                    return createTopic();\r\n                } else {\r\n                    topics[key] = topics[key] || createTopic();\r\n                    return topics[key];\r\n                }\r\n            };\r\n        }\r\n\r\n        return Topic;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ContextCapability. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/core/src/capabilities/ContextCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `context` capability of a domain object (retrievable with\r\n         * `domainObject.getCapability(\"context\")`) allows an object's\r\n         * hierarchical parents and ancestors to be retrieved (specifically,\r\n         * those whose `composition` capability was used to access this\r\n         * object.)\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {Capability}\r\n         */\r\n        function ContextCapability(parentObject, domainObject) {\r\n            this.parentObject = parentObject;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Get the immediate parent of a domain object.\r\n         *\r\n         * A domain object may be contained in multiple places; its\r\n         * parent (as exposed by this capability) is the domain\r\n         * object from which this object was accessed, usually\r\n         * by way of a `composition` capability.\r\n         *\r\n         * @returns {DomainObject} the immediate parent of this\r\n         *          domain object.\r\n         */\r\n        ContextCapability.prototype.getParent = function () {\r\n            return this.parentObject;\r\n        };\r\n\r\n        /**\r\n         * Get an array containing the complete direct ancestry\r\n         * of this domain object, including the domain object\r\n         * itself.\r\n         *\r\n         * A domain object may be contained in multiple places; its\r\n         * parent and all ancestors (as exposed by this capability)\r\n         * serve as a record of how this specific domain object\r\n         * instance was reached.\r\n         *\r\n         * The first element in the returned array is the deepest\r\n         * ancestor; subsequent elements are progressively more\r\n         * recent ancestors, with the domain object which exposed\r\n         * the capability occupying the last element of the array.\r\n         *\r\n         * @returns {DomainObject[]} the full composition ancestry\r\n         *          of the domain object which exposed this\r\n         *          capability.\r\n         */\r\n        ContextCapability.prototype.getPath = function () {\r\n            var parentObject = this.parentObject,\r\n                parentContext =\r\n                    parentObject && parentObject.getCapability('context'),\r\n                parentPath = parentContext ?\r\n                        parentContext.getPath() : [this.parentObject];\r\n\r\n            return parentPath.concat([this.domainObject]);\r\n        };\r\n\r\n        /**\r\n         * Get the deepest ancestor available for this domain object;\r\n         * equivalent to `getPath()[0]`.\r\n         *\r\n         * See notes on `getPath()` for how ancestry is defined in\r\n         * the context of this capability.\r\n         *\r\n         * @returns {DomainObject} the deepest ancestor of the domain\r\n         *          object which exposed this capability.\r\n         */\r\n        ContextCapability.prototype.getRoot = function () {\r\n            var parentContext = this.parentObject &&\r\n                this.parentObject.getCapability('context');\r\n\r\n            return parentContext ?\r\n                    parentContext.getRoot() :\r\n                    (this.parentObject || this.domainObject);\r\n        };\r\n\r\n        return ContextCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ContextualDomainObject. Created by vwoeltje on 11/18/14.\r\n */\r\ndefine(\r\n    'platform/core/src/capabilities/ContextualDomainObject',[\"./ContextCapability\"],\r\n    function (ContextCapability) {\r\n\r\n        /**\r\n         * Wraps a domain object, such that it exposes a `context` capability.\r\n         * A domain object may be contained by multiple other domain objects;\r\n         * the `context` capability allows two instances of the same domain\r\n         * object to be distinguished from one another based on which\r\n         * specific instance of a containing object exposed them (by way of a\r\n         * `composition` capability.)\r\n         *\r\n         * @param {DomainObject} domainObject the domain object for which\r\n         *        context should be exposed\r\n         * @param {DomainObject} parentObject the domain object from which\r\n         *        the wrapped object was retrieved\r\n         *\r\n         * @memberof platform/core\r\n         * @constructor\r\n         * @implements {DomainObject}\r\n         */\r\n        function ContextualDomainObject(domainObject, parentObject) {\r\n            // Prototypally inherit from the domain object, and\r\n            // instantiate its context capability ahead of time.\r\n            var contextualObject = Object.create(domainObject),\r\n                contextCapability =\r\n                    new ContextCapability(parentObject, domainObject);\r\n\r\n            // Intercept requests for a context capability.\r\n            contextualObject.getCapability = function (name) {\r\n                return name === \"context\" ?\r\n                        contextCapability :\r\n                        domainObject.getCapability.apply(this, arguments);\r\n            };\r\n\r\n            return contextualObject;\r\n        }\r\n\r\n        return ContextualDomainObject;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/services/Contextualize',['../capabilities/ContextualDomainObject'],\r\n    function (ContextualDomainObject) {\r\n\r\n        /**\r\n         * Wrap a domain object such that it has a `context` capability\r\n         * referring to a specific parent.\r\n         *\r\n         * Usage:\r\n         *\r\n         *     contextualize(domainObject, parentObject)\r\n         *\r\n         * Attempting to contextualize an object with a parent that does\r\n         * not include that object in its composition may have\r\n         * unpredictable results; a warning will be logged if this occurs.\r\n         *\r\n         * @returns {Function}\r\n         * @memberof platform/core\r\n         */\r\n        function Contextualize($log) {\r\n            function validate(id, parentObject) {\r\n                var model = parentObject && parentObject.getModel(),\r\n                    composition = (model || {}).composition || [];\r\n                if (composition.indexOf(id) === -1) {\r\n                    $log.warn([\r\n                        \"Attempted to contextualize\",\r\n                        id,\r\n                        \"in\",\r\n                        parentObject && parentObject.getId(),\r\n                        \"but that object does not contain\",\r\n                        id,\r\n                        \"in its composition.\",\r\n                        \"Unexpected behavior may follow.\"\r\n                    ].join(\" \"));\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Contextualize this domain object.\r\n             * @param {DomainObject} domainObject the domain object\r\n             *        to wrap with a context\r\n             * @param {DomainObject} parentObject the domain object\r\n             *        which should appear as the contextual parent\r\n             */\r\n            return function (domainObject, parentObject) {\r\n                // Don't validate while editing; consistency is not\r\n                // necessarily expected due to unsaved changes.\r\n                var editor = domainObject.getCapability('editor');\r\n                if (!editor || !editor.inEditContext()) {\r\n                    validate(domainObject.getId(), parentObject);\r\n                }\r\n\r\n                return new ContextualDomainObject(domainObject, parentObject);\r\n            };\r\n        }\r\n\r\n        return Contextualize;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining DomainObject. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/core/src/objects/DomainObjectImpl',[],\r\n    function () {\r\n\r\n        /**\r\n         * A domain object is an entity of interest to the user.\r\n         *\r\n         * @interface DomainObject\r\n         */\r\n\r\n        /**\r\n         * Get the unique identifier for this domain object.\r\n         *\r\n         * @method DomainObject#getId\r\n         * @return {string} the domain object's unique identifier\r\n         */\r\n\r\n        /**\r\n         * Get the domain object's model. This is useful to\r\n         * directly look up known properties of an object, but\r\n         * direct modification of a returned model is generally\r\n         * discouraged and may result in errors. Instead, an\r\n         * object's `mutation` capability should be used.\r\n         *\r\n         * @method DomainObject#getModel\r\n         * @return {object} the domain object's persistent state\r\n         */\r\n\r\n        /**\r\n         * Get a capability associated with this object.\r\n         * Capabilities are looked up by string identifiers;\r\n         * prior knowledge of a capability's interface is\r\n         * necessary.\r\n         *\r\n         * @method DomainObject#getCapability\r\n         * @param {string} key the identifier for the capability\r\n         * @return {Capability} the named capability, or undefined\r\n         *         if not present.\r\n         */\r\n\r\n        /**\r\n         * Check if this domain object supports a capability\r\n         * with the provided name.\r\n         *\r\n         * @method DomainObject#hasCapability\r\n         * @param {string} key the identifier for the capability\r\n         * @return {boolean} true if this domain object has this capability\r\n         */\r\n\r\n        /**\r\n         * Use a capability of an object; the behavior of this method\r\n         * depends on the interface of the capability, and whether\r\n         * or not it is present.\r\n         *\r\n         * * If the capability is not present for this object,\r\n         *   no operation occurs.\r\n         * * If the capability is present and has an `invoke` method,\r\n         *   that method is called with any additional arguments\r\n         *   provided, and its return value is returned.\r\n         * * If the capability is present but has no `invoke` method,\r\n         *   this capability itself is returned.\r\n         *\r\n         * @method DomainObject#useCapability\r\n         * @param {string} name the name of the capability to invoke\r\n         * @param {...*} [arguments] to pass to the invocation\r\n         * @returns {*|Capability} the result of invocation (see description)\r\n         */\r\n\r\n        /**\r\n         * Construct a new domain object with the specified\r\n         * identifier, model, and capabilities.\r\n         *\r\n         * @param {string} id the object's unique identifier\r\n         * @param {object} model the \"JSONifiable\" state of the object\r\n         * @param {Object.<string, Capability>|function} capabilities all\r\n         *        capabilities to be exposed by this object\r\n         * @memberof platform/core\r\n         * @constructor\r\n         */\r\n        function DomainObjectImpl(id, model, capabilities) {\r\n            this.id = id;\r\n            this.model = model;\r\n            this.capabilities = capabilities;\r\n        }\r\n\r\n        DomainObjectImpl.prototype.getId = function () {\r\n            return this.id;\r\n        };\r\n\r\n        DomainObjectImpl.prototype.getModel = function () {\r\n            return this.model;\r\n        };\r\n\r\n        DomainObjectImpl.prototype.getCapability = function (name) {\r\n            var capability = this.capabilities[name];\r\n            return typeof capability === 'function' ?\r\n                capability(this) : capability;\r\n        };\r\n\r\n        DomainObjectImpl.prototype.hasCapability = function (name) {\r\n            return this.getCapability(name) !== undefined;\r\n        };\r\n\r\n        DomainObjectImpl.prototype.useCapability = function (name) {\r\n            // Get tail of args to pass to invoke\r\n            var args = Array.prototype.slice.apply(arguments, [1]),\r\n                capability = this.getCapability(name);\r\n\r\n            return (capability && capability.invoke) ?\r\n                capability.invoke.apply(capability, args) :\r\n                capability;\r\n        };\r\n\r\n        return DomainObjectImpl;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/core/src/services/Instantiate',['../objects/DomainObjectImpl'],\r\n    function (DomainObjectImpl) {\r\n\r\n        /**\r\n         * The `instantiate` service allows new domain object instances to be\r\n         * created. These objects are not persisted to any back-end or\r\n         * placed anywhere in the object hierarchy by default.\r\n         *\r\n         * Usage: `instantiate(model, [id])`\r\n         *\r\n         * ...returns a new instance of a domain object with the specified\r\n         * model. An identifier may be provided; if omitted, one will be\r\n         * generated instead.\r\n         *\r\n         * @constructor\r\n         * @memberof platform/core\r\n         * @param {CapabilityService} capabilityService the service which will\r\n         *        provide instantiated domain objects with their capabilities\r\n         * @param {IdentifierService} identifierService service to generate\r\n         *        new identifiers\r\n         */\r\n        function Instantiate(\r\n            capabilityService,\r\n            identifierService,\r\n            cacheService\r\n        ) {\r\n            return function (model, id) {\r\n                var capabilities = capabilityService.getCapabilities(model);\r\n                id = id || identifierService.generate();\r\n                cacheService.put(id, model);\r\n                return new DomainObjectImpl(id, model, capabilities);\r\n            };\r\n        }\r\n\r\n        return Instantiate;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/core/bundle',[\r\n    \"./src/objects/DomainObjectProvider\",\r\n    \"./src/capabilities/CoreCapabilityProvider\",\r\n    \"./src/models/StaticModelProvider\",\r\n    \"./src/models/RootModelProvider\",\r\n    \"./src/models/ModelAggregator\",\r\n    \"./src/models/ModelCacheService\",\r\n    \"./src/models/PersistedModelProvider\",\r\n    \"./src/models/CachingModelDecorator\",\r\n    \"./src/models/MissingModelDecorator\",\r\n    \"./src/types/TypeProvider\",\r\n    \"./src/actions/ActionProvider\",\r\n    \"./src/actions/ActionAggregator\",\r\n    \"./src/actions/LoggingActionDecorator\",\r\n    \"./src/views/ViewProvider\",\r\n    \"./src/identifiers/IdentifierProvider\",\r\n    \"./src/capabilities/CompositionCapability\",\r\n    \"./src/capabilities/RelationshipCapability\",\r\n    \"./src/types/TypeCapability\",\r\n    \"./src/actions/ActionCapability\",\r\n    \"./src/views/ViewCapability\",\r\n    \"./src/capabilities/PersistenceCapability\",\r\n    \"./src/capabilities/MetadataCapability\",\r\n    \"./src/capabilities/MutationCapability\",\r\n    \"./src/capabilities/DelegationCapability\",\r\n    \"./src/capabilities/InstantiationCapability\",\r\n    \"./src/services/Now\",\r\n    \"./src/services/Throttle\",\r\n    \"./src/services/Topic\",\r\n    \"./src/services/Contextualize\",\r\n    \"./src/services/Instantiate\",\r\n    'legacyRegistry'\r\n], function (\r\n    DomainObjectProvider,\r\n    CoreCapabilityProvider,\r\n    StaticModelProvider,\r\n    RootModelProvider,\r\n    ModelAggregator,\r\n    ModelCacheService,\r\n    PersistedModelProvider,\r\n    CachingModelDecorator,\r\n    MissingModelDecorator,\r\n    TypeProvider,\r\n    ActionProvider,\r\n    ActionAggregator,\r\n    LoggingActionDecorator,\r\n    ViewProvider,\r\n    IdentifierProvider,\r\n    CompositionCapability,\r\n    RelationshipCapability,\r\n    TypeCapability,\r\n    ActionCapability,\r\n    ViewCapability,\r\n    PersistenceCapability,\r\n    MetadataCapability,\r\n    MutationCapability,\r\n    DelegationCapability,\r\n    InstantiationCapability,\r\n    Now,\r\n    Throttle,\r\n    Topic,\r\n    Contextualize,\r\n    Instantiate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/core\", {\r\n        \"name\": \"Open MCT Core\",\r\n        \"description\": \"Defines core concepts of Open MCT.\",\r\n        \"sources\": \"src\",\r\n        \"configuration\": {\r\n            \"paths\": {\r\n                \"uuid\": \"uuid\"\r\n            }\r\n        },\r\n        \"extensions\": {\r\n            \"versions\": [\r\n                {\r\n                    \"name\": \"Version\",\r\n                    \"value\": \"0.11.2-SNAPSHOT\",\r\n                    \"priority\": 999\r\n                },\r\n                {\r\n                    \"name\": \"Built\",\r\n                    \"value\": \"2016-08-23T04:59:15Z\",\r\n                    \"description\": \"The date on which this version of the client was built.\",\r\n                    \"priority\": 990\r\n                },\r\n                {\r\n                    \"name\": \"Revision\",\r\n                    \"value\": \"44f8c2f49ff47d8f7a7578e942ccee648fa109ee\",\r\n                    \"description\": \"A unique revision identifier for the client sources.\",\r\n                    \"priority\": 995\r\n                },\r\n                {\r\n                    \"name\": \"Branch\",\r\n                    \"value\": \"master\",\r\n                    \"description\": \"The name of the branch that was used during the build.\",\r\n                    \"priority\": 994\r\n                }\r\n            ],\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"objectService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": DomainObjectProvider,\r\n                    \"depends\": [\r\n                        \"modelService\",\r\n                        \"instantiate\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"capabilityService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": CoreCapabilityProvider,\r\n                    \"depends\": [\r\n                        \"capabilities[]\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"modelService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": StaticModelProvider,\r\n                    \"depends\": [\r\n                        \"models[]\",\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"modelService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": RootModelProvider,\r\n                    \"depends\": [\r\n                        \"roots[]\",\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"modelService\",\r\n                    \"type\": \"aggregator\",\r\n                    \"implementation\": ModelAggregator,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"modelService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": PersistedModelProvider,\r\n                    \"depends\": [\r\n                        \"persistenceService\",\r\n                        \"$q\",\r\n                        \"now\",\r\n                        \"PERSISTENCE_SPACE\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"modelService\",\r\n                    \"type\": \"decorator\",\r\n                    \"implementation\": CachingModelDecorator,\r\n                    \"depends\": [\r\n                        \"cacheService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"modelService\",\r\n                    \"type\": \"decorator\",\r\n                    \"priority\": \"fallback\",\r\n                    \"implementation\": MissingModelDecorator\r\n                },\r\n                {\r\n                    \"provides\": \"typeService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": TypeProvider,\r\n                    \"depends\": [\r\n                        \"types[]\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"actionService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": ActionProvider,\r\n                    \"depends\": [\r\n                        \"actions[]\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"actionService\",\r\n                    \"type\": \"aggregator\",\r\n                    \"implementation\": ActionAggregator\r\n                },\r\n                {\r\n                    \"provides\": \"actionService\",\r\n                    \"type\": \"decorator\",\r\n                    \"implementation\": LoggingActionDecorator,\r\n                    \"depends\": [\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"viewService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": ViewProvider,\r\n                    \"depends\": [\r\n                        \"views[]\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"identifierService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": IdentifierProvider,\r\n                    \"depends\": [\r\n                        \"PERSISTENCE_SPACE\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"types\": [\r\n                {\r\n                    \"properties\": [\r\n                        {\r\n                            \"control\": \"textfield\",\r\n                            \"name\": \"Title\",\r\n                            \"key\": \"name\",\r\n                            \"property\": \"name\",\r\n                            \"pattern\": \"\\\\S+\",\r\n                            \"required\": true,\r\n                            \"cssclass\": \"l-input-lg\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"root\",\r\n                    \"name\": \"Root\",\r\n                    \"cssclass\": \"icon-folder\"\r\n                },\r\n                {\r\n                    \"key\": \"folder\",\r\n                    \"name\": \"Folder\",\r\n                    \"cssclass\": \"icon-folder\",\r\n                    \"features\": \"creation\",\r\n                    \"description\": \"Create folders to organize other objects or links to objects.\",\r\n                    \"priority\": 1000,\r\n                    \"model\": {\r\n                        \"composition\": []\r\n                    }\r\n                },\r\n                {\r\n                    \"key\": \"unknown\",\r\n                    \"name\": \"Unknown Type\",\r\n                    \"cssclass\": \"icon-object-unknown\"\r\n                },\r\n                {\r\n                    \"name\": \"Unknown Type\",\r\n                    \"cssclass\": \"icon-object-unknown\"\r\n                }\r\n            ],\r\n            \"capabilities\": [\r\n                {\r\n                    \"key\": \"composition\",\r\n                    \"implementation\": CompositionCapability,\r\n                    \"depends\": [\r\n                        \"$injector\",\r\n                        \"contextualize\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"relationship\",\r\n                    \"implementation\": RelationshipCapability,\r\n                    \"depends\": [\r\n                        \"$injector\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"type\",\r\n                    \"implementation\": TypeCapability,\r\n                    \"depends\": [\r\n                        \"typeService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"action\",\r\n                    \"implementation\": ActionCapability,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"actionService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"view\",\r\n                    \"implementation\": ViewCapability,\r\n                    \"depends\": [\r\n                        \"viewService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"persistence\",\r\n                    \"implementation\": PersistenceCapability,\r\n                    \"depends\": [\r\n                        \"cacheService\",\r\n                        \"persistenceService\",\r\n                        \"identifierService\",\r\n                        \"notificationService\",\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"metadata\",\r\n                    \"implementation\": MetadataCapability\r\n                },\r\n                {\r\n                    \"key\": \"mutation\",\r\n                    \"implementation\": MutationCapability,\r\n                    \"depends\": [\r\n                        \"topic\",\r\n                        \"now\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"delegation\",\r\n                    \"implementation\": DelegationCapability,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"instantiation\",\r\n                    \"implementation\": InstantiationCapability,\r\n                    \"depends\": [\r\n                        \"$injector\",\r\n                        \"identifierService\",\r\n                        \"now\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"cacheService\",\r\n                    \"implementation\": ModelCacheService\r\n                },\r\n                {\r\n                    \"key\": \"now\",\r\n                    \"implementation\": Now\r\n                },\r\n                {\r\n                    \"key\": \"throttle\",\r\n                    \"implementation\": Throttle,\r\n                    \"depends\": [\r\n                        \"$timeout\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"topic\",\r\n                    \"implementation\": Topic,\r\n                    \"depends\": [\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"contextualize\",\r\n                    \"implementation\": Contextualize,\r\n                    \"depends\": [\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"instantiate\",\r\n                    \"implementation\": Instantiate,\r\n                    \"depends\": [\r\n                        \"capabilityService\",\r\n                        \"identifierService\",\r\n                        \"cacheService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"roots\": [\r\n                {\r\n                    \"id\": \"mine\",\r\n                    \"model\": {\r\n                        \"name\": \"My Items\",\r\n                        \"type\": \"folder\",\r\n                        \"composition\": []\r\n                    }\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"PERSISTENCE_SPACE\",\r\n                    \"value\": \"mct\"\r\n                }\r\n            ],\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"Math.uuid.js\",\r\n                    \"version\": \"1.4.7\",\r\n                    \"description\": \"Unique identifer generation (code adapted.)\",\r\n                    \"author\": \"Robert Kieffer\",\r\n                    \"website\": \"https://github.com/broofa/node-uuid\",\r\n                    \"copyright\": \"Copyright (c) 2010-2012 Robert Kieffer\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"http://opensource.org/licenses/MIT\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining MCTInclude. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/representation/src/MCTInclude',[],\r\n    function () {\r\n\r\n        /**\r\n         * Defines the mct-include directive. This acts like the\r\n         * ng-include directive, except it accepts a symbolic\r\n         * key which can be exposed by bundles, instead of requiring\r\n         * an explicit path.\r\n         *\r\n         * This directive uses two-way binding for three attributes:\r\n         *\r\n         * * `key`, matched against the key of a defined template extension\r\n         *   in order to determine which actual template to include.\r\n         * * `ng-model`, populated as `ngModel` in the loaded template's\r\n         *   scope; used for normal ng-model purposes (e.g. if the\r\n         *   included template is meant to two-way bind to a data model.)\r\n         * * `parameters`, used to communicate display parameters to\r\n         *   the included template (e.g. title.) The difference between\r\n         *   `parameters` and `ngModel` is intent: Both are two-way\r\n         *   bound, but `ngModel` is useful for data models (more like\r\n         *   an output) and `parameters` is meant to be useful for\r\n         *   display parameterization (more like an input.)\r\n         *\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @param {TemplateDefinition[]} templates an array of\r\n         *        template extensions\r\n         */\r\n        function MCTInclude(templates, templateLinker) {\r\n            var templateMap = {};\r\n\r\n            function link(scope, element) {\r\n                var changeTemplate = templateLinker.link(\r\n                    scope,\r\n                    element,\r\n                    scope.key && templateMap[scope.key]\r\n                );\r\n\r\n                scope.$watch('key', function (key) {\r\n                    changeTemplate(key && templateMap[key]);\r\n                });\r\n            }\r\n\r\n            // Prepopulate templateMap for easy look up by key\r\n            templates.forEach(function (template) {\r\n                var key = template.key;\r\n                // First found should win (priority ordering)\r\n                templateMap[key] =\r\n                    templateMap[key] || template;\r\n            });\r\n\r\n            return {\r\n                // Only show at the element level\r\n                restrict: \"E\",\r\n\r\n                // Use the included controller to populate scope\r\n                link: link,\r\n\r\n                // May hide the element, so let other directives act first\r\n                priority: -1000,\r\n\r\n                // Two-way bind key, ngModel, and parameters\r\n                scope: { key: \"=\", ngModel: \"=\", parameters: \"=\" }\r\n            };\r\n        }\r\n\r\n        return MCTInclude;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements the directives for representing domain objects\r\n * as Angular-managed HTML.\r\n * @namespace platform/representation\r\n */\r\ndefine(\r\n    'platform/representation/src/MCTRepresentation',[],\r\n    function () {\r\n\r\n        /**\r\n         * Defines the mct-representation directive. This may be used to\r\n         * present domain objects as HTML (with event wiring), with the\r\n         * specific representation being mapped to a defined extension\r\n         * (as defined in either the `representation` category-of-extension,\r\n         * or the `views` category-of-extension.)\r\n         *\r\n         * This directive uses two-way binding for three attributes:\r\n         *\r\n         * * `key`, matched against the key of a defined template extension\r\n         *   in order to determine which actual template to include.\r\n         * * `mct-object`, populated as `domainObject` in the loaded\r\n         *   template's scope. This is the domain object being\r\n         *   represented as HTML by this directive.\r\n         * * `parameters`, used to communicate display parameters to\r\n         *   the included template (e.g. title.)\r\n         *\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @param {RepresentationDefinition[]} representations an array of\r\n         *        representation extensions\r\n         * @param {ViewDefinition[]} views an array of view extensions\r\n         */\r\n        function MCTRepresentation(representations, views, representers, $q, templateLinker, $log) {\r\n            var representationMap = {};\r\n\r\n            // Assemble all representations and views\r\n            // The distinction between views and representations is\r\n            // not important here (view is-a representation)\r\n            representations.concat(views).forEach(function (representation) {\r\n                var key = representation.key;\r\n\r\n                // Store the representation\r\n                representationMap[key] = representationMap[key] || [];\r\n                representationMap[representation.key].push(representation);\r\n            });\r\n\r\n            // Look up a matching representation for this domain object\r\n            function lookup(key, domainObject) {\r\n                var candidates = representationMap[key] || [],\r\n                    type,\r\n                    i;\r\n                // Filter candidates by object type\r\n                for (i = 0; i < candidates.length; i += 1) {\r\n                    type = candidates[i].type;\r\n                    if (!type || !domainObject ||\r\n                            domainObject.getCapability('type').instanceOf(type)) {\r\n                        return candidates[i];\r\n                    }\r\n                }\r\n            }\r\n\r\n            function link($scope, element, attrs) {\r\n                var activeRepresenters = representers.map(function (Representer) {\r\n                        return new Representer($scope, element, attrs);\r\n                    }),\r\n                    toClear = [], // Properties to clear out of scope on change\r\n                    counter = 0,\r\n                    couldRepresent = false,\r\n                    lastIdPath = [],\r\n                    lastKey,\r\n                    statusListener,\r\n                    changeTemplate = templateLinker.link($scope, element);\r\n\r\n                // Populate scope with any capabilities indicated by the\r\n                // representation's extension definition\r\n                function refreshCapabilities() {\r\n                    var domainObject = $scope.domainObject,\r\n                        representation = lookup($scope.key, domainObject),\r\n                        uses = ((representation || {}).uses || []),\r\n                        myCounter = counter;\r\n\r\n                    if (domainObject) {\r\n                        // Update model\r\n                        $scope.model = domainObject.getModel();\r\n\r\n                        // Provide any of the capabilities requested\r\n                        uses.forEach(function (used) {\r\n                            $log.debug([\r\n                                \"Requesting capability \",\r\n                                used,\r\n                                \" for representation \",\r\n                                $scope.key\r\n                            ].join(\"\"));\r\n\r\n                            $q.when(\r\n                                domainObject.useCapability(used)\r\n                            ).then(function (c) {\r\n                                // Avoid clobbering capabilities from\r\n                                // subsequent representations;\r\n                                // Angular reuses scopes.\r\n                                if (counter === myCounter) {\r\n                                    $scope[used] = c;\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Destroy (deallocate any resources associated with) any\r\n                // active representers.\r\n                function destroyRepresenters() {\r\n                    activeRepresenters.forEach(function (activeRepresenter) {\r\n                        activeRepresenter.destroy();\r\n                    });\r\n                }\r\n\r\n                function unchanged(canRepresent, idPath, key) {\r\n                    return (canRepresent === couldRepresent) &&\r\n                        (key === lastKey) &&\r\n                        (idPath.length === lastIdPath.length) &&\r\n                        idPath.every(function (id, i) {\r\n                            return id === lastIdPath[i];\r\n                        });\r\n                }\r\n\r\n                function getIdPath(domainObject) {\r\n                    if (!domainObject) {\r\n                        return [];\r\n                    }\r\n                    if (!domainObject.hasCapability('context')) {\r\n                        return [domainObject.getId()];\r\n                    }\r\n                    return domainObject.getCapability('context')\r\n                        .getPath().map(function (pathObject) {\r\n                            return pathObject.getId();\r\n                        });\r\n                }\r\n\r\n                // General-purpose refresh mechanism; should set up the scope\r\n                // as appropriate for current representation key and\r\n                // domain object.\r\n                function refresh() {\r\n                    var domainObject = $scope.domainObject,\r\n                        representation = lookup($scope.key, domainObject),\r\n                        uses = ((representation || {}).uses || []),\r\n                        canRepresent = !!(representation && domainObject),\r\n                        idPath = getIdPath(domainObject),\r\n                        key = $scope.key;\r\n\r\n                    if (unchanged(canRepresent, idPath, key)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Create an empty object named \"representation\", for this\r\n                    // representation to store local variables into.\r\n                    $scope.representation = {};\r\n\r\n                    // Change templates (passing in undefined to clear\r\n                    // if we don't have enough info to show a template.)\r\n                    changeTemplate(canRepresent ? representation : undefined);\r\n\r\n                    // Any existing representers are no longer valid; release them.\r\n                    destroyRepresenters();\r\n\r\n                    // Log if a key was given, but no matching representation\r\n                    // was found.\r\n                    if (!representation && $scope.key) {\r\n                        $log.warn(\"No representation found for \" + $scope.key);\r\n                    }\r\n\r\n                    // Clear out the scope from the last representation\r\n                    toClear.forEach(function (property) {\r\n                        delete $scope[property];\r\n                    });\r\n\r\n                    // To allow simplified change detection next time around\r\n                    couldRepresent = canRepresent;\r\n                    lastIdPath = idPath;\r\n                    lastKey = key;\r\n\r\n                    // Populate scope with fields associated with the current\r\n                    // domain object (if one has been passed in)\r\n                    if (canRepresent) {\r\n                        // Track how many representations we've made in this scope,\r\n                        // to ensure that the correct representations are matched to\r\n                        // the correct object/key pairs.\r\n                        counter += 1;\r\n\r\n                        // Initialize any capabilities\r\n                        refreshCapabilities();\r\n\r\n                        // Also provide the view configuration,\r\n                        // for the specific view\r\n                        $scope.configuration =\r\n                            ($scope.model.configuration || {})[$scope.key] || {};\r\n\r\n                        // Finally, wire up any additional behavior (such as\r\n                        // gestures) associated with this representation.\r\n                        activeRepresenters.forEach(function (representer) {\r\n                            representer.represent(representation, domainObject);\r\n                        });\r\n\r\n                        // Track which properties we want to clear from scope\r\n                        // next change object/key pair changes\r\n                        toClear = uses.concat(['model']);\r\n                    }\r\n                }\r\n\r\n                // Update the representation when the key changes (e.g. if a\r\n                // different representation has been selected)\r\n                $scope.$watch(\"key\", refresh);\r\n\r\n                // Also update when the represented domain object changes\r\n                // (to a different object)\r\n                $scope.$watch(\"domainObject\", refresh);\r\n\r\n                // Finally, also update when there is a new version of that\r\n                // same domain object; these changes should be tracked in the\r\n                // model's \"modified\" field, by the mutation capability.\r\n                $scope.$watch(\"domainObject.getModel().modified\", refreshCapabilities);\r\n\r\n                // Make sure any resources allocated by representers also get\r\n                // released.\r\n                $scope.$on(\"$destroy\", destroyRepresenters);\r\n                $scope.$on(\"$destroy\", function () {\r\n                    if (statusListener) {\r\n                        statusListener();\r\n                    }\r\n                });\r\n\r\n                // Do one initial refresh, so that we don't need another\r\n                // digest iteration just to populate the scope. Failure to\r\n                // do this can result in unstable digest cycles, which\r\n                // Angular will detect, and throw an Error about.\r\n                refresh();\r\n            }\r\n\r\n            return {\r\n                // Only applicable at the element level\r\n                restrict: \"E\",\r\n\r\n                // Handle Angular's linking step\r\n                link: link,\r\n\r\n                // May hide the element, so let other directives act first\r\n                priority: -1000,\r\n\r\n                // Two-way bind key and parameters, get the represented domain\r\n                // object as \"mct-object\"\r\n                scope: {\r\n                    key: \"=\",\r\n                    domainObject: \"=mctObject\",\r\n                    ngModel: \"=\",\r\n                    parameters: \"=\"\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * A representer participates in the process of instantiating a\r\n         * representation of a domain object.\r\n         *\r\n         * @interface Representer\r\n         * @augments {Destroyable}\r\n         */\r\n        /**\r\n         * Set the current representation in use, and the domain\r\n         * object being represented.\r\n         *\r\n         * @method Representer#represent\r\n         * @param {RepresentationDefinition} representation the\r\n         *        definition of the representation in use\r\n         * @param {DomainObject} domainObject the domain object\r\n         *        being represented\r\n         */\r\n\r\n\r\n        return MCTRepresentation;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Constants used by domain object gestures.\r\n * @class platform/representation.GestureConstants\r\n */\r\ndefine('platform/representation/src/gestures/GestureConstants',{\r\n    /**\r\n     * The string identifier for the data type used for drag-and-drop\r\n     * composition of domain objects. (e.g. in event.dataTransfer.setData\r\n     * calls.)\r\n     * @memberof platform/representation.GestureConstants\r\n     */\r\n    MCT_DRAG_TYPE: 'mct-domain-object-id',\r\n    /**\r\n     * The string identifier for the data type used for drag-and-drop\r\n     * composition of domain objects, by object instance (passed through\r\n     * the dndService)\r\n     * @memberof platform/representation.GestureConstants\r\n     */\r\n    MCT_EXTENDED_DRAG_TYPE: 'mct-domain-object',\r\n    /**\r\n     * An estimate for the dimensions of a context menu, used for\r\n     * positioning.\r\n     * @memberof platform/representation.GestureConstants\r\n     */\r\n    MCT_MENU_DIMENSIONS: [170, 200],\r\n    /**\r\n     * Identifier for drop events.\r\n     * @memberof platform/representation.GestureConstants\r\n     */\r\n    MCT_DROP_EVENT: 'mctDrop'\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining DragGesture. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/representation/src/gestures/DragGesture',['./GestureConstants'],\r\n    function (GestureConstants) {\r\n\r\n        /**\r\n         * Add event handlers to a representation such that it may be\r\n         * dragged as the source for drag-drop composition.\r\n         *\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @implements {Gesture}\r\n         * @param $log Angular's logging service\r\n         * @param element the jqLite-wrapped element which should become\r\n         *        draggable\r\n         * @param {DomainObject} domainObject the domain object which\r\n         *        is represented; this will be passed on drop.\r\n         */\r\n        function DragGesture($log, dndService, element, domainObject) {\r\n            function startDrag(e) {\r\n                var event = (e || {}).originalEvent || e;\r\n\r\n                $log.debug(\"Initiating drag\");\r\n\r\n                try {\r\n                    // Set the data associated with the drag-drop operation\r\n                    event.dataTransfer.effectAllowed = 'move';\r\n\r\n                    // Support drop as plain-text (JSON); not used internally\r\n                    event.dataTransfer.setData(\r\n                        'text/plain',\r\n                        JSON.stringify({\r\n                            id: domainObject.getId(),\r\n                            model: domainObject.getModel()\r\n                        })\r\n                    );\r\n\r\n                    // For internal use, pass the object's identifier as\r\n                    // part of the drag\r\n                    event.dataTransfer.setData(\r\n                        GestureConstants.MCT_DRAG_TYPE,\r\n                        domainObject.getId()\r\n                    );\r\n\r\n                    // Finally, also pass the id object instance via the\r\n                    // dndService, allowing inspection during drag as well\r\n                    // as retrieval of the original domain object.\r\n                    dndService.setData(\r\n                        GestureConstants.MCT_EXTENDED_DRAG_TYPE,\r\n                        domainObject\r\n                    );\r\n                    dndService.setData(\r\n                        GestureConstants.MCT_DRAG_TYPE,\r\n                        domainObject.getId()\r\n                    );\r\n\r\n\r\n                } catch (err) {\r\n                    // Exceptions at this point indicate that the browser\r\n                    // do not fully support drag-and-drop (e.g. if\r\n                    // dataTransfer is undefined)\r\n                    $log.warn([\r\n                        \"Could not initiate drag due to \",\r\n                        err.message\r\n                    ].join(\"\"));\r\n                }\r\n\r\n            }\r\n\r\n            function endDrag() {\r\n                // Clear the drag data after the drag is complete\r\n                dndService.removeData(GestureConstants.MCT_DRAG_TYPE);\r\n                dndService.removeData(GestureConstants.MCT_EXTENDED_DRAG_TYPE);\r\n            }\r\n\r\n            // Mark the element as draggable, and handle the dragstart event\r\n            $log.debug(\"Attaching drag gesture\");\r\n            element.attr('draggable', 'true');\r\n            element.on('dragstart', startDrag);\r\n            element.on('dragend', endDrag);\r\n\r\n            this.element = element;\r\n            this.startDragCallback = startDrag;\r\n            this.endDragCallback = endDrag;\r\n        }\r\n\r\n\r\n        DragGesture.prototype.destroy = function () {\r\n            // Detach listener\r\n            this.element.removeAttr('draggable');\r\n            this.element.off('dragstart', this.startDragCallback);\r\n            this.element.off('dragend', this.endDragCallback);\r\n        };\r\n\r\n        return DragGesture;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining DropGesture. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/representation/src/gestures/DropGesture',['./GestureConstants'],\r\n    function (GestureConstants) {\r\n\r\n        /**\r\n         * A DropGesture adds and maintains event handlers upon an element\r\n         * such that it may act as a drop target for drag-drop composition.\r\n         *\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @param $q Angular's $q, for promise handling\r\n         * @param element the jqLite-wrapped representation element\r\n         * @param {DomainObject} domainObject the domain object whose\r\n         *        composition should be modified as a result of the drop.\r\n         */\r\n        function DropGesture(dndService, $q, element, domainObject) {\r\n            var actionCapability = domainObject.getCapability('action'),\r\n                action; // Action for the drop, when it occurs\r\n\r\n            function broadcastDrop(id, event) {\r\n                // Find the relevant scope...\r\n                var rect,\r\n                    scope = element.scope && element.scope();\r\n\r\n                if (scope && scope.$broadcast) {\r\n                    // Get the representation's bounds, to convert\r\n                    // drop position\r\n                    rect = element[0].getBoundingClientRect();\r\n\r\n                    // ...and broadcast the event. This allows specific\r\n                    // views to have post-drop behavior which depends on\r\n                    // drop position.\r\n                    scope.$broadcast(\r\n                        GestureConstants.MCT_DROP_EVENT,\r\n                        id,\r\n                        {\r\n                            x: event.pageX - rect.left,\r\n                            y: event.pageY - rect.top\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            function dragOver(e) {\r\n                var event = (e || {}).originalEvent || e,\r\n                    selectedObject = dndService.getData(\r\n                        GestureConstants.MCT_EXTENDED_DRAG_TYPE\r\n                    );\r\n\r\n                if (selectedObject) {\r\n                    // TODO: Vary this based on modifier keys\r\n                    action = actionCapability.getActions({\r\n                        key: 'compose',\r\n                        selectedObject: selectedObject\r\n                    })[0];\r\n                    if (action) {\r\n                        event.dataTransfer.dropEffect = 'move';\r\n\r\n                        // Indicate that we will accept the drag\r\n                        event.preventDefault(); // Required in Chrome?\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function drop(e) {\r\n                var event = (e || {}).originalEvent || e,\r\n                    id = event.dataTransfer.getData(GestureConstants.MCT_DRAG_TYPE);\r\n\r\n                // Handle the drop; add the dropped identifier to the\r\n                // destination domain object's composition, and persist\r\n                // the change.\r\n                if (id) {\r\n                    e.preventDefault();\r\n                    $q.when(action && action.perform()).then(function () {\r\n                        broadcastDrop(id, event);\r\n                    });\r\n\r\n                }\r\n            }\r\n\r\n            // We can only handle drops if we have access to actions...\r\n            if (actionCapability) {\r\n                // Listen for dragover,  to indicate we'll accept a drag\r\n                element.on('dragover', dragOver);\r\n\r\n                // Listen for the drop itself\r\n                element.on('drop', drop);\r\n            }\r\n\r\n            this.element = element;\r\n            this.dragOverCallback = dragOver;\r\n            this.dropCallback = drop;\r\n        }\r\n\r\n        DropGesture.prototype.destroy = function () {\r\n            this.element.off('dragover', this.dragOverCallback);\r\n            this.element.off('drop', this.dropCallback);\r\n        };\r\n\r\n\r\n        return DropGesture;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ContextMenuGesture.\r\n * Created by vwoeltje on 11/17/14. Modified by shale on 06/30/2015.\r\n */\r\ndefine(\r\n    'platform/representation/src/gestures/ContextMenuGesture',[],function () {\r\n\r\n        /**\r\n         * Add listeners to a representation such that it calls the\r\n         * context menu action for the domain object it contains.\r\n         *\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @param element the jqLite-wrapped element which should exhibit\r\n         *                the context menu\r\n         * @param {DomainObject} domainObject the object on which actions\r\n         *                       in the context menu will be performed\r\n         * @implements {Gesture}\r\n         */\r\n        function ContextMenuGesture($timeout, agentService, element, domainObject) {\r\n            var isPressing,\r\n                longTouchTime = 500;\r\n\r\n            function showMenu(event) {\r\n                domainObject.getCapability('action').perform({\r\n                    key: 'menu',\r\n                    domainObject: domainObject,\r\n                    event: event\r\n                });\r\n            }\r\n\r\n            // When context menu event occurs, show object actions instead\r\n            if (!agentService.isMobile()) {\r\n\r\n                // When context menu event occurs, show object actions instead\r\n                element.on('contextmenu', showMenu);\r\n            } else if (agentService.isMobile()) {\r\n\r\n                // If on mobile device, then start timeout for the single touch event\r\n                // during the timeout 'isPressing' is true.\r\n                element.on('touchstart', function (event) {\r\n                    if (event.touches.length < 2) {\r\n                        isPressing = true;\r\n\r\n                        // After the timeout, if 'isPressing' is\r\n                        // true, display context menu for object\r\n                        $timeout(function () {\r\n                            if (isPressing) {\r\n                                showMenu(event);\r\n                            }\r\n                        }, longTouchTime);\r\n                    }\r\n                });\r\n\r\n                // Whenever the touch event ends, 'isPressing' is false.\r\n                element.on('touchend', function () {\r\n                    isPressing = false;\r\n                });\r\n            }\r\n\r\n            this.showMenuCallback = showMenu;\r\n            this.element = element;\r\n        }\r\n\r\n        ContextMenuGesture.prototype.destroy = function () {\r\n            this.element.off('contextmenu', this.showMenu);\r\n        };\r\n\r\n        return ContextMenuGesture;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining GestureProvider. Created by vwoeltje on 11/22/14.\r\n */\r\ndefine(\r\n    'platform/representation/src/gestures/GestureProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles the attachment of gestures (responses to DOM events,\r\n         * generally) to DOM elements which represent domain objects.\r\n         *\r\n         * @interface GestureService\r\n         */\r\n        /**\r\n         * Attach a set of gestures (indicated by key) to a\r\n         * DOM element which represents a specific domain object.\r\n         * @method GestureService#attachGestures\r\n         * @param element the jqLite-wrapped DOM element which the\r\n         *        user will interact with\r\n         * @param {DomainObject} domainObject the domain object which\r\n         *        is represented by that element\r\n         * @param {string[]} gestureKeys an array of keys identifying\r\n         *        which gestures should apply; these will be matched\r\n         *        against the keys defined in the gestures' extension\r\n         *        definitions\r\n         * @return {Destroyable} an object with a `destroy`\r\n         *         method which can (and should) be used when\r\n         *         gestures should no longer be applied to an element.\r\n         */\r\n\r\n        /**\r\n         * The GestureProvider exposes defined gestures. Gestures are used\r\n         * do describe and handle general-purpose interactions with the DOM\r\n         * that should be interpreted as interactions with domain objects,\r\n         * such as right-clicking to expose context menus.\r\n         *\r\n         * Gestures are defined individually as extensions of the\r\n         * `gestures` category. The gesture provider merely serves as an\r\n         * intermediary between these and the `mct-representation` directive\r\n         * where they are used.\r\n         *\r\n         * @memberof platform/representation\r\n         * @implements {GestureService}\r\n         * @constructor\r\n         * @param {Gesture[]} gestures an array of all gestures which are\r\n         *        available as extensions\r\n         */\r\n        function GestureProvider(gestures) {\r\n            var gestureMap = {};\r\n\r\n            // Assemble all gestures into a map, for easy look up\r\n            gestures.forEach(function (gesture) {\r\n                gestureMap[gesture.key] = gesture;\r\n            });\r\n\r\n            this.gestureMap = gestureMap;\r\n        }\r\n\r\n        function releaseGesture(gesture) {\r\n            // Invoke the gesture's \"destroy\" method (if there is one)\r\n            // to release any held resources and detach event handlers.\r\n            if (gesture && gesture.destroy) {\r\n                gesture.destroy();\r\n            }\r\n        }\r\n\r\n        GestureProvider.prototype.attachGestures = function attachGestures(element, domainObject, gestureKeys) {\r\n            // Look up the desired gestures, filter for applicability,\r\n            // and instantiate them. Maintain a reference to allow them\r\n            // to be destroyed as a group later.\r\n            var gestureMap = this.gestureMap,\r\n                attachedGestures = gestureKeys.map(function (key) {\r\n                    return gestureMap[key];\r\n                }).filter(function (Gesture) {\r\n                    return Gesture !== undefined && (Gesture.appliesTo ?\r\n                            Gesture.appliesTo(domainObject) :\r\n                            true);\r\n                }).map(function (Gesture) {\r\n                    return new Gesture(element, domainObject);\r\n                });\r\n\r\n            return {\r\n                destroy: function () {\r\n                    // Just call all the individual \"destroy\" methods\r\n                    attachedGestures.forEach(releaseGesture);\r\n                }\r\n            };\r\n        };\r\n\r\n        /**\r\n         * A destroyable object may have resources allocated which require\r\n         * explicit release.\r\n         *\r\n         * @interface Destroyable\r\n         */\r\n        /**\r\n         * Release any resources associated with this object.\r\n         *\r\n         * @method Destroyable#destroy\r\n         */\r\n\r\n        /**\r\n         * A gesture describes manners in which certain representations of\r\n         * domain objects may respond to DOM events upon those representations.\r\n         * @interface Gesture\r\n         * @augments Destroyable\r\n         */\r\n\r\n        return GestureProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/representation/src/gestures/GestureRepresenter',[],\r\n    function () {\r\n\r\n        /**\r\n         * The GestureRepresenter is responsible for installing predefined\r\n         * gestures upon mct-representation instances.\r\n         * Gestures themselves are pulled from the gesture service; this\r\n         * simply wraps that behavior in a Representer interface, such that\r\n         * it may be included among other such Representers used to prepare\r\n         * specific representations.\r\n         * @param {GestureService} gestureService the service which provides\r\n         *        gestures\r\n         * @param {Scope} scope the Angular scope for this representation\r\n         * @param element the JQLite-wrapped mct-representation element\r\n         * @constructor\r\n         * @implements {Representer}\r\n         * @memberof platform/representation\r\n         */\r\n        function GestureRepresenter(gestureService, scope, element) {\r\n            this.gestureService = gestureService;\r\n            this.element = element;\r\n        }\r\n\r\n        GestureRepresenter.prototype.represent = function represent(representation, domainObject) {\r\n            // Clear out any existing gestures\r\n            this.destroy();\r\n\r\n            // Attach gestures - by way of the service.\r\n            this.gestureHandle = this.gestureService.attachGestures(\r\n                this.element,\r\n                domainObject,\r\n                (representation || {}).gestures || []\r\n            );\r\n        };\r\n\r\n        GestureRepresenter.prototype.destroy = function () {\r\n            // Release any resources associated with these gestures\r\n            if (this.gestureHandle) {\r\n                this.gestureHandle.destroy();\r\n            }\r\n        };\r\n\r\n        return GestureRepresenter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/representation/src/services/DndService',[],\r\n    function () {\r\n\r\n        /**\r\n         * Drag-and-drop service.\r\n         * Supplements HTML5 drag-and-drop support by:\r\n         * * Storing arbitrary JavaScript objects (not just strings.)\r\n         * * Allowing inspection of dragged objects during `dragover` events,\r\n         *   etc. (which cannot be done in Chrome for security reasons)\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @param $log Angular's $log service\r\n         */\r\n        function DndService($log) {\r\n            var data = {};\r\n\r\n            return {\r\n                /**\r\n                 * Set drag data associated with a given type.\r\n                 * @param {string} key the type's identiifer\r\n                 * @param {*} value the data being dragged\r\n                 * @memberof platform/representation.DndService#\r\n                 */\r\n                setData: function (key, value) {\r\n                    $log.debug(\"Setting drag data for \" + key);\r\n                    data[key] = value;\r\n                },\r\n                /**\r\n                 * Get drag data associated with a given type.\r\n                 * @returns {*} the data being dragged\r\n                 * @memberof platform/representation.DndService#\r\n                 */\r\n                getData: function (key) {\r\n                    return data[key];\r\n                },\r\n                /**\r\n                 * Remove data associated with active drags.\r\n                 * @param {string} key the type to remove\r\n                 * @memberof platform/representation.DndService#\r\n                 */\r\n                removeData: function (key) {\r\n                    $log.debug(\"Clearing drag data for \" + key);\r\n                    delete data[key];\r\n                }\r\n            };\r\n        }\r\n\r\n        return DndService;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/representation/src/TemplateLinker',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `templateLinker` service is intended for internal use by\r\n         * the `mct-include` and `mct-representation` directives. It is\r\n         * used to support common behavior of directives; specifically,\r\n         * loading templates and inserting them into a specified element,\r\n         * and/or removing that element from the DOM when there is no\r\n         * template to populate it with.\r\n         *\r\n         * @param {Function} $templateRequest Angular's `$templateRequest`\r\n         *        service\r\n         * @param $sce Angular's `$sce` service\r\n         * @param {Function} $compile Angular's `$compile` service\r\n         * @param $log Angular's `$log` service\r\n         * @private\r\n         */\r\n        function TemplateLinker($templateRequest, $sce, $compile, $log) {\r\n            this.$templateRequest = $templateRequest;\r\n            this.$sce = $sce;\r\n            this.$compile = $compile;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Load a template from the given URL. This request will be handled\r\n         * via `$templateRequest` to ensure caching et cetera.\r\n         * @param {string} the URL for the template\r\n         * @returns {Promise.<string>} a promise for the HTML content of\r\n         *          the template\r\n         */\r\n        TemplateLinker.prototype.load = function (templateUrl) {\r\n            return this.$templateRequest(\r\n                this.$sce.trustAsResourceUrl(templateUrl),\r\n                false\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Get a path to a template from an extension definition fo\r\n         * a template, representation, or view.\r\n         * @param {TemplateDefinition} extensionDefinition the definition\r\n         *        of the template/representation/view to resolve\r\n         */\r\n        TemplateLinker.prototype.getPath = function (extensionDefinition) {\r\n            return [\r\n                extensionDefinition.bundle.path,\r\n                extensionDefinition.bundle.resources,\r\n                extensionDefinition.templateUrl\r\n            ].join('/');\r\n        };\r\n\r\n        /**\r\n         * Populate the given element with templates, within the given scope;\r\n         * intended to support the `link` function of the supported directives.\r\n         *\r\n         * @param {Scope} scope the Angular scope to use when rendering\r\n         *        templates\r\n         * @param element the jqLite-wrapped element into which templates\r\n         *        should be inserted\r\n         * @param {TemplateDefinition} extensionDefinition the definition\r\n         *        of the template/representation/view to display initially\r\n         * @returns {Function} a function which can be called with a template's\r\n         *          extension definition to switch templates, or `undefined`\r\n         *          to remove.\r\n         */\r\n        TemplateLinker.prototype.link = function (scope, element, ext) {\r\n            var activeElement = element,\r\n                activeTemplateUrl,\r\n                comment = this.$compile('<!-- hidden mct element -->')(scope),\r\n                activeScope,\r\n                self = this;\r\n\r\n            function destroyScope() {\r\n                if (activeScope) {\r\n                    activeScope.$destroy();\r\n                    activeScope = undefined;\r\n                }\r\n            }\r\n\r\n            function removeElement() {\r\n                if (activeElement !== comment) {\r\n                    destroyScope();\r\n                    activeElement.replaceWith(comment);\r\n                    activeElement = comment;\r\n                }\r\n            }\r\n\r\n            function addElement() {\r\n                if (activeElement !== element) {\r\n                    activeElement.replaceWith(element);\r\n                    activeElement = element;\r\n                    activeElement.empty();\r\n                }\r\n            }\r\n\r\n            function populateElement(template) {\r\n                destroyScope();\r\n                activeScope = scope.$new(false);\r\n                element.html(template);\r\n                self.$compile(element.contents())(activeScope);\r\n            }\r\n\r\n            function showTemplate(template) {\r\n                addElement();\r\n                populateElement(template);\r\n                activeTemplateUrl = undefined;\r\n            }\r\n\r\n            function badTemplateUrl(templateUrl) {\r\n                self.$log.warn(\"Couldn't load template at \" + templateUrl);\r\n                removeElement();\r\n            }\r\n\r\n            function changeTemplateUrl(templateUrl) {\r\n                if (templateUrl) {\r\n                    destroyScope();\r\n                    addElement();\r\n                    self.load(templateUrl).then(function (template) {\r\n                        // Avoid race conditions\r\n                        if (templateUrl === activeTemplateUrl) {\r\n                            populateElement(template);\r\n                        }\r\n                    }, function () {\r\n                        badTemplateUrl(templateUrl);\r\n                    });\r\n                } else {\r\n                    removeElement();\r\n                }\r\n                activeTemplateUrl = templateUrl;\r\n            }\r\n\r\n            function changeTemplate(templateExt) {\r\n                templateExt = templateExt || {};\r\n                if (templateExt.templateUrl) {\r\n                    changeTemplateUrl(self.getPath(templateExt));\r\n                } else if (templateExt.template) {\r\n                    showTemplate(templateExt.template);\r\n                } else {\r\n                    removeElement();\r\n                }\r\n            }\r\n\r\n            changeTemplate(ext);\r\n\r\n            return changeTemplate;\r\n        };\r\n\r\n        return TemplateLinker;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ContextMenuAction. Created by shale on 06/30/2015.\r\n */\r\ndefine(\r\n    'platform/representation/src/actions/ContextMenuAction',[\"../gestures/GestureConstants\"],\r\n    function (GestureConstants) {\r\n\r\n        var MENU_TEMPLATE = \"<mct-representation key=\\\"'context-menu'\\\" \" +\r\n                \"mct-object=\\\"domainObject\\\" \" +\r\n                \"ng-class=\\\"menuClass\\\" \" +\r\n                \"ng-style=\\\"menuStyle\\\">\" +\r\n                \"</mct-representation>\",\r\n            dismissExistingMenu;\r\n\r\n        /**\r\n         * Launches a custom context menu for the domain object it contains.\r\n         *\r\n         * @memberof platform/representation\r\n         * @constructor\r\n         * @param $compile Angular's $compile service\r\n         * @param $document the current document\r\n         * @param $rootScope Angular's root scope\r\n         * @param {platform/commonUI/general.PopupService} popupService\r\n         * @param actionContext the context in which the action\r\n         *                      should be performed\r\n         * @implements {Action}\r\n         */\r\n        function ContextMenuAction(\r\n            $compile,\r\n            $document,\r\n            $rootScope,\r\n            popupService,\r\n            agentService,\r\n            actionContext\r\n        ) {\r\n            this.$compile = $compile;\r\n            this.agentService = agentService;\r\n            this.actionContext = actionContext;\r\n            this.popupService = popupService;\r\n            this.getDocument = function () {\r\n                return $document;\r\n            };\r\n            this.getRootScope = function () {\r\n                return $rootScope;\r\n            };\r\n        }\r\n\r\n        ContextMenuAction.prototype.perform = function () {\r\n            var $compile = this.$compile,\r\n                $document = this.getDocument(),\r\n                $rootScope = this.getRootScope(),\r\n                actionContext = this.actionContext,\r\n                eventCoords = [\r\n                    actionContext.event.pageX,\r\n                    actionContext.event.pageY\r\n                ],\r\n                menuDim = GestureConstants.MCT_MENU_DIMENSIONS,\r\n                body = $document.find('body'),\r\n                scope = $rootScope.$new(),\r\n                initiatingEvent = this.agentService.isMobile() ?\r\n                        'touchstart' : 'mousedown',\r\n                menu,\r\n                popup;\r\n\r\n            // Remove the context menu\r\n            function dismiss() {\r\n                if (popup) {\r\n                    popup.dismiss();\r\n                    popup = undefined;\r\n                }\r\n                scope.$destroy();\r\n                body.off(\"mousedown\", dismiss);\r\n                dismissExistingMenu = undefined;\r\n            }\r\n\r\n            // Dismiss any menu which was already showing\r\n            if (dismissExistingMenu) {\r\n                dismissExistingMenu();\r\n            }\r\n\r\n            // ...and record the presence of this menu.\r\n            dismissExistingMenu = dismiss;\r\n\r\n            // Set up the scope, including menu positioning\r\n            scope.domainObject = actionContext.domainObject;\r\n            scope.menuClass = { \"context-menu-holder\": true };\r\n            // Create the context menu\r\n            menu = $compile(MENU_TEMPLATE)(scope);\r\n\r\n            popup = this.popupService.display(menu, eventCoords, {\r\n                marginX: -menuDim[0],\r\n                marginY: -menuDim[1]\r\n            });\r\n\r\n            scope.menuClass['go-left'] = popup.goesLeft();\r\n            scope.menuClass['go-up'] = popup.goesUp();\r\n\r\n            // Stop propagation so that clicks or touches on the menu do not close the menu\r\n            menu.on(initiatingEvent, function (event) {\r\n                event.stopPropagation();\r\n            });\r\n\r\n            // Dismiss the menu when body is clicked/touched elsewhere\r\n            // ('mousedown' because 'click' breaks left-click context menus)\r\n            // ('touchstart' because 'touch' breaks context menus up)\r\n            body.on(initiatingEvent, dismiss);\r\n            // NOTE: Apply to mobile?\r\n            menu.on('click', dismiss);\r\n\r\n            // Don't launch browser's context menu\r\n            actionContext.event.preventDefault();\r\n        };\r\n\r\n        return ContextMenuAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/representation/src/TemplatePrefetcher',[],function () {\r\n\r\n        /**\r\n         * Loads all templates when the application is started.\r\n         * @param {platform/representation.TemplateLinker} templateLinker\r\n         *        the `templateLinker` service, used to load and cache\r\n         *        template extensions\r\n         * @param {...Array.<{templateUrl: string}>} extensions arrays\r\n         *        of template or template-like extensions\r\n         */\r\n        function TemplatePrefetcher(templateLinker) {\r\n            Array.prototype.slice.apply(arguments, [1])\r\n                .reduce(function (a, b) {\r\n                    return a.concat(b);\r\n                }, [])\r\n                .forEach(function (ext) {\r\n                    if (ext.templateUrl) {\r\n                        templateLinker.load(templateLinker.getPath(ext));\r\n                    }\r\n                });\r\n        }\r\n\r\n        return TemplatePrefetcher;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/representation/bundle',[\r\n    \"./src/MCTInclude\",\r\n    \"./src/MCTRepresentation\",\r\n    \"./src/gestures/DragGesture\",\r\n    \"./src/gestures/DropGesture\",\r\n    \"./src/gestures/ContextMenuGesture\",\r\n    \"./src/gestures/GestureProvider\",\r\n    \"./src/gestures/GestureRepresenter\",\r\n    \"./src/services/DndService\",\r\n    \"./src/TemplateLinker\",\r\n    \"./src/actions/ContextMenuAction\",\r\n    \"./src/TemplatePrefetcher\",\r\n    'legacyRegistry'\r\n], function (\r\n    MCTInclude,\r\n    MCTRepresentation,\r\n    DragGesture,\r\n    DropGesture,\r\n    ContextMenuGesture,\r\n    GestureProvider,\r\n    GestureRepresenter,\r\n    DndService,\r\n    TemplateLinker,\r\n    ContextMenuAction,\r\n    TemplatePrefetcher,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/representation\", {\r\n        \"extensions\": {\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctInclude\",\r\n                    \"implementation\": MCTInclude,\r\n                    \"depends\": [\r\n                        \"templates[]\",\r\n                        \"templateLinker\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctRepresentation\",\r\n                    \"implementation\": MCTRepresentation,\r\n                    \"depends\": [\r\n                        \"representations[]\",\r\n                        \"views[]\",\r\n                        \"representers[]\",\r\n                        \"$q\",\r\n                        \"templateLinker\",\r\n                        \"$log\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"gestures\": [\r\n                {\r\n                    \"key\": \"drag\",\r\n                    \"implementation\": DragGesture,\r\n                    \"depends\": [\r\n                        \"$log\",\r\n                        \"dndService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"drop\",\r\n                    \"implementation\": DropGesture,\r\n                    \"depends\": [\r\n                        \"dndService\",\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"menu\",\r\n                    \"implementation\": ContextMenuGesture,\r\n                    \"depends\": [\r\n                        \"$timeout\",\r\n                        \"agentService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"gestureService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": GestureProvider,\r\n                    \"depends\": [\r\n                        \"gestures[]\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"representers\": [\r\n                {\r\n                    \"implementation\": GestureRepresenter,\r\n                    \"depends\": [\r\n                        \"gestureService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"dndService\",\r\n                    \"implementation\": DndService,\r\n                    \"depends\": [\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"templateLinker\",\r\n                    \"implementation\": TemplateLinker,\r\n                    \"depends\": [\r\n                        \"$templateRequest\",\r\n                        \"$sce\",\r\n                        \"$compile\",\r\n                        \"$log\"\r\n                    ],\r\n                    \"comment\": \"For internal use by mct-include and mct-representation.\"\r\n                }\r\n            ],\r\n            \"actions\": [\r\n                {\r\n                    \"key\": \"menu\",\r\n                    \"implementation\": ContextMenuAction,\r\n                    \"depends\": [\r\n                        \"$compile\",\r\n                        \"$document\",\r\n                        \"$rootScope\",\r\n                        \"popupService\",\r\n                        \"agentService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"runs\": [\r\n                {\r\n                    \"priority\": \"mandatory\",\r\n                    \"implementation\": TemplatePrefetcher,\r\n                    \"depends\": [\r\n                        \"templateLinker\",\r\n                        \"templates[]\",\r\n                        \"views[]\",\r\n                        \"representations[]\",\r\n                        \"controls[]\",\r\n                        \"containers[]\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * @license text 2.0.15 Copyright jQuery Foundation and other contributors.\r\n * Released under MIT license, http://github.com/requirejs/text/LICENSE\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    function useDefault(value, defaultValue) {\r\n        return value === undefined || value === '' ? defaultValue : value;\r\n    }\r\n\r\n    //Allow for default ports for http and https.\r\n    function isSamePort(protocol1, port1, protocol2, port2) {\r\n        if (port1 === port2) {\r\n            return true;\r\n        } else if (protocol1 === protocol2) {\r\n            if (protocol1 === 'http') {\r\n                return useDefault(port1, '80') === useDefault(port2, '80');\r\n            } else if (protocol1 === 'https') {\r\n                return useDefault(port1, '443') === useDefault(port2, '443');\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    text = {\r\n        version: '2.0.15',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) {}\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.lastIndexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || isSamePort(uProtocol, uPort, protocol, port));\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config && config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config && config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'] &&\r\n            !process.versions['atom-shell'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file[0] === '\\uFEFF') {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                if (errback) {\r\n                    errback(e);\r\n                }\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status || 0;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        if (errback) {\r\n                            errback(err);\r\n                        }\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes;\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\r\n\n","\ndefine('text!platform/commonUI/about/res/templates/about-dialog.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"abs t-about l-about t-about-openmctweb s-about\" ng-controller = \"AboutController as about\">\\r\\n    <div class=\"l-splash s-splash\"></div>\\r\\n    <div class=\"s-text l-content\">\\r\\n        <h1 class=\"l-title s-title\">Open MCT</h1>\\r\\n        <div class=\"l-description s-description\">\\r\\n\\t        <p>Open MCT, Copyright &copy; 2014-2016, United States Government as represented by the Administrator of the National Aeronautics and Space Administration. All rights reserved.</p>\\r\\n\\t        <p>Open MCT is licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at <a target=\"_blank\" href=\"http://www.apache.org/licenses/LICENSE-2.0\">http://www.apache.org/licenses/LICENSE-2.0</a>.</p>\\r\\n\\t        <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>\\r\\n\\t        <p>Open MCT includes source code licensed under additional open source licenses. See the Open Source Licenses file included with this distribution or <a ng-click=\"about.openLicenses()\">click here for licensing information</a>.</p>\\r\\n        </div>\\r\\n        <h2>Version Information</h2>\\r\\n        <ul class=\"t-info l-info s-info\" ng-repeat = \"version in about.versions()\">\\r\\n            <li title=\"{{version.description}}\">\\r\\n                <span class=\"info version-name\">{{version.name}}</span>\\r\\n\\t            <span class=\"info version-value\">{{version.value}}</span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/about/src/LogoController',[],\r\n    function () {\r\n\r\n        /**\r\n         * The LogoController provides functionality to the application\r\n         * logo in the bottom-right of the user interface.\r\n         * @memberof platform/commonUI/about\r\n         * @constructor\r\n         * @param {OverlayService} overlayService the overlay service\r\n         */\r\n        function LogoController(overlayService) {\r\n            this.overlayService = overlayService;\r\n        }\r\n\r\n        /**\r\n         * Display the About dialog.\r\n         * @memberof LogoController#\r\n         * @memberof platform/commonUI/about.LogoController#\r\n         */\r\n        LogoController.prototype.showAboutDialog = function () {\r\n            this.overlayService.createOverlay(\"overlay-about\");\r\n        };\r\n\r\n        return LogoController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\n/**\r\n * Implements Open MCT's About dialog.\r\n * @namespace platform/commonUI/about\r\n */\r\ndefine(\r\n    'platform/commonUI/about/src/AboutController',[],\r\n    function () {\r\n\r\n        /**\r\n         * The AboutController provides information to populate the\r\n         * About dialog.\r\n         * @memberof platform/commonUI/about\r\n         * @constructor\r\n         * @param {object[]} versions an array of version extensions;\r\n         *        injected from `versions[]`\r\n         * @param $window Angular-injected window object\r\n         */\r\n        function AboutController(versions, $window) {\r\n            this.versionDefinitions = versions;\r\n            this.$window = $window;\r\n        }\r\n\r\n        /**\r\n         * Get version info. This is given as an array of\r\n         * objects, where each object is intended to appear\r\n         * as a line-item in the version information listing.\r\n         * @returns {object[]} version information\r\n         */\r\n        AboutController.prototype.versions = function () {\r\n            return this.versionDefinitions;\r\n        };\r\n\r\n        /**\r\n         * Open a new window (or tab, depending on browser\r\n         * configuration) containing open source licenses.\r\n         */\r\n        AboutController.prototype.openLicenses = function () {\r\n            // Open a new browser window at the licenses route\r\n            this.$window.open(\"#/licenses\");\r\n        };\r\n\r\n        return AboutController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/about/src/LicenseController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provides extension-introduced licenses information to the\r\n         * licenses route.\r\n         * @memberof platform/commonUI/about\r\n         * @constructor\r\n         */\r\n        function LicenseController(licenses) {\r\n            this.licenseDefinitions = licenses;\r\n        }\r\n\r\n        /**\r\n         * Get license information.\r\n         * @returns {Array} license extensions\r\n         * @memberof platform/commonUI/about.LicenseController#\r\n         */\r\n        LicenseController.prototype.licenses = function () {\r\n            return this.licenseDefinitions;\r\n        };\r\n\r\n        return LicenseController;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/commonUI/about/res/templates/app-logo.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller = \"AboutController as about\">\\r\\n\\t<div class=\\'app-logo logo-openmctweb abs\\' title=\"Version {{about.versions()[0].value}}\"></div>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/about/res/templates/about-logo.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"LogoController as logo\">\\r\\n    <mct-include ng-click=\"logo.showAboutDialog()\" key=\"\\'app-logo\\'\">\\r\\n    </mct-include>\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/about/res/templates/overlay-about.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<mct-container key=\"overlay\">\\r\\n    <mct-include key=\"\\'about-dialog\\'\">\\r\\n    </mct-include>\\r\\n</mct-container>';});\n\n","\ndefine('text!platform/commonUI/about/res/templates/license-apache.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<!-- From http://www.apache.org/licenses/LICENSE-2.0 -->\\r\\n<br>\\r\\n\\t<p>Version 2.0, January 2004</p>\\r\\n\\t<p><a href=\"http://www.apache.org/licenses/\">http://www.apache.org/licenses/</a></p>\\r\\n\\t<h3>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</h3>\\r\\n\\t<p><strong><a name=\"definitions\">1. Definitions</a></strong>.</p>\\r\\n\\t<p>\"License\" shall mean the terms and conditions for use, reproduction, and\\r\\n\\t\\tdistribution as defined by Sections 1 through 9 of this document.</p>\\r\\n\\t<p>\"Licensor\" shall mean the copyright owner or entity authorized by the\\r\\n\\t\\tcopyright owner that is granting the License.</p>\\r\\n\\t<p>\"Legal Entity\" shall mean the union of the acting entity and all other\\r\\n\\t\\tentities that control, are controlled by, or are under common control with\\r\\n\\t\\tthat entity. For the purposes of this definition, \"control\" means (i) the\\r\\n\\t\\tpower, direct or indirect, to cause the direction or management of such\\r\\n\\t\\tentity, whether by contract or otherwise, or (ii) ownership of fifty\\r\\n\\t\\tpercent (50%) or more of the outstanding shares, or (iii) beneficial\\r\\n\\t\\townership of such entity.</p>\\r\\n\\t<p>\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising\\r\\n\\t\\tpermissions granted by this License.</p>\\r\\n\\t<p>\"Source\" form shall mean the preferred form for making modifications,\\r\\n\\t\\tincluding but not limited to software source code, documentation source,\\r\\n\\t\\tand configuration files.</p>\\r\\n\\t<p>\"Object\" form shall mean any form resulting from mechanical transformation\\r\\n\\t\\tor translation of a Source form, including but not limited to compiled\\r\\n\\t\\tobject code, generated documentation, and conversions to other media types.</p>\\r\\n\\t<p>\"Work\" shall mean the work of authorship, whether in Source or Object form,\\r\\n\\t\\tmade available under the License, as indicated by a copyright notice that\\r\\n\\t\\tis included in or attached to the work (an example is provided in the\\r\\n\\t\\tAppendix below).</p>\\r\\n\\t<p>\"Derivative Works\" shall mean any work, whether in Source or Object form,\\r\\n\\t\\tthat is based on (or derived from) the Work and for which the editorial\\r\\n\\t\\trevisions, annotations, elaborations, or other modifications represent, as\\r\\n\\t\\ta whole, an original work of authorship. For the purposes of this License,\\r\\n\\t\\tDerivative Works shall not include works that remain separable from, or\\r\\n\\t\\tmerely link (or bind by name) to the interfaces of, the Work and Derivative\\r\\n\\t\\tWorks thereof.</p>\\r\\n\\t<p>\"Contribution\" shall mean any work of authorship, including the original\\r\\n\\t\\tversion of the Work and any modifications or additions to that Work or\\r\\n\\t\\tDerivative Works thereof, that is intentionally submitted to Licensor for\\r\\n\\t\\tinclusion in the Work by the copyright owner or by an individual or Legal\\r\\n\\t\\tEntity authorized to submit on behalf of the copyright owner. For the\\r\\n\\t\\tpurposes of this definition, \"submitted\" means any form of electronic,\\r\\n\\t\\tverbal, or written communication sent to the Licensor or its\\r\\n\\t\\trepresentatives, including but not limited to communication on electronic\\r\\n\\t\\tmailing lists, source code control systems, and issue tracking systems that\\r\\n\\t\\tare managed by, or on behalf of, the Licensor for the purpose of discussing\\r\\n\\t\\tand improving the Work, but excluding communication that is conspicuously\\r\\n\\t\\tmarked or otherwise designated in writing by the copyright owner as \"Not a\\r\\n\\t\\tContribution.\"</p>\\r\\n\\t<p>\"Contributor\" shall mean Licensor and any individual or Legal Entity on\\r\\n\\t\\tbehalf of whom a Contribution has been received by Licensor and\\r\\n\\t\\tsubsequently incorporated within the Work.</p>\\r\\n\\t<p><strong><a name=\"copyright\">2. Grant of Copyright License</a></strong>. Subject to the\\r\\n\\t\\tterms and conditions of this License, each Contributor hereby grants to You\\r\\n\\t\\ta perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\r\\n\\t\\tcopyright license to reproduce, prepare Derivative Works of, publicly\\r\\n\\t\\tdisplay, publicly perform, sublicense, and distribute the Work and such\\r\\n\\t\\tDerivative Works in Source or Object form.</p>\\r\\n\\t<p><strong><a name=\"patent\">3. Grant of Patent License</a></strong>. Subject to the terms\\r\\n\\t\\tand conditions of this License, each Contributor hereby grants to You a\\r\\n\\t\\tperpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\r\\n\\t\\t(except as stated in this section) patent license to make, have made, use,\\r\\n\\t\\toffer to sell, sell, import, and otherwise transfer the Work, where such\\r\\n\\t\\tlicense applies only to those patent claims licensable by such Contributor\\r\\n\\t\\tthat are necessarily infringed by their Contribution(s) alone or by\\r\\n\\t\\tcombination of their Contribution(s) with the Work to which such\\r\\n\\t\\tContribution(s) was submitted. If You institute patent litigation against\\r\\n\\t\\tany entity (including a cross-claim or counterclaim in a lawsuit) alleging\\r\\n\\t\\tthat the Work or a Contribution incorporated within the Work constitutes\\r\\n\\t\\tdirect or contributory patent infringement, then any patent licenses\\r\\n\\t\\tgranted to You under this License for that Work shall terminate as of the\\r\\n\\t\\tdate such litigation is filed.</p>\\r\\n\\t<p><strong><a name=\"redistribution\">4. Redistribution</a></strong>. You may reproduce and\\r\\n\\t\\tdistribute copies of the Work or Derivative Works thereof in any medium,\\r\\n\\t\\twith or without modifications, and in Source or Object form, provided that\\r\\n\\t\\tYou meet the following conditions:</p>\\r\\n\\t<ol style=\"list-style: lower-latin;\">\\r\\n\\t\\t<li>You must give any other recipients of the Work or Derivative Works a\\r\\n\\t\\t\\tcopy of this License; and</li>\\r\\n\\r\\n\\t\\t<li>You must cause any modified files to carry prominent notices stating\\r\\n\\t\\t\\tthat You changed the files; and</li>\\r\\n\\r\\n\\t\\t<li>You must retain, in the Source form of any Derivative Works that You\\r\\n\\t\\t\\tdistribute, all copyright, patent, trademark, and attribution notices from\\r\\n\\t\\t\\tthe Source form of the Work, excluding those notices that do not pertain to\\r\\n\\t\\t\\tany part of the Derivative Works; and</li>\\r\\n\\r\\n\\t\\t<li>If the Work includes a \"NOTICE\" text file as part of its distribution,\\r\\n\\t\\t\\tthen any Derivative Works that You distribute must include a readable copy\\r\\n\\t\\t\\tof the attribution notices contained within such NOTICE file, excluding\\r\\n\\t\\t\\tthose notices that do not pertain to any part of the Derivative Works, in\\r\\n\\t\\t\\tat least one of the following places: within a NOTICE text file distributed\\r\\n\\t\\t\\tas part of the Derivative Works; within the Source form or documentation,\\r\\n\\t\\t\\tif provided along with the Derivative Works; or, within a display generated\\r\\n\\t\\t\\tby the Derivative Works, if and wherever such third-party notices normally\\r\\n\\t\\t\\tappear. The contents of the NOTICE file are for informational purposes only\\r\\n\\t\\t\\tand do not modify the License. You may add Your own attribution notices\\r\\n\\t\\t\\twithin Derivative Works that You distribute, alongside or as an addendum to\\r\\n\\t\\t\\tthe NOTICE text from the Work, provided that such additional attribution\\r\\n\\t\\t\\tnotices cannot be construed as modifying the License.\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\tYou may add Your own copyright statement to Your modifications and may\\r\\n\\t\\t\\tprovide additional or different license terms and conditions for use,\\r\\n\\t\\t\\treproduction, or distribution of Your modifications, or for any such\\r\\n\\t\\t\\tDerivative Works as a whole, provided Your use, reproduction, and\\r\\n\\t\\t\\tdistribution of the Work otherwise complies with the conditions stated in\\r\\n\\t\\t\\tthis License.\\r\\n\\t\\t</li>\\r\\n\\r\\n\\t</ol>\\r\\n\\r\\n\\t<p><strong><a name=\"contributions\">5. Submission of Contributions</a></strong>. Unless You\\r\\n\\t\\texplicitly state otherwise, any Contribution intentionally submitted for\\r\\n\\t\\tinclusion in the Work by You to the Licensor shall be under the terms and\\r\\n\\t\\tconditions of this License, without any additional terms or conditions.\\r\\n\\t\\tNotwithstanding the above, nothing herein shall supersede or modify the\\r\\n\\t\\tterms of any separate license agreement you may have executed with Licensor\\r\\n\\t\\tregarding such Contributions.</p>\\r\\n\\t<p><strong><a name=\"trademarks\">6. Trademarks</a></strong>. This License does not grant\\r\\n\\t\\tpermission to use the trade names, trademarks, service marks, or product\\r\\n\\t\\tnames of the Licensor, except as required for reasonable and customary use\\r\\n\\t\\tin describing the origin of the Work and reproducing the content of the\\r\\n\\t\\tNOTICE file.</p>\\r\\n\\t<p><strong><a name=\"no-warranty\">7. Disclaimer of Warranty</a></strong>. Unless required by\\r\\n\\t\\tapplicable law or agreed to in writing, Licensor provides the Work (and\\r\\n\\t\\teach Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT\\r\\n\\t\\tWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including,\\r\\n\\t\\twithout limitation, any warranties or conditions of TITLE,\\r\\n\\t\\tNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You\\r\\n\\t\\tare solely responsible for determining the appropriateness of using or\\r\\n\\t\\tredistributing the Work and assume any risks associated with Your exercise\\r\\n\\t\\tof permissions under this License.</p>\\r\\n\\t<p><strong><a name=\"no-liability\">8. Limitation of Liability</a></strong>. In no event and\\r\\n\\t\\tunder no legal theory, whether in tort (including negligence), contract, or\\r\\n\\t\\totherwise, unless required by applicable law (such as deliberate and\\r\\n\\t\\tgrossly negligent acts) or agreed to in writing, shall any Contributor be\\r\\n\\t\\tliable to You for damages, including any direct, indirect, special,\\r\\n\\t\\tincidental, or consequential damages of any character arising as a result\\r\\n\\t\\tof this License or out of the use or inability to use the Work (including\\r\\n\\t\\tbut not limited to damages for loss of goodwill, work stoppage, computer\\r\\n\\t\\tfailure or malfunction, or any and all other commercial damages or losses),\\r\\n\\t\\teven if such Contributor has been advised of the possibility of such\\r\\n\\t\\tdamages.</p>\\r\\n\\t<p><strong><a name=\"additional\">9. Accepting Warranty or Additional Liability</a></strong>.\\r\\n\\t\\tWhile redistributing the Work or Derivative Works thereof, You may choose\\r\\n\\t\\tto offer, and charge a fee for, acceptance of support, warranty, indemnity,\\r\\n\\t\\tor other liability obligations and/or rights consistent with this License.\\r\\n\\t\\tHowever, in accepting such obligations, You may act only on Your own behalf\\r\\n\\t\\tand on Your sole responsibility, not on behalf of any other Contributor,\\r\\n\\t\\tand only if You agree to indemnify, defend, and hold each Contributor\\r\\n\\t\\tharmless for any liability incurred by, or claims asserted against, such\\r\\n\\t\\tContributor by reason of your accepting any such warranty or additional\\r\\n\\t\\tliability.</p>\\r\\n\\t<h3>END OF TERMS AND CONDITIONS</h3>\\r\\n\\t<h3 id=\"apply\">APPENDIX: How to apply the Apache License to your work</h3>\\r\\n\\t<p>To apply the Apache License to your work, attach the following boilerplate\\r\\n\\t\\tnotice, with the fields enclosed by brackets \"[]\" replaced with your own\\r\\n\\t\\tidentifying information. (Don\\'t include the brackets!) The text should be\\r\\n\\t\\tenclosed in the appropriate comment syntax for the file format. We also\\r\\n\\t\\trecommend that a file or class name and description of purpose be included\\r\\n\\t\\ton the same \"printed page\" as the copyright notice for easier\\r\\n\\t\\tidentification within third-party archives.</p>\\r\\n\\t<div class=\"codehilite\"><pre>Copyright [yyyy] [name of copyright owner]\\r\\n\\r\\nLicensed under the Apache License, Version 2.0 (the \"License\");\\r\\nyou may not use this file except in compliance with the License.\\r\\nYou may obtain a copy of the License at\\r\\n\\r\\n    http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nUnless required by applicable law or agreed to in writing, software\\r\\ndistributed under the License is distributed on an \"AS IS\" BASIS,\\r\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\nSee the License for the specific language governing permissions and\\r\\nlimitations under the License.\\r\\n</pre></div>';});\n\n","\ndefine('text!platform/commonUI/about/res/templates/license-mit.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\\r\\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\\r\\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>';});\n\n","\ndefine('text!platform/commonUI/about/res/templates/licenses.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"LicenseController as lc\" class=\"abs l-standalone s-text l-about l-licenses s-about s-licenses\">\\r\\n\\t<h1>OpenMCT Web Licenses</h1>\\r\\n\\t<h2>Apache License</h2>\\r\\n\\t<mct-include key=\"\\'license-apache\\'\"></mct-include>\\r\\n\\r\\n\\t<h2>Software Components Licenses</h2>\\r\\n    <p>This software includes components released under the following licenses:</p>\\r\\n\\t<div class=\"l-licenses-software\">\\r\\n\\t\\t<div class=\"l-license-software\" ng-repeat=\"license in lc.licenses()\">\\r\\n\\t\\t\\t<h3><a target=\"_blank\" ng-href=\"{{license.website}}\">{{license.name}}</a></h3>\\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<em>Version</em> {{license.version}}\\r\\n\\t\\t\\t\\t<em>&nbsp;|&nbsp;Author<span ng-show=\"license.author.indexOf(\\',\\') > 0\">s</span></em> {{license.author}}\\r\\n\\t\\t\\t\\t<em>&nbsp;|&nbsp;Description</em> {{license.description}}\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t\\t<em>License</em>\\r\\n\\t\\t\\t<div class=\"s-license-text\">\\r\\n\\t\\t\\t\\t<p ng-show=\"license.copyright.length > 0\">{{license.copyright}}</p>\\r\\n\\t\\t\\t\\t<mct-include key=\"license.license\"></mct-include>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/about/res/templates/licenses-export-md.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"LicenseController as lc\" class=\"abs l-about l-standalone s-text s-md-export\">\\r\\n    <h1># Open MCT Licenses</h1>\\r\\n    <h2>## Apache License</h2>\\r\\n    <mct-include key=\"\\'license-apache\\'\"></mct-include>\\r\\n\\r\\n    <h2>## Software Components Licenses</h2>\\r\\n    <p>This software includes components released under the following licenses:</p>\\r\\n    <div class=\"l-license-software\" ng-repeat=\"license in lc.licenses()\">\\r\\n        <p>### {{license.name}}</p>\\r\\n        <p>#### Info</p>\\r\\n        <p>* Link: {{license.website}}</p>\\r\\n        <p>* Version: {{license.version}}</p>\\r\\n        <p>* Author<span ng-show=\"license.author.indexOf(\\',\\') > 0\">s</span>: {{license.author}}</p>\\r\\n        <p>* Description: {{license.description}}</p>\\r\\n        <p>#### License</p>\\r\\n        <p ng-show=\"license.copyright.length > 0\">{{license.copyright}}</p>\\r\\n        <mct-include key=\"license.license\"></mct-include>\\r\\n        <p>&nbsp;</p>\\r\\n        <p>---</p>\\r\\n    </div>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/about/bundle',[\r\n    \"text!./res/templates/about-dialog.html\",\r\n    \"./src/LogoController\",\r\n    \"./src/AboutController\",\r\n    \"./src/LicenseController\",\r\n    \"text!./res/templates/app-logo.html\",\r\n    \"text!./res/templates/about-logo.html\",\r\n    \"text!./res/templates/overlay-about.html\",\r\n    \"text!./res/templates/license-apache.html\",\r\n    \"text!./res/templates/license-mit.html\",\r\n    \"text!./res/templates/licenses.html\",\r\n    \"text!./res/templates/licenses-export-md.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    aboutDialogTemplate,\r\n    LogoController,\r\n    AboutController,\r\n    LicenseController,\r\n    appLogoTemplate,\r\n    aboutLogoTemplate,\r\n    overlayAboutTemplate,\r\n    licenseApacheTemplate,\r\n    licenseMitTemplate,\r\n    licensesTemplate,\r\n    licensesExportMdTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/about\", {\r\n        \"name\": \"About Open MCT\",\r\n        \"extensions\": {\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"app-logo\",\r\n                    \"priority\": \"optional\",\r\n                    \"template\": appLogoTemplate\r\n                },\r\n                {\r\n                    \"key\": \"about-logo\",\r\n                    \"priority\": \"preferred\",\r\n                    \"template\": aboutLogoTemplate\r\n                },\r\n                {\r\n                    \"key\": \"about-dialog\",\r\n                    \"template\": aboutDialogTemplate\r\n                },\r\n                {\r\n                    \"key\": \"overlay-about\",\r\n                    \"template\": overlayAboutTemplate\r\n                },\r\n                {\r\n                    \"key\": \"license-apache\",\r\n                    \"template\": licenseApacheTemplate\r\n                },\r\n                {\r\n                    \"key\": \"license-mit\",\r\n                    \"template\": licenseMitTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"LogoController\",\r\n                    \"depends\": [\r\n                        \"overlayService\"\r\n                    ],\r\n                    \"implementation\": LogoController\r\n                },\r\n                {\r\n                    \"key\": \"AboutController\",\r\n                    \"depends\": [\r\n                        \"versions[]\",\r\n                        \"$window\"\r\n                    ],\r\n                    \"implementation\": AboutController\r\n                },\r\n                {\r\n                    \"key\": \"LicenseController\",\r\n                    \"depends\": [\r\n                        \"licenses[]\"\r\n                    ],\r\n                    \"implementation\": LicenseController\r\n                }\r\n            ],\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"Json.NET\",\r\n                    \"version\": \"6.0.8\",\r\n                    \"author\": \"Newtonsoft\",\r\n                    \"description\": \"JSON serialization/deserialization\",\r\n                    \"website\": \"http://www.newtonsoft.com/json\",\r\n                    \"copyright\": \"Copyright (c) 2007 James Newton-King\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md\"\r\n                },\r\n                {\r\n                    \"name\": \"Nancy\",\r\n                    \"version\": \"0.23.2\",\r\n                    \"author\": \"Andreas Håkansson, Steven Robbins and contributors\",\r\n                    \"description\": \"Embedded web server\",\r\n                    \"website\": \"http://nancyfx.org/\",\r\n                    \"copyright\": \"Copyright © 2010 Andreas Håkansson, Steven Robbins and contributors\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"http://www.opensource.org/licenses/mit-license.php\"\r\n                },\r\n                {\r\n                    \"name\": \"Nancy.Hosting.Self\",\r\n                    \"version\": \"0.23.2\",\r\n                    \"author\": \"Andreas Håkansson, Steven Robbins and contributors\",\r\n                    \"description\": \"Embedded web server\",\r\n                    \"website\": \"http://nancyfx.org/\",\r\n                    \"copyright\": \"Copyright © 2010 Andreas Håkansson, Steven Robbins and contributors\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"http://www.opensource.org/licenses/mit-license.php\"\r\n                },\r\n                {\r\n                    \"name\": \"SuperSocket\",\r\n                    \"version\": \"0.9.0.2\",\r\n                    \"author\": \" Kerry Jiang\",\r\n                    \"description\": \"Supports SuperWebSocket\",\r\n                    \"website\": \"https://supersocket.codeplex.com/\",\r\n                    \"copyright\": \"Copyright 2010-2014 Kerry Jiang (kerry-jiang@hotmail.com)\",\r\n                    \"license\": \"license-apache\",\r\n                    \"link\": \"https://supersocket.codeplex.com/license\"\r\n                },\r\n                {\r\n                    \"name\": \"SuperWebSocket\",\r\n                    \"version\": \"0.9.0.2\",\r\n                    \"author\": \" Kerry Jiang\",\r\n                    \"description\": \"WebSocket implementation for client-server communication\",\r\n                    \"website\": \"https://superwebsocket.codeplex.com/\",\r\n                    \"copyright\": \"Copyright 2010-2014 Kerry Jiang (kerry-jiang@hotmail.com)\",\r\n                    \"license\": \"license-apache\",\r\n                    \"link\": \"https://superwebsocket.codeplex.com/license\"\r\n                },\r\n                {\r\n                    \"name\": \"log4net\",\r\n                    \"version\": \"2.0.3\",\r\n                    \"author\": \"Apache Software Foundation\",\r\n                    \"description\": \"Logging\",\r\n                    \"website\": \"http://logging.apache.org/log4net/\",\r\n                    \"copyright\": \"Copyright © 2004-2015 Apache Software Foundation.\",\r\n                    \"license\": \"license-apache\",\r\n                    \"link\": \"http://logging.apache.org/log4net/license.html\"\r\n                }\r\n            ],\r\n            \"routes\": [\r\n                {\r\n                    \"when\": \"/licenses\",\r\n                    \"template\": licensesTemplate\r\n                },\r\n                {\r\n                    \"when\": \"/licenses-md\",\r\n                    \"template\": licensesExportMdTemplate\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements Browse mode.\r\n * @namespace platform/commonUI/browse\r\n */\r\ndefine(\r\n    'platform/commonUI/browse/src/BrowseController',[],\r\n    function () {\r\n\r\n        var ROOT_ID = \"ROOT\";\r\n\r\n        /**\r\n         * The BrowseController is used to populate the initial scope in Browse\r\n         * mode. It loads the root object from the objectService and makes it\r\n         * available in the scope for Angular template's; this is the point at\r\n         * which Angular templates first have access to the domain object\r\n         * hierarchy.\r\n         *\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function BrowseController(\r\n            $scope,\r\n            $route,\r\n            $location,\r\n            objectService,\r\n            navigationService,\r\n            urlService,\r\n            defaultPath\r\n        ) {\r\n            var path = [ROOT_ID].concat(\r\n                ($route.current.params.ids || defaultPath).split(\"/\")\r\n            );\r\n\r\n            function updateRoute(domainObject) {\r\n                var priorRoute = $route.current,\r\n                    // Act as if params HADN'T changed to avoid page reload\r\n                    unlisten;\r\n\r\n                unlisten = $scope.$on('$locationChangeSuccess', function () {\r\n                    // Checks path to make sure /browse/ is at front\r\n                    // if so, change $route.current\r\n                    if ($location.path().indexOf(\"/browse/\") === 0) {\r\n                        $route.current = priorRoute;\r\n                    }\r\n                    unlisten();\r\n                });\r\n                // urlService.urlForLocation used to adjust current\r\n                // path to new, addressed, path based on\r\n                // domainObject\r\n                $location.path(urlService.urlForLocation(\"browse\", domainObject));\r\n\r\n            }\r\n\r\n            function setScopeObjects(domainObject, navigationAllowed) {\r\n                if (navigationAllowed) {\r\n                    $scope.navigatedObject = domainObject;\r\n                    $scope.treeModel.selectedObject = domainObject;\r\n                    updateRoute(domainObject);\r\n                } else {\r\n                    //If navigation was unsuccessful (ie. blocked), reset\r\n                    // the selected object in the tree to the currently\r\n                    // navigated object\r\n                    $scope.treeModel.selectedObject = $scope.navigatedObject ;\r\n                }\r\n            }\r\n\r\n            // Callback for updating the in-scope reference to the object\r\n            // that is currently navigated-to.\r\n            function setNavigation(domainObject) {\r\n                if (domainObject === $scope.navigatedObject) {\r\n                    //do nothing;\r\n                    return;\r\n                }\r\n                if (domainObject) {\r\n                    domainObject.getCapability(\"action\").perform(\"navigate\").then(setScopeObjects.bind(undefined, domainObject));\r\n                } else {\r\n                    setScopeObjects(domainObject, true);\r\n                }\r\n            }\r\n\r\n            function navigateTo(domainObject) {\r\n\r\n                // Check if an object has been navigated-to already...\r\n                // If not, or if an ID path has been explicitly set in the URL,\r\n                // navigate to the URL-specified object.\r\n                if (!navigationService.getNavigation() || $route.current.params.ids) {\r\n                    // If not, pick a default as the last\r\n                    // root-level component (usually \"mine\")\r\n                    navigationService.setNavigation(domainObject);\r\n                    $scope.navigatedObject = domainObject;\r\n                } else {\r\n                    // Otherwise, just expose the currently navigated object.\r\n                    $scope.navigatedObject = navigationService.getNavigation();\r\n                    updateRoute($scope.navigatedObject);\r\n                }\r\n            }\r\n\r\n            function findObject(domainObjects, id) {\r\n                var i;\r\n                for (i = 0; i < domainObjects.length; i += 1) {\r\n                    if (domainObjects[i].getId() === id) {\r\n                        return domainObjects[i];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Navigate to the domain object identified by path[index],\r\n            // which we expect to find in the composition of the passed\r\n            // domain object.\r\n            function doNavigate(domainObject, index) {\r\n                var composition = domainObject.useCapability(\"composition\");\r\n                if (composition) {\r\n                    composition.then(function (c) {\r\n                        var nextObject = findObject(c, path[index]);\r\n                        if (nextObject) {\r\n                            if (index + 1 >= path.length) {\r\n                                navigateTo(nextObject);\r\n                            } else {\r\n                                doNavigate(nextObject, index + 1);\r\n                            }\r\n                        } else if (index === 1 && c.length > 0) {\r\n                            // Roots are in a top-level container that we don't\r\n                            // want to be selected, so if we couldn't find an\r\n                            // object at the path we wanted, at least select\r\n                            // one of its children.\r\n                            navigateTo(c[c.length - 1]);\r\n                        } else {\r\n                            // Couldn't find the next element of the path\r\n                            // so navigate to the last path object we did find\r\n                            navigateTo(domainObject);\r\n                        }\r\n                    });\r\n                } else {\r\n                    // Similar to above case; this object has no composition,\r\n                    // so navigate to it instead of subsequent path elements.\r\n                    navigateTo(domainObject);\r\n                }\r\n            }\r\n\r\n            // Load the root object, put it in the scope.\r\n            // Also, load its immediate children, and (possibly)\r\n            // navigate to one of them, so that navigation state has\r\n            // a useful initial value.\r\n            objectService.getObjects([path[0]]).then(function (objects) {\r\n                $scope.domainObject = objects[path[0]];\r\n                doNavigate($scope.domainObject, 1);\r\n            });\r\n\r\n            // Provide a model for the tree to modify\r\n            $scope.treeModel = {\r\n                selectedObject: navigationService.getNavigation()\r\n            };\r\n\r\n            // Listen for changes in navigation state.\r\n            navigationService.addListener(setNavigation);\r\n\r\n            // Also listen for changes which come from the tree. Changes in\r\n            // the tree will trigger a change in browse navigation state.\r\n            $scope.$watch(\"treeModel.selectedObject\", setNavigation);\r\n\r\n            // Clean up when the scope is destroyed\r\n            $scope.$on(\"$destroy\", function () {\r\n                navigationService.removeListener(setNavigation);\r\n            });\r\n        }\r\n\r\n        return BrowseController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/commonUI/browse/src/PaneController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller to provide the ability to show/hide the tree in\r\n         * Browse mode.\r\n         * @constructor\r\n         * @memberof platform/commonUI/browse\r\n         */\r\n        function PaneController($scope, agentService, $window) {\r\n            var self = this;\r\n            this.agentService = agentService;\r\n\r\n            // Fast and cheap: if this has been opened in a new window, hide panes by default\r\n            this.state = !$window.opener;\r\n\r\n            /**\r\n             * Callback to invoke when any selection occurs in the tree.\r\n             * This controller can be passed in as the `parameters` object\r\n             * to the tree representation.\r\n             *\r\n             * @property {Function} callback\r\n             * @memberof platform/commonUI/browse.PaneController#\r\n             */\r\n            this.callback = function () {\r\n                // Note that, since this is a callback to pass, this is not\r\n                // declared as a method but as a property which happens to\r\n                // be a function.\r\n                if (agentService.isPhone() && agentService.isPortrait()) {\r\n                    // On phones, trees should collapse in portrait mode\r\n                    // when something is navigated-to.\r\n                    self.state = false;\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Toggle the visibility of the pane.\r\n         */\r\n        PaneController.prototype.toggle = function () {\r\n            this.state = !this.state;\r\n        };\r\n\r\n        /**\r\n         * Get the desired visibility state of the pane.\r\n         * @returns {boolean} true when visible\r\n         */\r\n        PaneController.prototype.visible = function () {\r\n            return this.state;\r\n        };\r\n\r\n        return PaneController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT Web, Copyright (c) 2014-2015, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT Web is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT Web includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/commonUI/browse/src/InspectorPaneController',[\"./PaneController\"],\r\n    function (PaneController) {\r\n\r\n        /**\r\n         * Pane controller that reveals inspector, if hidden, when object\r\n         * switches to edit mode.\r\n         *\r\n         * @param $scope\r\n         * @param agentService\r\n         * @param $window\r\n         * @param navigationService\r\n         * @constructor\r\n         */\r\n        function InspectorPaneController($scope, agentService, $window, navigationService) {\r\n            PaneController.call(this, $scope, agentService, $window);\r\n\r\n            var statusListener,\r\n                self = this;\r\n\r\n            function showInspector(statuses) {\r\n                if (statuses.indexOf('editing') !== -1 && !self.visible()) {\r\n                    self.toggle();\r\n                }\r\n            }\r\n\r\n            function attachStatusListener(domainObject) {\r\n                // Remove existing status listener if existing\r\n                if (statusListener) {\r\n                    statusListener();\r\n                }\r\n\r\n                if (domainObject.hasCapability(\"status\")) {\r\n                    statusListener = domainObject.getCapability(\"status\").listen(showInspector);\r\n                }\r\n                return statusListener;\r\n            }\r\n\r\n            var domainObject = navigationService.getNavigation();\r\n            if (domainObject) {\r\n                attachStatusListener(domainObject);\r\n            }\r\n\r\n            var navigationListener = navigationService.addListener(attachStatusListener);\r\n\r\n            $scope.$on(\"$destroy\", function () {\r\n                statusListener();\r\n                navigationListener();\r\n            });\r\n        }\r\n\r\n        InspectorPaneController.prototype = Object.create(PaneController.prototype);\r\n\r\n        return InspectorPaneController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/browse/src/BrowseObjectController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the `browse-object` representation of a domain\r\n         * object (the right-hand side of Browse mode.)\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function BrowseObjectController($scope, $location, $route) {\r\n            var navigatedObject;\r\n            function setViewForDomainObject(domainObject) {\r\n\r\n                var locationViewKey = $location.search().view;\r\n\r\n                function selectViewIfMatching(view) {\r\n                    if (view.key === locationViewKey) {\r\n                        $scope.representation = $scope.representation || {};\r\n                        $scope.representation.selected = view;\r\n                    }\r\n                }\r\n\r\n                if (locationViewKey) {\r\n                    ((domainObject && domainObject.useCapability('view')) || [])\r\n                        .forEach(selectViewIfMatching);\r\n                }\r\n                navigatedObject = domainObject;\r\n            }\r\n\r\n            function updateQueryParam(viewKey) {\r\n                var unlisten,\r\n                    priorRoute = $route.current;\r\n\r\n                if (viewKey) {\r\n                    $location.search('view', viewKey);\r\n                    unlisten = $scope.$on('$locationChangeSuccess', function () {\r\n                        // Checks path to make sure /browse/ is at front\r\n                        // if so, change $route.current\r\n                        if ($location.path().indexOf(\"/browse/\") === 0) {\r\n                            $route.current = priorRoute;\r\n                        }\r\n                        unlisten();\r\n                    });\r\n                }\r\n            }\r\n\r\n            $scope.$watch('domainObject', setViewForDomainObject);\r\n            $scope.$watch('representation.selected.key', updateQueryParam);\r\n\r\n            $scope.doAction = function (action) {\r\n                return $scope[action] && $scope[action]();\r\n            };\r\n\r\n        }\r\n\r\n        return BrowseObjectController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining MenuArrowController. Created by shale on 06/30/2015.\r\n */\r\ndefine(\r\n    'platform/commonUI/browse/src/MenuArrowController',[],\r\n    function () {\r\n\r\n        /**\r\n         * A left-click on the menu arrow should display a\r\n         * context menu. This controller launches the context\r\n         * menu.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function MenuArrowController($scope) {\r\n            this.$scope = $scope;\r\n        }\r\n\r\n        /**\r\n         * Show a context menu for the domain object in this scope.\r\n         *\r\n         * @param event the browser event which caused this (used to\r\n         *        position the menu)\r\n         */\r\n        MenuArrowController.prototype.showMenu = function (event) {\r\n            var actionContext = {\r\n                key: 'menu',\r\n                domainObject: this.$scope.domainObject,\r\n                event: event\r\n            };\r\n\r\n            this.$scope.domainObject.getCapability('action').perform(actionContext);\r\n        };\r\n\r\n        return MenuArrowController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining NavigationService. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/browse/src/navigation/NavigationService',[],\r\n    function () {\r\n\r\n        /**\r\n         * The navigation service maintains the application's current\r\n         * navigation state, and allows listening for changes thereto.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function NavigationService() {\r\n            this.navigated = undefined;\r\n            this.callbacks = [];\r\n        }\r\n\r\n        /**\r\n         * Get the current navigation state.\r\n         * @returns {DomainObject} the object that is navigated-to\r\n         */\r\n        NavigationService.prototype.getNavigation = function () {\r\n            return this.navigated;\r\n        };\r\n\r\n        /**\r\n         * Set the current navigation state. This will invoke listeners.\r\n         * @param {DomainObject} domainObject the domain object to navigate to\r\n         */\r\n        NavigationService.prototype.setNavigation = function (value) {\r\n            if (this.navigated !== value) {\r\n                this.navigated = value;\r\n                this.callbacks.forEach(function (callback) {\r\n                    callback(value);\r\n                });\r\n            }\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Listen for changes in navigation. The passed callback will\r\n         * be invoked with the new domain object of navigation when\r\n         * this changes.\r\n         * @param {function} callback the callback to invoke when\r\n         *        navigation state changes\r\n         */\r\n        NavigationService.prototype.addListener = function (callback) {\r\n            this.callbacks.push(callback);\r\n        };\r\n\r\n        /**\r\n         * Stop listening for changes in navigation state.\r\n         * @param {function} callback the callback which should\r\n         *        no longer be invoked when navigation state\r\n         *        changes\r\n         */\r\n        NavigationService.prototype.removeListener = function (callback) {\r\n            this.callbacks = this.callbacks.filter(function (cb) {\r\n                return cb !== callback;\r\n            });\r\n        };\r\n\r\n        return NavigationService;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining NavigateAction. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/browse/src/navigation/NavigateAction',[],\r\n    function () {\r\n\r\n        /**\r\n         * The navigate action navigates to a specific domain object.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         * @implements {Action}\r\n         */\r\n        function NavigateAction(navigationService, $q, policyService, $window, context) {\r\n            this.domainObject = context.domainObject;\r\n            this.$q = $q;\r\n            this.navigationService = navigationService;\r\n            this.policyService = policyService;\r\n            this.$window = $window;\r\n        }\r\n\r\n        /**\r\n         * Navigate to the object described in the context.\r\n         * @returns {Promise} a promise that is resolved once the\r\n         *          navigation has been updated\r\n         */\r\n        NavigateAction.prototype.perform = function () {\r\n            var self = this,\r\n                navigationAllowed = true;\r\n\r\n            function allow() {\r\n                self.policyService.allow(\"navigation\", self.navigationService.getNavigation(), self.domainObject, function (message) {\r\n                    navigationAllowed = self.$window.confirm(message + \"\\r\\n\\r\\n\" +\r\n                        \" Are you sure you want to continue?\");\r\n                });\r\n                return navigationAllowed;\r\n            }\r\n\r\n            // Set navigation, and wrap like a promise\r\n            return this.$q.when(\r\n                allow() && this.navigationService.setNavigation(this.domainObject)\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Navigate as an action is only applicable when a domain object\r\n         * is described in the action context.\r\n         * @param {ActionContext} context the context in which the action\r\n         *        will be performed\r\n         * @returns {boolean} true if applicable\r\n         */\r\n        NavigateAction.appliesTo = function (context) {\r\n            return context.domainObject !== undefined;\r\n        };\r\n\r\n        return NavigateAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/browse/src/navigation/OrphanNavigationHandler',[], function () {\r\n\r\n    /**\r\n     * Navigates away from orphan objects whenever they are detected.\r\n     *\r\n     * An orphan object is an object whose apparent parent does not\r\n     * actually contain it. This may occur in certain circumstances, such\r\n     * as when persistence succeeds for a newly-created object but fails\r\n     * for its parent.\r\n     *\r\n     * @param throttle the `throttle` service\r\n     * @param topic the `topic` service\r\n     * @param navigationService the `navigationService`\r\n     * @constructor\r\n     */\r\n    function OrphanNavigationHandler(throttle, topic, navigationService) {\r\n        var throttledCheckNavigation;\r\n\r\n        function getParent(domainObject) {\r\n            var context = domainObject.getCapability('context');\r\n            return context.getParent();\r\n        }\r\n\r\n        function isOrphan(domainObject) {\r\n            var parent = getParent(domainObject),\r\n                composition = parent.getModel().composition,\r\n                id = domainObject.getId();\r\n            return !composition || (composition.indexOf(id) === -1);\r\n        }\r\n\r\n        function navigateToParent(domainObject) {\r\n            var parent = getParent(domainObject);\r\n            return parent.getCapability('action').perform('navigate');\r\n        }\r\n\r\n        function checkNavigation() {\r\n            var navigatedObject = navigationService.getNavigation();\r\n            if (navigatedObject.hasCapability('context') &&\r\n                isOrphan(navigatedObject)) {\r\n                if (!navigatedObject.getCapability('editor').isEditContextRoot()) {\r\n                    navigateToParent(navigatedObject);\r\n                }\r\n            }\r\n        }\r\n\r\n        throttledCheckNavigation = throttle(checkNavigation);\r\n\r\n        navigationService.addListener(throttledCheckNavigation);\r\n        topic('mutation').listen(throttledCheckNavigation);\r\n    }\r\n\r\n    return OrphanNavigationHandler;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining NewTabAction (Originally NewWindowAction). Created by vwoeltje on 11/18/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/browse/src/windowing/NewTabAction',[],\r\n    function () {\r\n        /**\r\n         * The new tab action allows a domain object to be opened\r\n         * into a new browser tab.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         * @implements {Action}\r\n         */\r\n        function NewTabAction(urlService, $window, context) {\r\n            context = context || {};\r\n\r\n            this.urlService = urlService;\r\n            this.open = function () {\r\n                $window.open.apply($window, arguments);\r\n            };\r\n\r\n            // Choose the object to be opened into a new tab\r\n            this.domainObject = context.selectedObject || context.domainObject;\r\n        }\r\n\r\n        NewTabAction.prototype.perform = function () {\r\n            this.open(\r\n                this.urlService.urlForNewTab(\"browse\", this.domainObject),\r\n                \"_blank\"\r\n            );\r\n        };\r\n\r\n        return NewTabAction;\r\n    }\r\n);\r\n\n","(function(root) {\ndefine(\"screenfull\", [], function() {\n  return (function() {\n/*!\r\n* screenfull\r\n* v3.0.0 - 2015-11-24\r\n* (c) Sindre Sorhus; MIT License\r\n*/\r\n!function(){\"use strict\";var a=\"undefined\"!=typeof module&&module.exports,b=\"undefined\"!=typeof Element&&\"ALLOW_KEYBOARD_INPUT\"in Element,c=function(){for(var a,b,c=[[\"requestFullscreen\",\"exitFullscreen\",\"fullscreenElement\",\"fullscreenEnabled\",\"fullscreenchange\",\"fullscreenerror\"],[\"webkitRequestFullscreen\",\"webkitExitFullscreen\",\"webkitFullscreenElement\",\"webkitFullscreenEnabled\",\"webkitfullscreenchange\",\"webkitfullscreenerror\"],[\"webkitRequestFullScreen\",\"webkitCancelFullScreen\",\"webkitCurrentFullScreenElement\",\"webkitCancelFullScreen\",\"webkitfullscreenchange\",\"webkitfullscreenerror\"],[\"mozRequestFullScreen\",\"mozCancelFullScreen\",\"mozFullScreenElement\",\"mozFullScreenEnabled\",\"mozfullscreenchange\",\"mozfullscreenerror\"],[\"msRequestFullscreen\",\"msExitFullscreen\",\"msFullscreenElement\",\"msFullscreenEnabled\",\"MSFullscreenChange\",\"MSFullscreenError\"]],d=0,e=c.length,f={};e>d;d++)if(a=c[d],a&&a[1]in document){for(d=0,b=a.length;b>d;d++)f[c[0][d]]=a[d];return f}return!1}(),d={request:function(a){var d=c.requestFullscreen;a=a||document.documentElement,/5\\.1[\\.\\d]* Safari/.test(navigator.userAgent)?a[d]():a[d](b&&Element.ALLOW_KEYBOARD_INPUT)},exit:function(){document[c.exitFullscreen]()},toggle:function(a){this.isFullscreen?this.exit():this.request(a)},raw:c};return c?(Object.defineProperties(d,{isFullscreen:{get:function(){return Boolean(document[c.fullscreenElement])}},element:{enumerable:!0,get:function(){return document[c.fullscreenElement]}},enabled:{enumerable:!0,get:function(){return Boolean(document[c.fullscreenEnabled])}}}),void(a?module.exports=d:window.screenfull=d)):void(a?module.exports=!1:window.screenfull=!1)}();\nreturn root.screenfull = screenfull;\n  }).apply(root, arguments);\n});\n}(this));\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining FullscreenAction. Created by vwoeltje on 11/18/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/browse/src/windowing/FullscreenAction',[\"screenfull\"],\r\n    function (screenfull) {\r\n\r\n        var ENTER_FULLSCREEN = \"Enter full screen mode\",\r\n            EXIT_FULLSCREEN = \"Exit full screen mode\";\r\n\r\n        /**\r\n         * The fullscreen action toggles between fullscreen display\r\n         * and regular in-window display.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         * @implements {Action}\r\n         */\r\n        function FullscreenAction(context) {\r\n            this.context = context;\r\n        }\r\n\r\n        FullscreenAction.prototype.perform = function () {\r\n            screenfull.toggle();\r\n        };\r\n\r\n        FullscreenAction.prototype.getMetadata = function () {\r\n            // We override getMetadata, because the icon cssclass and\r\n            // description need to be determined at run-time\r\n            // based on whether or not we are currently\r\n            // full screen.\r\n            var metadata = Object.create(FullscreenAction);\r\n            metadata.cssclass = screenfull.isFullscreen ? \"icon-fullscreen-expand\" : \"icon-fullscreen-collapse\";\r\n            metadata.description = screenfull.isFullscreen ?\r\n                EXIT_FULLSCREEN : ENTER_FULLSCREEN;\r\n            metadata.group = \"windowing\";\r\n            metadata.context = this.context;\r\n            return metadata;\r\n        };\r\n\r\n        return FullscreenAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/browse/src/windowing/WindowTitler',[],\r\n    function () {\r\n\r\n        /**\r\n         * Updates the title of the current window to reflect the name\r\n         * of the currently navigated-to domain object.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function WindowTitler(navigationService, $rootScope, $document) {\r\n            // Look up name of the navigated domain object...\r\n            function getNavigatedObjectName() {\r\n                var navigatedObject = navigationService.getNavigation();\r\n                return navigatedObject && navigatedObject.getModel().name;\r\n            }\r\n\r\n            // Set the window title...\r\n            function setTitle(name) {\r\n                $document[0].title = name;\r\n            }\r\n\r\n            // Watch the former, and invoke the latter\r\n            $rootScope.$watch(getNavigatedObjectName, setTitle);\r\n        }\r\n\r\n        return WindowTitler;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/commonUI/browse/res/templates/browse.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n\\r\\n<div class=\"abs holder-all\" ng-controller=\"BrowseController\">\\r\\n    <mct-include key=\"\\'topbar-browse\\'\"></mct-include>\\r\\n    <div class=\"abs holder holder-main browse-area s-browse-area browse-wrapper\"\\r\\n         ng-controller=\"PaneController as modelPaneTree\"\\r\\n         ng-class=\"modelPaneTree.visible() ? \\'pane-tree-showing\\' : \\'pane-tree-hidden\\'\">\\r\\n        <mct-split-pane class=\\'abs contents\\'\\r\\n                        anchor=\\'left\\'>\\r\\n            <div class=\\'split-pane-component treeview pane left\\'>\\r\\n                <div class=\"abs holder l-flex-col holder-treeview-elements\">\\r\\n                    <mct-representation key=\"\\'create-button\\'\"\\r\\n                                        mct-object=\"navigatedObject\"\\r\\n                                        class=\"holder flex-elem create-button-holder\">\\r\\n                    </mct-representation>\\r\\n                    <mct-include key=\"\\'search\\'\"\\r\\n                                 ng-model=\"treeModel\"\\r\\n                                 class=\"holder l-flex-col flex-elem search-holder\"\\r\\n                                 ng-class=\"{ active: treeModel.search, grows: treeModel.search }\">\\r\\n                    </mct-include>\\r\\n                    <mct-representation key=\"\\'tree\\'\"\\r\\n                                        mct-object=\"domainObject\"\\r\\n                                        parameters=\"tree\"\\r\\n                                        ng-model=\"treeModel\"\\r\\n                                        class=\"holder flex-elem grows vscroll tree-holder\"\\r\\n                                        ng-hide=\"treeModel.search\">\\r\\n                    </mct-representation>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <mct-splitter class=\"splitter-treeview mobile-hide\"></mct-splitter>\\r\\n\\r\\n            <div class=\\'split-pane-component items pane primary-pane right\\'>\\r\\n                <a class=\"mini-tab-icon anchor-left toggle-pane toggle-tree\"\\r\\n                   title=\"{{ modelPaneTree.visible()? \\'Hide\\' : \\'Show\\' }} this pane\"\\r\\n                   ng-click=\"modelPaneTree.toggle()\"\\r\\n                   ng-class=\"{ collapsed : !modelPaneTree.visible() }\"></a>\\r\\n\\r\\n                <div class=\\'holder holder-object-and-inspector abs\\' id=\\'content-area\\'\\r\\n                     ng-controller=\"InspectorPaneController as modelPaneInspect\"\\r\\n                     ng-class=\"modelPaneInspect.visible() ? \\'pane-inspect-showing\\' : \\'pane-inspect-hidden\\'\">\\r\\n\\r\\n                    <mct-split-pane class=\\'l-object-and-inspector contents abs\\' anchor=\\'right\\'>\\r\\n                        <div class=\\'split-pane-component t-object pane primary-pane left\\'>\\r\\n                            <mct-representation mct-object=\"navigatedObject\"\\r\\n                                                key=\"\\'view-object\\'\"\\r\\n                                                class=\"abs holder holder-object\">\\r\\n                            </mct-representation>\\r\\n                            <a class=\"mini-tab-icon anchor-right mobile-hide toggle-pane toggle-inspect flush-right\"\\r\\n                               title=\"{{ modelPaneInspect.visible()? \\'Hide\\' : \\'Show\\' }} the Inspection pane\"\\r\\n                               ng-click=\"modelPaneInspect.toggle()\"\\r\\n                               ng-class=\"{ collapsed : !modelPaneInspect.visible() }\"></a>\\r\\n                        </div>\\r\\n\\r\\n                        <mct-splitter class=\"splitter-inspect mobile-hide flush-right edge-shdw\"></mct-splitter>\\r\\n\\r\\n                        <div class=\"split-pane-component t-inspect pane right mobile-hide\">\\r\\n                            <mct-representation key=\"\\'object-inspector\\'\"\\r\\n                                                mct-object=\"navigatedObject\"\\r\\n                                                ng-model=\"treeModel\">\\r\\n                            </mct-representation>\\r\\n                        </div>\\r\\n                    </mct-split-pane>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mct-split-pane>\\r\\n    </div>\\r\\n    <mct-include key=\"\\'bottombar\\'\"></mct-include>\\r\\n</div>\\r\\n\\r\\n';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/browse-object.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"BrowseObjectController\" class=\"abs l-flex-col\">\\r\\n    <div class=\"holder flex-elem l-flex-row object-browse-bar \">\\r\\n        <div class=\"items-select left flex-elem l-flex-row grows\">\\r\\n            <mct-representation key=\"\\'back-arrow\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                class=\"flex-elem l-back\"></mct-representation>\\r\\n            <mct-representation key=\"\\'object-header\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                class=\"l-flex-row flex-elem grows object-header\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n        <div class=\"btn-bar right l-flex-row flex-elem flex-justify-end flex-fixed\">\\r\\n            <mct-representation key=\"\\'switcher\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                ng-model=\"representation\">\\r\\n            </mct-representation>\\r\\n            <!-- Temporarily, on mobile, the action buttons are hidden-->\\r\\n            <mct-representation key=\"\\'action-group\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                parameters=\"{ category: \\'view-control\\' }\"\\r\\n                                class=\"mobile-hide\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"holder l-flex-col flex-elem grows l-object-wrapper\">\\r\\n        <div class=\"holder l-flex-col flex-elem grows l-object-wrapper-inner\">\\r\\n            <!-- Toolbar and Save/Cancel buttons -->\\r\\n            <div class=\"l-edit-controls flex-elem l-flex-row flex-align-end\">\\r\\n                <mct-representation key=\"\\'edit-action-buttons\\'\"\\r\\n                                    mct-object=\"domainObject\"\\r\\n                                    class=\\'flex-elem conclude-editing\\'>\\r\\n                </mct-representation>\\r\\n\\r\\n            </div>\\r\\n            <mct-representation key=\"representation.selected.key\"\\r\\n                                mct-object=\"representation.selected.key && domainObject\"\\r\\n                                class=\"abs flex-elem grows object-holder-main scroll\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/items/grid-item.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<!-- For selected, add class \\'selected\\' to outer div -->\\r\\n<div class=\\'item grid-item\\' ng-click=\\'action.perform(\"navigate\")\\'>\\r\\n    <div class=\\'contents abs\\'>\\r\\n        <div class=\\'top-bar bar abs\\'>\\r\\n            <span class=\\'icon-people\\' title=\\'Shared\\'></span>\\r\\n            <mct-representation class=\"desktop-hide\" key=\"\\'info-button\\'\" mct-object=\"domainObject\"></mct-representation>\\r\\n        </div>\\r\\n        <div class=\\'item-main abs lg\\'>\\r\\n            <span class=\"t-item-icon\" ng-class=\"{ \\'l-icon-link\\':location.isLink() }\">\\r\\n                <span class=\"t-item-icon-glyph ng-binding {{type.getCssClass()}}\"></span>\\r\\n            </span>\\r\\n            <div class=\\'abs item-open icon-pointer-right\\'></div>\\r\\n        </div>\\r\\n        <div class=\\'bottom-bar bar abs\\'>\\r\\n            <div class=\\'title\\'>{{model.name}}</div>\\r\\n            <div class=\\'details\\'>\\r\\n                <span>{{type.getName()}}</span>\\r\\n                <span ng-show=\"model.composition !== undefined\">\\r\\n                    - {{model.composition.length}} Item<span ng-show=\"model.composition.length > 1\">s</span>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/browse/object-header.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span class=\\'type-icon flex-elem {{type.getCssClass()}}\\'></span>\\r\\n<span class=\"l-elem-wrapper l-flex-row flex-elem grows\">\\r\\n    <span ng-if=\"parameters.mode\" class=\\'action flex-elem\\'>{{parameters.mode}}</span>\\r\\n    <span class=\\'title-label flex-elem flex-can-shrink\\'>{{model.name}}</span>\\r\\n    <mct-representation\\r\\n        key=\"\\'menu-arrow\\'\"\\r\\n        mct-object=\\'domainObject\\'\\r\\n        class=\"flex-elem context-available-w\"></mct-representation>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/menu-arrow.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n\\r\\n<span ng-controller=\"MenuArrowController as menuArrow\">\\r\\n    <a class=\\'context-available\\'\\r\\n       ng-click=\\'menuArrow.showMenu($event)\\'></a>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/back-arrow.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n\\r\\n<a class=\\'s-icon-button icon-pointer-left\\'\\r\\n   ng-show=\"context.getPath().length > 2\"\\r\\n   ng-click=\"context.getParent().getCapability(\\'action\\').perform(\\'navigate\\')\">\\r\\n</a>\\r\\n\\r\\n';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/items/items.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'items-holder grid abs\\'>\\r\\n    <mct-representation key=\"\\'grid-item\\'\"\\r\\n                        ng-repeat=\"childObject in composition\"\\r\\n                        mct-object=\"childObject\">\\r\\n    </mct-representation>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/browse/object-properties.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"ObjectInspectorController as controller\">\\r\\n    <ul class=\"flex-elem grows l-inspector-part\">\\r\\n        <li>\\r\\n            <em class=\"t-inspector-part-header\">Properties</em>\\r\\n            <div class=\"inspector-properties\"\\r\\n                 ng-repeat=\"data in metadata\"\\r\\n                 ng-class=\"{ first:$index === 0 }\">\\r\\n                <div class=\"label\">{{ data.name }}</div>\\r\\n                <div class=\"value\">{{ data.value }}</div>\\r\\n            </div>\\r\\n        </li>\\r\\n        <li ng-if=\"contextutalParents.length > 0\">\\r\\n            <em class=\"t-inspector-part-header\" title=\"The location of this linked object.\">Location</em>\\r\\n            <div ng-if=\"primaryParents.length > 0\" class=\"section-header\">This Object</div>\\r\\n            <span class=\"inspector-location\"\\r\\n                  ng-repeat=\"parent in contextutalParents\"\\r\\n                  ng-class=\"{ last:($index + 1) === contextualParents.length }\">\\r\\n                <mct-representation key=\"\\'label\\'\"\\r\\n                                    mct-object=\"parent\"\\r\\n                                    ng-model=\"ngModel\"\\r\\n                                    ng-click=\"ngModel.selectedObject = parent\"\\r\\n                                    class=\"location-item\">\\r\\n                </mct-representation>\\r\\n            </span>\\r\\n        </li>\\r\\n        <li ng-if=\"primaryParents.length > 0\">\\r\\n            <div class=\"section-header\">Object\\'s Original</div>\\r\\n            <span class=\"inspector-location\"\\r\\n                  ng-repeat=\"parent in primaryParents\"\\r\\n                  ng-class=\"{ last:($index + 1) === primaryParents.length }\">\\r\\n                <mct-representation key=\"\\'label\\'\"\\r\\n                                    mct-object=\"parent\"\\r\\n                                    ng-model=\"ngModel\"\\r\\n                                    ng-click=\"ngModel.selectedObject = parent\"\\r\\n                                    class=\"location-item\">\\r\\n                </mct-representation>\\r\\n            </span>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/browse/res/templates/browse/inspector-region.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"InspectorController\">\\r\\n    <div ng-repeat=\"region in regions\">\\r\\n        <mct-representation\\r\\n                key=\"region.content.key\"\\r\\n                mct-object=\"domainObject\"\\r\\n                ng-model=\"ngModel\">\\r\\n        </mct-representation>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/browse/bundle',[\r\n    \"./src/BrowseController\",\r\n    \"./src/PaneController\",\r\n    \"./src/InspectorPaneController\",\r\n    \"./src/BrowseObjectController\",\r\n    \"./src/MenuArrowController\",\r\n    \"./src/navigation/NavigationService\",\r\n    \"./src/navigation/NavigateAction\",\r\n    \"./src/navigation/OrphanNavigationHandler\",\r\n    \"./src/windowing/NewTabAction\",\r\n    \"./src/windowing/FullscreenAction\",\r\n    \"./src/windowing/WindowTitler\",\r\n    \"text!./res/templates/browse.html\",\r\n    \"text!./res/templates/browse-object.html\",\r\n    \"text!./res/templates/items/grid-item.html\",\r\n    \"text!./res/templates/browse/object-header.html\",\r\n    \"text!./res/templates/menu-arrow.html\",\r\n    \"text!./res/templates/back-arrow.html\",\r\n    \"text!./res/templates/items/items.html\",\r\n    \"text!./res/templates/browse/object-properties.html\",\r\n    \"text!./res/templates/browse/inspector-region.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    BrowseController,\r\n    PaneController,\r\n    InspectorPaneController,\r\n    BrowseObjectController,\r\n    MenuArrowController,\r\n    NavigationService,\r\n    NavigateAction,\r\n    OrphanNavigationHandler,\r\n    NewTabAction,\r\n    FullscreenAction,\r\n    WindowTitler,\r\n    browseTemplate,\r\n    browseObjectTemplate,\r\n    gridItemTemplate,\r\n    objectHeaderTemplate,\r\n    menuArrowTemplate,\r\n    backArrowTemplate,\r\n    itemsTemplate,\r\n    objectPropertiesTemplate,\r\n    inspectorRegionTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/browse\", {\r\n        \"extensions\": {\r\n            \"routes\": [\r\n                {\r\n                    \"when\": \"/browse/:ids*\",\r\n                    \"template\": browseTemplate,\r\n                    \"reloadOnSearch\": false\r\n                },\r\n                {\r\n                    \"when\": \"\",\r\n                    \"template\": browseTemplate,\r\n                    \"reloadOnSearch\": false\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"DEFAULT_PATH\",\r\n                    \"value\": \"mine\",\r\n                    \"priority\": \"fallback\"\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"BrowseController\",\r\n                    \"implementation\": BrowseController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$route\",\r\n                        \"$location\",\r\n                        \"objectService\",\r\n                        \"navigationService\",\r\n                        \"urlService\",\r\n                        \"DEFAULT_PATH\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"PaneController\",\r\n                    \"implementation\": PaneController,\r\n                    \"priority\": \"preferred\",\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"agentService\",\r\n                        \"$window\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"BrowseObjectController\",\r\n                    \"implementation\": BrowseObjectController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$location\",\r\n                        \"$route\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"MenuArrowController\",\r\n                    \"implementation\": MenuArrowController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"InspectorPaneController\",\r\n                    \"implementation\": InspectorPaneController,\r\n                    \"priority\": \"preferred\",\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"agentService\",\r\n                        \"$window\",\r\n                        \"navigationService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"view-object\",\r\n                    \"templateUrl\": \"templates/view-object.html\"\r\n                },\r\n                {\r\n                    \"key\": \"browse-object\",\r\n                    \"template\": browseObjectTemplate,\r\n                    \"gestures\": [\r\n                        \"drop\"\r\n                    ],\r\n                    \"uses\": [\r\n                        \"view\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"grid-item\",\r\n                    \"template\": gridItemTemplate,\r\n                    \"uses\": [\r\n                        \"type\",\r\n                        \"action\",\r\n                        \"location\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"info\",\r\n                        \"menu\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"object-header\",\r\n                    \"template\": objectHeaderTemplate,\r\n                    \"uses\": [\r\n                        \"type\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"menu-arrow\",\r\n                    \"template\": menuArrowTemplate,\r\n                    \"uses\": [\r\n                        \"action\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"menu\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"back-arrow\",\r\n                    \"uses\": [\r\n                        \"context\"\r\n                    ],\r\n                    \"template\": backArrowTemplate\r\n                },\r\n                {\r\n                    \"key\": \"object-properties\",\r\n                    \"template\": objectPropertiesTemplate\r\n                },\r\n                {\r\n                    \"key\": \"inspector-region\",\r\n                    \"template\": inspectorRegionTemplate\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"navigationService\",\r\n                    \"implementation\": NavigationService\r\n                }\r\n            ],\r\n            \"actions\": [\r\n                {\r\n                    \"key\": \"navigate\",\r\n                    \"implementation\": NavigateAction,\r\n                    \"depends\": [\r\n                        \"navigationService\",\r\n                        \"$q\",\r\n                        \"policyService\",\r\n                        \"$window\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"window\",\r\n                    \"name\": \"Open In New Tab\",\r\n                    \"implementation\": NewTabAction,\r\n                    \"description\": \"Open in a new browser tab\",\r\n                    \"category\": [\r\n                        \"view-control\",\r\n                        \"contextual\"\r\n                    ],\r\n                    \"depends\": [\r\n                        \"urlService\",\r\n                        \"$window\"\r\n                    ],\r\n                    \"group\": \"windowing\",\r\n                    \"cssclass\": \"icon-new-window\",\r\n                    \"priority\": \"preferred\"\r\n                },\r\n                {\r\n                    \"key\": \"fullscreen\",\r\n                    \"implementation\": FullscreenAction,\r\n                    \"category\": \"view-control\",\r\n                    \"group\": \"windowing\",\r\n                    \"priority\": \"default\"\r\n                }\r\n            ],\r\n            \"views\": [\r\n                {\r\n                    \"key\": \"items\",\r\n                    \"name\": \"Items\",\r\n                    \"cssclass\": \"icon-thumbs-strip\",\r\n                    \"description\": \"Grid of available items\",\r\n                    \"template\": itemsTemplate,\r\n                    \"uses\": [\r\n                        \"composition\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"drop\"\r\n                    ],\r\n                    \"type\": \"folder\",\r\n                    \"editable\": false\r\n                }\r\n            ],\r\n            \"runs\": [\r\n                {\r\n                    \"implementation\": WindowTitler,\r\n                    \"depends\": [\r\n                        \"navigationService\",\r\n                        \"$rootScope\",\r\n                        \"$document\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"implementation\": OrphanNavigationHandler,\r\n                    \"depends\": [\r\n                        \"throttle\",\r\n                        \"topic\",\r\n                        \"navigationService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"screenfull.js\",\r\n                    \"version\": \"1.2.0\",\r\n                    \"description\": \"Wrapper for cross-browser usage of fullscreen API\",\r\n                    \"author\": \"Sindre Sorhus\",\r\n                    \"website\": \"https://github.com/sindresorhus/screenfull.js/\",\r\n                    \"copyright\": \"Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/sindresorhus/screenfull.js/blob/gh-pages/license\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining EditActionController. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/controllers/EditActionController',[],\r\n    function () {\r\n\r\n        var ACTION_CONTEXT = { category: 'conclude-editing' };\r\n\r\n        /**\r\n         * Controller which supplies action instances for Save/Cancel.\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         */\r\n        function EditActionController($scope) {\r\n            // Maintain all \"conclude-editing\" actions in the present\r\n            // context.\r\n            function updateActions() {\r\n                $scope.editActions = $scope.action ?\r\n                        $scope.action.getActions(ACTION_CONTEXT) :\r\n                        [];\r\n            }\r\n\r\n            // Update set of actions whenever the action capability\r\n            // changes or becomes available.\r\n            $scope.$watch(\"action\", updateActions);\r\n        }\r\n\r\n        return EditActionController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/controllers/EditPanesController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Supports the Library and Elements panes in Edit mode.\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         */\r\n        function EditPanesController($scope) {\r\n            var self = this;\r\n\r\n            // Update root object based on represented object\r\n            function updateRoot(domainObject) {\r\n                var root = self.rootDomainObject,\r\n                    context = domainObject &&\r\n                        domainObject.getCapability('context'),\r\n                    newRoot = context && context.getTrueRoot(),\r\n                    oldId = root && root.getId(),\r\n                    newId = newRoot && newRoot.getId();\r\n\r\n                // Only update if this has actually changed,\r\n                // to avoid excessive refreshing.\r\n                if (oldId !== newId) {\r\n                    self.rootDomainObject = newRoot;\r\n                }\r\n            }\r\n\r\n            // Update root when represented object changes\r\n            $scope.$watch('domainObject', updateRoot);\r\n        }\r\n        /**\r\n         * Get the root-level domain object, as reported by the\r\n         * represented domain object.\r\n         * @returns {DomainObject} the root object\r\n         */\r\n        EditPanesController.prototype.getRoot = function () {\r\n            return this.rootDomainObject;\r\n        };\r\n\r\n        return EditPanesController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/controllers/ElementsController',[],\r\n    function () {\r\n\r\n        /**\r\n         * The ElementsController prepares the elements view for display\r\n         *\r\n         * @constructor\r\n         */\r\n        function ElementsController($scope) {\r\n            function filterBy(text) {\r\n                if (typeof text === 'undefined') {\r\n                    return $scope.searchText;\r\n                } else {\r\n                    $scope.searchText = text;\r\n                }\r\n            }\r\n\r\n            function searchElements(value) {\r\n                if ($scope.searchText) {\r\n                    return value.getModel().name.toLowerCase().search(\r\n                            $scope.searchText.toLowerCase()) !== -1;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            $scope.filterBy = filterBy;\r\n            $scope.searchElements = searchElements;\r\n        }\r\n\r\n        return ElementsController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements Edit mode.\r\n * @namespace platform/commonUI/edit\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/controllers/EditObjectController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller which is responsible for populating the scope for\r\n         * Edit mode\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         */\r\n        function EditObjectController($scope, $location, policyService) {\r\n            this.scope = $scope;\r\n            this.policyService = policyService;\r\n\r\n            var navigatedObject;\r\n            function setViewForDomainObject(domainObject) {\r\n\r\n                var locationViewKey = $location.search().view;\r\n\r\n                function selectViewIfMatching(view) {\r\n                    if (view.key === locationViewKey) {\r\n                        $scope.representation = $scope.representation || {};\r\n                        $scope.representation.selected = view;\r\n                    }\r\n                }\r\n\r\n                if (locationViewKey) {\r\n                    ((domainObject && domainObject.useCapability('view')) || [])\r\n                        .forEach(selectViewIfMatching);\r\n                }\r\n                navigatedObject = domainObject;\r\n            }\r\n\r\n            $scope.$watch('domainObject', setViewForDomainObject);\r\n\r\n            $scope.doAction = function (action) {\r\n                return $scope[action] && $scope[action]();\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Get the warning to show if the user attempts to navigate\r\n         * away from Edit mode while unsaved changes are present.\r\n         * @returns {string} the warning to show, or undefined if\r\n         *          there are no unsaved changes\r\n         */\r\n        EditObjectController.prototype.getUnloadWarning = function () {\r\n            var navigatedObject = this.scope.domainObject,\r\n                policyMessage;\r\n\r\n            this.policyService.allow(\"navigation\", navigatedObject, undefined, function (message) {\r\n                policyMessage = message;\r\n            });\r\n\r\n            return policyMessage;\r\n\r\n        };\r\n\r\n        return EditObjectController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/directives/MCTBeforeUnload',[],\r\n    function () {\r\n\r\n        /**\r\n         * Defines the `mct-before-unload` directive. The expression bound\r\n         * to this attribute will be evaluated during page navigation events\r\n         * and, if it returns a truthy value, will be used to populate a\r\n         * prompt to the user to confirm this navigation.\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         * @param $window the window\r\n         */\r\n        function MCTBeforeUnload($window) {\r\n            var unloads = [],\r\n                oldBeforeUnload = $window.onbeforeunload;\r\n\r\n            // Run all unload functions, returning the first returns truthily.\r\n            function checkUnloads() {\r\n                var result;\r\n                unloads.forEach(function (unload) {\r\n                    result = result || unload();\r\n                });\r\n                return result;\r\n            }\r\n\r\n            // Link function for an mct-before-unload directive usage\r\n            function link(scope, element, attrs) {\r\n                // Invoke the\r\n                function unload() {\r\n                    return scope.$eval(attrs.mctBeforeUnload);\r\n                }\r\n\r\n                // Stop using this unload expression\r\n                function removeUnload() {\r\n                    unloads = unloads.filter(function (callback) {\r\n                        return callback !== unload;\r\n                    });\r\n                    if (unloads.length === 0) {\r\n                        $window.onbeforeunload = oldBeforeUnload;\r\n                    }\r\n                }\r\n\r\n                // Show a dialog before allowing a location change\r\n                function checkLocationChange(event) {\r\n                    // Get an unload message (if any)\r\n                    var warning = unload();\r\n                    // Prompt the user if there's an unload message\r\n                    if (warning && !$window.confirm(warning)) {\r\n                        // ...and prevent the route change if it was confirmed\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n\r\n                // If this is the first active instance of this directive,\r\n                // register as the window's beforeunload handler\r\n                if (unloads.length === 0) {\r\n                    $window.onbeforeunload = checkUnloads;\r\n                }\r\n\r\n                // Include this instance of the directive's unload function\r\n                unloads.push(unload);\r\n\r\n                // Remove it when the scope is destroyed\r\n                scope.$on(\"$destroy\", removeUnload);\r\n\r\n                // Also handle route changes\r\n                scope.$on(\"$locationChangeStart\", checkLocationChange);\r\n            }\r\n\r\n            return {\r\n                // Applicable as an attribute\r\n                restrict: \"A\",\r\n                // Link with the provided function\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTBeforeUnload;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/EditAndComposeAction',[],\r\n    function () {\r\n\r\n\r\n        /**\r\n         * Add one domain object to another's composition.\r\n         * @constructor\r\n         * @memberof platform/commonUI/edit\r\n         * @implements {Action}\r\n         */\r\n        function EditAndComposeAction(context) {\r\n            this.domainObject = (context || {}).domainObject;\r\n            this.selectedObject = (context || {}).selectedObject;\r\n        }\r\n\r\n        EditAndComposeAction.prototype.perform = function () {\r\n            var self = this,\r\n                editAction = this.domainObject.getCapability('action').getActions(\"edit\")[0];\r\n\r\n            // Persist changes to the domain object\r\n            function doPersist() {\r\n                var persistence =\r\n                    self.domainObject.getCapability('persistence');\r\n                return persistence.persist();\r\n            }\r\n\r\n            // Link these objects\r\n            function doLink() {\r\n                var composition = self.domainObject &&\r\n                        self.domainObject.getCapability('composition');\r\n                return composition && composition.add(self.selectedObject)\r\n                        .then(doPersist);\r\n            }\r\n\r\n            if (editAction) {\r\n                editAction.perform();\r\n            }\r\n\r\n            return this.selectedObject && doLink();\r\n        };\r\n\r\n        return EditAndComposeAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining EditAction. Created by vwoeltje on 11/14/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/EditAction',[],\r\n    function () {\r\n\r\n        // A no-op action to return in the event that the action cannot\r\n        // be completed.\r\n        var NULL_ACTION = {\r\n            perform: function () {\r\n                return undefined;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * The Edit action is performed when the user wishes to enter Edit\r\n         * mode (typically triggered by the Edit button.) This will\r\n         * show the user interface for editing (by way of a change in\r\n         * route)\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         * @implements {Action}\r\n         */\r\n        function EditAction($location, navigationService, $log, context) {\r\n            var domainObject = (context || {}).domainObject;\r\n\r\n            // We cannot enter Edit mode if we have no domain object to\r\n            // edit, so verify that one was defined as part of the\r\n            // context. (This is also verified in appliesTo, so this\r\n            // would indicate abnormal behavior.)\r\n            if (!domainObject) {\r\n                $log.warn([\r\n                    \"No domain object to edit; \",\r\n                    \"edit action is not valid.\"\r\n                ].join(\"\"));\r\n\r\n                return NULL_ACTION;\r\n            }\r\n\r\n            this.domainObject = domainObject;\r\n            this.$location = $location;\r\n            this.navigationService = navigationService;\r\n        }\r\n\r\n        /**\r\n         * Enter edit mode.\r\n         */\r\n        EditAction.prototype.perform = function () {\r\n            var self = this;\r\n            function cancelEditing() {\r\n                self.domainObject.getCapability('editor').cancel();\r\n                self.navigationService.removeListener(cancelEditing);\r\n            }\r\n            //If this is not the currently navigated object, then navigate\r\n            // to it.\r\n            if (this.navigationService.getNavigation() !== this.domainObject) {\r\n                this.navigationService.setNavigation(this.domainObject);\r\n            }\r\n\r\n            this.navigationService.addListener(cancelEditing);\r\n            this.domainObject.useCapability(\"editor\");\r\n        };\r\n\r\n        /**\r\n         * Check for applicability; verify that a domain object is present\r\n         * for this action to be performed upon.\r\n         * @param {ActionContext} context the context in which this action\r\n         *        will be performed; should contain a `domainObject` property\r\n         */\r\n        EditAction.appliesTo = function (context) {\r\n            var domainObject = (context || {}).domainObject,\r\n                type = domainObject && domainObject.getCapability('type');\r\n\r\n            // Only allow editing of types that support it and are not already\r\n            // being edited\r\n            return type && type.hasFeature('creation') &&\r\n                domainObject.hasCapability('editor') &&\r\n                !domainObject.getCapability('editor').isEditContextRoot();\r\n        };\r\n\r\n        return EditAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/PropertiesDialog',[],function () {\r\n\r\n        /**\r\n         * Construct a new Properties dialog.\r\n         *\r\n         * @param {TypeImpl} type the type of domain object for which properties\r\n         *        will be specified\r\n         * @param {DomainObject} the object for which properties will be set\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         */\r\n        function PropertiesDialog(type, model) {\r\n            this.type = type;\r\n            this.model = model;\r\n            this.properties = type.getProperties();\r\n        }\r\n\r\n        /**\r\n         * Get sections provided by this dialog.\r\n         * @return {FormStructure} the structure of this form\r\n         */\r\n        PropertiesDialog.prototype.getFormStructure = function () {\r\n            return {\r\n                name: \"Edit \" + this.model.name,\r\n                sections: [{\r\n                    name: \"Properties\",\r\n                    rows: this.properties.map(function (property, index) {\r\n                        // Property definition is same as form row definition\r\n                        var row = Object.create(property.getDefinition());\r\n                        row.key = index;\r\n                        return row;\r\n                    }).filter(function (row) {\r\n                        // Only show properties which are editable\r\n                        return row.control;\r\n                    })\r\n                }]\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Get the initial state of the form shown by this dialog\r\n         * (based on the object model)\r\n         * @returns {object} initial state of the form\r\n         */\r\n        PropertiesDialog.prototype.getInitialFormValue = function () {\r\n            var model = this.model;\r\n\r\n            // Start with initial values for properties\r\n            // Note that index needs to correlate to row.key\r\n            // from getFormStructure\r\n            return this.properties.map(function (property) {\r\n                return property.getValue(model);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Update a domain object model based on the value of a form.\r\n         */\r\n        PropertiesDialog.prototype.updateModel = function (model, formValue) {\r\n            // Update all properties\r\n            this.properties.forEach(function (property, index) {\r\n                property.setValue(model, formValue[index]);\r\n            });\r\n        };\r\n\r\n        return PropertiesDialog;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Edit the properties of a domain object. Shows a dialog\r\n * which should display a set of properties similar to that\r\n * shown in the Create wizard.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/PropertiesAction',['./PropertiesDialog'],\r\n    function (PropertiesDialog) {\r\n\r\n        /**\r\n         * Implements the \"Edit Properties\" action, which prompts the user\r\n         * to modify a domain object's properties.\r\n         *\r\n         * @param {DialogService} dialogService a service which will show the dialog\r\n         * @param {DomainObject} object the object to be edited\r\n         * @param {ActionContext} context the context in which this action is performed\r\n         * @memberof platform/commonUI/edit\r\n         * @implements {Action}\r\n         * @constructor\r\n         */\r\n        function PropertiesAction(dialogService, context) {\r\n            this.domainObject = (context || {}).domainObject;\r\n            this.dialogService = dialogService;\r\n        }\r\n\r\n        PropertiesAction.prototype.perform = function () {\r\n            var type = this.domainObject.getCapability('type'),\r\n                domainObject = this.domainObject,\r\n                dialogService = this.dialogService;\r\n\r\n            // Persist modifications to this domain object\r\n            function doPersist() {\r\n                var persistence = domainObject.getCapability('persistence');\r\n                return persistence && persistence.persist();\r\n            }\r\n\r\n            // Update the domain object model based on user input\r\n            function updateModel(userInput, dialog) {\r\n                return domainObject.useCapability('mutation', function (model) {\r\n                    dialog.updateModel(model, userInput);\r\n                });\r\n            }\r\n\r\n            function showDialog(objType) {\r\n                // Create a dialog object to generate the form structure, etc.\r\n                var dialog =\r\n                    new PropertiesDialog(objType, domainObject.getModel());\r\n\r\n                // Show the dialog\r\n                return dialogService.getUserInput(\r\n                    dialog.getFormStructure(),\r\n                    dialog.getInitialFormValue()\r\n                ).then(function (userInput) {\r\n                        // Update the model, if user input was provided\r\n                        return userInput && updateModel(userInput, dialog);\r\n                    }).then(function (result) {\r\n                        return result && doPersist();\r\n                    });\r\n            }\r\n\r\n            return type && showDialog(type);\r\n        };\r\n\r\n        /**\r\n         * Filter this action for applicability against a given context.\r\n         * This will ensure that a domain object is present in the\r\n         * context.\r\n         */\r\n        PropertiesAction.appliesTo = function (context) {\r\n            var domainObject = (context || {}).domainObject,\r\n                type = domainObject && domainObject.getCapability('type'),\r\n                creatable = type && type.hasFeature('creation');\r\n\r\n            // Only allow creatable types to be edited\r\n            return domainObject &&\r\n                domainObject.hasCapability(\"persistence\") &&\r\n                creatable;\r\n        };\r\n\r\n        return PropertiesAction;\r\n    }\r\n\r\n);\r\n\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining RemoveAction. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/RemoveAction',[],\r\n    function () {\r\n\r\n        /**\r\n         * Construct an action which will remove the provided object manifestation.\r\n         * The object will be removed from its parent's composition; the parent\r\n         * is looked up via the \"context\" capability (so this will be the\r\n         * immediate ancestor by which this specific object was reached.)\r\n         *\r\n         * @param {DomainObject} object the object to be removed\r\n         * @param {ActionContext} context the context in which this action is performed\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         * @implements {Action}\r\n         */\r\n        function RemoveAction($q, navigationService, context) {\r\n            this.domainObject = (context || {}).domainObject;\r\n            this.$q = $q;\r\n            this.navigationService = navigationService;\r\n        }\r\n\r\n        /**\r\n         * Perform this action.\r\n         * @return {Promise} a promise which will be\r\n         *         fulfilled when the action has completed.\r\n         */\r\n        RemoveAction.prototype.perform = function () {\r\n            var $q = this.$q,\r\n                navigationService = this.navigationService,\r\n                domainObject = this.domainObject;\r\n            /*\r\n             * Check whether an object ID matches the ID of the object being\r\n             * removed (used to filter a parent's composition to handle the\r\n             * removal.)\r\n             */\r\n            function isNotObject(otherObjectId) {\r\n                return otherObjectId !== domainObject.getId();\r\n            }\r\n\r\n            /*\r\n             * Mutate a parent object such that it no longer contains the object\r\n             * which is being removed.\r\n             */\r\n            function doMutate(model) {\r\n                model.composition = model.composition.filter(isNotObject);\r\n            }\r\n\r\n            /*\r\n             * Invoke persistence on a domain object. This will be called upon\r\n             * the removed object's parent (as its composition will have changed.)\r\n             */\r\n            function doPersist(domainObj) {\r\n                var persistence = domainObj.getCapability('persistence');\r\n                return persistence && persistence.persist();\r\n            }\r\n\r\n            /*\r\n             * Checks current object and ascendants of current\r\n             * object with object being removed, if the current\r\n             * object or any in the current object's path is being removed,\r\n             * navigate back to parent of removed object.\r\n             */\r\n            function checkObjectNavigation(object, parentObject) {\r\n                // Traverse object starts at current location\r\n                var traverseObject = (navigationService).getNavigation(),\r\n                    context;\r\n\r\n                // Stop when object is not defined (above ROOT)\r\n                while (traverseObject) {\r\n                    // If object currently traversed to is object being removed\r\n                    // navigate to parent of current object and then exit loop\r\n                    if (traverseObject.getId() === object.getId()) {\r\n                        navigationService.setNavigation(parentObject);\r\n                        return;\r\n                    }\r\n                    // Traverses to parent of current object, moving\r\n                    // up the ascendant path\r\n                    context = traverseObject.getCapability('context');\r\n                    traverseObject = context && context.getParent();\r\n                }\r\n            }\r\n\r\n            /*\r\n             * Remove the object from its parent, as identified by its context\r\n             * capability. Based on object's location and selected object's location\r\n             * user may be navigated to existing parent object\r\n             */\r\n            function removeFromContext(object) {\r\n                var contextCapability = object.getCapability('context'),\r\n                    parent = contextCapability.getParent();\r\n\r\n                // If currently within path of removed object(s),\r\n                // navigates to existing object up tree\r\n                checkObjectNavigation(object, parent);\r\n\r\n                return $q.when(\r\n                    parent.useCapability('mutation', doMutate)\r\n                ).then(function () {\r\n                    return doPersist(parent);\r\n                });\r\n            }\r\n\r\n            return $q.when(domainObject)\r\n                .then(removeFromContext);\r\n        };\r\n\r\n        // Object needs to have a parent for Remove to be applicable\r\n        RemoveAction.appliesTo = function (context) {\r\n            var object = (context || {}).domainObject,\r\n                contextCapability = object && object.getCapability(\"context\"),\r\n                parent = contextCapability && contextCapability.getParent(),\r\n                parentType = parent && parent.getCapability('type'),\r\n                parentCreatable = parentType && parentType.hasFeature('creation');\r\n\r\n            // Only creatable types should be modifiable\r\n            return parent !== undefined &&\r\n                    Array.isArray(parent.getModel().composition) &&\r\n                    parentCreatable;\r\n        };\r\n\r\n        return RemoveAction;\r\n    }\r\n);\r\n\n","define('platform/commonUI/edit/src/actions/SaveInProgressDialog',[], function () {\r\n    function SaveInProgressDialog(dialogService) {\r\n        this.dialogService = dialogService;\r\n        this.dialog = undefined;\r\n    }\r\n\r\n    SaveInProgressDialog.prototype.show = function () {\r\n        this.dialog = this.dialogService.showBlockingMessage({\r\n            title: \"Saving...\",\r\n            hint: \"Do not navigate away from this page or close this browser tab while this message is displayed.\",\r\n            unknownProgress: true,\r\n            severity: \"info\"\r\n        });\r\n    };\r\n\r\n    SaveInProgressDialog.prototype.hide = function () {\r\n        if (this.dialog) {\r\n            this.dialog.dismiss();\r\n        }\r\n    };\r\n\r\n    return SaveInProgressDialog;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/SaveAction',['./SaveInProgressDialog'],\r\n    function (SaveInProgressDialog) {\r\n\r\n        /**\r\n         * The \"Save\" action; the action triggered by clicking Save from\r\n         * Edit Mode. Exits the editing user interface and invokes object\r\n         * capabilities to persist the changes that have been made.\r\n         * @constructor\r\n         * @implements {Action}\r\n         * @memberof platform/commonUI/edit\r\n         */\r\n        function SaveAction(\r\n            dialogService,\r\n            context\r\n        ) {\r\n            this.domainObject = (context || {}).domainObject;\r\n            this.dialogService = dialogService;\r\n        }\r\n\r\n        /**\r\n         * Save changes and conclude editing.\r\n         *\r\n         * @returns {Promise} a promise that will be fulfilled when\r\n         *          cancellation has completed\r\n         * @memberof platform/commonUI/edit.SaveAction#\r\n         */\r\n        SaveAction.prototype.perform = function () {\r\n            var domainObject = this.domainObject,\r\n                dialog = new SaveInProgressDialog(this.dialogService);\r\n\r\n            function resolveWith(object) {\r\n                return function () {\r\n                    return object;\r\n                };\r\n            }\r\n\r\n            // Invoke any save behavior introduced by the editor capability;\r\n            // this is introduced by EditableDomainObject which is\r\n            // used to insulate underlying objects from changes made\r\n            // during editing.\r\n            function doSave() {\r\n                return domainObject.getCapability(\"editor\").save()\r\n                    .then(resolveWith(domainObject));\r\n            }\r\n\r\n            // Discard the current root view (which will be the editing\r\n            // UI, which will have been pushed atop the Browse UI.)\r\n            function returnToBrowse(object) {\r\n                if (object) {\r\n                    object.getCapability(\"action\").perform(\"navigate\");\r\n                }\r\n                return object;\r\n            }\r\n\r\n            function hideBlockingDialog(object) {\r\n                dialog.hide();\r\n                return object;\r\n            }\r\n\r\n            dialog.show();\r\n\r\n            return doSave()\r\n                .then(hideBlockingDialog)\r\n                .then(returnToBrowse)\r\n                .catch(hideBlockingDialog);\r\n        };\r\n\r\n        /**\r\n         * Check if this action is applicable in a given context.\r\n         * This will ensure that a domain object is present in the context,\r\n         * and that this domain object is in Edit mode.\r\n         * @returns true if applicable\r\n         */\r\n        SaveAction.appliesTo = function (context) {\r\n            var domainObject = (context || {}).domainObject;\r\n            return domainObject !== undefined &&\r\n                domainObject.hasCapability('editor') &&\r\n                domainObject.getCapability('editor').isEditContextRoot() &&\r\n                domainObject.getModel().persisted !== undefined;\r\n        };\r\n\r\n        return SaveAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/CreateWizard',[],function () {\r\n\r\n        /**\r\n         * A class for capturing user input data from an object creation\r\n         * dialog, and populating a domain object with that data.\r\n         *\r\n         * @param {DomainObject} domainObject the newly created object to\r\n         * populate with user input\r\n         * @param {DomainObject} parent the domain object to serve as\r\n         *        the initial parent for the created object, in the dialog\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function CreateWizard(domainObject, parent, policyService) {\r\n            this.type = domainObject.getCapability('type');\r\n            this.model = domainObject.getModel();\r\n            this.domainObject = domainObject;\r\n            this.properties = this.type.getProperties();\r\n            this.parent = parent;\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        /**\r\n         * Get the form model for this wizard; this is a description\r\n         * that will be rendered to an HTML form. See the\r\n         * platform/forms bundle\r\n         * @param {boolean} includeLocation if true, a 'location' section\r\n         * will be included that will allow the user to select the location\r\n         * of the newly created object, otherwise the .location property of\r\n         * the model will be used.\r\n         * @return {FormModel} formModel the form model to\r\n         *         show in the create dialog\r\n         */\r\n        CreateWizard.prototype.getFormStructure = function (includeLocation) {\r\n            var sections = [],\r\n                type = this.type,\r\n                policyService = this.policyService;\r\n\r\n            function validateLocation(locatingObject) {\r\n                var locatingType = locatingObject &&\r\n                    locatingObject.getCapability('type');\r\n                return locatingType && policyService.allow(\r\n                    \"composition\",\r\n                    locatingType,\r\n                    type\r\n                );\r\n            }\r\n\r\n            sections.push({\r\n                name: \"Properties\",\r\n                rows: this.properties.map(function (property, index) {\r\n                    // Property definition is same as form row definition\r\n                    var row = Object.create(property.getDefinition());\r\n\r\n                    // Use index as the key into the formValue;\r\n                    // this correlates to the indexing provided by\r\n                    // getInitialFormValue\r\n                    row.key = index;\r\n\r\n                    return row;\r\n                }).filter(function (row) {\r\n                    // Only show rows which have defined controls\r\n                    return row && row.control;\r\n                })\r\n            });\r\n\r\n            // Ensure there is always a \"save in\" section\r\n            if (includeLocation) {\r\n                sections.push({\r\n                    name: 'Location', rows: [{\r\n                        name: \"Save In\",\r\n                        control: \"locator\",\r\n                        validate: validateLocation,\r\n                        key: \"createParent\"\r\n                    }]\r\n                });\r\n            }\r\n\r\n            return {\r\n                sections: sections,\r\n                name: \"Create a New \" + this.type.getName()\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Given some form input values and a domain object, populate the\r\n         * domain object used to create this wizard from the given form values.\r\n         * @param formValue\r\n         * @returns {DomainObject}\r\n         */\r\n        CreateWizard.prototype.populateObjectFromInput = function (formValue) {\r\n            var parent = this.getLocation(formValue),\r\n                formModel = this.createModel(formValue);\r\n\r\n            formModel.location = parent.getId();\r\n            this.domainObject.useCapability(\"mutation\", function () {\r\n                return formModel;\r\n            });\r\n            return this.domainObject;\r\n        };\r\n\r\n        /**\r\n         * Get the initial value for the form being described.\r\n         * This will include the values for all properties described\r\n         * in the structure.\r\n         *\r\n         * @returns {object} the initial value of the form\r\n         */\r\n        CreateWizard.prototype.getInitialFormValue = function () {\r\n            // Start with initial values for properties\r\n            var model = this.model,\r\n                formValue = this.properties.map(function (property) {\r\n                    return property.getValue(model);\r\n                });\r\n\r\n            // Include the createParent\r\n            formValue.createParent = this.parent;\r\n\r\n            return formValue;\r\n        };\r\n\r\n        /**\r\n         * Based on a populated form, get the domain object which\r\n         * should be used as a parent for the newly-created object.\r\n         * @private\r\n         * @return {DomainObject}\r\n         */\r\n        CreateWizard.prototype.getLocation = function (formValue) {\r\n            return formValue.createParent || this.parent;\r\n        };\r\n\r\n        /**\r\n         * Create the domain object model for a newly-created object,\r\n         * based on user input read from a formModel.\r\n         * @private\r\n         * @return {object} the domain object model\r\n         */\r\n        CreateWizard.prototype.createModel = function (formValue) {\r\n            // Clone\r\n            var newModel = JSON.parse(JSON.stringify(this.model));\r\n\r\n            // Always use the type from the type definition\r\n            newModel.type = this.type.getKey();\r\n\r\n            // Update all properties\r\n            this.properties.forEach(function (property, index) {\r\n                property.setValue(newModel, formValue[index]);\r\n            });\r\n\r\n            return newModel;\r\n        };\r\n\r\n        return CreateWizard;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine('platform/commonUI/edit/src/actions/SaveAsAction',[\r\n    '../creation/CreateWizard',\r\n    './SaveInProgressDialog'\r\n],\r\n    function (\r\n        CreateWizard,\r\n        SaveInProgressDialog\r\n    ) {\r\n\r\n        /**\r\n         * The \"Save\" action; the action triggered by clicking Save from\r\n         * Edit Mode. Exits the editing user interface and invokes object\r\n         * capabilities to persist the changes that have been made.\r\n         * @constructor\r\n         * @implements {Action}\r\n         * @memberof platform/commonUI/edit\r\n         */\r\n        function SaveAsAction(\r\n            $injector,\r\n            policyService,\r\n            dialogService,\r\n            creationService,\r\n            copyService,\r\n            context\r\n        ) {\r\n            this.domainObject = (context || {}).domainObject;\r\n            this.injectObjectService = function () {\r\n                this.objectService = $injector.get(\"objectService\");\r\n            };\r\n            this.policyService = policyService;\r\n            this.dialogService = dialogService;\r\n            this.creationService = creationService;\r\n            this.copyService = copyService;\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        SaveAsAction.prototype.createWizard = function (parent) {\r\n            return new CreateWizard(\r\n                this.domainObject,\r\n                parent,\r\n                this.policyService\r\n            );\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        SaveAsAction.prototype.getObjectService = function () {\r\n            // Lazily acquire object service (avoids cyclical dependency)\r\n            if (!this.objectService) {\r\n                this.injectObjectService();\r\n            }\r\n            return this.objectService;\r\n        };\r\n\r\n        function resolveWith(object) {\r\n            return function () {\r\n                return object;\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Save changes and conclude editing.\r\n         *\r\n         * @returns {Promise} a promise that will be fulfilled when\r\n         *          cancellation has completed\r\n         * @memberof platform/commonUI/edit.SaveAction#\r\n         */\r\n        SaveAsAction.prototype.perform = function () {\r\n            // Discard the current root view (which will be the editing\r\n            // UI, which will have been pushed atop the Browse UI.)\r\n            function returnToBrowse(object) {\r\n                if (object) {\r\n                    object.getCapability(\"action\").perform(\"navigate\");\r\n                }\r\n                return object;\r\n            }\r\n\r\n            return this.save().then(returnToBrowse);\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        SaveAsAction.prototype.save = function () {\r\n            var self = this,\r\n                domainObject = this.domainObject,\r\n                copyService = this.copyService,\r\n                dialog = new SaveInProgressDialog(this.dialogService),\r\n                toUndirty = [];\r\n\r\n            function doWizardSave(parent) {\r\n                var wizard = self.createWizard(parent);\r\n\r\n                return self.dialogService\r\n                    .getUserInput(wizard.getFormStructure(true),\r\n                        wizard.getInitialFormValue()\r\n                    ).then(wizard.populateObjectFromInput.bind(wizard));\r\n            }\r\n\r\n            function showBlockingDialog(object) {\r\n                dialog.show();\r\n                return object;\r\n            }\r\n\r\n            function hideBlockingDialog(object) {\r\n                dialog.hide();\r\n                return object;\r\n            }\r\n\r\n            function fetchObject(objectId) {\r\n                return self.getObjectService().getObjects([objectId]).then(function (objects) {\r\n                    return objects[objectId];\r\n                });\r\n            }\r\n\r\n            function getParent(object) {\r\n                return fetchObject(object.getModel().location);\r\n            }\r\n\r\n            function allowClone(objectToClone) {\r\n                var allowed =\r\n                    (objectToClone.getId() === domainObject.getId()) ||\r\n                        objectToClone.getCapability('location').isOriginal();\r\n                if (allowed) {\r\n                    toUndirty.push(objectToClone);\r\n                }\r\n                return allowed;\r\n            }\r\n\r\n            function cloneIntoParent(parent) {\r\n                return copyService.perform(domainObject, parent, allowClone);\r\n            }\r\n\r\n            function undirty(object) {\r\n                return object.getCapability('persistence').refresh();\r\n            }\r\n\r\n            function undirtyOriginals(object) {\r\n                return Promise.all(toUndirty.map(undirty))\r\n                    .then(resolveWith(object));\r\n            }\r\n\r\n            function commitEditingAfterClone(clonedObject) {\r\n                return domainObject.getCapability(\"editor\").save()\r\n                    .then(resolveWith(clonedObject));\r\n            }\r\n\r\n            function onFailure() {\r\n                hideBlockingDialog();\r\n                return false;\r\n            }\r\n\r\n            return getParent(domainObject)\r\n                .then(doWizardSave)\r\n                .then(showBlockingDialog)\r\n                .then(getParent)\r\n                .then(cloneIntoParent)\r\n                .then(undirtyOriginals)\r\n                .then(commitEditingAfterClone)\r\n                .then(hideBlockingDialog)\r\n                .catch(onFailure);\r\n        };\r\n\r\n\r\n        /**\r\n         * Check if this action is applicable in a given context.\r\n         * This will ensure that a domain object is present in the context,\r\n         * and that this domain object is in Edit mode.\r\n         * @returns true if applicable\r\n         */\r\n        SaveAsAction.appliesTo = function (context) {\r\n            var domainObject = (context || {}).domainObject;\r\n            return domainObject !== undefined &&\r\n                domainObject.hasCapability('editor') &&\r\n                domainObject.getCapability('editor').isEditContextRoot() &&\r\n                domainObject.getModel().persisted === undefined;\r\n        };\r\n\r\n        return SaveAsAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/actions/CancelAction',[],function () {\r\n\r\n        /**\r\n         * The \"Cancel\" action; the action triggered by clicking Cancel from\r\n         * Edit Mode. Exits the editing user interface and invokes object\r\n         * capabilities to persist the changes that have been made.\r\n         * @constructor\r\n         * @memberof platform/commonUI/edit\r\n         * @implements {Action}\r\n         */\r\n        function CancelAction(context) {\r\n            this.domainObject = context.domainObject;\r\n        }\r\n\r\n        /**\r\n         * Cancel editing.\r\n         *\r\n         * @returns {Promise} a promise that will be fulfilled when\r\n         *          cancellation has completed\r\n         */\r\n        CancelAction.prototype.perform = function () {\r\n            var domainObject = this.domainObject;\r\n\r\n            function returnToBrowse() {\r\n                var parent;\r\n\r\n                //If the object existed already, navigate to refresh view\r\n                // with previous object state.\r\n                if (domainObject.getModel().persisted) {\r\n                    return domainObject.getCapability(\"action\").perform(\"navigate\");\r\n                } else {\r\n                    //If the object was new, and user has cancelled, then\r\n                    //navigate back to parent because nothing to show.\r\n                    return domainObject.getCapability(\"location\").getOriginal().then(function (original) {\r\n                        parent = original.getCapability(\"context\").getParent();\r\n                        parent.getCapability(\"action\").perform(\"navigate\");\r\n                    });\r\n                }\r\n            }\r\n\r\n            function cancel(allowed) {\r\n                return allowed && domainObject.getCapability(\"editor\").cancel();\r\n            }\r\n\r\n            //Do navigation first in order to trigger unsaved changes dialog\r\n            return returnToBrowse()\r\n                .then(cancel);\r\n        };\r\n\r\n        /**\r\n         * Check if this action is applicable in a given context.\r\n         * This will ensure that a domain object is present in the context,\r\n         * and that this domain object is in Edit mode.\r\n         * @returns {boolean} true if applicable\r\n         */\r\n        CancelAction.appliesTo = function (context) {\r\n            var domainObject = (context || {}).domainObject;\r\n            return domainObject !== undefined &&\r\n                domainObject.hasCapability('editor') &&\r\n                domainObject.getCapability('editor').isEditContextRoot();\r\n        };\r\n\r\n        return CancelAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/policies/EditActionPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Policy controlling when the `edit` and/or `properties` actions\r\n         * can appear as applicable actions of the `view-control` category\r\n         * (shown as buttons in the top-right of browse mode.)\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         * @implements {Policy.<Action, ActionContext>}\r\n         */\r\n        function EditActionPolicy(policyService) {\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        /**\r\n         * Get a count of views which are not flagged as non-editable.\r\n         * @private\r\n         */\r\n        EditActionPolicy.prototype.countEditableViews = function (context) {\r\n            var domainObject = context.domainObject,\r\n                count = 0,\r\n                type, views;\r\n\r\n            if (!domainObject) {\r\n                return count;\r\n            }\r\n\r\n            type = domainObject.getCapability('type');\r\n            views = domainObject.useCapability('view');\r\n\r\n\r\n            // A view is editable unless explicitly flagged as not\r\n            (views || []).forEach(function (view) {\r\n                if (view.editable === true ||\r\n                    (view.key === 'plot' && type.getKey() === 'telemetry.panel') ||\r\n                    (view.key === 'table' && type.getKey() === 'table') ||\r\n                    (view.key === 'rt-table' && type.getKey() === 'rttable')\r\n                    ) {\r\n                    count++;\r\n                }\r\n            });\r\n\r\n            return count;\r\n        };\r\n\r\n        /**\r\n         * Checks whether the domain object is currently being edited. If\r\n         * so, the edit action is not applicable.\r\n         * @param context\r\n         * @returns {*|boolean}\r\n         */\r\n        function isEditing(context) {\r\n            var domainObject = (context || {}).domainObject;\r\n            return domainObject &&\r\n                domainObject.hasCapability('editor') &&\r\n                domainObject.getCapability('editor').isEditContextRoot();\r\n        }\r\n\r\n        EditActionPolicy.prototype.allow = function (action, context) {\r\n            var key = action.getMetadata().key,\r\n                category = (context || {}).category;\r\n\r\n            // Restrict 'edit' to cases where there are editable\r\n            // views (similarly, restrict 'properties' to when\r\n            // the converse is true), and where the domain object is not\r\n            // already being edited.\r\n            if (key === 'edit') {\r\n                return this.countEditableViews(context) > 0 && !isEditing(context);\r\n            } else if (key === 'properties' && category === 'view-control') {\r\n                return this.countEditableViews(context) < 1 && !isEditing(context);\r\n            }\r\n\r\n            // Like all policies, allow by default.\r\n            return true;\r\n        };\r\n\r\n        return EditActionPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/edit/src/policies/EditableLinkPolicy',[], function () {\r\n\r\n    /**\r\n     * Policy suppressing links when the linked-to domain object is in\r\n     * edit mode. Domain objects being edited may not have been persisted,\r\n     * so creating links to these can result in inconsistent state.\r\n     *\r\n     * @memberof platform/commonUI/edit\r\n     * @constructor\r\n     * @implements {Policy.<View, DomainObject>}\r\n     */\r\n    function EditableLinkPolicy() {\r\n    }\r\n\r\n    EditableLinkPolicy.prototype.allow = function (action, context) {\r\n        var key = action.getMetadata().key,\r\n            object;\r\n\r\n        if (key === 'link') {\r\n            object = context.selectedObject || context.domainObject;\r\n            return !(object.hasCapability(\"editor\") && object.getCapability(\"editor\").inEditContext());\r\n        }\r\n\r\n        // Like all policies, allow by default.\r\n        return true;\r\n    };\r\n\r\n    return EditableLinkPolicy;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/edit/src/policies/EditableMovePolicy',[], function () {\r\n\r\n    /**\r\n     * Policy suppressing move actions among editable and non-editable\r\n     * domain objects.\r\n     * @memberof platform/commonUI/edit\r\n     * @constructor\r\n     * @implements {Policy.<View, DomainObject>}\r\n     */\r\n    function EditableMovePolicy() {\r\n    }\r\n\r\n    EditableMovePolicy.prototype.allow = function (action, context) {\r\n        var domainObject = context.domainObject,\r\n            selectedObject = context.selectedObject,\r\n            key = action.getMetadata().key,\r\n            isDomainObjectEditing = domainObject.hasCapability('editor') &&\r\n                domainObject.getCapability('editor').inEditContext();\r\n\r\n        if (key === 'move' && isDomainObjectEditing) {\r\n            return !!selectedObject && selectedObject.hasCapability('editor') &&\r\n                selectedObject.getCapability('editor').inEditContext();\r\n        }\r\n\r\n        // Like all policies, allow by default.\r\n        return true;\r\n    };\r\n\r\n    return EditableMovePolicy;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/policies/EditNavigationPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Policy controlling whether navigation events should proceed\r\n         * when object is being edited.\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         * @implements {Policy.<Action, ActionContext>}\r\n         */\r\n        function EditNavigationPolicy(policyService) {\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        EditNavigationPolicy.prototype.isDirty = function (domainObject) {\r\n            var navigatedObject = domainObject,\r\n                editorCapability = navigatedObject &&\r\n                    navigatedObject.getCapability(\"editor\");\r\n\r\n            return editorCapability &&\r\n                editorCapability.isEditContextRoot() &&\r\n                editorCapability.dirty();\r\n        };\r\n\r\n        /**\r\n         * Allow navigation if an object is not dirty, or if the user elects\r\n         * to proceed anyway.\r\n         * @param currentNavigation\r\n         * @returns {boolean|*} true if the object model is clean; or if\r\n         * it's dirty and the user wishes to proceed anyway.\r\n         */\r\n        EditNavigationPolicy.prototype.allow = function (currentNavigation) {\r\n            return !this.isDirty(currentNavigation);\r\n        };\r\n\r\n        return EditNavigationPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/policies/EditContextualActionPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Policy controlling whether the context menu is visible when\r\n         * objects are being edited\r\n         * @param navigationService\r\n         * @param editModeBlacklist A blacklist of actions disallowed from\r\n         * context menu when navigated object is being edited\r\n         * @param nonEditContextBlacklist A blacklist of actions disallowed\r\n         * from context menu of non-editable objects, when navigated object\r\n         * is being edited\r\n         * @constructor\r\n         * @param editModeBlacklist A blacklist of actions disallowed from\r\n         * context menu when navigated object is being edited\r\n         * @param nonEditContextBlacklist A blacklist of actions disallowed\r\n         * from context menu of non-editable objects, when navigated object\r\n         * @implements {Policy.<Action, ActionContext>}\r\n         */\r\n        function EditContextualActionPolicy(navigationService, editModeBlacklist, nonEditContextBlacklist) {\r\n            this.navigationService = navigationService;\r\n\r\n            //The list of objects disallowed on target object when in edit mode\r\n            this.editModeBlacklist = editModeBlacklist;\r\n            //The list of objects disallowed on target object that is not in\r\n            // edit mode (ie. the context menu in the tree on the LHS).\r\n            this.nonEditContextBlacklist = nonEditContextBlacklist;\r\n        }\r\n\r\n        EditContextualActionPolicy.prototype.allow = function (action, context) {\r\n            var selectedObject = context.domainObject,\r\n                navigatedObject = this.navigationService.getNavigation(),\r\n                actionMetadata = action.getMetadata ? action.getMetadata() : {};\r\n\r\n            if (navigatedObject.hasCapability(\"editor\") && navigatedObject.getCapability(\"editor\").isEditContextRoot()) {\r\n                if (selectedObject.hasCapability(\"editor\") && selectedObject.getCapability(\"editor\").inEditContext()) {\r\n                    return this.editModeBlacklist.indexOf(actionMetadata.key) === -1;\r\n                } else {\r\n                    //Target is in the context menu\r\n                    return this.nonEditContextBlacklist.indexOf(actionMetadata.key) === -1;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        return EditContextualActionPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/representers/EditRepresenter',[],\r\n    function () {\r\n\r\n        /**\r\n         * The EditRepresenter is responsible for implementing\r\n         * representation-level behavior relevant to Edit mode.\r\n         * Specifically, this listens for changes to view configuration\r\n         * or to domain object models, and triggers persistence when\r\n         * these are detected.\r\n         *\r\n         * This is exposed as an extension of category `representers`,\r\n         * which mct-representation will utilize to add additional\r\n         * behavior to each representation.\r\n         *\r\n         * This will be called once per mct-representation directive,\r\n         * and may be reused for different domain objects and/or\r\n         * representations resulting from changes there.\r\n         *\r\n         * @memberof platform/commonUI/edit\r\n         * @implements {Representer}\r\n         * @constructor\r\n         */\r\n        function EditRepresenter($q, $log, scope) {\r\n            var self = this;\r\n\r\n            this.scope = scope;\r\n            this.listenHandle = undefined;\r\n\r\n            // Mutate and persist a new version of a domain object's model.\r\n            function doPersist(model) {\r\n                var domainObject = self.domainObject;\r\n\r\n                // First, mutate; then, persist.\r\n                return $q.when(domainObject.useCapability(\"mutation\", function () {\r\n                    return model;\r\n                })).then(function (result) {\r\n                    // Only persist when mutation was successful\r\n                    return result &&\r\n                        domainObject.getCapability(\"persistence\").persist();\r\n                });\r\n            }\r\n\r\n            // Handle changes to model and/or view configuration\r\n            function commit(message) {\r\n                // Look up from scope; these will have been populated by\r\n                // mct-representation.\r\n                var model = scope.model,\r\n                    configuration = scope.configuration,\r\n                    domainObject = self.domainObject;\r\n\r\n                // Log the commit message\r\n                $log.debug([\r\n                    \"Committing \",\r\n                    domainObject && domainObject.getModel().name,\r\n                    \"(\" + (domainObject && domainObject.getId()) + \"):\",\r\n                    message\r\n                ].join(\" \"));\r\n\r\n                // Update the configuration stored in the model, and persist.\r\n                if (domainObject && domainObject.hasCapability(\"persistence\")) {\r\n                    // Configurations for specific views are stored by\r\n                    // key in the \"configuration\" field of the model.\r\n                    if (self.key && configuration) {\r\n                        model.configuration = model.configuration || {};\r\n                        model.configuration[self.key] = configuration;\r\n                    }\r\n                    doPersist(model);\r\n                }\r\n            }\r\n\r\n            // Place the \"commit\" method in the scope\r\n            scope.commit = commit;\r\n\r\n            // Clean up when the scope is destroyed\r\n            scope.$on(\"$destroy\", function () {\r\n                self.destroy();\r\n            });\r\n\r\n        }\r\n\r\n        // Handle a specific representation of a specific domain object\r\n        EditRepresenter.prototype.represent = function represent(representation, representedObject) {\r\n            var scope = this.scope;\r\n\r\n            // Track the key, to know which view configuration to save to.\r\n            this.key = (representation || {}).key;\r\n            // Track the represented object\r\n            this.domainObject = representedObject;\r\n\r\n            // Ensure existing watches are released\r\n            this.destroy();\r\n\r\n            function setEditing() {\r\n                scope.viewObjectTemplate = 'edit-object';\r\n            }\r\n\r\n            /**\r\n             * Listen for changes in object state. If the object becomes\r\n             * editable then change the view and inspector regions\r\n             * object representation accordingly\r\n             */\r\n            this.listenHandle = this.domainObject.getCapability('status').listen(function (statuses) {\r\n                if (statuses.indexOf('editing') !== -1) {\r\n                    setEditing();\r\n                } else {\r\n                    delete scope.viewObjectTemplate;\r\n                }\r\n            });\r\n\r\n            if (representedObject.hasCapability('editor') && representedObject.getCapability('editor').isEditContextRoot()) {\r\n                setEditing();\r\n            }\r\n        };\r\n\r\n        // Respond to the destruction of the current representation.\r\n        EditRepresenter.prototype.destroy = function destroy() {\r\n            return this.listenHandle && this.listenHandle();\r\n        };\r\n\r\n        return EditRepresenter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/commonUI/edit/src/representers/EditToolbar',[],\r\n    function () {\r\n\r\n        // Utility functions for reducing truth arrays\r\n        function and(a, b) {\r\n            return a && b;\r\n        }\r\n        function or(a, b) {\r\n            return a || b;\r\n        }\r\n\r\n\r\n        /**\r\n         * Provides initial structure and state (as suitable for provision\r\n         * to the `mct-toolbar` directive) for a view's tool bar, based on\r\n         * that view's declaration of what belongs in its tool bar and on\r\n         * the current selection.\r\n         *\r\n         * @param structure toolbar structure, as provided by view definition\r\n         * @param {Function} commit callback to invoke after changes\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         */\r\n        function EditToolbar(structure, commit) {\r\n            var self = this;\r\n\r\n            // Generate a new key for an item's property\r\n            function addKey(property) {\r\n                self.properties.push(property);\r\n                return self.properties.length - 1; // Return index of property\r\n            }\r\n\r\n            // Invoke all functions in selections with the given name\r\n            function invoke(method, value) {\r\n                if (method) {\r\n                    // Make the change in the selection\r\n                    self.selection.forEach(function (selected) {\r\n                        if (typeof selected[method] === 'function') {\r\n                            selected[method](value);\r\n                        }\r\n                    });\r\n                    // ...and commit!\r\n                    commit();\r\n                }\r\n            }\r\n\r\n            // Prepare a toolbar item based on current selection\r\n            function convertItem(item) {\r\n                var converted = Object.create(item || {});\r\n                if (item.property) {\r\n                    converted.key = addKey(item.property);\r\n                }\r\n                if (item.method) {\r\n                    converted.click = function (v) {\r\n                        invoke(item.method, v);\r\n                    };\r\n                }\r\n                return converted;\r\n            }\r\n\r\n            // Prepare a toolbar section\r\n            function convertSection(section) {\r\n                var converted = Object.create(section || {});\r\n                converted.items =\r\n                    ((section || {}).items || [])\r\n                            .map(convertItem);\r\n                return converted;\r\n            }\r\n\r\n            this.toolbarState = [];\r\n            this.selection = undefined;\r\n            this.properties = [];\r\n            this.toolbarStructure = Object.create(structure || {});\r\n            this.toolbarStructure.sections =\r\n                ((structure || {}).sections || []).map(convertSection);\r\n        }\r\n\r\n        // Check if all elements of the selection which have this\r\n        // property have the same value for this property.\r\n        EditToolbar.prototype.isConsistent = function (property) {\r\n            var self = this,\r\n                consistent = true,\r\n                observed = false,\r\n                state;\r\n\r\n            // Check if a given element of the selection is consistent\r\n            // with previously-observed elements for this property.\r\n            function checkConsistency(selected) {\r\n                var next;\r\n                // Ignore selections which don't have this property\r\n                if (selected[property] !== undefined) {\r\n                    // Look up state of this element in the selection\r\n                    next = self.lookupState(property, selected);\r\n                    // Detect inconsistency\r\n                    if (observed) {\r\n                        consistent = consistent && (next === state);\r\n                    }\r\n                    // Track state for next iteration\r\n                    state = next;\r\n                    observed = true;\r\n                }\r\n            }\r\n\r\n            // Iterate through selections\r\n            self.selection.forEach(checkConsistency);\r\n\r\n            return consistent;\r\n        };\r\n\r\n        // Used to filter out items which are applicable (or not)\r\n        // to the current selection.\r\n        EditToolbar.prototype.isApplicable = function (item) {\r\n            var property = (item || {}).property,\r\n                method = (item || {}).method,\r\n                exclusive = !!(item || {}).exclusive;\r\n\r\n            // Check if a selected item defines this property\r\n            function hasProperty(selected) {\r\n                return (property && (selected[property] !== undefined)) ||\r\n                    (method && (typeof selected[method] === 'function'));\r\n            }\r\n\r\n            return this.selection.map(hasProperty).reduce(\r\n                    exclusive ? and : or,\r\n                    exclusive\r\n                ) && this.isConsistent(property);\r\n        };\r\n\r\n\r\n        // Look up the current value associated with a property\r\n        EditToolbar.prototype.lookupState = function (property, selected) {\r\n            var value = selected[property];\r\n            return (typeof value === 'function') ? value() : value;\r\n        };\r\n\r\n        /**\r\n         * Set the current selection. Visibility of sections\r\n         * and items in the toolbar will be updated to match this.\r\n         * @param {Array} s the new selection\r\n         */\r\n        EditToolbar.prototype.setSelection = function (s) {\r\n            var self = this;\r\n\r\n            // Show/hide controls in this section per applicability\r\n            function refreshSectionApplicability(section) {\r\n                var count = 0;\r\n                // Show/hide each item\r\n                (section.items || []).forEach(function (item) {\r\n                    item.hidden = !self.isApplicable(item);\r\n                    count += item.hidden ? 0 : 1;\r\n                });\r\n                // Hide this section if there are no applicable items\r\n                section.hidden = !count;\r\n            }\r\n\r\n            // Get initial value for a given property\r\n            function initializeState(property) {\r\n                var result;\r\n                // Look through all selections for this property;\r\n                // values should all match by the time we perform\r\n                // this lookup anyway.\r\n                self.selection.forEach(function (selected) {\r\n                    result = (selected[property] !== undefined) ?\r\n                        self.lookupState(property, selected) :\r\n                        result;\r\n                });\r\n                return result;\r\n            }\r\n\r\n            this.selection = s;\r\n            this.toolbarStructure.sections.forEach(refreshSectionApplicability);\r\n            this.toolbarState = this.properties.map(initializeState);\r\n        };\r\n\r\n        /**\r\n         * Get the structure of the toolbar, as appropriate to\r\n         * pass to `mct-toolbar`.\r\n         * @returns the toolbar structure\r\n         */\r\n        EditToolbar.prototype.getStructure = function () {\r\n            return this.toolbarStructure;\r\n        };\r\n\r\n        /**\r\n         * Get the current state of the toolbar, as appropriate\r\n         * to two-way bind to the state handled by `mct-toolbar`.\r\n         * @returns {Array} state of the toolbar\r\n         */\r\n        EditToolbar.prototype.getState = function () {\r\n            return this.toolbarState;\r\n        };\r\n\r\n        /**\r\n         * Update state within the current selection.\r\n         * @param {number} index the index of the corresponding\r\n         *        element in the state array\r\n         * @param value the new value to convey to the selection\r\n         */\r\n        EditToolbar.prototype.updateState = function (index, value) {\r\n            var self = this;\r\n\r\n            // Update value for this property in all elements of the\r\n            // selection which have this property.\r\n            function updateProperties(property, val) {\r\n                var changed = false;\r\n\r\n                // Update property in a selected element\r\n                function updateProperty(selected) {\r\n                    // Ignore selected elements which don't have this property\r\n                    if (selected[property] !== undefined) {\r\n                        // Check if this is a setter, or just assignable\r\n                        if (typeof selected[property] === 'function') {\r\n                            changed =\r\n                                changed || (selected[property]() !== val);\r\n                            selected[property](val);\r\n                        } else {\r\n                            changed =\r\n                                changed || (selected[property] !== val);\r\n                            selected[property] = val;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update property in all selected elements\r\n                self.selection.forEach(updateProperty);\r\n\r\n                // Return whether or not anything changed\r\n                return changed;\r\n            }\r\n\r\n            return updateProperties(this.properties[index], value);\r\n        };\r\n\r\n        return EditToolbar;\r\n    }\r\n);\r\n\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/representers/EditToolbarSelection',[],\r\n    function () {\r\n\r\n        /**\r\n         * Tracks selection state for editable views. Selection is\r\n         * implemented such that (from the toolbar's perspective)\r\n         * up to two objects can be \"selected\" at any given time:\r\n         *\r\n         * * The view proxy (see the `proxy` method), which provides\r\n         *   an interface for interacting with the view itself (e.g.\r\n         *   for buttons like \"Add\")\r\n         * * The selection, for single selected elements within the\r\n         *   view.\r\n         *\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         */\r\n        function EditToolbarSelection() {\r\n            this.selection = [{}];\r\n            this.selecting = false;\r\n            this.selectedObj = undefined;\r\n        }\r\n\r\n        /**\r\n         * Check if an object is currently selected.\r\n         * @param {*} obj the object to check for selection\r\n         * @returns {boolean} true if selected, otherwise false\r\n         */\r\n        EditToolbarSelection.prototype.selected = function (obj) {\r\n            return (obj === this.selectedObj) || (obj === this.selection[0]);\r\n        };\r\n\r\n        /**\r\n         * Select an object.\r\n         * @param obj the object to select\r\n         * @returns {boolean} true if selection changed\r\n         */\r\n        EditToolbarSelection.prototype.select = function (obj) {\r\n            // Proxy is always selected\r\n            if (obj === this.selection[0]) {\r\n                return false;\r\n            }\r\n\r\n            // Clear any existing selection\r\n            this.deselect();\r\n\r\n            // Note the current selection state\r\n            this.selectedObj = obj;\r\n            this.selecting = true;\r\n\r\n            // Add the selection\r\n            this.selection.push(obj);\r\n        };\r\n\r\n        /**\r\n         * Clear the current selection.\r\n         * @returns {boolean} true if selection changed\r\n         */\r\n        EditToolbarSelection.prototype.deselect = function () {\r\n            // Nothing to do if we don't have a selected object\r\n            if (this.selecting) {\r\n                // Clear state tracking\r\n                this.selecting = false;\r\n                this.selectedObj = undefined;\r\n\r\n                // Remove the selection\r\n                this.selection.pop();\r\n\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Get the currently-selected object.\r\n         * @returns the currently selected object\r\n         */\r\n        EditToolbarSelection.prototype.get = function () {\r\n            return this.selectedObj;\r\n        };\r\n\r\n        /**\r\n         * Get/set the view proxy (for toolbar actions taken upon\r\n         * the view itself.)\r\n         * @param [proxy] the view proxy (if setting)\r\n         * @returns the current view proxy\r\n         */\r\n        EditToolbarSelection.prototype.proxy = function (p) {\r\n            if (arguments.length > 0) {\r\n                this.selection[0] = p;\r\n            }\r\n            return this.selection[0];\r\n        };\r\n\r\n        /**\r\n         * Get an array containing all selections, including the\r\n         * selection proxy. It is generally not advisable to\r\n         * mutate this array directly.\r\n         * @returns {Array} all selections\r\n         */\r\n        EditToolbarSelection.prototype.all = function () {\r\n            return this.selection;\r\n        };\r\n\r\n        return EditToolbarSelection;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/representers/EditToolbarRepresenter',['./EditToolbar', './EditToolbarSelection'],\r\n    function (EditToolbar, EditToolbarSelection) {\r\n\r\n        // No operation\r\n        var NOOP_REPRESENTER = {\r\n            represent: function () {},\r\n            destroy: function () {}\r\n        };\r\n\r\n        /**\r\n         * The EditToolbarRepresenter populates the toolbar in Edit mode\r\n         * based on a view's definition.\r\n         * @param {Scope} scope the Angular scope of the representation\r\n         * @memberof platform/commonUI/edit\r\n         * @constructor\r\n         * @implements {Representer}\r\n         */\r\n        function EditToolbarRepresenter(scope, element, attrs) {\r\n            var self = this;\r\n\r\n            // Mark changes as ready to persist\r\n            function commit(message) {\r\n                if (scope.commit) {\r\n                    scope.commit(message);\r\n                }\r\n            }\r\n\r\n            // Handle changes to the current selection\r\n            function updateSelection(selection) {\r\n                // Only update if there is a toolbar to update\r\n                if (self.toolbar) {\r\n                    // Make sure selection is array-like\r\n                    selection = Array.isArray(selection) ?\r\n                            selection :\r\n                            (selection ? [selection] : []);\r\n\r\n                    // Update the toolbar's selection\r\n                    self.toolbar.setSelection(selection);\r\n\r\n                    // ...and expose its structure/state\r\n                    self.toolbarObject.structure =\r\n                        self.toolbar.getStructure();\r\n                    self.toolbarObject.state =\r\n                        self.toolbar.getState();\r\n                }\r\n            }\r\n\r\n            // Get state (to watch it)\r\n            function getState() {\r\n                return self.toolbarObject.state;\r\n            }\r\n\r\n            // Update selection models to match changed toolbar state\r\n            function updateState(state) {\r\n                // Update underlying state based on toolbar changes\r\n                var changed = (state || []).map(function (value, index) {\r\n                    return self.toolbar.updateState(index, value);\r\n                }).reduce(function (a, b) {\r\n                    return a || b;\r\n                }, false);\r\n\r\n                // Only commit if something actually changed\r\n                if (changed) {\r\n                    // Commit the changes.\r\n                    commit(\"Changes from toolbar.\");\r\n                }\r\n            }\r\n\r\n            // Avoid attaching scope to this;\r\n            // http://errors.angularjs.org/1.2.26/ng/cpws\r\n            this.setSelection = function (s) {\r\n                scope.selection = s;\r\n            };\r\n            this.clearExposedToolbar = function () {\r\n                // Clear exposed toolbar state (if any)\r\n                if (attrs.toolbar) {\r\n                    delete scope.$parent[attrs.toolbar];\r\n                }\r\n            };\r\n            this.exposeToolbar = function () {\r\n                scope.$parent[self.attrs.toolbar] = self.toolbarObject;\r\n            };\r\n\r\n            this.commit = commit;\r\n            this.attrs = attrs;\r\n            this.updateSelection = updateSelection;\r\n            this.toolbar = undefined;\r\n            this.toolbarObject = {};\r\n\r\n            // If this representation exposes a toolbar, set up watches\r\n            // to synchronize with it.\r\n            if (attrs && attrs.toolbar) {\r\n                // Detect and handle changes to state from the toolbar\r\n                scope.$watchCollection(getState, updateState);\r\n                // Watch for changes in the current selection state\r\n                scope.$watchCollection(\"selection.all()\", updateSelection);\r\n                // Expose toolbar state under that name\r\n                scope.$parent[attrs.toolbar] = this.toolbarObject;\r\n            } else {\r\n                // No toolbar declared, so do nothing.\r\n                return NOOP_REPRESENTER;\r\n            }\r\n\r\n        }\r\n\r\n        // Represent a domain object using this definition\r\n        EditToolbarRepresenter.prototype.represent = function (representation) {\r\n            // Get the newest toolbar definition from the view\r\n            var definition = (representation || {}).toolbar || {},\r\n                self = this;\r\n\r\n            // Initialize toolbar (expose object to parent scope)\r\n            function initialize(def) {\r\n                // If we have been asked to expose toolbar state...\r\n                if (self.attrs.toolbar) {\r\n                    // Initialize toolbar object\r\n                    self.toolbar = new EditToolbar(def, self.commit);\r\n                    // Ensure toolbar state is exposed\r\n                    self.exposeToolbar();\r\n                }\r\n            }\r\n\r\n            // Expose the toolbar object to the parent scope\r\n            initialize(definition);\r\n            // Create a selection scope\r\n            this.setSelection(new EditToolbarSelection());\r\n            // Initialize toolbar to an empty selection\r\n            this.updateSelection([]);\r\n        };\r\n\r\n        // Destroy; remove toolbar object from parent scope\r\n        EditToolbarRepresenter.prototype.destroy = function () {\r\n            this.clearExposedToolbar();\r\n        };\r\n\r\n        return EditToolbarRepresenter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/capabilities/EditorCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * A capability that implements an editing 'session' for a domain\r\n         * object. An editing session is initiated via a call to .edit().\r\n         * Once initiated, any persist operations will be queued pending a\r\n         * subsequent call to [.save()](@link #save) or [.cancel()](@link\r\n         * #cancel).\r\n         * @param transactionService\r\n         * @param domainObject\r\n         * @constructor\r\n         */\r\n        function EditorCapability(\r\n            transactionService,\r\n            domainObject\r\n        ) {\r\n            this.transactionService = transactionService;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * Initiate an editing session. This will start a transaction during\r\n         * which any persist operations will be deferred until either save()\r\n         * or cancel() are called.\r\n         */\r\n        EditorCapability.prototype.edit = function () {\r\n            this.transactionService.startTransaction();\r\n            this.domainObject.getCapability('status').set('editing', true);\r\n        };\r\n\r\n        function isEditContextRoot(domainObject) {\r\n            return domainObject.getCapability('status').get('editing');\r\n        }\r\n\r\n        function isEditing(domainObject) {\r\n            return isEditContextRoot(domainObject) ||\r\n                domainObject.hasCapability('context') &&\r\n                isEditing(domainObject.getCapability('context').getParent());\r\n        }\r\n\r\n        /**\r\n         * Determines whether this object, or any of its ancestors are\r\n         * currently being edited.\r\n         * @returns boolean\r\n         */\r\n        EditorCapability.prototype.inEditContext = function () {\r\n            return isEditing(this.domainObject);\r\n        };\r\n\r\n        /**\r\n         * Is this the root editing object (ie. the object that the user\r\n         * clicked 'edit' on)?\r\n         * @returns {*}\r\n         */\r\n        EditorCapability.prototype.isEditContextRoot = function () {\r\n            return isEditContextRoot(this.domainObject);\r\n        };\r\n\r\n        /**\r\n         * Save any changes from this editing session. This will flush all\r\n         * pending persists and end the current transaction\r\n         * @returns {*}\r\n         */\r\n        EditorCapability.prototype.save = function () {\r\n            var domainObject = this.domainObject;\r\n            return this.transactionService.commit().then(function () {\r\n                domainObject.getCapability('status').set('editing', false);\r\n            });\r\n        };\r\n\r\n        EditorCapability.prototype.invoke = EditorCapability.prototype.edit;\r\n\r\n        /**\r\n         * Cancel the current editing session. This will discard any pending\r\n         * persist operations\r\n         * @returns {*}\r\n         */\r\n        EditorCapability.prototype.cancel = function () {\r\n            var domainObject = this.domainObject;\r\n            return this.transactionService.cancel().then(function () {\r\n                domainObject.getCapability(\"status\").set(\"editing\", false);\r\n                return domainObject;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * @returns {boolean} true if there have been any domain model\r\n         * modifications since the last persist, false otherwise.\r\n         */\r\n        EditorCapability.prototype.dirty = function () {\r\n            return this.transactionService.size() > 0;\r\n        };\r\n\r\n        return EditorCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n/*global define*/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/capabilities/TransactionalPersistenceCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * Wraps persistence capability to enable transactions. Transactions\r\n         * will cause persist calls not to be invoked immediately, but\r\n         * rather queued until [EditorCapability.save()]{@link EditorCapability#save}\r\n         * or [EditorCapability.cancel()]{@link EditorCapability#cancel} are\r\n         * called.\r\n         * @memberof platform/commonUI/edit/capabilities\r\n         * @param $q\r\n         * @param transactionManager\r\n         * @param persistenceCapability\r\n         * @param domainObject\r\n         * @constructor\r\n         */\r\n        function TransactionalPersistenceCapability(\r\n            $q,\r\n            transactionManager,\r\n            persistenceCapability,\r\n            domainObject\r\n        ) {\r\n            this.transactionManager = transactionManager;\r\n            this.persistenceCapability = persistenceCapability;\r\n            this.domainObject = domainObject;\r\n            this.$q = $q;\r\n        }\r\n\r\n        /**\r\n         * The wrapped persist function. If a transaction is active, persist\r\n         * will be queued until the transaction is committed or cancelled.\r\n         * @returns {*}\r\n         */\r\n        TransactionalPersistenceCapability.prototype.persist = function () {\r\n            var wrappedPersistence = this.persistenceCapability;\r\n\r\n            if (this.transactionManager.isActive()) {\r\n                this.transactionManager.addToTransaction(\r\n                    this.domainObject.getId(),\r\n                    wrappedPersistence.persist.bind(wrappedPersistence),\r\n                    wrappedPersistence.refresh.bind(wrappedPersistence)\r\n                );\r\n                //Need to return a promise from this function\r\n                return this.$q.when(true);\r\n            } else {\r\n                return this.persistenceCapability.persist();\r\n            }\r\n        };\r\n\r\n        TransactionalPersistenceCapability.prototype.refresh = function () {\r\n            this.transactionManager\r\n                .clearTransactionsFor(this.domainObject.getId());\r\n            return this.persistenceCapability.refresh();\r\n        };\r\n\r\n        TransactionalPersistenceCapability.prototype.getSpace = function () {\r\n            return this.persistenceCapability.getSpace();\r\n        };\r\n\r\n        return TransactionalPersistenceCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n/*global define*/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/capabilities/TransactionCapabilityDecorator',['./TransactionalPersistenceCapability'],\r\n    function (TransactionalPersistenceCapability) {\r\n\r\n        /**\r\n         * Wraps the [PersistenceCapability]{@link PersistenceCapability} with\r\n         * transactional capabilities.\r\n         * @param $q\r\n         * @param transactionService\r\n         * @param capabilityService\r\n         * @see TransactionalPersistenceCapability\r\n         * @constructor\r\n         */\r\n        function TransactionCapabilityDecorator(\r\n            $q,\r\n            transactionService,\r\n            capabilityService\r\n        ) {\r\n            this.capabilityService = capabilityService;\r\n            this.transactionService = transactionService;\r\n            this.$q = $q;\r\n        }\r\n\r\n        /**\r\n         * Decorate PersistenceCapability to queue persistence calls when a\r\n         * transaction is in progress.\r\n         */\r\n        TransactionCapabilityDecorator.prototype.getCapabilities = function (model) {\r\n            var self = this,\r\n                capabilities = this.capabilityService.getCapabilities(model),\r\n                persistenceCapability = capabilities.persistence;\r\n\r\n            capabilities.persistence = function (domainObject) {\r\n                var original =\r\n                    (typeof persistenceCapability === 'function') ?\r\n                        persistenceCapability(domainObject) :\r\n                        persistenceCapability;\r\n                return new TransactionalPersistenceCapability(\r\n                    self.$q,\r\n                    self.transactionService,\r\n                    original,\r\n                    domainObject\r\n                );\r\n            };\r\n            return capabilities;\r\n        };\r\n\r\n        return TransactionCapabilityDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/edit/src/services/TransactionManager',[], function () {\r\n    /**\r\n     * Manages transactions to support the TransactionalPersistenceCapability.\r\n     * This assumes that all commit/cancel callbacks for a given domain\r\n     * object are equivalent, and only need to be added once to any active\r\n     * transaction. Violating this assumption may cause unexpected behavior.\r\n     * @constructor\r\n     * @memberof platform/commonUI/edit\r\n     */\r\n    function TransactionManager(transactionService) {\r\n        this.transactionService = transactionService;\r\n        this.clearTransactionFns = {};\r\n    }\r\n\r\n    /**\r\n     * Check if a transaction is currently active.\r\n     * @returns {boolean} true if there is a transaction active\r\n     */\r\n    TransactionManager.prototype.isActive = function () {\r\n        return this.transactionService.isActive();\r\n    };\r\n\r\n    /**\r\n     * Check if callbacks associated with this domain object have already\r\n     * been added to the active transaction.\r\n     * @private\r\n     * @param {string} id the identifier of the domain object to check\r\n     * @returns {boolean} true if callbacks have been added\r\n     */\r\n    TransactionManager.prototype.isScheduled = function (id) {\r\n        return !!this.clearTransactionFns[id];\r\n    };\r\n\r\n    /**\r\n     * Add callbacks associated with this domain object to the active\r\n     * transaction. Both callbacks are expected to return promises that\r\n     * resolve when their associated behavior is complete.\r\n     *\r\n     * If callbacks associated with this domain object have already been\r\n     * added to the active transaction, this call will be ignored.\r\n     *\r\n     * @param {string} id the identifier of the associated domain object\r\n     * @param {Function} onCommit behavior to invoke when committing transaction\r\n     * @param {Function} onCancel behavior to invoke when cancelling transaction\r\n     */\r\n    TransactionManager.prototype.addToTransaction = function (\r\n        id,\r\n        onCommit,\r\n        onCancel\r\n    ) {\r\n        var release = this.releaseClearFn.bind(this, id);\r\n\r\n        function chain(promiseFn, nextFn) {\r\n            return function () {\r\n                return promiseFn().then(nextFn);\r\n            };\r\n        }\r\n\r\n        if (!this.isScheduled(id)) {\r\n            this.clearTransactionFns[id] =\r\n                this.transactionService.addToTransaction(\r\n                    chain(onCommit, release),\r\n                    chain(onCancel, release)\r\n                );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remove any callbacks associated with this domain object from the\r\n     * active transaction.\r\n     * @param {string} id the identifier for the domain object\r\n     */\r\n    TransactionManager.prototype.clearTransactionsFor = function (id) {\r\n        if (this.isScheduled(id)) {\r\n            this.clearTransactionFns[id]();\r\n            this.releaseClearFn(id);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Release the cached \"remove from transaction\" function that has been\r\n     * stored in association with this domain object.\r\n     * @param {string} id the identifier for the domain object\r\n     * @private\r\n     */\r\n    TransactionManager.prototype.releaseClearFn = function (id) {\r\n        delete this.clearTransactionFns[id];\r\n    };\r\n\r\n    return TransactionManager;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n/*global define*/\r\ndefine(\r\n    'platform/commonUI/edit/src/services/TransactionService',[],\r\n    function () {\r\n        /**\r\n         * Implements an application-wide transaction state. Once a\r\n         * transaction is started, calls to\r\n         * [PersistenceCapability.persist()]{@link PersistenceCapability#persist}\r\n         * will be deferred until a subsequent call to\r\n         * [TransactionService.commit]{@link TransactionService#commit} is made.\r\n         *\r\n         * @memberof platform/commonUI/edit/services\r\n         * @param $q\r\n         * @constructor\r\n         */\r\n        function TransactionService($q, $log) {\r\n            this.$q = $q;\r\n            this.$log = $log;\r\n            this.transaction = false;\r\n\r\n            this.onCommits = [];\r\n            this.onCancels = [];\r\n        }\r\n\r\n        /**\r\n         * Starts a transaction. While a transaction is active all calls to\r\n         * [PersistenceCapability.persist](@link PersistenceCapability#persist)\r\n         * will be queued until [commit]{@link #commit} or [cancel]{@link\r\n         * #cancel} are called\r\n         */\r\n        TransactionService.prototype.startTransaction = function () {\r\n            if (this.transaction) {\r\n                //Log error because this is a programming error if it occurs.\r\n                this.$log.error(\"Transaction already in progress\");\r\n            }\r\n            this.transaction = true;\r\n        };\r\n\r\n        /**\r\n         * @returns {boolean} If true, indicates that a transaction is in progress\r\n         */\r\n        TransactionService.prototype.isActive = function () {\r\n            return this.transaction;\r\n        };\r\n\r\n        /**\r\n         * Adds provided functions to a queue to be called on\r\n         * [.commit()]{@link #commit} or\r\n         * [.cancel()]{@link #commit}\r\n         * @param onCommit A function to call on commit\r\n         * @param onCancel A function to call on cancel\r\n         */\r\n        TransactionService.prototype.addToTransaction = function (onCommit, onCancel) {\r\n            if (this.transaction) {\r\n                this.onCommits.push(onCommit);\r\n                if (onCancel) {\r\n                    this.onCancels.push(onCancel);\r\n                }\r\n            } else {\r\n                //Log error because this is a programming error if it occurs.\r\n                this.$log.error(\"No transaction in progress\");\r\n            }\r\n\r\n            return function () {\r\n                this.onCommits = this.onCommits.filter(function (callback) {\r\n                    return callback !== onCommit;\r\n                });\r\n                this.onCancels = this.onCancels.filter(function (callback) {\r\n                    return callback !== onCancel;\r\n                });\r\n            }.bind(this);\r\n        };\r\n\r\n        /**\r\n         * All persist calls deferred since the beginning of the transaction\r\n         * will be committed.\r\n         *\r\n         * @returns {Promise} resolved when all persist operations have\r\n         * completed. Will reject if any commit operations fail\r\n         */\r\n        TransactionService.prototype.commit = function () {\r\n            var self = this,\r\n                promises = [],\r\n                onCommit;\r\n\r\n            while (this.onCommits.length > 0) { // ...using a while in case some onCommit adds to transaction\r\n                onCommit = this.onCommits.pop();\r\n                try { // ...also don't want to fail mid-loop...\r\n                    promises.push(onCommit());\r\n                } catch (e) {\r\n                    this.$log.error(\"Error committing transaction.\");\r\n                }\r\n            }\r\n            return this.$q.all(promises).then(function () {\r\n                self.transaction = false;\r\n\r\n                self.onCommits = [];\r\n                self.onCancels = [];\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Cancel the current transaction, replacing any dirty objects from\r\n         * persistence. Not a true rollback, as it cannot be used to undo any\r\n         * persist calls that were successful in the event one of a batch of\r\n         * persists failing.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        TransactionService.prototype.cancel = function () {\r\n            var self = this,\r\n                results = [],\r\n                onCancel;\r\n\r\n            while (this.onCancels.length > 0) {\r\n                onCancel = this.onCancels.pop();\r\n                try {\r\n                    results.push(onCancel());\r\n                } catch (error) {\r\n                    this.$log.error(\"Error committing transaction.\");\r\n                }\r\n            }\r\n            return this.$q.all(results).then(function () {\r\n                self.transaction = false;\r\n\r\n                self.onCommits = [];\r\n                self.onCancels = [];\r\n            });\r\n        };\r\n\r\n        TransactionService.prototype.size = function () {\r\n            return this.onCommits.length;\r\n        };\r\n\r\n        return TransactionService;\r\n    });\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CreateMenuController. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/CreateMenuController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the Create menu; maintains an up-to-date\r\n         * set of Create actions based on the currently-selected\r\n         * domain object.\r\n         *\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function CreateMenuController($scope) {\r\n            // Update the set of Create actions\r\n            function refreshActions() {\r\n                $scope.createActions = $scope.action ?\r\n                        $scope.action.getActions('create') :\r\n                        [];\r\n            }\r\n\r\n            // Listen for new instances of the represented object's\r\n            // \"action\" capability. This is provided by the mct-representation\r\n            // for the Create button.\r\n            // A watch is needed here (instead of invoking action.getActions\r\n            // directly) because different action instances may be returned\r\n            // with each call.\r\n            $scope.$watch(\"action\", refreshActions);\r\n        }\r\n\r\n        return CreateMenuController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/LocatorController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the \"locator\" control, which provides the\r\n         * user with the ability to select a domain object as the\r\n         * destination for a newly-created object in the Create menu.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function LocatorController($scope, $timeout, objectService) {\r\n            // Populate values needed by the locator control. These are:\r\n            // * rootObject: The top-level object, since we want to show\r\n            //               the full tree\r\n            // * treeModel: The model for the embedded tree representation,\r\n            //              used for bi-directional object selection.\r\n            function setLocatingObject(domainObject, priorObject) {\r\n                var context = domainObject &&\r\n                    domainObject.getCapability(\"context\"),\r\n                    contextRoot = context && context.getRoot();\r\n\r\n                if (contextRoot && contextRoot !== $scope.rootObject) {\r\n                    $scope.rootObject = undefined;\r\n                    // Update the displayed tree on a timeout to avoid\r\n                    // an infinite digest exception.\r\n                    $timeout(function () {\r\n                        $scope.rootObject =\r\n                            (context && context.getRoot()) || $scope.rootObject;\r\n                    }, 0);\r\n                } else if (!contextRoot) {\r\n                    //If no context root is available, default to the root\r\n                    // object\r\n                    $scope.rootObject = undefined;\r\n                    // Update the displayed tree on a timeout to avoid\r\n                    // an infinite digest exception.\r\n                    objectService.getObjects(['ROOT'])\r\n                        .then(function (objects) {\r\n                            $timeout(function () {\r\n                                $scope.rootObject = objects.ROOT;\r\n                            }, 0);\r\n                        });\r\n                }\r\n\r\n                $scope.treeModel.selectedObject = domainObject;\r\n                $scope.ngModel[$scope.field] = domainObject;\r\n\r\n                // Restrict which locations can be selected\r\n                if (domainObject &&\r\n                        $scope.structure &&\r\n                            $scope.structure.validate) {\r\n                    if (!$scope.structure.validate(domainObject)) {\r\n                        setLocatingObject(priorObject, undefined);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // Set validity\r\n                if ($scope.ngModelController) {\r\n                    $scope.ngModelController.$setValidity(\r\n                        'composition',\r\n                        !!$scope.treeModel.selectedObject\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Initial state for the tree's model\r\n            $scope.treeModel =\r\n                { selectedObject: $scope.ngModel[$scope.field] };\r\n\r\n            // Watch for changes from the tree\r\n            $scope.$watch(\"treeModel.selectedObject\", setLocatingObject);\r\n        }\r\n\r\n        return LocatorController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/CreationPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * A policy for determining whether objects of a given type can be\r\n         * created.\r\n         * @constructor\r\n         * @implements {Policy}\r\n         * @memberof platform/commonUI/browse\r\n         */\r\n        function CreationPolicy() {\r\n        }\r\n\r\n        CreationPolicy.prototype.allow = function (type) {\r\n            return type.hasFeature(\"creation\");\r\n        };\r\n\r\n        return CreationPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CreateAction. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/CreateAction',[],\r\n    function () {\r\n\r\n        /**\r\n         * The Create Action is performed to create new instances of\r\n         * domain objects of a specific type. This is the action that\r\n         * is performed when a user uses the Create menu.\r\n         *\r\n         * @memberof platform/commonUI/browse\r\n         * @implements {Action}\r\n         * @constructor\r\n         *\r\n         * @param {Type} type the type of domain object to create\r\n         * @param {DomainObject} parent the domain object that should\r\n         *        act as a container for the newly-created object\r\n         *        (note that the user will have an opportunity to\r\n         *        override this)\r\n         * @param {ActionContext} context the context in which the\r\n         *        action is being performed\r\n         */\r\n        function CreateAction(type, parent, context) {\r\n            this.metadata = {\r\n                key: 'create',\r\n                cssclass: type.getCssClass(),\r\n                name: type.getName(),\r\n                type: type.getKey(),\r\n                description: type.getDescription(),\r\n                context: context\r\n            };\r\n            this.type = type;\r\n            this.parent = parent;\r\n        }\r\n\r\n        /**\r\n         * Create a new object of the given type.\r\n         * This will prompt for user input first.\r\n         */\r\n        CreateAction.prototype.perform = function () {\r\n            var newModel = this.type.getInitialModel(),\r\n                newObject,\r\n                editAction,\r\n                editorCapability;\r\n\r\n            function onSave() {\r\n                return editorCapability.save();\r\n            }\r\n\r\n            function onCancel() {\r\n                return editorCapability.cancel();\r\n            }\r\n\r\n            newModel.type = this.type.getKey();\r\n            newModel.location = this.parent.getId();\r\n            newObject = this.parent.useCapability('instantiation', newModel);\r\n            editorCapability = newObject.hasCapability('editor') && newObject.getCapability(\"editor\");\r\n\r\n            editAction = newObject.getCapability(\"action\").getActions(\"edit\")[0];\r\n            //If an edit action is available, perform it\r\n            if (editAction) {\r\n                return editAction.perform();\r\n            } else if (editorCapability) {\r\n                //otherwise, use the save action\r\n                editorCapability.edit();\r\n                return newObject.getCapability(\"action\").perform(\"save\").then(onSave, onCancel);\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * Metadata associated with a Create action.\r\n         * @typedef {ActionMetadata} CreateActionMetadata\r\n         * @property {string} type the key for the type of domain object\r\n         *           to be created\r\n         */\r\n\r\n        /**\r\n         * Get metadata about this action.\r\n         * @returns {CreateActionMetadata} metadata about this action\r\n         */\r\n        CreateAction.prototype.getMetadata = function () {\r\n            return this.metadata;\r\n        };\r\n\r\n        return CreateAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CreateActionProvider.js. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/CreateActionProvider',[\"./CreateAction\"],\r\n    function (CreateAction) {\r\n\r\n        /**\r\n         * The CreateActionProvider is an ActionProvider which introduces\r\n         * a Create action for each creatable domain object type.\r\n         *\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         * @implements {ActionService}\r\n         *\r\n         * @param {TypeService} typeService the type service, used to discover\r\n         *        available types\r\n         * @param {DialogService} dialogService the dialog service, used by\r\n         *        specific Create actions to get user input to populate the\r\n         *        model of the newly-created domain object.\r\n         * @param {CreationService} creationService the creation service (also\r\n         *        introduced in this bundle), responsible for handling actual\r\n         *        object creation.\r\n         */\r\n        function CreateActionProvider(typeService, policyService) {\r\n            this.typeService = typeService;\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        CreateActionProvider.prototype.getActions = function (actionContext) {\r\n            var context = actionContext || {},\r\n                key = context.key,\r\n                destination = context.domainObject,\r\n                self = this;\r\n\r\n            // We only provide Create actions, and we need a\r\n            // domain object to serve as the container for the\r\n            // newly-created object (although the user may later\r\n            // make a different selection)\r\n            if (key !== 'create' || !destination) {\r\n                return [];\r\n            }\r\n\r\n            // Introduce one create action per type\r\n            return this.typeService.listTypes().filter(function (type) {\r\n                return self.policyService.allow(\"creation\", type);\r\n            }).map(function (type) {\r\n                return new CreateAction(\r\n                    type,\r\n                    destination,\r\n                    context\r\n                );\r\n            });\r\n        };\r\n\r\n        return CreateActionProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining AddAction. Created by ahenry on 01/21/16.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/AddAction',[\r\n        './CreateWizard'\r\n    ],\r\n    function (CreateWizard) {\r\n\r\n        /**\r\n         * The Add Action is performed to create new instances of\r\n         * domain objects of a specific type that are subobjects of an\r\n         * object being edited. This is the action that is performed when a\r\n         * user uses the Add menu option.\r\n         *\r\n         * @memberof platform/commonUI/browse\r\n         * @implements {Action}\r\n         * @constructor\r\n         *\r\n         * @param {Type} type the type of domain object to create\r\n         * @param {DomainObject} parent the domain object that should\r\n         *        act as a container for the newly-created object\r\n         *        (note that the user will have an opportunity to\r\n         *        override this)\r\n         * @param {ActionContext} context the context in which the\r\n         *        action is being performed\r\n         * @param {DialogService} dialogService\r\n         */\r\n        function AddAction(type, parent, context, $q, dialogService, policyService) {\r\n            this.metadata = {\r\n                key: 'add',\r\n                cssclass: type.getCssClass(),\r\n                name: type.getName(),\r\n                type: type.getKey(),\r\n                description: type.getDescription(),\r\n                context: context\r\n            };\r\n\r\n            this.type = type;\r\n            this.parent = parent;\r\n            this.$q = $q;\r\n            this.dialogService = dialogService;\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        /**\r\n         *\r\n         * Create a new object of the given type.\r\n         * This will prompt for user input first.\r\n         *\r\n         * @returns {Promise} that will be resolved with the object that the\r\n         * action was originally invoked on (ie. the 'parent')\r\n         */\r\n        AddAction.prototype.perform = function () {\r\n            var newModel = this.type.getInitialModel(),\r\n                newObject,\r\n                parentObject = this.parent,\r\n                wizard;\r\n\r\n            newModel.type = this.type.getKey();\r\n            newObject = parentObject.getCapability('instantiation').instantiate(newModel);\r\n            newObject.useCapability('mutation', function (model) {\r\n                model.location = parentObject.getId();\r\n            });\r\n\r\n            wizard = new CreateWizard(newObject, this.parent, this.policyService);\r\n\r\n            function populateObjectFromInput(formValue) {\r\n                return wizard.populateObjectFromInput(formValue, newObject);\r\n            }\r\n\r\n            function persistAndReturn(domainObject) {\r\n                return domainObject.getCapability('persistence')\r\n                    .persist()\r\n                    .then(function () {\r\n                        return domainObject;\r\n                    });\r\n            }\r\n\r\n            function addToParent(populatedObject) {\r\n                parentObject.getCapability('composition').add(populatedObject);\r\n                return persistAndReturn(parentObject);\r\n            }\r\n\r\n            return this.dialogService\r\n                .getUserInput(wizard.getFormStructure(false), wizard.getInitialFormValue())\r\n                .then(populateObjectFromInput)\r\n                .then(persistAndReturn)\r\n                .then(addToParent);\r\n\r\n        };\r\n\r\n\r\n        /**\r\n         * Metadata associated with a Add action.\r\n         * @typedef {ActionMetadata} AddActionMetadata\r\n         * @property {string} type the key for the type of domain object\r\n         *           to be created\r\n         */\r\n\r\n        /**\r\n         * Get metadata about this action.\r\n         * @returns {AddActionMetadata} metadata about this action\r\n         */\r\n        AddAction.prototype.getMetadata = function () {\r\n            return this.metadata;\r\n        };\r\n\r\n        return AddAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining AddActionProvider.js. Created by ahenry on 01/21/16.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/AddActionProvider',[\"./AddAction\"],\r\n    function (AddAction) {\r\n\r\n        /**\r\n         * The AddActionProvider is an ActionProvider which introduces\r\n         * an Add action for creating sub objects.\r\n         *\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         * @implements {ActionService}\r\n         *\r\n         * @param {TypeService} typeService the type service, used to discover\r\n         *        available types\r\n         * @param {DialogService} dialogService the dialog service, used by\r\n         *        specific Create actions to get user input to populate the\r\n         *        model of the newly-created domain object.\r\n         * @param {CreationService} creationService the creation service (also\r\n         *        introduced in this bundle), responsible for handling actual\r\n         *        object creation.\r\n         */\r\n        function AddActionProvider($q, typeService, dialogService, policyService) {\r\n            this.typeService = typeService;\r\n            this.dialogService = dialogService;\r\n            this.$q = $q;\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        AddActionProvider.prototype.getActions = function (actionContext) {\r\n            var context = actionContext || {},\r\n                key = context.key,\r\n                destination = context.domainObject,\r\n                self = this;\r\n\r\n            // We only provide Add actions, and we need a\r\n            // domain object to serve as the container for the\r\n            // newly-created object (although the user may later\r\n            // make a different selection)\r\n            if (key !== 'add' || !destination) {\r\n                return [];\r\n            }\r\n\r\n            // Introduce one create action per type\r\n            return this.typeService.listTypes().filter(function (type) {\r\n                return self.policyService.allow(\"creation\", type) && self.policyService.allow(\"composition\", destination.getCapability('type'), type);\r\n            }).map(function (type) {\r\n                return new AddAction(\r\n                    type,\r\n                    destination,\r\n                    context,\r\n                    self.$q,\r\n                    self.dialogService,\r\n                    self.policyService\r\n                );\r\n            });\r\n        };\r\n\r\n        return AddActionProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining CreateService. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/edit/src/creation/CreationService',[],\r\n    function () {\r\n\r\n        var NON_PERSISTENT_WARNING =\r\n                \"Tried to create an object in non-persistent container.\";\r\n\r\n        /**\r\n         * The creation service is responsible for instantiating and\r\n         * persisting new domain objects. Handles all actual object\r\n         * mutation and persistence associated with domain object\r\n         * creation.\r\n         * @memberof platform/commonUI/browse\r\n         * @constructor\r\n         */\r\n        function CreationService($q, $log) {\r\n            this.$q = $q;\r\n            this.$log = $log;\r\n        }\r\n\r\n        /**\r\n         * Create a new domain object with the provided model, as\r\n         * a member of the provided parent domain object's composition.\r\n         * This parent will additionally determine which persistence\r\n         * space an object is created within (as it is possible to\r\n         * have multiple persistence spaces attached.)\r\n         *\r\n         * Note that the model passed in for object creation may be\r\n         * modified to attach additional initial properties associated\r\n         * with domain object creation.\r\n         *\r\n         * @param {object} model the model for the newly-created\r\n         *        domain object\r\n         * @param {DomainObject} parent the domain object which\r\n         *        should contain the newly-created domain object\r\n         *        in its composition\r\n         * @return {Promise} a promise that will resolve when the domain\r\n         *         object has been created\r\n         */\r\n        CreationService.prototype.createObject = function (model, parent) {\r\n            var persistence = parent.getCapability(\"persistence\"),\r\n                newObject = parent.useCapability(\"instantiation\", model),\r\n                newObjectPersistence = newObject.getCapability(\"persistence\"),\r\n                self = this;\r\n\r\n            // Add the newly-created object's id to the parent's\r\n            // composition, so that it will subsequently appear\r\n            // as a child contained by that parent.\r\n            function addToComposition() {\r\n                var compositionCapability = parent.getCapability('composition'),\r\n                    addResult = compositionCapability &&\r\n                        compositionCapability.add(newObject);\r\n\r\n                return self.$q.when(addResult).then(function (result) {\r\n                    if (!result) {\r\n                        self.$log.error(\"Could not modify \" + parent.getId());\r\n                        return undefined;\r\n                    }\r\n\r\n                    return persistence.persist().then(function () {\r\n                        return result;\r\n                    });\r\n                });\r\n            }\r\n\r\n            // We need the parent's persistence capability to determine\r\n            // what space to create the new object's model in.\r\n            if (!persistence || !newObjectPersistence) {\r\n                self.$log.warn(NON_PERSISTENT_WARNING);\r\n                return self.$q.reject(new Error(NON_PERSISTENT_WARNING));\r\n            }\r\n\r\n            // Persist the new object, then add it to composition.\r\n            return newObjectPersistence.persist().then(addToComposition);\r\n        };\r\n\r\n\r\n\r\n        return CreationService;\r\n    }\r\n);\r\n\r\n\n","\ndefine('text!platform/commonUI/edit/res/templates/create/locator.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"LocatorController\" class=\"selector-list\">\\r\\n    <div class=\"wrapper\">\\r\\n        <mct-representation key=\"\\'tree\\'\"\\r\\n                            mct-object=\"rootObject\"\\r\\n                            ng-model=\"treeModel\">\\r\\n        </mct-representation>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/create/create-button.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"ClickAwayController as createController\">\\r\\n    <div class=\"s-menu-button major create-button\" ng-click=\"createController.toggle()\">\\r\\n\\t\\t<span class=\"title-label\">Create</span>\\r\\n    </div>\\r\\n    <div class=\"menu super-menu\" ng-show=\"createController.isActive()\">\\r\\n        <mct-representation mct-object=\"domainObject\" key=\"\\'create-menu\\'\">\\r\\n        </mct-representation>\\r\\n    </div>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/create/create-menu.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"contents\" ng-controller=\"CreateMenuController\">\\r\\n    <div class=\"pane left menu-items\">\\r\\n        <ul>\\r\\n            <li ng-repeat=\"createAction in createActions\" ng-click=\"createAction.perform()\">\\r\\n                <a ng-mouseover=\"representation.activeMetadata = createAction.getMetadata()\"\\r\\n                   ng-mouseleave=\"representation.activeMetadata = undefined\"\\r\\n                   class=\"menu-item-a {{ createAction.getMetadata().cssclass }}\">\\r\\n                    {{createAction.getMetadata().name}}\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\"pane right menu-item-description\">\\r\\n        <div class=\"desc-area icon {{ representation.activeMetadata.cssclass }}\"></div>\\r\\n        <div class=\"desc-area title\">\\r\\n            {{representation.activeMetadata.name}}\\r\\n        </div>\\r\\n        <div class=\"desc-area description\">\\r\\n            {{representation.activeMetadata.description}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/library.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<mct-representation key=\"\\'tree\\'\"\\r\\n                    mct-object=\"parameters.domainObject\"\\r\\n                    parameters=\"parameters\">\\r\\n</mct-representation>';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/edit-object.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"abs l-flex-col\" ng-controller=\"EditObjectController as EditObjectController\">\\r\\n    <div mct-before-unload=\"EditObjectController.getUnloadWarning()\"\\r\\n         class=\"holder flex-elem l-flex-row object-browse-bar \">\\r\\n        <div class=\"items-select left flex-elem l-flex-row grows\">\\r\\n            <mct-representation key=\"\\'back-arrow\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                class=\"flex-elem l-back\"></mct-representation>\\r\\n            <mct-representation key=\"\\'object-header\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                class=\"l-flex-row flex-elem grows object-header\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n        <div class=\"btn-bar right l-flex-row flex-elem flex-justify-end flex-fixed\">\\r\\n            <mct-representation key=\"\\'switcher\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                ng-model=\"representation\">\\r\\n            </mct-representation>\\r\\n            <!-- Temporarily, on mobile, the action buttons are hidden-->\\r\\n            <mct-representation key=\"\\'action-group\\'\"\\r\\n                                mct-object=\"domainObject\"\\r\\n                                parameters=\"{ category: \\'view-control\\' }\"\\r\\n                                class=\"mobile-hide\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"holder l-flex-col flex-elem grows l-object-wrapper\">\\r\\n        <div class=\"holder l-flex-col flex-elem grows l-object-wrapper-inner\">\\r\\n            <!-- Toolbar and Save/Cancel buttons -->\\r\\n            <div class=\"l-edit-controls flex-elem l-flex-row flex-align-end\">\\r\\n                <mct-toolbar name=\"mctToolbar\"\\r\\n                             structure=\"toolbar.structure\"\\r\\n                             ng-model=\"toolbar.state\"\\r\\n                             class=\"flex-elem grows\">\\r\\n                </mct-toolbar>\\r\\n                <mct-representation key=\"\\'edit-action-buttons\\'\"\\r\\n                                    mct-object=\"domainObject\"\\r\\n                                    class=\\'flex-elem conclude-editing\\'>\\r\\n                </mct-representation>\\r\\n\\r\\n            </div>\\r\\n            <mct-representation key=\"representation.selected.key\"\\r\\n                                mct-object=\"representation.selected.key && domainObject\"\\r\\n                                class=\"abs flex-elem grows object-holder-main scroll\"\\r\\n                                toolbar=\"toolbar\">\\r\\n            </mct-representation>\\r\\n        </div><!--/ l-object-wrapper-inner -->\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/edit-action-buttons.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"EditActionController\">\\r\\n    <span ng-repeat=\"currentAction in editActions\">\\r\\n        <a class=\\'s-button {{currentAction.getMetadata().cssclass}}\\'\\r\\n           title=\\'{{currentAction.getMetadata().name}}\\'\\r\\n           ng-click=\"currentAction.perform()\"\\r\\n           ng-class=\"{ major: $index === 0 }\">\\r\\n            <span class=\"title-label\">{{currentAction.getMetadata().name}}</span>\\r\\n        </a>\\r\\n    </span>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/elements.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"ElementsController\" class=\"flex-elem l-flex-col holder grows\">\\r\\n    <mct-include key=\"\\'input-filter\\'\"\\r\\n                 class=\"flex-elem holder\"\\r\\n                 ng-model=\"filterBy\">\\r\\n    </mct-include>\\r\\n    <div class=\"flex-elem grows vscroll\">\\r\\n        <ul class=\"tree\">\\r\\n            <li ng-repeat=\"containedObject in composition | filter:searchElements\">\\r\\n                <span class=\"tree-item\">\\r\\n                    <mct-representation\\r\\n                            class=\"rep-object-label\"\\r\\n                            key=\"\\'label\\'\"\\r\\n                            mct-object=\"containedObject\">\\r\\n                    </mct-representation>\\r\\n                </span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/edit/res/templates/topbar-edit.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'top-bar edit abs\\'>\\r\\n    <mct-representation key=\"\\'object-header\\'\"\\r\\n                        mct-object=\"domainObject\"\\r\\n                        parameters=\"{ mode: \\'Edit\\' }\"\\r\\n                        class=\"l-flex-row flex-elem grows object-header\">\\r\\n    </mct-representation>\\r\\n    <div class=\\'buttons-main btn-bar buttons abs\\'>\\r\\n        <mct-representation key=\"\\'switcher\\'\"\\r\\n                            mct-object=\"domainObject\"\\r\\n                            ng-model=\"ngModel\">\\r\\n        </mct-representation>\\r\\n\\r\\n        <mct-representation key=\"\\'edit-action-buttons\\'\"\\r\\n                            mct-object=\"domainObject\"\\r\\n                            class=\\'conclude-editing\\'>\\r\\n        </mct-representation>\\r\\n    </div>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/edit/bundle',[\r\n    \"./src/controllers/EditActionController\",\r\n    \"./src/controllers/EditPanesController\",\r\n    \"./src/controllers/ElementsController\",\r\n    \"./src/controllers/EditObjectController\",\r\n    \"./src/directives/MCTBeforeUnload\",\r\n    \"./src/actions/EditAndComposeAction\",\r\n    \"./src/actions/EditAction\",\r\n    \"./src/actions/PropertiesAction\",\r\n    \"./src/actions/RemoveAction\",\r\n    \"./src/actions/SaveAction\",\r\n    \"./src/actions/SaveAsAction\",\r\n    \"./src/actions/CancelAction\",\r\n    \"./src/policies/EditActionPolicy\",\r\n    \"./src/policies/EditableLinkPolicy\",\r\n    \"./src/policies/EditableMovePolicy\",\r\n    \"./src/policies/EditNavigationPolicy\",\r\n    \"./src/policies/EditContextualActionPolicy\",\r\n    \"./src/representers/EditRepresenter\",\r\n    \"./src/representers/EditToolbarRepresenter\",\r\n    \"./src/capabilities/EditorCapability\",\r\n    \"./src/capabilities/TransactionCapabilityDecorator\",\r\n    \"./src/services/TransactionManager\",\r\n    \"./src/services/TransactionService\",\r\n    \"./src/creation/CreateMenuController\",\r\n    \"./src/creation/LocatorController\",\r\n    \"./src/creation/CreationPolicy\",\r\n    \"./src/creation/CreateActionProvider\",\r\n    \"./src/creation/AddActionProvider\",\r\n    \"./src/creation/CreationService\",\r\n    \"text!./res/templates/create/locator.html\",\r\n    \"text!./res/templates/create/create-button.html\",\r\n    \"text!./res/templates/create/create-menu.html\",\r\n    \"text!./res/templates/library.html\",\r\n    \"text!./res/templates/edit-object.html\",\r\n    \"text!./res/templates/edit-action-buttons.html\",\r\n    \"text!./res/templates/elements.html\",\r\n    \"text!./res/templates/topbar-edit.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    EditActionController,\r\n    EditPanesController,\r\n    ElementsController,\r\n    EditObjectController,\r\n    MCTBeforeUnload,\r\n    EditAndComposeAction,\r\n    EditAction,\r\n    PropertiesAction,\r\n    RemoveAction,\r\n    SaveAction,\r\n    SaveAsAction,\r\n    CancelAction,\r\n    EditActionPolicy,\r\n    EditableLinkPolicy,\r\n    EditableMovePolicy,\r\n    EditNavigationPolicy,\r\n    EditContextualActionPolicy,\r\n    EditRepresenter,\r\n    EditToolbarRepresenter,\r\n    EditorCapability,\r\n    TransactionCapabilityDecorator,\r\n    TransactionManager,\r\n    TransactionService,\r\n    CreateMenuController,\r\n    LocatorController,\r\n    CreationPolicy,\r\n    CreateActionProvider,\r\n    AddActionProvider,\r\n    CreationService,\r\n    locatorTemplate,\r\n    createButtonTemplate,\r\n    createMenuTemplate,\r\n    libraryTemplate,\r\n    editObjectTemplate,\r\n    editActionButtonsTemplate,\r\n    elementsTemplate,\r\n    topbarEditTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/edit\", {\r\n        \"extensions\": {\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"EditActionController\",\r\n                    \"implementation\": EditActionController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"EditPanesController\",\r\n                    \"implementation\": EditPanesController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ElementsController\",\r\n                    \"implementation\": ElementsController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"EditObjectController\",\r\n                    \"implementation\": EditObjectController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$location\",\r\n                        \"policyService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"CreateMenuController\",\r\n                    \"implementation\": CreateMenuController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"LocatorController\",\r\n                    \"implementation\": LocatorController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$timeout\",\r\n                        \"objectService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctBeforeUnload\",\r\n                    \"implementation\": MCTBeforeUnload,\r\n                    \"depends\": [\r\n                        \"$window\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"actions\": [\r\n                {\r\n                    \"key\": \"compose\",\r\n                    \"implementation\": EditAndComposeAction\r\n                },\r\n                {\r\n                    \"key\": \"edit\",\r\n                    \"implementation\": EditAction,\r\n                    \"depends\": [\r\n                        \"$location\",\r\n                        \"navigationService\",\r\n                        \"$log\"\r\n                    ],\r\n                    \"description\": \"Edit\",\r\n                    \"category\": \"view-control\",\r\n                    \"cssclass\": \"major icon-pencil\"\r\n                },\r\n                {\r\n                    \"key\": \"properties\",\r\n                    \"category\": [\r\n                        \"contextual\",\r\n                        \"view-control\"\r\n                    ],\r\n                    \"implementation\": PropertiesAction,\r\n                    \"cssclass\": \"major icon-pencil\",\r\n                    \"name\": \"Edit Properties...\",\r\n                    \"description\": \"Edit properties of this object.\",\r\n                    \"depends\": [\r\n                        \"dialogService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"remove\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": RemoveAction,\r\n                    \"cssclass\": \"icon-trash\",\r\n                    \"name\": \"Remove\",\r\n                    \"description\": \"Remove this object from its containing object.\",\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"navigationService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"save\",\r\n                    \"category\": \"conclude-editing\",\r\n                    \"implementation\": SaveAction,\r\n                    \"name\": \"Save\",\r\n                    \"cssclass\": \"icon-save labeled\",\r\n                    \"description\": \"Save changes made to these objects.\",\r\n                    \"depends\": [\r\n                        \"dialogService\"\r\n                    ],\r\n                    \"priority\": \"mandatory\"\r\n                },\r\n                {\r\n                    \"key\": \"save\",\r\n                    \"category\": \"conclude-editing\",\r\n                    \"implementation\": SaveAsAction,\r\n                    \"name\": \"Save As...\",\r\n                    \"cssclass\": \"icon-save labeled\",\r\n                    \"description\": \"Save changes made to these objects.\",\r\n                    \"depends\": [\r\n                        \"$injector\",\r\n                        \"policyService\",\r\n                        \"dialogService\",\r\n                        \"creationService\",\r\n                        \"copyService\"\r\n                    ],\r\n                    \"priority\": \"mandatory\"\r\n                },\r\n                {\r\n                    \"key\": \"cancel\",\r\n                    \"category\": \"conclude-editing\",\r\n                    \"implementation\": CancelAction,\r\n                    \"name\": \"Cancel\",\r\n                    \"cssclass\": \"icon-x no-label\",\r\n                    \"description\": \"Discard changes made to these objects.\",\r\n                    \"depends\": []\r\n                }\r\n            ],\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": EditActionPolicy\r\n                },\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": EditContextualActionPolicy,\r\n                    \"depends\": [\"navigationService\", \"editModeBlacklist\", \"nonEditContextBlacklist\"]\r\n                },\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": EditableMovePolicy\r\n                },\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": EditableLinkPolicy\r\n                },\r\n                {\r\n                    \"category\": \"navigation\",\r\n                    \"message\": \"Continuing will cause the loss of any unsaved changes.\",\r\n                    \"implementation\": EditNavigationPolicy\r\n                },\r\n                {\r\n                    \"implementation\": CreationPolicy,\r\n                    \"category\": \"creation\"\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"edit-library\",\r\n                    \"template\": libraryTemplate\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"edit-object\",\r\n                    \"template\": editObjectTemplate,\r\n                    \"uses\": [\r\n                        \"view\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"drop\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"edit-action-buttons\",\r\n                    \"template\": editActionButtonsTemplate,\r\n                    \"uses\": [\r\n                        \"action\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"edit-elements\",\r\n                    \"template\": elementsTemplate,\r\n                    \"uses\": [\r\n                        \"composition\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"drop\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"topbar-edit\",\r\n                    \"template\": topbarEditTemplate\r\n                },\r\n                {\r\n                    \"key\": \"create-button\",\r\n                    \"template\": createButtonTemplate\r\n                },\r\n                {\r\n                    \"key\": \"create-menu\",\r\n                    \"template\": createMenuTemplate,\r\n                    \"uses\": [\r\n                        \"action\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"components\": [\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"capabilityService\",\r\n                    \"implementation\": TransactionCapabilityDecorator,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"transactionManager\"\r\n                    ],\r\n                    \"priority\": \"fallback\"\r\n                },\r\n                {\r\n                    \"type\": \"provider\",\r\n                    \"provides\": \"transactionService\",\r\n                    \"implementation\": TransactionService,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"CreateActionProvider\",\r\n                    \"provides\": \"actionService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": CreateActionProvider,\r\n                    \"depends\": [\r\n                        \"typeService\",\r\n                        \"policyService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"AddActionProvider\",\r\n                    \"provides\": \"actionService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": AddActionProvider,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"typeService\",\r\n                        \"dialogService\",\r\n                        \"policyService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"CreationService\",\r\n                    \"provides\": \"creationService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": CreationService,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                }\r\n\r\n            ],\r\n            \"representers\": [\r\n                {\r\n                    \"implementation\": EditRepresenter,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"implementation\": EditToolbarRepresenter\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"editModeBlacklist\",\r\n                    \"value\": [\"copy\", \"follow\", \"window\", \"link\", \"locate\"]\r\n                },\r\n                {\r\n                    \"key\": \"nonEditContextBlacklist\",\r\n                    \"value\": [\"copy\", \"follow\", \"properties\", \"move\", \"link\", \"remove\", \"locate\"]\r\n                }\r\n            ],\r\n            \"capabilities\": [\r\n                {\r\n                    \"key\": \"editor\",\r\n                    \"name\": \"Editor Capability\",\r\n                    \"description\": \"Provides transactional editing capabilities\",\r\n                    \"implementation\": EditorCapability,\r\n                    \"depends\": [\r\n                        \"transactionService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"controls\": [\r\n                {\r\n                    \"key\": \"locator\",\r\n                    \"template\": locatorTemplate\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"transactionManager\",\r\n                    \"implementation\": TransactionManager,\r\n                    \"depends\": [\r\n                        \"transactionService\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements the dialog service, which can be used to\r\n * launch dialogs for user input & notifications.\r\n * @namespace platform/commonUI/dialog\r\n */\r\ndefine(\r\n    'platform/commonUI/dialog/src/DialogService',[],\r\n    function () {\r\n        /**\r\n         * The dialog service is responsible for handling window-modal\r\n         * communication with the user, such as displaying forms for user\r\n         * input.\r\n         * @memberof platform/commonUI/dialog\r\n         * @constructor\r\n         */\r\n        function DialogService(overlayService, $q, $log) {\r\n            this.overlayService = overlayService;\r\n            this.$q = $q;\r\n            this.$log = $log;\r\n            this.activeOverlay = undefined;\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        DialogService.prototype.dismissOverlay = function (overlay) {\r\n            //Dismiss the overlay\r\n            overlay.dismiss();\r\n\r\n            //If dialog is the current active one, dismiss it\r\n            if (overlay === this.activeOverlay) {\r\n                this.activeOverlay = undefined;\r\n            }\r\n        };\r\n\r\n        DialogService.prototype.getDialogResponse = function (key, model, resultGetter, typeClass) {\r\n            // We will return this result as a promise, because user\r\n            // input is asynchronous.\r\n            var deferred = this.$q.defer(),\r\n                self = this,\r\n                overlay;\r\n\r\n            // Confirm function; this will be passed in to the\r\n            // overlay-dialog template and associated with a\r\n            // OK button click\r\n            function confirm(value) {\r\n                // Pass along the result\r\n                deferred.resolve(resultGetter ? resultGetter() : value);\r\n                self.dismissOverlay(overlay);\r\n            }\r\n\r\n            // Cancel function; this will be passed in to the\r\n            // overlay-dialog template and associated with a\r\n            // Cancel or X button click\r\n            function cancel() {\r\n                deferred.reject();\r\n                self.dismissOverlay(overlay);\r\n            }\r\n\r\n            // Add confirm/cancel callbacks\r\n            model.confirm = confirm;\r\n            model.cancel = cancel;\r\n\r\n            if (this.canShowDialog(model)) {\r\n                // Add the overlay using the OverlayService, which\r\n                // will handle actual insertion into the DOM\r\n                overlay = this.activeOverlay = this.overlayService.createOverlay(\r\n                    key,\r\n                    model,\r\n                    typeClass || \"t-dialog\"\r\n                );\r\n            } else {\r\n                deferred.reject();\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        /**\r\n         * Request user input via a window-modal dialog.\r\n         *\r\n         * @param {FormModel} formModel a description of the form\r\n         *        to be shown (see platform/forms)\r\n         * @param {object} value the initial state of the form\r\n         * @returns {Promise} a promise for the form value that the\r\n         *          user has supplied; this may be rejected if\r\n         *          user input cannot be obtained (for instance,\r\n         *          because the user cancelled the dialog)\r\n         */\r\n        DialogService.prototype.getUserInput = function (formModel, value) {\r\n            var overlayModel = {\r\n                title: formModel.name,\r\n                message: formModel.message,\r\n                structure: formModel,\r\n                value: value\r\n            };\r\n\r\n            // Provide result from the model\r\n            function resultGetter() {\r\n                return overlayModel.value;\r\n            }\r\n\r\n            // Show the overlay-dialog\r\n            return this.getDialogResponse(\r\n                \"overlay-dialog\",\r\n                overlayModel,\r\n                resultGetter\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Request that the user chooses from a set of options,\r\n         * which will be shown as buttons.\r\n         *\r\n         * @param dialogModel a description of the dialog to show\r\n         * @return {Promise} a promise for the user's choice\r\n         */\r\n        DialogService.prototype.getUserChoice = function (dialogModel) {\r\n            // Show the overlay-options dialog\r\n            return this.getDialogResponse(\r\n                \"overlay-options\",\r\n                { dialog: dialogModel }\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Tests if a dialog can be displayed. A modal dialog may only be\r\n         * displayed if one is not already visible.\r\n         * Will log a warning message if it can't display a dialog.\r\n         * @returns {boolean} true if dialog is currently visible, false\r\n         * otherwise\r\n         */\r\n        DialogService.prototype.canShowDialog = function (dialogModel) {\r\n            if (this.activeOverlay) {\r\n                // Only one dialog should be shown at a time.\r\n                // The application design should be such that\r\n                // we never even try to do this.\r\n                this.$log.warn([\r\n                    \"Dialog already showing; \",\r\n                    \"unable to show \",\r\n                    dialogModel.title\r\n                ].join(\"\"));\r\n\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * A user action that can be performed from a blocking dialog. These\r\n         * actions will be rendered as buttons within a blocking dialog.\r\n         *\r\n         * @typedef DialogOption\r\n         * @property {string} label a label to be displayed as the button\r\n         * text for this action\r\n         * @property {function} callback a function to be called when the\r\n         * button is clicked\r\n         */\r\n\r\n        /**\r\n         * @typedef DialogHandle\r\n         * @property {function} dismiss a function to dismiss the given dialog\r\n         */\r\n\r\n        /**\r\n         * A description of the model options that may be passed to the\r\n         * showBlockingMessage method. Note that the DialogModel desribed\r\n         * here is shared with the Notifications framework.\r\n         * @see NotificationService\r\n         *\r\n         * @typedef DialogModel\r\n         * @property {string} title the title to use for the dialog\r\n         * @property {string} severity the severity level of this message.\r\n         * These are defined in a bundle constant with key 'dialogSeverity'\r\n         * @property {string} hint the 'hint' message to show below the title\r\n         * @property {string} actionText text that indicates a current action,\r\n         * shown above a progress bar to indicate what's happening.\r\n         * @property {number} progress a percentage value (1-100)\r\n         * indicating the completion of the blocking task\r\n         * @property {string} progressText the message to show below a\r\n         * progress bar to indicate progress. For example, this might be\r\n         * used to indicate time remaining, or items still to process.\r\n         * @property {boolean} unknownProgress some tasks may be\r\n         * impossible to provide an estimate for. Providing a true value for\r\n         * this attribute will indicate to the user that the progress and\r\n         * duration cannot be estimated.\r\n         * @property {DialogOption} primaryOption an action that will\r\n         * be added to the dialog as a button. The primary action can be\r\n         * used as the suggested course of action for the user. Making it\r\n         * distinct from other actions allows it to be styled differently,\r\n         * and treated preferentially in banner mode.\r\n         * @property {DialogOption[]} options a list of actions that will\r\n         * be added to the dialog as buttons.\r\n         */\r\n\r\n        /**\r\n         * Displays a blocking (modal) dialog. This dialog can be used for\r\n         * displaying messages that require the user's\r\n         * immediate attention. The message may include an indication of\r\n         * progress, as well as a series of actions that\r\n         * the user can take if necessary\r\n         * @param {DialogModel} dialogModel defines options for the dialog\r\n         * @param {typeClass} string tells overlayService that this overlay should use appropriate CSS class\r\n         * @returns {boolean | {DialogHandle}}\r\n         */\r\n        DialogService.prototype.showBlockingMessage = function (dialogModel) {\r\n            if (this.canShowDialog(dialogModel)) {\r\n                // Add the overlay using the OverlayService, which\r\n                // will handle actual insertion into the DOM\r\n                var self = this,\r\n                    overlay = this.overlayService.createOverlay(\r\n                        \"overlay-blocking-message\",\r\n                        dialogModel,\r\n                        \"t-dialog-sm\"\r\n                    );\r\n\r\n                this.activeOverlay = overlay;\r\n\r\n                return {\r\n                    dismiss: function () {\r\n                        self.dismissOverlay(overlay);\r\n                    }\r\n                };\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        return DialogService;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/dialog/src/OverlayService',[],\r\n    function () {\r\n\r\n        // Template to inject into the DOM to show the dialog; really just points to\r\n        // the a specific template that can be included via mct-include\r\n        var TEMPLATE = '<mct-include ng-model=\"overlay\" key=\"key\" ng-class=\"typeClass\"></mct-include>';\r\n\r\n\r\n        /**\r\n         * The OverlayService is responsible for pre-pending templates to\r\n         * the body of the document, which is useful for displaying templates\r\n         * which need to block the full screen.\r\n         *\r\n         * This is intended to be used by the DialogService; by design, it\r\n         * does not have any protections in place to prevent multiple overlays\r\n         * from being shown at once. (The DialogService does have these\r\n         * protections, and should be used for most overlay-type interactions,\r\n         * particularly where a multiple-overlay effect is not specifically\r\n         * desired).\r\n         *\r\n         * @memberof platform/commonUI/dialog\r\n         * @constructor\r\n         */\r\n        function OverlayService($document, $compile, $rootScope) {\r\n            this.$compile = $compile;\r\n\r\n            // Don't include $document and $rootScope directly;\r\n            // avoids https://docs.angularjs.org/error/ng/cpws\r\n            this.findBody = function () {\r\n                return $document.find('body');\r\n            };\r\n            this.newScope = function () {\r\n                return $rootScope.$new();\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Add a new overlay to the document. This will be\r\n         * prepended to the document body; the overlay's\r\n         * template (as pointed to by the `key` argument) is\r\n         * responsible for having a useful z-order, and for\r\n         * blocking user interactions if appropriate.\r\n         *\r\n         * @param {string} key the symbolic key which identifies\r\n         *        the template of the overlay to be shown\r\n         * @param {object} overlayModel the model to pass to the\r\n         *        included overlay template (this will be passed\r\n         *        in via ng-model)\r\n         * @param {string} typeClass the element class to use in rendering\r\n         *        the overlay. Can be specified to provide custom styling of\r\n         *        overlays\r\n         */\r\n        OverlayService.prototype.createOverlay = function (key, overlayModel, typeClass) {\r\n            // Create a new scope for this overlay\r\n            var scope = this.newScope(),\r\n                element;\r\n\r\n            // Stop showing the overlay; additionally, release the scope\r\n            // that it uses.\r\n            function dismiss() {\r\n                scope.$destroy();\r\n                element.remove();\r\n            }\r\n\r\n            // If no model is supplied, just fill in a default \"cancel\"\r\n            overlayModel = overlayModel || { cancel: dismiss };\r\n\r\n            // Populate the scope; will be passed directly to the template\r\n            scope.overlay = overlayModel;\r\n            scope.key = key;\r\n            scope.typeClass = typeClass || 't-dialog';\r\n\r\n            // Create the overlay element and add it to the document's body\r\n            element = this.$compile(TEMPLATE)(scope);\r\n            this.findBody().prepend(element);\r\n\r\n            return {\r\n                dismiss: dismiss\r\n            };\r\n        };\r\n\r\n        return OverlayService;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/overlay-dialog.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<mct-container key=\"overlay\">\\r\\n    <mct-include key=\"\\'form-dialog\\'\" ng-model=\"ngModel\">\\r\\n    </mct-include>\\r\\n</mct-container>';});\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/overlay-options.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<mct-container key=\"overlay\">\\r\\n    <div class=\"abs top-bar\">\\r\\n        <div class=\"title\">{{ngModel.dialog.title}}</div>\\r\\n        <div class=\"hint\">{{ngModel.dialog.hint}}</div>\\r\\n    </div>\\r\\n    <div class=\\'abs editor\\'>\\r\\n        <mct-include key=\"ngModel.dialog.template\"\\r\\n                     parameters=\"ngModel.dialog.parameters\"\\r\\n                     ng-model=\"ngModel.dialog.model\">\\r\\n        </mct-include>\\r\\n    </div>\\r\\n    <div class=\"abs bottom-bar\">\\r\\n        <a ng-repeat=\"option in ngModel.dialog.options\"\\r\\n           href=\\'\\'\\r\\n           class=\"s-button lg\"\\r\\n           title=\"{{option.description}}\"\\r\\n           ng-click=\"ngModel.confirm(option.key)\"\\r\\n           ng-class=\"{ major: $first, subtle: !$first }\">\\r\\n            {{option.name}}\\r\\n        </a>\\r\\n    </div>\\r\\n</mct-container>';});\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/dialog.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"abs top-bar\">\\r\\n    <div class=\"title\">{{ngModel.title}}</div>\\r\\n    <div class=\"hint\">All fields marked <span class=\"req icon-asterisk\"></span> are required.</div>\\r\\n</div>\\r\\n<div class=\\'abs editor\\'>\\r\\n    <mct-form ng-model=\"ngModel.value\"\\r\\n              structure=\"ngModel.structure\"\\r\\n              class=\"validates\"\\r\\n              name=\"createForm\">\\r\\n    </mct-form>\\r\\n</div>\\r\\n<div class=\"abs bottom-bar\">\\r\\n    <a class=\\'s-button major\\'\\r\\n       ng-class=\"{ disabled: !createForm.$valid }\"\\r\\n       ng-click=\"ngModel.confirm()\">\\r\\n        OK\\r\\n    </a>\\r\\n    <a class=\\'s-button\\'\\r\\n       ng-click=\"ngModel.cancel()\">\\r\\n        Cancel\\r\\n    </a>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/overlay-blocking-message.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<mct-container key=\"overlay\" class=\"t-message-single\">\\r\\n    <mct-include key=\"\\'message\\'\" ng-model=\"ngModel\">\\r\\n    </mct-include>\\r\\n</mct-container>';});\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/message.html',[],function () { return '<div class=\"l-message\"\\r\\n     ng-class=\"\\'message-severity-\\' + ngModel.severity\">\\r\\n    <div class=\"ui-symbol type-icon message-type\"></div>\\r\\n    <div class=\"message-contents\">\\r\\n        <div class=\"top-bar\">\\r\\n            <div class=\"title\">{{ngModel.title}}</div>\\r\\n            <div class=\"hint\" ng-hide=\"ngModel.hint === undefined\">{{ngModel.hint}}</div>\\r\\n        </div>\\r\\n        <div class=\"message-body\">\\r\\n            <div class=\"message-action\">\\r\\n                {{ngModel.actionText}}\\r\\n            </div>\\r\\n            <mct-include key=\"\\'progress-bar\\'\"\\r\\n                         ng-model=\"ngModel\"\\r\\n                         ng-show=\"ngModel.progress !== undefined || ngModel.unknownProgress\"></mct-include>\\r\\n        </div>\\r\\n        <div class=\"bottom-bar\">\\r\\n            <a ng-repeat=\"dialogOption in ngModel.options\"\\r\\n               class=\"s-button major\"\\r\\n               ng-click=\"dialogOption.callback()\">\\r\\n                {{dialogOption.label}}\\r\\n            </a>\\r\\n            <a class=\"s-button major\"\\r\\n               ng-if=\"ngModel.primaryOption\"\\r\\n               ng-click=\"ngModel.primaryOption.callback()\">\\r\\n                {{ngModel.primaryOption.label}}\\r\\n            </a>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/overlay-message-list.html',[],function () { return '<mct-container key=\"overlay\" class=\"t-message-list\">\\r\\n    <div class=\"message-contents\">\\r\\n        <div class=\"abs top-bar\">\\r\\n            <div class=\"title\">{{ngModel.dialog.title}}</div>\\r\\n            <div class=\"hint\">Displaying {{ngModel.dialog.messages.length}} message<span ng-show=\"ngModel.dialog.messages.length > 1 ||\\r\\n                                                                                                  ngModel.dialog.messages.length == 0\">s</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"abs message-body\">\\r\\n            <mct-include\\r\\n                    ng-repeat=\"msg in ngModel.dialog.messages | orderBy: \\'-\\'\"\\r\\n                    key=\"\\'message\\'\" ng-model=\"msg.model\"></mct-include>\\r\\n        </div>\\r\\n        <div class=\"abs bottom-bar\">\\r\\n            <a ng-repeat=\"dialogAction in ngModel.dialog.actions\"\\r\\n               class=\"s-button major\"\\r\\n               ng-click=\"dialogAction.action()\">\\r\\n                {{dialogAction.label}}\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</mct-container>';});\n\n","\ndefine('text!platform/commonUI/dialog/res/templates/overlay.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"abs overlay\">\\r\\n    <div class=\"abs blocker\"></div>\\r\\n    <div class=\"abs holder\">\\r\\n        <a ng-click=\"ngModel.cancel()\"\\r\\n           ng-if=\"ngModel.cancel\"\\r\\n           class=\"close icon-x\"></a>\\r\\n        <div class=\"abs contents\" ng-transclude></div>\\r\\n    </div>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/dialog/bundle',[\r\n    \"./src/DialogService\",\r\n    \"./src/OverlayService\",\r\n    \"text!./res/templates/overlay-dialog.html\",\r\n    \"text!./res/templates/overlay-options.html\",\r\n    \"text!./res/templates/dialog.html\",\r\n    \"text!./res/templates/overlay-blocking-message.html\",\r\n    \"text!./res/templates/message.html\",\r\n    \"text!./res/templates/overlay-message-list.html\",\r\n    \"text!./res/templates/overlay.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    DialogService,\r\n    OverlayService,\r\n    overlayDialogTemplate,\r\n    overlayOptionsTemplate,\r\n    dialogTemplate,\r\n    overlayBlockingMessageTemplate,\r\n    messageTemplate,\r\n    overlayMessageListTemplate,\r\n    overlayTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/dialog\", {\r\n        \"extensions\": {\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"dialogService\",\r\n                    \"implementation\": DialogService,\r\n                    \"depends\": [\r\n                        \"overlayService\",\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"overlayService\",\r\n                    \"implementation\": OverlayService,\r\n                    \"depends\": [\r\n                        \"$document\",\r\n                        \"$compile\",\r\n                        \"$rootScope\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"overlay-dialog\",\r\n                    \"template\": overlayDialogTemplate\r\n                },\r\n                {\r\n                    \"key\": \"overlay-options\",\r\n                    \"template\": overlayOptionsTemplate\r\n                },\r\n                {\r\n                    \"key\": \"form-dialog\",\r\n                    \"template\": dialogTemplate\r\n                },\r\n                {\r\n                    \"key\": \"overlay-blocking-message\",\r\n                    \"template\": overlayBlockingMessageTemplate\r\n                },\r\n                {\r\n                    \"key\": \"message\",\r\n                    \"template\": messageTemplate\r\n                },\r\n                {\r\n                    \"key\": \"overlay-message-list\",\r\n                    \"template\": overlayMessageListTemplate\r\n                }\r\n            ],\r\n            \"containers\": [\r\n                {\r\n                    \"key\": \"overlay\",\r\n                    \"template\": overlayTemplate\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/formats/src/FormatProvider',[\r\n\r\n], function (\r\n\r\n) {\r\n\r\n    /**\r\n     * An object used to convert between numeric values and text values,\r\n     * typically used to display these values to the user and to convert\r\n     * user input to a numeric format, particularly for time formats.\r\n     * @interface {Format}\r\n     */\r\n\r\n    /**\r\n     * Parse text (typically user input) to a numeric value.\r\n     * Behavior is undefined when the text cannot be parsed;\r\n     * `validate` should be called first if the text may be invalid.\r\n     * @method parse\r\n     * @memberof Format#\r\n     * @param {string} text the text to parse\r\n     * @returns {number} the parsed numeric value\r\n     */\r\n\r\n    /**\r\n     * Determine whether or not some text (typically user input) can\r\n     * be parsed to a numeric value by this format.\r\n     * @method validate\r\n     * @memberof Format#\r\n     * @param {string} text the text to parse\r\n     * @returns {boolean} true if the text can be parsed\r\n     */\r\n\r\n    /**\r\n     * Convert a numeric value to a text value for display using\r\n     * this format.\r\n     * @method format\r\n     * @memberof Format#\r\n     * @param {number} value the numeric value to format\r\n     * @returns {string} the text representation of the value\r\n     */\r\n\r\n    /**\r\n     * Provides access to `Format` objects which can be used to\r\n     * convert values between human-readable text and numeric\r\n     * representations.\r\n     * @interface FormatService\r\n     */\r\n\r\n    /**\r\n     * Look up a format by its symbolic identifier.\r\n     * @method getFormat\r\n     * @memberof FormatService#\r\n     * @param {string} key the identifier for this format\r\n     * @returns {Format} the format\r\n     * @throws {Error} errors when the requested format is unrecognized\r\n     */\r\n\r\n    /**\r\n     * Provides formats from the `formats` extension category.\r\n     * @constructor\r\n     * @implements {FormatService}\r\n     * @memberof platform/commonUI/formats\r\n     * @param {Array.<function(new : Format)>} format constructors,\r\n     *        from the `formats` extension category.\r\n     */\r\n    function FormatProvider(formats) {\r\n        var formatMap = {};\r\n\r\n        function addToMap(Format) {\r\n            var key = Format.key;\r\n            if (key && !formatMap[key]) {\r\n                formatMap[key] = new Format();\r\n            }\r\n        }\r\n\r\n        formats.forEach(addToMap);\r\n        this.formatMap = formatMap;\r\n    }\r\n\r\n    FormatProvider.prototype.getFormat = function (key) {\r\n        var format = this.formatMap[key];\r\n        if (!format) {\r\n            throw new Error(\"FormatProvider: No format found for \" + key);\r\n        }\r\n        return format;\r\n    };\r\n\r\n    return FormatProvider;\r\n\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/formats/src/UTCTimeFormat',[\r\n    'moment'\r\n], function (\r\n    moment\r\n) {\r\n\r\n    var DATE_FORMAT = \"YYYY-MM-DD HH:mm:ss.SSS\",\r\n        DATE_FORMATS = [\r\n            DATE_FORMAT,\r\n            \"YYYY-MM-DD HH:mm:ss\",\r\n            \"YYYY-MM-DD HH:mm\",\r\n            \"YYYY-MM-DD\"\r\n        ];\r\n\r\n\r\n    /**\r\n     * Formatter for UTC timestamps. Interprets numeric values as\r\n     * milliseconds since the start of 1970.\r\n     *\r\n     * @implements {Format}\r\n     * @constructor\r\n     * @memberof platform/commonUI/formats\r\n     */\r\n    function UTCTimeFormat() {\r\n    }\r\n\r\n    UTCTimeFormat.prototype.format = function (value) {\r\n        return moment.utc(value).format(DATE_FORMAT) + \"Z\";\r\n    };\r\n\r\n    UTCTimeFormat.prototype.parse = function (text) {\r\n        return moment.utc(text, DATE_FORMATS).valueOf();\r\n    };\r\n\r\n    UTCTimeFormat.prototype.validate = function (text) {\r\n        return moment.utc(text, DATE_FORMATS).isValid();\r\n    };\r\n\r\n    return UTCTimeFormat;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/formats/bundle',[\r\n    \"./src/FormatProvider\",\r\n    \"./src/UTCTimeFormat\",\r\n    'legacyRegistry'\r\n], function (\r\n    FormatProvider,\r\n    UTCTimeFormat,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/formats\", {\r\n        \"name\": \"Time services bundle\",\r\n        \"description\": \"Defines interfaces and provides default implementations for handling different time systems.\",\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"formatService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": FormatProvider,\r\n                    \"depends\": [\r\n                        \"formats[]\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"formats\": [\r\n                {\r\n                    \"key\": \"utc\",\r\n                    \"implementation\": UTCTimeFormat\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"DEFAULT_TIME_FORMAT\",\r\n                    \"value\": \"utc\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining UrlService.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/services/UrlService',[],\r\n    function () {\r\n\r\n        /**\r\n         * The url service handles calls for url paths\r\n         * using domain objects.\r\n         * @constructor\r\n         * @memberof platform/commonUI/general\r\n         */\r\n        function UrlService($location) {\r\n            this.$location = $location;\r\n        }\r\n\r\n        /**\r\n         * Returns the Url path for a specific domain object\r\n         * without the index.html path and the view path\r\n         * @param {string} mode value of browse or edit mode\r\n         *        for the path\r\n         * @param {DomainObject} value of the domain object\r\n         *        to get the path of\r\n         * @returns {string} URL for the domain object\r\n         */\r\n        UrlService.prototype.urlForLocation = function (mode, domainObject) {\r\n            var context = domainObject &&\r\n                    domainObject.getCapability('context'),\r\n                objectPath = context ? context.getPath() : [],\r\n                ids = objectPath.map(function (domainObj) {\r\n                    return domainObj.getId();\r\n                });\r\n\r\n            // Parses the path together. Starts with the\r\n            // default index.html file, then the mode passed\r\n            // into the service, followed by ids in the url\r\n            // joined by '/', and lastly the view path from\r\n            // the current location\r\n            return mode + \"/\" + ids.slice(1).join(\"/\");\r\n        };\r\n\r\n        /**\r\n         * Returns the Url path for a specific domain object\r\n         * including the index.html path and the view path\r\n         * allowing a new tab to hold the correct characteristics\r\n         * @param {string} mode value of browse or edit mode\r\n         *        for the path\r\n         * @param {DomainObject} value of the domain object\r\n         *        to get the path of\r\n         * @returns {string} URL for the domain object\r\n         */\r\n        UrlService.prototype.urlForNewTab = function (mode, domainObject) {\r\n            var viewPath = \"?view=\" + this.$location.search().view,\r\n                newTabPath =\r\n                    \"index.html#\" + this.urlForLocation(mode, domainObject) +\r\n                            viewPath;\r\n            return newTabPath;\r\n        };\r\n\r\n        return UrlService;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/services/Popup',[],function () {\r\n\r\n        /**\r\n         * A popup is an element that has been displayed at a particular\r\n         * location within the page.\r\n         * @constructor\r\n         * @memberof platform/commonUI/general\r\n         * @param element the jqLite-wrapped element\r\n         * @param {object} styles an object containing key-value pairs\r\n         *        of styles used to position the element.\r\n         */\r\n        function Popup(element, styles) {\r\n            this.styles = styles;\r\n            this.element = element;\r\n\r\n            element.css(styles);\r\n        }\r\n\r\n        /**\r\n         * Stop showing this popup.\r\n         */\r\n        Popup.prototype.dismiss = function () {\r\n            this.element.remove();\r\n        };\r\n\r\n        /**\r\n         * Check if this popup is positioned such that it appears to the\r\n         * left of its original location.\r\n         * @returns {boolean} true if the popup goes left\r\n         */\r\n        Popup.prototype.goesLeft = function () {\r\n            return !this.styles.left;\r\n        };\r\n\r\n        /**\r\n         * Check if this popup is positioned such that it appears to the\r\n         * right of its original location.\r\n         * @returns {boolean} true if the popup goes right\r\n         */\r\n        Popup.prototype.goesRight = function () {\r\n            return !this.styles.right;\r\n        };\r\n\r\n        /**\r\n         * Check if this popup is positioned such that it appears above\r\n         * its original location.\r\n         * @returns {boolean} true if the popup goes up\r\n         */\r\n        Popup.prototype.goesUp = function () {\r\n            return !this.styles.top;\r\n        };\r\n\r\n        /**\r\n         * Check if this popup is positioned such that it appears below\r\n         * its original location.\r\n         * @returns {boolean} true if the popup goes down\r\n         */\r\n        Popup.prototype.goesDown = function () {\r\n            return !this.styles.bottom;\r\n        };\r\n\r\n        return Popup;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/services/PopupService',['./Popup'],\r\n    function (Popup) {\r\n\r\n        /**\r\n         * Displays popup elements at specific positions within the document.\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function PopupService($document, $window) {\r\n            this.$document = $document;\r\n            this.$window = $window;\r\n        }\r\n\r\n        /**\r\n         * Options controlling how the popup is displaed.\r\n         *\r\n         * @typedef PopupOptions\r\n         * @memberof platform/commonUI/general\r\n         * @property {number} [offsetX] the horizontal distance, in pixels,\r\n         *           to offset the element in whichever direction it is\r\n         *           displayed. Defaults to 0.\r\n         * @property {number} [offsetY] the vertical distance, in pixels,\r\n         *           to offset the element in whichever direction it is\r\n         *           displayed. Defaults to 0.\r\n         * @property {number} [marginX] the horizontal position, in pixels,\r\n         *           after which to prefer to display the element to the left.\r\n         *           If negative, this is relative to the right edge of the\r\n         *           page. Defaults to half the window's width.\r\n         * @property {number} [marginY] the vertical position, in pixels,\r\n         *           after which to prefer to display the element upward.\r\n         *           If negative, this is relative to the right edge of the\r\n         *           page. Defaults to half the window's height.\r\n         * @property {string} [leftClass] class to apply when shifting to the left\r\n         * @property {string} [rightClass] class to apply when shifting to the right\r\n         * @property {string} [upClass] class to apply when shifting upward\r\n         * @property {string} [downClass] class to apply when shifting downward\r\n         */\r\n\r\n        /**\r\n         * Display a popup at a particular location. The location chosen will\r\n         * be the corner of the element; the element will be positioned either\r\n         * to the left or the right of this point depending on available\r\n         * horizontal space, and will similarly be shifted upward or downward\r\n         * depending on available vertical space.\r\n         *\r\n         * @param element the jqLite-wrapped DOM element to pop up\r\n         * @param {number[]} position x,y position of the element, in\r\n         *        pixel coordinates. Negative values are interpreted as\r\n         *        relative to the right or bottom of the window.\r\n         * @param {PopupOptions} [options] additional options to control\r\n         *        positioning of the popup\r\n         * @returns {platform/commonUI/general.Popup} the popup\r\n         */\r\n        PopupService.prototype.display = function (element, position, options) {\r\n            var $document = this.$document,\r\n                $window = this.$window,\r\n                body = $document.find('body'),\r\n                winDim = [$window.innerWidth, $window.innerHeight],\r\n                styles = { position: 'absolute' },\r\n                margin,\r\n                offset;\r\n\r\n            function adjustNegatives(value, index) {\r\n                return value < 0 ? (value + winDim[index]) : value;\r\n            }\r\n\r\n            // Defaults\r\n            options = options || {};\r\n            offset = [\r\n                options.offsetX !== undefined ? options.offsetX : 0,\r\n                options.offsetY !== undefined ? options.offsetY : 0\r\n            ];\r\n            margin = [options.marginX, options.marginY].map(function (m, i) {\r\n                return m === undefined ? (winDim[i] / 2) : m;\r\n            }).map(adjustNegatives);\r\n\r\n            position = position.map(adjustNegatives);\r\n\r\n            if (position[0] > margin[0]) {\r\n                styles.right = (winDim[0] - position[0] + offset[0]) + 'px';\r\n            } else {\r\n                styles.left =  (position[0] + offset[0]) + 'px';\r\n            }\r\n\r\n            if (position[1] > margin[1]) {\r\n                styles.bottom = (winDim[1] - position[1] + offset[1]) + 'px';\r\n            } else {\r\n                styles.top = (position[1] + offset[1]) + 'px';\r\n            }\r\n\r\n            // Add the menu to the body\r\n            body.append(element);\r\n\r\n            // Return a function to dismiss the bubble\r\n            return new Popup(element, styles);\r\n        };\r\n\r\n        return PopupService;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine('platform/commonUI/general/src/SplashScreenManager',[\r\n\r\n], function (\r\n\r\n) {\r\n\r\n    function SplashScreenManager($document) {\r\n        var splash;\r\n        $document = $document[0];\r\n        splash = $document.querySelectorAll('.l-splash-holder')[0];\r\n        if (!splash) {\r\n            return;\r\n        }\r\n        splash.className += ' fadeout';\r\n        splash.addEventListener('transitionend', function () {\r\n            splash.parentNode.removeChild(splash);\r\n        });\r\n    }\r\n\r\n    return SplashScreenManager;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle provides various general-purpose UI elements, including\r\n * platform styling.\r\n * @namespace platform/commonUI/general\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/StyleSheetLoader',[],\r\n    function () {\r\n\r\n        /**\r\n         * The StyleSheetLoader adds links to style sheets exposed from\r\n         * various bundles as extensions of category `stylesheets`.\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         * @param {object[]} stylesheets stylesheet extension definitions\r\n         * @param $document Angular's jqLite-wrapped document element\r\n         * @param {string} activeTheme the theme in use\r\n         */\r\n        function StyleSheetLoader(stylesheets, $document, activeTheme) {\r\n            var head = $document.find('head'),\r\n                document = $document[0];\r\n\r\n            // Procedure for adding a single stylesheet\r\n            function addStyleSheet(stylesheet) {\r\n                // Create a link element, and construct full path\r\n                var link = document.createElement('link'),\r\n                    path = [\r\n                        stylesheet.bundle.path,\r\n                        stylesheet.bundle.resources,\r\n                        stylesheet.stylesheetUrl\r\n                    ].join(\"/\");\r\n\r\n                // Initialize attributes on the link\r\n                link.setAttribute(\"rel\", \"stylesheet\");\r\n                link.setAttribute(\"type\", \"text/css\");\r\n                link.setAttribute(\"href\", path);\r\n\r\n                // Append the link to the head element\r\n                head.append(link);\r\n            }\r\n\r\n            // Stylesheets which specify themes should only be applied\r\n            // when that theme has been declared.\r\n            function matchesTheme(stylesheet) {\r\n                return stylesheet.theme === undefined ||\r\n                    stylesheet.theme === activeTheme;\r\n            }\r\n\r\n            // Add all stylesheets from extensions\r\n            stylesheets.filter(matchesTheme).forEach(addStyleSheet);\r\n        }\r\n\r\n        return StyleSheetLoader;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/src/controllers/TimeRangeController',[\r\n\r\n], function () {\r\n\r\n    var TICK_SPACING_PX = 150;\r\n\r\n    /* format number as percent; 0.0-1.0 to \"0%\"-\"100%\" */\r\n    function toPercent(p) {\r\n        return (100 * p) + \"%\";\r\n    }\r\n\r\n    function clamp(value, low, high) {\r\n        return Math.max(low, Math.min(high, value));\r\n    }\r\n\r\n    function copyBounds(bounds) {\r\n        return {\r\n            start: bounds.start,\r\n            end: bounds.end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Controller used by the `time-controller` template.\r\n     * @memberof platform/commonUI/general\r\n     * @constructor\r\n     * @param $scope the Angular scope for this controller\r\n     * @param {FormatService} formatService the service to user to format\r\n     *        domain values\r\n     * @param {string} defaultFormat the format to request when no\r\n     *        format has been otherwise specified\r\n     * @param {Function} now a function to return current system time\r\n     */\r\n    function TimeRangeController($scope, $timeout, formatService, defaultFormat, now) {\r\n        this.$scope = $scope;\r\n        this.formatService = formatService;\r\n        this.defaultFormat = defaultFormat;\r\n        this.now = now;\r\n\r\n        this.tickCount = 2;\r\n        this.innerMinimumSpan = 1000; // 1 second\r\n        this.outerMinimumSpan = 1000; // 1 second\r\n        this.initialDragValue = undefined;\r\n        this.formatter = formatService.getFormat(defaultFormat);\r\n        this.formStartChanged = false;\r\n        this.formEndChanged = false;\r\n        this.$timeout = $timeout;\r\n\r\n        this.$scope.ticks = [];\r\n\r\n        this.updateViewFromModel(this.$scope.ngModel);\r\n        this.updateFormModel();\r\n\r\n        [\r\n            'updateViewFromModel',\r\n            'updateSpanWidth',\r\n            'updateOuterStart',\r\n            'updateOuterEnd',\r\n            'updateFormat',\r\n            'validateStart',\r\n            'validateEnd',\r\n            'onFormStartChange',\r\n            'onFormEndChange'\r\n        ].forEach(function (boundFn) {\r\n            this[boundFn] = this[boundFn].bind(this);\r\n        }, this);\r\n\r\n        this.$scope.$watchCollection(\"ngModel\", this.updateViewFromModel);\r\n        this.$scope.$watch(\"spanWidth\", this.updateSpanWidth);\r\n        this.$scope.$watch(\"ngModel.outer.start\", this.updateOuterStart);\r\n        this.$scope.$watch(\"ngModel.outer.end\", this.updateOuterEnd);\r\n        this.$scope.$watch(\"parameters.format\", this.updateFormat);\r\n        this.$scope.$watch(\"formModel.start\", this.onFormStartChange);\r\n        this.$scope.$watch(\"formModel.end\", this.onFormEndChange);\r\n    }\r\n\r\n    TimeRangeController.prototype.formatTimestamp = function (ts) {\r\n        return this.formatter.format(ts);\r\n    };\r\n\r\n    TimeRangeController.prototype.updateTicks = function () {\r\n        var i, p, ts, start, end, span;\r\n        end = this.$scope.ngModel.outer.end;\r\n        start = this.$scope.ngModel.outer.start;\r\n        span = end - start;\r\n        this.$scope.ticks = [];\r\n        for (i = 0; i < this.tickCount; i += 1) {\r\n            p = i / (this.tickCount - 1);\r\n            ts = p * span + start;\r\n            this.$scope.ticks.push(this.formatTimestamp(ts));\r\n        }\r\n    };\r\n\r\n    TimeRangeController.prototype.updateSpanWidth = function (w) {\r\n        this.tickCount = Math.max(Math.floor(w / TICK_SPACING_PX), 2);\r\n        this.updateTicks();\r\n    };\r\n\r\n    TimeRangeController.prototype.updateViewForInnerSpanFromModel = function (\r\n        ngModel\r\n    ) {\r\n        var span = ngModel.outer.end - ngModel.outer.start;\r\n\r\n        // Expose readable dates for the knobs\r\n        this.$scope.startInnerText = this.formatTimestamp(ngModel.inner.start);\r\n        this.$scope.endInnerText = this.formatTimestamp(ngModel.inner.end);\r\n\r\n        // And positions for the knobs\r\n        this.$scope.startInnerPct =\r\n            toPercent((ngModel.inner.start - ngModel.outer.start) / span);\r\n        this.$scope.endInnerPct =\r\n            toPercent((ngModel.outer.end - ngModel.inner.end) / span);\r\n    };\r\n\r\n    TimeRangeController.prototype.defaultBounds = function () {\r\n        var t = this.now();\r\n        return {\r\n            start: t - 24 * 3600 * 1000, // One day\r\n            end: t\r\n        };\r\n    };\r\n\r\n\r\n    TimeRangeController.prototype.updateViewFromModel = function (ngModel) {\r\n        ngModel = ngModel || {};\r\n        ngModel.outer = ngModel.outer || this.defaultBounds();\r\n        ngModel.inner = ngModel.inner || copyBounds(ngModel.outer);\r\n\r\n        // Stick it back is scope (in case we just set defaults)\r\n        this.$scope.ngModel = ngModel;\r\n\r\n        this.updateViewForInnerSpanFromModel(ngModel);\r\n        this.updateTicks();\r\n    };\r\n\r\n    TimeRangeController.prototype.startLeftDrag = function () {\r\n        this.initialDragValue = this.$scope.ngModel.inner.start;\r\n    };\r\n\r\n    TimeRangeController.prototype.startRightDrag = function () {\r\n        this.initialDragValue = this.$scope.ngModel.inner.end;\r\n    };\r\n\r\n    TimeRangeController.prototype.startMiddleDrag = function () {\r\n        this.initialDragValue = {\r\n            start: this.$scope.ngModel.inner.start,\r\n            end: this.$scope.ngModel.inner.end\r\n        };\r\n    };\r\n\r\n    TimeRangeController.prototype.toMillis = function (pixels) {\r\n        var span =\r\n            this.$scope.ngModel.outer.end - this.$scope.ngModel.outer.start;\r\n        return (pixels / this.$scope.spanWidth) * span;\r\n    };\r\n\r\n    TimeRangeController.prototype.leftDrag = function (pixels) {\r\n        var delta = this.toMillis(pixels);\r\n        this.$scope.ngModel.inner.start = clamp(\r\n            this.initialDragValue + delta,\r\n            this.$scope.ngModel.outer.start,\r\n            this.$scope.ngModel.inner.end - this.innerMinimumSpan\r\n        );\r\n        this.updateViewFromModel(this.$scope.ngModel);\r\n    };\r\n\r\n    TimeRangeController.prototype.rightDrag = function (pixels) {\r\n        var delta = this.toMillis(pixels);\r\n        this.$scope.ngModel.inner.end = clamp(\r\n            this.initialDragValue + delta,\r\n            this.$scope.ngModel.inner.start + this.innerMinimumSpan,\r\n            this.$scope.ngModel.outer.end\r\n        );\r\n        this.updateViewFromModel(this.$scope.ngModel);\r\n    };\r\n\r\n    TimeRangeController.prototype.middleDrag = function (pixels) {\r\n        var delta = this.toMillis(pixels),\r\n            edge = delta < 0 ? 'start' : 'end',\r\n            opposite = delta < 0 ? 'end' : 'start';\r\n\r\n        // Adjust the position of the edge in the direction of drag\r\n        this.$scope.ngModel.inner[edge] = clamp(\r\n            this.initialDragValue[edge] + delta,\r\n            this.$scope.ngModel.outer.start,\r\n            this.$scope.ngModel.outer.end\r\n        );\r\n        // Adjust opposite knob to maintain span\r\n        this.$scope.ngModel.inner[opposite] =\r\n            this.$scope.ngModel.inner[edge] +\r\n            this.initialDragValue[opposite] -\r\n            this.initialDragValue[edge];\r\n\r\n        this.updateViewFromModel(this.$scope.ngModel);\r\n    };\r\n\r\n    TimeRangeController.prototype.updateFormModel = function () {\r\n        this.$scope.formModel = {\r\n            start: ((this.$scope.ngModel || {}).outer || {}).start,\r\n            end: ((this.$scope.ngModel || {}).outer || {}).end\r\n        };\r\n    };\r\n\r\n    TimeRangeController.prototype.updateOuterStart = function () {\r\n        var ngModel = this.$scope.ngModel;\r\n\r\n        ngModel.inner.start =\r\n            Math.max(ngModel.outer.start, ngModel.inner.start);\r\n        ngModel.inner.end = Math.max(\r\n            ngModel.inner.start + this.innerMinimumSpan,\r\n            ngModel.inner.end\r\n        );\r\n\r\n        this.updateFormModel();\r\n        this.updateViewForInnerSpanFromModel(ngModel);\r\n        this.updateTicks();\r\n    };\r\n\r\n    TimeRangeController.prototype.updateOuterEnd = function () {\r\n        var ngModel = this.$scope.ngModel;\r\n\r\n        ngModel.inner.end =\r\n            Math.min(ngModel.outer.end, ngModel.inner.end);\r\n        ngModel.inner.start = Math.min(\r\n            ngModel.inner.end - this.innerMinimumSpan,\r\n            ngModel.inner.start\r\n        );\r\n\r\n        this.updateFormModel();\r\n        this.updateViewForInnerSpanFromModel(ngModel);\r\n        this.updateTicks();\r\n    };\r\n\r\n    TimeRangeController.prototype.updateFormat = function (key) {\r\n        this.formatter = this.formatService.getFormat(key || this.defaultFormat);\r\n        this.updateViewForInnerSpanFromModel(this.$scope.ngModel);\r\n        this.updateTicks();\r\n    };\r\n\r\n    TimeRangeController.prototype.updateBoundsFromForm = function () {\r\n        var self = this;\r\n\r\n        //Allow Angular to trigger watches and determine whether values have changed.\r\n        this.$timeout(function () {\r\n            if (self.formStartChanged) {\r\n                self.$scope.ngModel.outer.start =\r\n                    self.$scope.ngModel.inner.start =\r\n                        self.$scope.formModel.start;\r\n                self.formStartChanged = false;\r\n            }\r\n            if (self.formEndChanged) {\r\n                self.$scope.ngModel.outer.end =\r\n                    self.$scope.ngModel.inner.end =\r\n                        self.$scope.formModel.end;\r\n                self.formEndChanged = false;\r\n            }\r\n        });\r\n    };\r\n\r\n    TimeRangeController.prototype.onFormStartChange = function (\r\n        newValue,\r\n        oldValue\r\n    ) {\r\n        if (!this.formStartChanged && newValue !== oldValue) {\r\n            this.formStartChanged = true;\r\n        }\r\n    };\r\n\r\n    TimeRangeController.prototype.onFormEndChange = function (\r\n        newValue,\r\n        oldValue\r\n    ) {\r\n        if (!this.formEndChanged && newValue !== oldValue) {\r\n            this.formEndChanged = true;\r\n        }\r\n    };\r\n\r\n    TimeRangeController.prototype.validateStart = function (startValue) {\r\n        return startValue <=\r\n            this.$scope.formModel.end - this.outerMinimumSpan;\r\n    };\r\n\r\n    TimeRangeController.prototype.validateEnd = function (endValue) {\r\n        return endValue >=\r\n            this.$scope.formModel.start + this.outerMinimumSpan;\r\n    };\r\n\r\n    return TimeRangeController;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/DateTimePickerController',['moment'],\r\n    function (moment) {\r\n\r\n        var TIME_NAMES = {\r\n                'hours': \"Hour\",\r\n                'minutes': \"Minute\",\r\n                'seconds': \"Second\"\r\n            },\r\n            MONTHS = moment.months(),\r\n            TIME_OPTIONS = (function makeRanges() {\r\n                var arr = [];\r\n                while (arr.length < 60) {\r\n                    arr.push(arr.length);\r\n                }\r\n                return {\r\n                    hours: arr.slice(0, 24),\r\n                    minutes: arr,\r\n                    seconds: arr\r\n                };\r\n            }());\r\n\r\n        /**\r\n         * Controller to support the date-time picker.\r\n         *\r\n         * Adds/uses the following properties in scope:\r\n         * * `year`: Year being displayed in picker\r\n         * * `month`: Month being displayed\r\n         * * `table`: Table being displayed; array of arrays of\r\n         *   * `day`: Day of month\r\n         *   * `dayOfYear`: Day of year\r\n         *   * `month`: Month associated with the day\r\n         *   * `year`: Year associated with the day.\r\n         * * `date`: Date chosen\r\n         *   * `year`: Year selected\r\n         *   * `month`: Month selected (0-indexed)\r\n         *   * `day`: Day of month selected\r\n         * * `time`: Chosen time (hours/minutes/seconds)\r\n         *   * `hours`: Hours chosen\r\n         *   * `minutes`: Minutes chosen\r\n         *   * `seconds`: Seconds chosen\r\n         *\r\n         * Months are zero-indexed, day-of-months are one-indexed.\r\n         */\r\n        function DateTimePickerController($scope, now) {\r\n            var year,\r\n                month, // For picker state, not model state\r\n                interacted = false;\r\n\r\n            function generateTable() {\r\n                var m = moment.utc({ year: year, month: month }).day(0),\r\n                    table = [],\r\n                    row,\r\n                    col;\r\n\r\n                for (row = 0; row < 6; row += 1) {\r\n                    table.push([]);\r\n                    for (col = 0; col < 7; col += 1) {\r\n                        table[row].push({\r\n                            year: m.year(),\r\n                            month: m.month(),\r\n                            day: m.date(),\r\n                            dayOfYear: m.dayOfYear()\r\n                        });\r\n                        m.add(1, 'days'); // Next day!\r\n                    }\r\n                }\r\n\r\n                return table;\r\n            }\r\n\r\n            function updateScopeForMonth() {\r\n                $scope.month = MONTHS[month];\r\n                $scope.year = year;\r\n                $scope.table = generateTable();\r\n            }\r\n\r\n            function updateFromModel(ngModel) {\r\n                var m;\r\n\r\n                m = moment.utc(ngModel);\r\n\r\n                $scope.date = {\r\n                    year: m.year(),\r\n                    month: m.month(),\r\n                    day: m.date()\r\n                };\r\n                $scope.time = {\r\n                    hours: m.hour(),\r\n                    minutes: m.minute(),\r\n                    seconds: m.second()\r\n                };\r\n\r\n                //window.alert($scope.date.day + \" \" + ngModel);\r\n\r\n                // Zoom to that date in the picker, but\r\n                // only if the user hasn't interacted with it yet.\r\n                if (!interacted) {\r\n                    year = m.year();\r\n                    month = m.month();\r\n                    updateScopeForMonth();\r\n                }\r\n            }\r\n\r\n            function updateFromView() {\r\n                var m = moment.utc({\r\n                    year: $scope.date.year,\r\n                    month: $scope.date.month,\r\n                    day: $scope.date.day,\r\n                    hour: $scope.time.hours,\r\n                    minute: $scope.time.minutes,\r\n                    second: $scope.time.seconds\r\n                });\r\n                $scope.ngModel[$scope.field] = m.valueOf();\r\n            }\r\n\r\n            $scope.isInCurrentMonth = function (cell) {\r\n                return cell.month === month;\r\n            };\r\n\r\n            $scope.isSelected = function (cell) {\r\n                var date = $scope.date || {};\r\n                return cell.day === date.day &&\r\n                    cell.month === date.month &&\r\n                    cell.year === date.year;\r\n            };\r\n\r\n            $scope.select = function (cell) {\r\n                $scope.date = $scope.date || {};\r\n                $scope.date.month = cell.month;\r\n                $scope.date.year = cell.year;\r\n                $scope.date.day = cell.day;\r\n                updateFromView();\r\n            };\r\n\r\n            $scope.dateEquals = function (d1, d2) {\r\n                return d1.year === d2.year &&\r\n                    d1.month === d2.month &&\r\n                    d1.day === d2.day;\r\n            };\r\n\r\n            $scope.changeMonth = function (delta) {\r\n                month += delta;\r\n                if (month > 11) {\r\n                    month = 0;\r\n                    year += 1;\r\n                }\r\n                if (month < 0) {\r\n                    month = 11;\r\n                    year -= 1;\r\n                }\r\n                interacted = true;\r\n                updateScopeForMonth();\r\n            };\r\n\r\n            $scope.nameFor = function (key) {\r\n                return TIME_NAMES[key];\r\n            };\r\n\r\n            $scope.optionsFor = function (key) {\r\n                return TIME_OPTIONS[key];\r\n            };\r\n\r\n            updateScopeForMonth();\r\n\r\n            // Ensure some useful default\r\n            $scope.ngModel[$scope.field] =\r\n                $scope.ngModel[$scope.field] === undefined ?\r\n                        now() : $scope.ngModel[$scope.field];\r\n\r\n            $scope.$watch('ngModel[field]', updateFromModel);\r\n            $scope.$watchCollection('date', updateFromView);\r\n            $scope.$watchCollection('time', updateFromView);\r\n        }\r\n\r\n        return DateTimePickerController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/DateTimeFieldController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller to support the date-time entry field.\r\n         *\r\n         * Accepts a `format` property in the `structure` attribute\r\n         * which allows a date/time to be specified via its symbolic\r\n         * key (as will be used to look up said format from the\r\n         * `formatService`.)\r\n         *\r\n         * {@see FormatService}\r\n         * @constructor\r\n         * @memberof platform/commonUI/general\r\n         * @param $scope the Angular scope for this controller\r\n         * @param {FormatService} formatService the service to user to format\r\n         *        domain values\r\n         * @param {string} defaultFormat the format to request when no\r\n         *        format has been otherwise specified\r\n         */\r\n        function DateTimeFieldController($scope, formatService, defaultFormat) {\r\n            var formatter = formatService.getFormat(defaultFormat);\r\n\r\n            function updateFromModel(value) {\r\n                // Only reformat if the value is different from user\r\n                // input (to avoid reformatting valid input while typing.)\r\n                if (!formatter.validate($scope.textValue) ||\r\n                        formatter.parse($scope.textValue) !== value) {\r\n                    $scope.textValue = formatter.format(value);\r\n                    $scope.textInvalid = false;\r\n                    $scope.lastValidValue = $scope.textValue;\r\n                }\r\n                $scope.pickerModel = { value: value };\r\n            }\r\n\r\n            function updateFromView(textValue) {\r\n                $scope.textInvalid = !formatter.validate(textValue);\r\n                if (!$scope.textInvalid) {\r\n                    $scope.ngModel[$scope.field] =\r\n                        formatter.parse(textValue);\r\n                    $scope.lastValidValue = $scope.textValue;\r\n                }\r\n            }\r\n\r\n            function updateFromPicker(value) {\r\n                if (value !== $scope.ngModel[$scope.field]) {\r\n                    $scope.ngModel[$scope.field] = value;\r\n                    updateFromModel(value);\r\n                    if ($scope.ngBlur) {\r\n                        $scope.ngBlur();\r\n                    }\r\n\r\n                    // If picker is active, dismiss it when valid value has been selected\r\n                    // This 'if' is to avoid unnecessary validation if picker is not active\r\n                    if ($scope.picker.active) {\r\n                        if ($scope.structure.validate && $scope.structure.validate($scope.ngModel[$scope.field])) {\r\n                            $scope.picker.active = false;\r\n                        } else if (!$scope.structure.validate) {\r\n                            //If picker visible, but no validation function, hide picker\r\n                            $scope.picker.active = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function setFormat(format) {\r\n                formatter = formatService.getFormat(format || defaultFormat);\r\n                updateFromModel($scope.ngModel[$scope.field]);\r\n            }\r\n\r\n            function restoreTextValue() {\r\n                $scope.textValue = $scope.lastValidValue;\r\n                updateFromView($scope.textValue);\r\n            }\r\n\r\n            $scope.restoreTextValue = restoreTextValue;\r\n\r\n            $scope.picker = { active: false };\r\n\r\n            $scope.$watch('structure.format', setFormat);\r\n            $scope.$watch('ngModel[field]', updateFromModel);\r\n            $scope.$watch('pickerModel.value', updateFromPicker);\r\n            $scope.$watch('textValue', updateFromView);\r\n        }\r\n\r\n        return DateTimeFieldController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining TreeNodeController. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/TreeNodeController',[],\r\n    function () {\r\n\r\n        /**\r\n         * The TreeNodeController supports the tree node representation;\r\n         * a tree node has a label for the current object as well as a\r\n         * subtree which shows (and is not loaded until) the node is\r\n         * expanded.\r\n         *\r\n         * This controller tracks the following, so that the tree node\r\n         * template may update its state accordingly:\r\n         *\r\n         * * Whether or not the tree node has ever been expanded (this\r\n         *   is used to lazily load, exactly once, the subtree)\r\n         * * Whether or not the node is currently the domain object\r\n         *   of navigation (this gets highlighted differently to\r\n         *   provide the user with visual feedback.)\r\n         *\r\n         * Additionally, this controller will automatically trigger\r\n         * node expansion when this tree node's _subtree_ will contain\r\n         * the navigated object (recursively, this becomes an\r\n         * expand-to-show-navigated-object behavior.)\r\n         *\r\n         * Finally, if a `callback` property is passed in through the\r\n         * `parameters` attribute of the `tree-node`, that callback\r\n         * will be invoked whenever a user clicks in a manner which\r\n         * would result in a selection. This callback is invoked\r\n         * even if the selection does not change (if you are only\r\n         * interested in changes, watch the `selectedObject` property\r\n         * of the object passed in `ng-model` instead.)\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function TreeNodeController($scope, $timeout) {\r\n            var self = this,\r\n                selectedObject = ($scope.ngModel || {}).selectedObject;\r\n\r\n            // Look up the id for a domain object. A convenience\r\n            // for mapping; additionally does some undefined-checking.\r\n            function getId(obj) {\r\n                return obj && obj.getId && obj.getId();\r\n            }\r\n\r\n            // Verify that id paths are equivalent, staring at\r\n            // index, ending at the end of the node path.\r\n            function checkPath(nodePath, navPath, index) {\r\n                index = index || 0;\r\n\r\n                // The paths overlap if we have made it past the\r\n                // end of the node's path; otherwise, check the\r\n                // id at the current index for equality and perform\r\n                // a recursive step for subsequent ids in the paths,\r\n                // until we exceed path length or hit a mismatch.\r\n                return (index >= nodePath.length) ||\r\n                        ((navPath[index] === nodePath[index]) &&\r\n                                checkPath(nodePath, navPath, index + 1));\r\n            }\r\n\r\n            // Consider the currently-navigated object and update\r\n            // parameters which support display.\r\n            function checkSelection() {\r\n                var nodeObject = $scope.domainObject,\r\n                    navObject = selectedObject,\r\n                    nodeContext = nodeObject &&\r\n                            nodeObject.getCapability('context'),\r\n                    navContext = navObject &&\r\n                            navObject.getCapability('context'),\r\n                    nodePath,\r\n                    navPath;\r\n\r\n                // Deselect; we will reselect below, iff we are\r\n                // exactly at the end of the path.\r\n                self.isSelectedFlag = false;\r\n\r\n                // Expand if necessary (if the navigated object will\r\n                // be in this node's subtree)\r\n                if (nodeContext && navContext) {\r\n                    // Get the paths as arrays of identifiers\r\n                    nodePath = nodeContext.getPath().map(getId);\r\n                    navPath = navContext.getPath().map(getId);\r\n\r\n                    // Check to see if the node's path lies entirely\r\n                    // within the navigation path; otherwise, navigation\r\n                    // has happened in some other subtree.\r\n                    if (navPath.length >= nodePath.length &&\r\n                            checkPath(nodePath, navPath)) {\r\n\r\n                        // nodePath is along the navPath; if it's\r\n                        // at the end of the path, highlight;\r\n                        // otherwise, expand.\r\n                        if (nodePath.length === navPath.length) {\r\n                            self.isSelectedFlag = true;\r\n                        } else { // node path is shorter: Expand!\r\n                            if ($scope.toggle) {\r\n                                $scope.toggle.setState(true);\r\n                            }\r\n                            self.trackExpansion();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Callback for the selection updates; track the currently\r\n            // navigated object and update display parameters as needed.\r\n            function setSelection(object) {\r\n                selectedObject = object;\r\n                checkSelection();\r\n            }\r\n\r\n            this.isSelectedFlag = false;\r\n            this.hasBeenExpandedFlag = false;\r\n            this.$timeout = $timeout;\r\n            this.$scope = $scope;\r\n\r\n            // Listen for changes which will effect display parameters\r\n            $scope.$watch(\"ngModel.selectedObject\", setSelection);\r\n            $scope.$watch(\"domainObject\", checkSelection);\r\n        }\r\n\r\n        /**\r\n         * Select the domain object represented by this node in the tree.\r\n         * This will both update the `selectedObject` property in\r\n         * the object passed in via `ng-model`, and will fire any `callback`\r\n         * passed in via `parameters`.\r\n         */\r\n        TreeNodeController.prototype.select = function () {\r\n            if (this.$scope.ngModel) {\r\n                this.$scope.ngModel.selectedObject =\r\n                    this.$scope.domainObject;\r\n            }\r\n            if ((this.$scope.parameters || {}).callback) {\r\n                this.$scope.parameters.callback(this.$scope.domainObject);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * This method should be called when a node is expanded\r\n         * to record that this has occurred, to support one-time\r\n         * lazy loading of the node's subtree.\r\n         */\r\n        TreeNodeController.prototype.trackExpansion = function () {\r\n            var self = this;\r\n            if (!self.hasBeenExpanded()) {\r\n                // Run on a timeout; if a lot of expansion needs to\r\n                // occur (e.g. if the selection is several nodes deep) we\r\n                // want this to be spread across multiple digest cycles.\r\n                self.$timeout(function () {\r\n                    self.hasBeenExpandedFlag = true;\r\n                }, 0);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Check if this not has ever been expanded.\r\n         * @returns true if it has been expanded\r\n         */\r\n        TreeNodeController.prototype.hasBeenExpanded = function () {\r\n            return this.hasBeenExpandedFlag;\r\n        };\r\n\r\n        /**\r\n         * Check whether or not the domain object represented by\r\n         * this tree node should be highlighted.\r\n         * An object will be highlighted if it matches\r\n         * ngModel.selectedObject\r\n         * @returns true if this should be highlighted\r\n         */\r\n        TreeNodeController.prototype.isSelected = function () {\r\n            return this.isSelectedFlag;\r\n        };\r\n\r\n        return TreeNodeController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ActionGroupController. Created by vwoeltje on 11/14/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/ActionGroupController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller which keeps an up-to-date list of actions of\r\n         * a certain category, and additionally bins them into\r\n         * groups as described by their metadata. Used specifically\r\n         * to support button groups.\r\n         *\r\n         * This will maintain two fields in the scope:\r\n         * * `groups`: An array of arrays. Each element in the outer\r\n         *   array corresponds to a group; the inner array contains\r\n         *   the actions which are in that group.\r\n         * * `ungrouped`: All actions which did not have a defined\r\n         *   group.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function ActionGroupController($scope) {\r\n\r\n            // Separate out the actions that have been retrieved\r\n            // into groups, and populate scope with this.\r\n            function groupActions(actions) {\r\n                var groups = {},\r\n                    ungrouped = [];\r\n\r\n                function assignToGroup(action) {\r\n                    var metadata = action.getMetadata(),\r\n                        group = metadata.group;\r\n                    if (group) {\r\n                        groups[group] = groups[group] || [];\r\n                        groups[group].push(action);\r\n                    } else {\r\n                        ungrouped.push(action);\r\n                    }\r\n                }\r\n\r\n                (actions || []).forEach(assignToGroup);\r\n\r\n                $scope.ungrouped = ungrouped;\r\n                $scope.groups = Object.keys(groups).sort().map(function (k) {\r\n                    return groups[k];\r\n                });\r\n            }\r\n\r\n            // Callback for when state which might influence action groupings\r\n            // changes.\r\n            function updateGroups() {\r\n                var actionCapability = $scope.action,\r\n                    params = $scope.parameters || {},\r\n                    category = params.category;\r\n\r\n                if (actionCapability && category) {\r\n                    // Get actions by capability, and group them\r\n                    groupActions(actionCapability.getActions({\r\n                        category: category\r\n                    }));\r\n                } else {\r\n                    // We don't have enough information to get any actions.\r\n                    groupActions([]);\r\n                }\r\n            }\r\n\r\n            // Changes to the represented object, to its action capability, or\r\n            // to the chosen action category may all require an update.\r\n            $scope.$watch(\"domainObject\", updateGroups);\r\n            $scope.$watch(\"action\", updateGroups);\r\n            $scope.$watch(\"parameters.category\", updateGroups);\r\n\r\n            // Start with empty arrays.\r\n            $scope.ungrouped = [];\r\n            $scope.groups = [];\r\n        }\r\n\r\n        return ActionGroupController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/ToggleController',[],\r\n    function () {\r\n\r\n        /**\r\n         * A ToggleController is used to activate/deactivate things.\r\n         * A common usage is for \"twistie\"\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function ToggleController() {\r\n            this.state = false;\r\n\r\n            this.setState = this.setState.bind(this);\r\n        }\r\n\r\n        /**\r\n         * Get the current state of the toggle.\r\n         * @return {boolean} true if active\r\n         */\r\n        ToggleController.prototype.isActive = function () {\r\n            return this.state;\r\n        };\r\n\r\n        /**\r\n         * Set a new state for the toggle.\r\n         * @return {boolean} true to activate\r\n         */\r\n        ToggleController.prototype.setState = function (newState) {\r\n            this.state = newState;\r\n        };\r\n\r\n        /**\r\n         * Toggle the current state; activate if it is inactive,\r\n         * deactivate if it is active.\r\n         */\r\n        ToggleController.prototype.toggle = function () {\r\n            this.state = !this.state;\r\n        };\r\n\r\n        return ToggleController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ContextMenuController. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/ContextMenuController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the context menu. Maintains an up-to-date\r\n         * list of applicable actions (those from category \"contextual\")\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function ContextMenuController($scope) {\r\n            // Refresh variable \"menuActions\" in the scope\r\n            function updateActions() {\r\n                $scope.menuActions = $scope.action ?\r\n                        $scope.action.getActions({ category: 'contextual' }) :\r\n                        [];\r\n            }\r\n\r\n            // Update using the action capability\r\n            $scope.$watch(\"action\", updateActions);\r\n        }\r\n\r\n        return ContextMenuController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/ClickAwayController',[],\r\n    function () {\r\n\r\n        /**\r\n         * A ClickAwayController is used to toggle things (such as context\r\n         * menus) where clicking elsewhere in the document while the toggle\r\n         * is in an active state is intended to dismiss the toggle.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         * @param $scope the scope in which this controller is active\r\n         * @param $document the document element, injected by Angular\r\n         */\r\n        function ClickAwayController($document, $timeout) {\r\n            var self = this;\r\n\r\n            this.state = false;\r\n            this.$document = $document;\r\n\r\n            // Callback used by the document listener. Timeout ensures that\r\n            // `clickaway` action occurs after `toggle` if `toggle` is\r\n            // triggered by a click/mouseup.\r\n            this.clickaway = function () {\r\n                $timeout(function () {\r\n                    self.deactivate();\r\n                });\r\n            };\r\n        }\r\n\r\n        // Track state, but also attach and detach a listener for\r\n        // mouseup events on the document.\r\n        ClickAwayController.prototype.deactivate = function () {\r\n            this.state = false;\r\n            this.$document.off(\"mouseup\", this.clickaway);\r\n        };\r\n        ClickAwayController.prototype.activate = function () {\r\n            this.state = true;\r\n            this.$document.on(\"mouseup\", this.clickaway);\r\n        };\r\n\r\n        /**\r\n         * Get the current state of the toggle.\r\n         * @return {boolean} true if active\r\n         */\r\n        ClickAwayController.prototype.isActive = function () {\r\n            return this.state;\r\n        };\r\n\r\n        /**\r\n         * Set a new state for the toggle.\r\n         * @return {boolean} true to activate\r\n         */\r\n        ClickAwayController.prototype.setState = function (newState) {\r\n            if (this.state !== newState) {\r\n                this.toggle();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Toggle the current state; activate if it is inactive,\r\n         * deactivate if it is active.\r\n         */\r\n        ClickAwayController.prototype.toggle = function () {\r\n            if (this.state) {\r\n                this.deactivate();\r\n            } else {\r\n                this.activate();\r\n            }\r\n        };\r\n\r\n        return ClickAwayController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ViewSwitcherController. Created by vwoeltje on 11/7/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/ViewSwitcherController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the view switcher; populates and maintains a list\r\n         * of applicable views for a represented domain object.\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function ViewSwitcherController($scope, $timeout) {\r\n            // If the view capability gets refreshed, try to\r\n            // keep the same option chosen.\r\n            function findMatchingOption(options, selected) {\r\n                var i;\r\n\r\n                if (selected) {\r\n                    for (i = 0; i < options.length; i += 1) {\r\n                        if (options[i].key === selected.key) {\r\n                            return options[i];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return options[0];\r\n            }\r\n\r\n            // Get list of views, read from capability\r\n            function updateOptions(views) {\r\n                if (Array.isArray(views)) {\r\n                    $timeout(function () {\r\n                        $scope.ngModel.selected = findMatchingOption(\r\n                            views,\r\n                            ($scope.ngModel || {}).selected\r\n                        );\r\n                    }, 0);\r\n                }\r\n            }\r\n\r\n            // Update view options when the in-scope results of using the\r\n            // view capability change.\r\n            $scope.$watch(\"view\", updateOptions);\r\n        }\r\n\r\n        return ViewSwitcherController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/BottomBarController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the bottombar template. Exposes\r\n         * available indicators (of extension category \"indicators\")\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function BottomBarController(indicators) {\r\n            // Utility function used to make indicators presentable\r\n            // for display.\r\n            function present(Indicator) {\r\n                return {\r\n                    template: Indicator.template || \"indicator\",\r\n                    ngModel: typeof Indicator === 'function' ?\r\n                            new Indicator() : Indicator\r\n                };\r\n            }\r\n\r\n            this.indicators = indicators.map(present);\r\n        }\r\n\r\n        /**\r\n         * Get all indicators to display.\r\n         * @returns {Indicator[]} all indicators\r\n         *          to display in the bottom bar.\r\n         * @memberof platform/commonUI/general.BottomBarController#\r\n         */\r\n        BottomBarController.prototype.getIndicators = function () {\r\n            return this.indicators;\r\n        };\r\n\r\n        return BottomBarController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/GetterSetterController',[],\r\n    function () {\r\n\r\n        /**\r\n         * This controller acts as an adapter to permit getter-setter\r\n         * functions to be used as ng-model arguments to controls,\r\n         * such as the input-filter. This is supported natively in\r\n         * Angular 1.3+ via `ng-model-options`, so this controller\r\n         * should be made obsolete after any upgrade to Angular 1.3.\r\n         *\r\n         * It expects to find in scope a value `ngModel` which is a\r\n         * function which, when called with no arguments, acts as a\r\n         * getter, and when called with one argument, acts as a setter.\r\n         *\r\n         * It also publishes into the scope a value `getterSetter.value`\r\n         * which is meant to be used as an assignable expression.\r\n         *\r\n         * This controller watches both of these; when one changes,\r\n         * it will update the other's value to match. Because of this,\r\n         * the `ngModel` function should be both stable and computationally\r\n         * inexpensive, as it will be invoked often.\r\n         *\r\n         * Getter-setter style models can be preferable when there\r\n         * is significant indirection between templates; \"dotless\"\r\n         * expressions in `ng-model` can behave unexpectedly due to the\r\n         * rules of scope, but dots are lost when passed in via `ng-model`\r\n         * (so if a control is internally implemented using regular\r\n         * form elements, it can't transparently pass through the `ng-model`\r\n         * parameter it received.) Getter-setter functions are never the\r\n         * target of a scope assignment and so avoid this problem.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         * @param {Scope} $scope the controller's scope\r\n         */\r\n        function GetterSetterController($scope) {\r\n\r\n            // Update internal assignable state based on changes\r\n            // to the getter-setter function.\r\n            function updateGetterSetter() {\r\n                if (typeof $scope.ngModel === 'function') {\r\n                    $scope.getterSetter.value = $scope.ngModel();\r\n                }\r\n            }\r\n\r\n            // Update the external getter-setter based on changes\r\n            // to the assignable state.\r\n            function updateNgModel() {\r\n                if (typeof $scope.ngModel === 'function') {\r\n                    $scope.ngModel($scope.getterSetter.value);\r\n                }\r\n            }\r\n\r\n            // Watch for changes to both expressions\r\n            $scope.$watch(\"ngModel()\", updateGetterSetter);\r\n            $scope.$watch(\"getterSetter.value\", updateNgModel);\r\n\r\n            // Publish an assignable field into scope.\r\n            $scope.getterSetter = {};\r\n\r\n        }\r\n\r\n        return GetterSetterController;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/SelectorController',[],\r\n    function () {\r\n\r\n        var ROOT_ID = \"ROOT\";\r\n\r\n        /**\r\n         * Controller for the domain object selector control.\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         * @param {ObjectService} objectService service from which to\r\n         *        read domain objects\r\n         * @param $scope Angular scope for this controller\r\n         */\r\n        function SelectorController(objectService, $scope) {\r\n            var treeModel = {},\r\n                listModel = {},\r\n                previousSelected,\r\n                self = this;\r\n\r\n            // For watch; look at the user's selection in the tree\r\n            function getTreeSelection() {\r\n                return treeModel.selectedObject;\r\n            }\r\n\r\n            // Store root object for subsequent exposure to template\r\n            function storeRoot(objects) {\r\n                self.rootObject = objects[ROOT_ID];\r\n            }\r\n\r\n            // Check that a selection is of the valid type\r\n            function validateTreeSelection(selectedObject) {\r\n                var type = selectedObject &&\r\n                    selectedObject.getCapability('type');\r\n\r\n                // Delegate type-checking to the capability...\r\n                if (!type || !type.instanceOf($scope.structure.type)) {\r\n                    treeModel.selectedObject = previousSelected;\r\n                }\r\n\r\n                // Track current selection to restore it if an invalid\r\n                // selection is made later.\r\n                previousSelected = treeModel.selectedObject;\r\n            }\r\n\r\n            // Update the right-hand list of currently-selected objects\r\n            function updateList(ids) {\r\n                function updateSelectedObjects(objects) {\r\n                    // Look up from the\r\n                    function getObject(id) {\r\n                        return objects[id];\r\n                    }\r\n                    self.selectedObjects =\r\n                        ids.filter(getObject).map(getObject);\r\n                }\r\n\r\n                // Look up objects by id, then populate right-hand list\r\n                objectService.getObjects(ids).then(updateSelectedObjects);\r\n            }\r\n\r\n            // Reject attempts to select objects of the wrong type\r\n            $scope.$watch(getTreeSelection, validateTreeSelection);\r\n\r\n            // Make sure right-hand list matches underlying model\r\n            $scope.$watchCollection(function () {\r\n                return self.getField();\r\n            }, updateList);\r\n\r\n            // Look up root object, then store it\r\n            objectService.getObjects([ROOT_ID]).then(storeRoot);\r\n\r\n            this.$scope = $scope;\r\n            this.selectedObjects = [];\r\n\r\n            // Expose tree/list model for use in template directly\r\n            this.treeModel = treeModel;\r\n            this.listModel = listModel;\r\n        }\r\n\r\n\r\n\r\n\r\n        // Set the value of the field being edited\r\n        SelectorController.prototype.setField = function (value) {\r\n            this.$scope.ngModel[this.$scope.field] = value;\r\n        };\r\n\r\n        // Get the value of the field being edited\r\n        SelectorController.prototype.getField = function () {\r\n            return this.$scope.ngModel[this.$scope.field] || [];\r\n        };\r\n\r\n\r\n        /**\r\n         * Get the root object to show in the left-hand tree.\r\n         * @returns {DomainObject} the root object\r\n         */\r\n        SelectorController.prototype.root = function () {\r\n            return this.rootObject;\r\n        };\r\n\r\n        /**\r\n         * Add a domain object to the list of selected objects.\r\n         * @param {DomainObject} the domain object to select\r\n         */\r\n        SelectorController.prototype.select = function (domainObject) {\r\n            var id = domainObject && domainObject.getId(),\r\n                list = this.getField() || [];\r\n            // Only select if we have a valid id,\r\n            // and it isn't already selected\r\n            if (id && list.indexOf(id) === -1) {\r\n                this.setField(list.concat([id]));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Remove a domain object from the list of selected objects.\r\n         * @param {DomainObject} the domain object to select\r\n         */\r\n        SelectorController.prototype.deselect = function (domainObject) {\r\n            var id = domainObject && domainObject.getId(),\r\n                list = this.getField() || [];\r\n            // Only change if this was a valid id,\r\n            // for an object which was already selected\r\n            if (id && list.indexOf(id) !== -1) {\r\n                // Filter it out of the current field\r\n                this.setField(list.filter(function (otherId) {\r\n                    return otherId !== id;\r\n                }));\r\n                // Clear the current list selection\r\n                delete this.listModel.selectedObject;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the currently-selected domain objects.\r\n         * @returns {DomainObject[]} the current selection\r\n         */\r\n        SelectorController.prototype.selected = function () {\r\n            return this.selectedObjects;\r\n        };\r\n\r\n\r\n        return SelectorController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ObjectInspectorController. Created by shale on 08/21/2015.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/ObjectInspectorController',[],\r\n    function () {\r\n\r\n        /**\r\n         * The ObjectInspectorController gets and formats the data for\r\n         *  the inspector display\r\n         *\r\n         * @constructor\r\n         */\r\n        function ObjectInspectorController($scope, objectService) {\r\n            $scope.primaryParents = [];\r\n            $scope.contextutalParents = [];\r\n            //$scope.isLink = false;\r\n\r\n            // Gets an array of the contextual parents/anscestors of the selected object\r\n            function getContextualPath() {\r\n                var currentObj = $scope.ngModel.selectedObject,\r\n                    currentParent,\r\n                    parents = [];\r\n\r\n                currentParent = currentObj &&\r\n                    currentObj.hasCapability('context') &&\r\n                    currentObj.getCapability('context').getParent();\r\n\r\n                while (currentParent && currentParent.getModel().type !== 'root' &&\r\n                        currentParent.hasCapability('context')) {\r\n                    // Record this object\r\n                    parents.unshift(currentParent);\r\n\r\n                    // Get the next one up the tree\r\n                    currentObj = currentParent;\r\n                    currentParent = currentObj.getCapability('context').getParent();\r\n                }\r\n\r\n                $scope.contextutalParents = parents;\r\n            }\r\n\r\n            // Gets an array of the parents/anscestors of the selected object's\r\n            //   primary location (locational of original non-link)\r\n            function getPrimaryPath(current) {\r\n                var location;\r\n\r\n                // If this the the initial call of this recursive function\r\n                if (!current) {\r\n                    current = $scope.ngModel.selectedObject;\r\n                    $scope.primaryParents = [];\r\n                }\r\n\r\n                location = current.getModel().location;\r\n\r\n                if (location && location !== 'root') {\r\n                    objectService.getObjects([location]).then(function (obj) {\r\n                        var next = obj[location];\r\n\r\n                        $scope.primaryParents.unshift(next);\r\n                        getPrimaryPath(next);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            // Gets the metadata for the selected object\r\n            function getMetadata() {\r\n                $scope.metadata = $scope.ngModel.selectedObject &&\r\n                    $scope.ngModel.selectedObject.hasCapability('metadata') &&\r\n                    $scope.ngModel.selectedObject.useCapability('metadata');\r\n            }\r\n\r\n            // Set scope variables when the selected object changes\r\n            $scope.$watch('ngModel.selectedObject', function () {\r\n                $scope.isLink = $scope.ngModel.selectedObject &&\r\n                    $scope.ngModel.selectedObject.hasCapability('location') &&\r\n                    $scope.ngModel.selectedObject.getCapability('location').isLink();\r\n\r\n                if ($scope.isLink) {\r\n                    getPrimaryPath();\r\n                    getContextualPath();\r\n                } else {\r\n                    $scope.primaryParents = [];\r\n                    getContextualPath();\r\n                }\r\n\r\n                getMetadata();\r\n            });\r\n        }\r\n\r\n        return ObjectInspectorController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/controllers/BannerController',[],\r\n    function () {\r\n\r\n        /**\r\n         * A controller for banner notifications. Banner notifications are a\r\n         * non-blocking way of drawing the user's attention to an event such\r\n         * as system errors, or the progress or successful completion of an\r\n         * ongoing task. This controller provides scoped functions for\r\n         * dismissing and 'maximizing' notifications. See {@link NotificationService}\r\n         * for more details on Notifications.\r\n         *\r\n         * @param $scope\r\n         * @param notificationService\r\n         * @param dialogService\r\n         * @constructor\r\n         */\r\n        function BannerController($scope, notificationService, dialogService) {\r\n            $scope.active = notificationService.active;\r\n\r\n            $scope.action = function (action, $event) {\r\n                /*\r\n                 Prevents default 'maximize' behaviour when clicking on\r\n                  notification button\r\n                 */\r\n                $event.stopPropagation();\r\n                return action();\r\n            };\r\n            $scope.dismiss = function (notification, $event) {\r\n                $event.stopPropagation();\r\n                notification.dismissOrMinimize();\r\n            };\r\n            $scope.maximize = function (notification) {\r\n                if (notification.model.severity !== \"info\") {\r\n                    var dialog;\r\n                    notification.model.cancel = function () {\r\n                        dialog.dismiss();\r\n                    };\r\n                    //If the notification is dismissed by the user, close\r\n                    // the dialog.\r\n                    notification.onDismiss(function () {\r\n                        dialog.dismiss();\r\n                    });\r\n\r\n                    dialog = dialogService.showBlockingMessage(notification.model);\r\n                }\r\n            };\r\n        }\r\n        return BannerController;\r\n    });\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining MCTContainer. Created by vwoeltje on 11/17/14.\r\n */\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTContainer',[],\r\n    function () {\r\n\r\n        /**\r\n         * The mct-container is similar to the mct-include directive\r\n         * insofar as it allows templates to be referenced by\r\n         * symbolic keys instead of by URL. Unlike mct-include, it\r\n         * supports transclusion.\r\n         *\r\n         * Unlike mct-include, mct-container accepts a key as a\r\n         * plain string attribute, instead of as an Angular\r\n         * expression.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function MCTContainer(containers) {\r\n            var containerMap = {};\r\n\r\n            // Initialize container map from extensions\r\n            containers.forEach(function (container) {\r\n                containerMap[container.key] = container;\r\n            });\r\n\r\n            return {\r\n\r\n                // Allow only at the element level\r\n                restrict: 'E',\r\n\r\n                // Support transclusion\r\n                transclude: true,\r\n\r\n                // Create a new (non-isolate) scope\r\n                scope: true,\r\n\r\n                // Populate initial scope based on attributes requested\r\n                // by the container definition\r\n                link: function (scope, element, attrs) {\r\n                    var key = attrs.key,\r\n                        container = containerMap[key],\r\n                        alias = \"container\",\r\n                        copiedAttributes = {};\r\n\r\n                    if (container) {\r\n                        alias = container.alias || alias;\r\n                        (container.attributes || []).forEach(function (attr) {\r\n                            copiedAttributes[attr] = attrs[attr];\r\n                        });\r\n                    }\r\n\r\n                    scope[alias] = copiedAttributes;\r\n                },\r\n\r\n                template: function (element, attrs) {\r\n                    var key = attrs.key,\r\n                        container = containerMap[key];\r\n                    return container ? container.template : \"\";\r\n                }\r\n            };\r\n        }\r\n\r\n        return MCTContainer;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTDrag',[],\r\n    function () {\r\n\r\n        /**\r\n         * The mct-drag directive allows drag functionality\r\n         * (in the mousedown-mousemove-mouseup sense, as opposed to\r\n         * the drag-and-drop sense) to be attached to specific\r\n         * elements. This takes the form of three attributes:\r\n         *\r\n         * * `mct-drag`: An Angular expression to evaluate during\r\n         *   drag movement.\r\n         * * `mct-drag-down`: An Angular expression to evaluate\r\n         *   when the drag begins.\r\n         * * `mct-drag-up`: An Angular expression to evaluate when\r\n         *   dragging ends.\r\n         *\r\n         * In each case, a variable `delta` will be provided to the\r\n         * expression; this is a two-element array or the horizontal\r\n         * and vertical pixel offset of the current mouse position\r\n         * relative to the mouse position where dragging began.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         *\r\n         */\r\n        function MCTDrag($document) {\r\n\r\n            // Link; install event handlers.\r\n            function link(scope, element, attrs) {\r\n                // Keep a reference to the body, to attach/detach\r\n                // mouse event handlers; mousedown and mouseup cannot\r\n                // only be attached to the element being linked, as the\r\n                // mouse may leave this element during the drag.\r\n                var body = $document.find('body'),\r\n                    initialPosition,\r\n                    $event,\r\n                    delta;\r\n\r\n                // Utility function to cause evaluation of mctDrag,\r\n                // mctDragUp, etc\r\n                function fireListener(name) {\r\n                    // Evaluate the expression, with current delta\r\n                    scope.$eval(attrs[name], {\r\n                        delta: delta,\r\n                        $event: $event\r\n                    });\r\n\r\n                    // Trigger prompt digestion\r\n                    scope.$apply();\r\n                }\r\n\r\n                // Update positions (both actual and relative)\r\n                // based on a new mouse event object.\r\n                function updatePosition(event) {\r\n                    // Get the current position, as an array\r\n                    var currentPosition = [event.pageX, event.pageY];\r\n\r\n                    // Track the initial position, if one hasn't been observed\r\n                    initialPosition = initialPosition || currentPosition;\r\n\r\n                    // Compute relative position\r\n                    delta = currentPosition.map(function (v, i) {\r\n                        return v - initialPosition[i];\r\n                    });\r\n\r\n                    // Also track the plain event for firing listeners\r\n                    $event = event;\r\n                }\r\n\r\n                // Called during a drag, on mousemove\r\n                function continueDrag(event) {\r\n                    updatePosition(event);\r\n                    fireListener(\"mctDrag\");\r\n\r\n                    // Don't show selection highlights, etc\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                // Called only when the drag ends (on mouseup)\r\n                function endDrag(event) {\r\n                    // Detach event handlers\r\n                    body.off(\"mouseup\", endDrag);\r\n                    body.off(\"mousemove\", continueDrag);\r\n\r\n                    // Also call continueDrag, to fire mctDrag\r\n                    // and do its usual position update\r\n                    continueDrag(event);\r\n\r\n                    fireListener(\"mctDragUp\");\r\n\r\n                    // Clear out start-of-drag position, target\r\n                    initialPosition = undefined;\r\n\r\n                    // Don't show selection highlights, etc\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                // Called on mousedown on the element\r\n                function startDrag(event) {\r\n                    // Listen for mouse events at the body level,\r\n                    // since the mouse may leave the element during\r\n                    // the drag.\r\n                    body.on(\"mouseup\", endDrag);\r\n                    body.on(\"mousemove\", continueDrag);\r\n\r\n                    // Set an initial position\r\n                    updatePosition(event);\r\n\r\n                    // Fire listeners, including mctDrag\r\n                    fireListener(\"mctDragDown\");\r\n                    fireListener(\"mctDrag\");\r\n\r\n                    // Don't show selection highlights, etc\r\n                    event.preventDefault();\r\n\r\n                    return false;\r\n                }\r\n\r\n                // Listen for mousedown on the element\r\n                element.on(\"mousedown\", startDrag);\r\n            }\r\n\r\n            return {\r\n                // mct-drag only makes sense as an attribute\r\n                restrict: \"A\",\r\n                // Link function, to install event handlers\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTDrag;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTClickElsewhere',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `mct-click-elsewhere` directive will evaluate its\r\n         * associated expression whenever a `mousedown` occurs anywhere\r\n         * outside of the element that has the `mct-click-elsewhere`\r\n         * directive attached. This is useful for dismissing popups\r\n         * and the like.\r\n         */\r\n        function MCTClickElsewhere($document) {\r\n\r\n            // Link; install event handlers.\r\n            function link(scope, element, attrs) {\r\n                // Keep a reference to the body, to attach/detach\r\n                // mouse event handlers; mousedown and mouseup cannot\r\n                // only be attached to the element being linked, as the\r\n                // mouse may leave this element during the drag.\r\n                var body = $document.find('body');\r\n\r\n                function clickBody(event) {\r\n                    var x = event.clientX,\r\n                        y = event.clientY,\r\n                        rect = element[0].getBoundingClientRect(),\r\n                        xMin = rect.left,\r\n                        xMax = xMin + rect.width,\r\n                        yMin = rect.top,\r\n                        yMax = yMin + rect.height;\r\n\r\n                    if (x < xMin || x > xMax || y < yMin || y > yMax) {\r\n                        scope.$apply(function () {\r\n                            scope.$eval(attrs.mctClickElsewhere);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                body.on(\"mousedown\", clickBody);\r\n                scope.$on(\"$destroy\", function () {\r\n                    body.off(\"mousedown\", clickBody);\r\n                });\r\n            }\r\n\r\n            return {\r\n                // mct-drag only makes sense as an attribute\r\n                restrict: \"A\",\r\n                // Link function, to install event handlers\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTClickElsewhere;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTResize',[],\r\n    function () {\r\n\r\n        // Default resize interval\r\n        var DEFAULT_INTERVAL = 100;\r\n\r\n        /**\r\n         * The mct-resize directive allows the size of a displayed\r\n         * HTML element to be tracked. This is done by polling,\r\n         * since the DOM API does not currently provide suitable\r\n         * events to watch this reliably.\r\n         *\r\n         * Attributes related to this directive are interpreted as\r\n         * follows:\r\n         *\r\n         * * `mct-resize`: An Angular expression to evaluate when\r\n         *   the size changes; the variable `bounds` will be provided\r\n         *   with two fields, `width` and `height`, both in pixels.\r\n         * * `mct-resize-interval`: Optional; the interval, in milliseconds,\r\n         *   at which to watch for updates. In some cases checking for\r\n         *   resize can carry a cost (it forces recalculation of\r\n         *   positions within the document) so it may be preferable to watch\r\n         *   infrequently. If omitted, a default of 100ms will be used.\r\n         *   This is an Angular expression, and it will be re-evaluated after\r\n         *   each interval.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         *\r\n         */\r\n        function MCTResize($timeout) {\r\n\r\n            // Link; start listening for changes to an element's size\r\n            function link(scope, element, attrs) {\r\n                var lastBounds,\r\n                    linking = true,\r\n                    active = true;\r\n\r\n                // Determine how long to wait before the next update\r\n                function currentInterval() {\r\n                    return attrs.mctResizeInterval ?\r\n                            scope.$eval(attrs.mctResizeInterval) :\r\n                            DEFAULT_INTERVAL;\r\n                }\r\n\r\n                // Evaluate mct-resize with the current bounds\r\n                function fireEval(bounds) {\r\n                    // Only update when bounds actually change\r\n                    if (!lastBounds ||\r\n                            lastBounds.width !== bounds.width ||\r\n                            lastBounds.height !== bounds.height) {\r\n                        scope.$eval(attrs.mctResize, { bounds: bounds });\r\n                        if (!linking) { // Avoid apply-in-a-digest\r\n                            scope.$apply();\r\n                        }\r\n                        lastBounds = bounds;\r\n                    }\r\n                }\r\n\r\n                // Callback to fire after each timeout;\r\n                // update bounds and schedule another timeout\r\n                function onInterval() {\r\n                    fireEval({\r\n                        width: element[0].offsetWidth,\r\n                        height: element[0].offsetHeight\r\n                    });\r\n                    if (active) {\r\n                        $timeout(onInterval, currentInterval(), false);\r\n                    }\r\n                }\r\n\r\n                // Stop running in the background\r\n                function deactivate() {\r\n                    active = false;\r\n                }\r\n\r\n                // Unregister once out-of-scope\r\n                scope.$on(\"$destroy\", deactivate);\r\n\r\n                // Handle the initial callback\r\n                onInterval();\r\n\r\n                // Trigger scope.$apply on subsequent changes\r\n                linking = false;\r\n            }\r\n\r\n            return {\r\n                // mct-resize only makes sense as an attribute\r\n                restrict: \"A\",\r\n                // Link function, to begin watching for changes\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTResize;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTPopup',[],function () {\r\n\r\n        var TEMPLATE = \"<div></div>\";\r\n\r\n        /**\r\n         * The `mct-popup` directive may be used to display elements\r\n         * which \"pop up\" over other parts of the page. Typically, this is\r\n         * done in conjunction with an `ng-if` to control the visibility\r\n         * of the popup.\r\n         *\r\n         * Example of usage:\r\n         *\r\n         *     <mct-popup ng-if=\"someExpr\">\r\n         *         <span>These are the contents of the popup!</span>\r\n         *     </mct-popup>\r\n         *\r\n         * @constructor\r\n         * @memberof platform/commonUI/general\r\n         * @param $compile Angular's $compile service\r\n         * @param {platform/commonUI/general.PopupService} popupService\r\n         */\r\n        function MCTPopup($compile, popupService) {\r\n            function link(scope, element, attrs, ctrl, transclude) {\r\n                var div = $compile(TEMPLATE)(scope),\r\n                    rect = element.parent()[0].getBoundingClientRect(),\r\n                    position = [rect.left, rect.top],\r\n                    popup = popupService.display(div, position);\r\n\r\n                div.addClass('t-popup');\r\n                transclude(function (clone) {\r\n                    div.append(clone);\r\n                });\r\n\r\n                scope.$on('$destroy', function () {\r\n                    popup.dismiss();\r\n                });\r\n            }\r\n\r\n            return {\r\n                restrict: \"E\",\r\n                transclude: true,\r\n                link: link,\r\n                scope: {}\r\n            };\r\n        }\r\n\r\n        return MCTPopup;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTScroll',[],\r\n    function () {\r\n\r\n        /**\r\n         * Implements `mct-scroll-x` and `mct-scroll-y` directives. Listens\r\n         * for scroll events and publishes their results into scope; watches\r\n         * scope and updates scroll state to match. This varies for x- and y-\r\n         * directives only by the attribute name chosen to find the expression,\r\n         * and the property (scrollLeft or scrollTop) managed within the\r\n         * element.\r\n         *\r\n         * This is exposed as two directives in `bundle.json`; the difference\r\n         * is handled purely by parameterization.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         * @param $parse Angular's $parse\r\n         * @param {string} property property to manage within the HTML element\r\n         * @param {string} attribute attribute to look at for the assignable\r\n         *        Angular expression\r\n         */\r\n        function MCTScroll($parse, property, attribute) {\r\n            function link(scope, element, attrs) {\r\n                var expr = attrs[attribute],\r\n                    parsed = $parse(expr);\r\n\r\n                // Set the element's scroll to match the scope's state\r\n                function updateElement(value) {\r\n                    element[0][property] = value;\r\n                }\r\n\r\n                // Handle event; assign to scroll state to scope\r\n                function updateScope() {\r\n                    parsed.assign(scope, element[0][property]);\r\n                    scope.$apply(expr);\r\n                }\r\n\r\n                // Initialize state in scope\r\n                parsed.assign(scope, element[0][property]);\r\n\r\n                // Update element state when value in scope changes\r\n                scope.$watch(expr, updateElement);\r\n\r\n                // Update state in scope when element is scrolled\r\n                element.on('scroll', updateScope);\r\n            }\r\n\r\n            return {\r\n                // Restrict to attributes\r\n                restrict: \"A\",\r\n                // Use this link function\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTScroll;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTSplitPane',[],\r\n    function () {\r\n\r\n        // Pixel width to allocate for the splitter itself\r\n        var DEFAULT_ANCHOR = 'left',\r\n            POLLING_INTERVAL = 15, // milliseconds\r\n            CHILDREN_WARNING_MESSAGE = [\r\n                \"Invalid mct-split-pane contents.\",\r\n                \"This element should contain exactly three\",\r\n                \"child elements, where the middle-most element\",\r\n                \"is an mct-splitter.\"\r\n            ].join(\" \"),\r\n            ANCHOR_WARNING_MESSAGE = [\r\n                \"Unknown anchor provided to mct-split-pane,\",\r\n                \"defaulting to\",\r\n                DEFAULT_ANCHOR + \".\"\r\n            ].join(\" \"),\r\n            ANCHORS = {\r\n                left: {\r\n                    edge: \"left\",\r\n                    opposite: \"right\",\r\n                    dimension: \"width\",\r\n                    orientation: \"vertical\"\r\n                },\r\n                right: {\r\n                    edge: \"right\",\r\n                    opposite: \"left\",\r\n                    dimension: \"width\",\r\n                    orientation: \"vertical\",\r\n                    reversed: true\r\n                },\r\n                top: {\r\n                    edge: \"top\",\r\n                    opposite: \"bottom\",\r\n                    dimension: \"height\",\r\n                    orientation: \"horizontal\"\r\n                },\r\n                bottom: {\r\n                    edge: \"bottom\",\r\n                    opposite: \"top\",\r\n                    dimension: \"height\",\r\n                    orientation: \"horizontal\",\r\n                    reversed: true\r\n                }\r\n            };\r\n\r\n        /**\r\n         * Implements `mct-split-pane` directive.\r\n         *\r\n         * This takes the following attributes:\r\n         * * `position`: Two-way bound scope variable which will contain\r\n         *   the pixel position of the splitter, offset from the appropriate\r\n         *   edge.\r\n         * * `anchor`: Plain string, one of \"left\", \"right\", \"top\",\r\n         *    or \"bottom\".\r\n         *\r\n         * When used, an `mct-split-pane` element should contain exactly\r\n         * three child elements, where the middle is an `mct-splitter`\r\n         * element. These should be included in either left-to-right\r\n         * or top-to-bottom order (depending on anchoring.) If the contents\r\n         * do not match this form, `mct-split-pane` will issue a warning\r\n         * and its behavior will be undefined.\r\n         *\r\n         * This directive works by setting the width of the element\r\n         * nearest the anchor edge, and then positioning the other elements\r\n         * based on its observed width. As such, `min-width`, `max-width`,\r\n         * etc. can be set on that element to control the splitter's\r\n         * allowable positions.\r\n         *\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function MCTSplitPane($parse, $log, $interval) {\r\n            function controller($scope, $element, $attrs) {\r\n                var anchorKey = $attrs.anchor || DEFAULT_ANCHOR,\r\n                    anchor,\r\n                    activeInterval,\r\n                    positionParsed = $parse($attrs.position),\r\n                    position; // Start undefined, until explicitly set\r\n\r\n                // Get relevant size (height or width) of DOM element\r\n                function getSize(domElement) {\r\n                    return (anchor.orientation === 'vertical' ?\r\n                            domElement.offsetWidth : domElement.offsetHeight);\r\n                }\r\n\r\n                // Apply styles to child elements\r\n                function updateChildren(children) {\r\n                    // Pick out correct elements to update, flowing from\r\n                    // selected anchor edge.\r\n                    var first = children.eq(anchor.reversed ? 2 : 0),\r\n                        splitter = children.eq(1),\r\n                        last = children.eq(anchor.reversed ? 0 : 2),\r\n                        splitterSize = getSize(splitter[0]),\r\n                        firstSize;\r\n\r\n                    first.css(anchor.edge, \"0px\");\r\n                    first.css(anchor.dimension, (position - splitterSize) + 'px');\r\n\r\n                    // Get actual size (to obey min-width etc.)\r\n                    firstSize = getSize(first[0]);\r\n                    first.css(anchor.dimension, firstSize + 'px');\r\n                    splitter.css(anchor.edge, firstSize + 'px');\r\n                    splitter.css(anchor.opposite, \"auto\");\r\n\r\n                    last.css(anchor.edge, (firstSize + splitterSize) + 'px');\r\n                    last.css(anchor.opposite, \"0px\");\r\n\r\n                    position = firstSize + splitterSize;\r\n                }\r\n\r\n                // Update positioning of contained elements\r\n                function updateElementPositions() {\r\n                    var children = $element.children();\r\n\r\n                    // Check to make sure contents are well-formed\r\n                    if (children.length !== 3 ||\r\n                            children[1].nodeName.toLowerCase() !== 'mct-splitter') {\r\n                        $log.warn(CHILDREN_WARNING_MESSAGE);\r\n                        return;\r\n                    }\r\n\r\n                    updateChildren(children);\r\n                }\r\n\r\n                // Enforce minimum/maximum positions\r\n                function enforceExtrema() {\r\n                    position = Math.max(position, 0);\r\n                    position = Math.min(position, getSize($element[0]));\r\n                }\r\n\r\n                // Getter-setter for the pixel offset of the splitter,\r\n                // relative to the current edge.\r\n                function getSetPosition(value) {\r\n                    var prior = position;\r\n                    if (typeof value === 'number') {\r\n                        position = value;\r\n                        enforceExtrema();\r\n                        updateElementPositions();\r\n\r\n                        // Pass change up so this state can be shared\r\n                        if (positionParsed.assign && position !== prior) {\r\n                            positionParsed.assign($scope, position);\r\n                        }\r\n                    }\r\n                    return position;\r\n                }\r\n\r\n                // Dynamically apply a CSS class to elements when the user\r\n                // is actively resizing\r\n                function toggleClass(classToToggle) {\r\n                    $element.children().toggleClass(classToToggle);\r\n                }\r\n\r\n                // Make sure anchor parameter is something we know\r\n                if (!ANCHORS[anchorKey]) {\r\n                    $log.warn(ANCHOR_WARNING_MESSAGE);\r\n                    anchorKey = DEFAULT_ANCHOR;\r\n                }\r\n                anchor = ANCHORS[anchorKey];\r\n\r\n                $scope.$watch($attrs.position, getSetPosition);\r\n\r\n                $element.addClass(\"split-layout\");\r\n                $element.addClass(anchor.orientation);\r\n\r\n                // Initialize positions\r\n                getSetPosition(getSize(\r\n                    $element.children().eq(anchor.reversed ? 2 : 0)[0]\r\n                ));\r\n\r\n                // And poll for position changes enforced by styles\r\n                activeInterval = $interval(function () {\r\n                    getSetPosition(getSetPosition());\r\n                }, POLLING_INTERVAL, 0, false);\r\n\r\n                // ...and stop polling when we're destroyed.\r\n                $scope.$on('$destroy', function () {\r\n                    $interval.cancel(activeInterval);\r\n                });\r\n\r\n                // Interface exposed by controller, for mct-splitter to user\r\n                return {\r\n                    position: getSetPosition,\r\n                    toggleClass: toggleClass,\r\n                    anchor: function () {\r\n                        return anchor;\r\n                    }\r\n                };\r\n            }\r\n\r\n            return {\r\n                // Restrict to attributes\r\n                restrict: \"E\",\r\n                // Expose its controller\r\n                controller: ['$scope', '$element', '$attrs', controller]\r\n            };\r\n        }\r\n\r\n        return MCTSplitPane;\r\n\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/general/src/directives/MCTSplitter',[],\r\n    function () {\r\n\r\n        // Pixel width to allocate for the splitter itself\r\n        var SPLITTER_TEMPLATE = \"<div class='abs'\" +\r\n                \"mct-drag-down=\\\"splitter.startMove()\\\" \" +\r\n                \"mct-drag=\\\"splitter.move(delta)\\\" \" +\r\n                \"mct-drag-up=\\\"splitter.endMove()\\\"></div>\";\r\n\r\n        /**\r\n         * Implements `mct-splitter` directive.\r\n         * @memberof platform/commonUI/general\r\n         * @constructor\r\n         */\r\n        function MCTSplitter() {\r\n            function link(scope, element, attrs, mctSplitPane) {\r\n                var initialPosition;\r\n\r\n                element.addClass(\"splitter\");\r\n\r\n                scope.splitter = {\r\n                    // Begin moving this splitter\r\n                    startMove: function () {\r\n                        initialPosition = mctSplitPane.position();\r\n                        mctSplitPane.toggleClass('resizing');\r\n                    },\r\n                    // Handle user changes to splitter position\r\n                    move: function (delta) {\r\n                        var anchor = mctSplitPane.anchor(),\r\n                            index = anchor.orientation === \"vertical\" ? 0 : 1,\r\n                            pixelDelta = delta[index] *\r\n                                (anchor.reversed ? -1 : 1);\r\n\r\n                        // Update the position of this splitter\r\n                        mctSplitPane.position(initialPosition + pixelDelta);\r\n                    },\r\n                    // Grab the event when the user is done moving\r\n                    // the splitter and pass it on\r\n                    endMove: function () {\r\n                        mctSplitPane.toggleClass('resizing');\r\n                    }\r\n                };\r\n            }\r\n\r\n            return {\r\n                // Restrict to attributes\r\n                restrict: \"E\",\r\n                // Utilize the mct-split-pane controller\r\n                require: \"^mctSplitPane\",\r\n                // Expose its controller\r\n                link: link,\r\n                // Use the template defined above\r\n                template: SPLITTER_TEMPLATE,\r\n                // Create a new scope to put the splitter into\r\n                scope: true\r\n            };\r\n        }\r\n\r\n        return MCTSplitter;\r\n\r\n    }\r\n);\r\n\r\n\n","(function(root) {\ndefine(\"zepto\", [], function() {\n  return (function() {\n/* Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license */\r\nvar Zepto=function(){function L(t){return null==t?String(t):j[S.call(t)]||\"object\"}function Z(t){return\"function\"==L(t)}function _(t){return null!=t&&t==t.window}function $(t){return null!=t&&t.nodeType==t.DOCUMENT_NODE}function D(t){return\"object\"==L(t)}function M(t){return D(t)&&!_(t)&&Object.getPrototypeOf(t)==Object.prototype}function R(t){return\"number\"==typeof t.length}function k(t){return s.call(t,function(t){return null!=t})}function z(t){return t.length>0?n.fn.concat.apply([],t):t}function F(t){return t.replace(/::/g,\"/\").replace(/([A-Z]+)([A-Z][a-z])/g,\"$1_$2\").replace(/([a-z\\d])([A-Z])/g,\"$1_$2\").replace(/_/g,\"-\").toLowerCase()}function q(t){return t in f?f[t]:f[t]=new RegExp(\"(^|\\\\s)\"+t+\"(\\\\s|$)\")}function H(t,e){return\"number\"!=typeof e||c[F(t)]?e:e+\"px\"}function I(t){var e,n;return u[t]||(e=a.createElement(t),a.body.appendChild(e),n=getComputedStyle(e,\"\").getPropertyValue(\"display\"),e.parentNode.removeChild(e),\"none\"==n&&(n=\"block\"),u[t]=n),u[t]}function V(t){return\"children\"in t?o.call(t.children):n.map(t.childNodes,function(t){return 1==t.nodeType?t:void 0})}function B(n,i,r){for(e in i)r&&(M(i[e])||A(i[e]))?(M(i[e])&&!M(n[e])&&(n[e]={}),A(i[e])&&!A(n[e])&&(n[e]=[]),B(n[e],i[e],r)):i[e]!==t&&(n[e]=i[e])}function U(t,e){return null==e?n(t):n(t).filter(e)}function J(t,e,n,i){return Z(e)?e.call(t,n,i):e}function X(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function W(e,n){var i=e.className||\"\",r=i&&i.baseVal!==t;return n===t?r?i.baseVal:i:void(r?i.baseVal=n:e.className=n)}function Y(t){try{return t?\"true\"==t||(\"false\"==t?!1:\"null\"==t?null:+t+\"\"==t?+t:/^[\\[\\{]/.test(t)?n.parseJSON(t):t):t}catch(e){return t}}function G(t,e){e(t);for(var n=0,i=t.childNodes.length;i>n;n++)G(t.childNodes[n],e)}var t,e,n,i,C,N,r=[],o=r.slice,s=r.filter,a=window.document,u={},f={},c={\"column-count\":1,columns:1,\"font-weight\":1,\"line-height\":1,opacity:1,\"z-index\":1,zoom:1},l=/^\\s*<(\\w+|!)[^>]*>/,h=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,p=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,d=/^(?:body|html)$/i,m=/([A-Z])/g,g=[\"val\",\"css\",\"html\",\"text\",\"data\",\"width\",\"height\",\"offset\"],v=[\"after\",\"prepend\",\"before\",\"append\"],y=a.createElement(\"table\"),x=a.createElement(\"tr\"),b={tr:a.createElement(\"tbody\"),tbody:y,thead:y,tfoot:y,td:x,th:x,\"*\":a.createElement(\"div\")},w=/complete|loaded|interactive/,E=/^[\\w-]*$/,j={},S=j.toString,T={},O=a.createElement(\"div\"),P={tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},A=Array.isArray||function(t){return t instanceof Array};return T.matches=function(t,e){if(!e||!t||1!==t.nodeType)return!1;var n=t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.matchesSelector;if(n)return n.call(t,e);var i,r=t.parentNode,o=!r;return o&&(r=O).appendChild(t),i=~T.qsa(r,e).indexOf(t),o&&O.removeChild(t),i},C=function(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():\"\"})},N=function(t){return s.call(t,function(e,n){return t.indexOf(e)==n})},T.fragment=function(e,i,r){var s,u,f;return h.test(e)&&(s=n(a.createElement(RegExp.$1))),s||(e.replace&&(e=e.replace(p,\"<$1></$2>\")),i===t&&(i=l.test(e)&&RegExp.$1),i in b||(i=\"*\"),f=b[i],f.innerHTML=\"\"+e,s=n.each(o.call(f.childNodes),function(){f.removeChild(this)})),M(r)&&(u=n(s),n.each(r,function(t,e){g.indexOf(t)>-1?u[t](e):u.attr(t,e)})),s},T.Z=function(t,e){return t=t||[],t.__proto__=n.fn,t.selector=e||\"\",t},T.isZ=function(t){return t instanceof T.Z},T.init=function(e,i){var r;if(!e)return T.Z();if(\"string\"==typeof e)if(e=e.trim(),\"<\"==e[0]&&l.test(e))r=T.fragment(e,RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=T.qsa(a,e)}else{if(Z(e))return n(a).ready(e);if(T.isZ(e))return e;if(A(e))r=k(e);else if(D(e))r=[e],e=null;else if(l.test(e))r=T.fragment(e.trim(),RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=T.qsa(a,e)}}return T.Z(r,e)},n=function(t,e){return T.init(t,e)},n.extend=function(t){var e,n=o.call(arguments,1);return\"boolean\"==typeof t&&(e=t,t=n.shift()),n.forEach(function(n){B(t,n,e)}),t},T.qsa=function(t,e){var n,i=\"#\"==e[0],r=!i&&\".\"==e[0],s=i||r?e.slice(1):e,a=E.test(s);return $(t)&&a&&i?(n=t.getElementById(s))?[n]:[]:1!==t.nodeType&&9!==t.nodeType?[]:o.call(a&&!i?r?t.getElementsByClassName(s):t.getElementsByTagName(e):t.querySelectorAll(e))},n.contains=a.documentElement.contains?function(t,e){return t!==e&&t.contains(e)}:function(t,e){for(;e&&(e=e.parentNode);)if(e===t)return!0;return!1},n.type=L,n.isFunction=Z,n.isWindow=_,n.isArray=A,n.isPlainObject=M,n.isEmptyObject=function(t){var e;for(e in t)return!1;return!0},n.inArray=function(t,e,n){return r.indexOf.call(e,t,n)},n.camelCase=C,n.trim=function(t){return null==t?\"\":String.prototype.trim.call(t)},n.uuid=0,n.support={},n.expr={},n.map=function(t,e){var n,r,o,i=[];if(R(t))for(r=0;r<t.length;r++)n=e(t[r],r),null!=n&&i.push(n);else for(o in t)n=e(t[o],o),null!=n&&i.push(n);return z(i)},n.each=function(t,e){var n,i;if(R(t)){for(n=0;n<t.length;n++)if(e.call(t[n],n,t[n])===!1)return t}else for(i in t)if(e.call(t[i],i,t[i])===!1)return t;return t},n.grep=function(t,e){return s.call(t,e)},window.JSON&&(n.parseJSON=JSON.parse),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(t,e){j[\"[object \"+e+\"]\"]=e.toLowerCase()}),n.fn={forEach:r.forEach,reduce:r.reduce,push:r.push,sort:r.sort,indexOf:r.indexOf,concat:r.concat,map:function(t){return n(n.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return n(o.apply(this,arguments))},ready:function(t){return w.test(a.readyState)&&a.body?t(n):a.addEventListener(\"DOMContentLoaded\",function(){t(n)},!1),this},get:function(e){return e===t?o.call(this):this[e>=0?e:e+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(t){return r.every.call(this,function(e,n){return t.call(e,n,e)!==!1}),this},filter:function(t){return Z(t)?this.not(this.not(t)):n(s.call(this,function(e){return T.matches(e,t)}))},add:function(t,e){return n(N(this.concat(n(t,e))))},is:function(t){return this.length>0&&T.matches(this[0],t)},not:function(e){var i=[];if(Z(e)&&e.call!==t)this.each(function(t){e.call(this,t)||i.push(this)});else{var r=\"string\"==typeof e?this.filter(e):R(e)&&Z(e.item)?o.call(e):n(e);this.forEach(function(t){r.indexOf(t)<0&&i.push(t)})}return n(i)},has:function(t){return this.filter(function(){return D(t)?n.contains(this,t):n(this).find(t).size()})},eq:function(t){return-1===t?this.slice(t):this.slice(t,+t+1)},first:function(){var t=this[0];return t&&!D(t)?t:n(t)},last:function(){var t=this[this.length-1];return t&&!D(t)?t:n(t)},find:function(t){var e,i=this;return e=t?\"object\"==typeof t?n(t).filter(function(){var t=this;return r.some.call(i,function(e){return n.contains(e,t)})}):1==this.length?n(T.qsa(this[0],t)):this.map(function(){return T.qsa(this,t)}):n()},closest:function(t,e){var i=this[0],r=!1;for(\"object\"==typeof t&&(r=n(t));i&&!(r?r.indexOf(i)>=0:T.matches(i,t));)i=i!==e&&!$(i)&&i.parentNode;return n(i)},parents:function(t){for(var e=[],i=this;i.length>0;)i=n.map(i,function(t){return(t=t.parentNode)&&!$(t)&&e.indexOf(t)<0?(e.push(t),t):void 0});return U(e,t)},parent:function(t){return U(N(this.pluck(\"parentNode\")),t)},children:function(t){return U(this.map(function(){return V(this)}),t)},contents:function(){return this.map(function(){return o.call(this.childNodes)})},siblings:function(t){return U(this.map(function(t,e){return s.call(V(e.parentNode),function(t){return t!==e})}),t)},empty:function(){return this.each(function(){this.innerHTML=\"\"})},pluck:function(t){return n.map(this,function(e){return e[t]})},show:function(){return this.each(function(){\"none\"==this.style.display&&(this.style.display=\"\"),\"none\"==getComputedStyle(this,\"\").getPropertyValue(\"display\")&&(this.style.display=I(this.nodeName))})},replaceWith:function(t){return this.before(t).remove()},wrap:function(t){var e=Z(t);if(this[0]&&!e)var i=n(t).get(0),r=i.parentNode||this.length>1;return this.each(function(o){n(this).wrapAll(e?t.call(this,o):r?i.cloneNode(!0):i)})},wrapAll:function(t){if(this[0]){n(this[0]).before(t=n(t));for(var e;(e=t.children()).length;)t=e.first();n(t).append(this)}return this},wrapInner:function(t){var e=Z(t);return this.each(function(i){var r=n(this),o=r.contents(),s=e?t.call(this,i):t;o.length?o.wrapAll(s):r.append(s)})},unwrap:function(){return this.parent().each(function(){n(this).replaceWith(n(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css(\"display\",\"none\")},toggle:function(e){return this.each(function(){var i=n(this);(e===t?\"none\"==i.css(\"display\"):e)?i.show():i.hide()})},prev:function(t){return n(this.pluck(\"previousElementSibling\")).filter(t||\"*\")},next:function(t){return n(this.pluck(\"nextElementSibling\")).filter(t||\"*\")},html:function(t){return 0 in arguments?this.each(function(e){var i=this.innerHTML;n(this).empty().append(J(this,t,e,i))}):0 in this?this[0].innerHTML:null},text:function(t){return 0 in arguments?this.each(function(e){var n=J(this,t,e,this.textContent);this.textContent=null==n?\"\":\"\"+n}):0 in this?this[0].textContent:null},attr:function(n,i){var r;return\"string\"!=typeof n||1 in arguments?this.each(function(t){if(1===this.nodeType)if(D(n))for(e in n)X(this,e,n[e]);else X(this,n,J(this,i,t,this.getAttribute(n)))}):this.length&&1===this[0].nodeType?!(r=this[0].getAttribute(n))&&n in this[0]?this[0][n]:r:t},removeAttr:function(t){return this.each(function(){1===this.nodeType&&t.split(\" \").forEach(function(t){X(this,t)},this)})},prop:function(t,e){return t=P[t]||t,1 in arguments?this.each(function(n){this[t]=J(this,e,n,this[t])}):this[0]&&this[0][t]},data:function(e,n){var i=\"data-\"+e.replace(m,\"-$1\").toLowerCase(),r=1 in arguments?this.attr(i,n):this.attr(i);return null!==r?Y(r):t},val:function(t){return 0 in arguments?this.each(function(e){this.value=J(this,t,e,this.value)}):this[0]&&(this[0].multiple?n(this[0]).find(\"option\").filter(function(){return this.selected}).pluck(\"value\"):this[0].value)},offset:function(t){if(t)return this.each(function(e){var i=n(this),r=J(this,t,e,i.offset()),o=i.offsetParent().offset(),s={top:r.top-o.top,left:r.left-o.left};\"static\"==i.css(\"position\")&&(s.position=\"relative\"),i.css(s)});if(!this.length)return null;var e=this[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},css:function(t,i){if(arguments.length<2){var r,o=this[0];if(!o)return;if(r=getComputedStyle(o,\"\"),\"string\"==typeof t)return o.style[C(t)]||r.getPropertyValue(t);if(A(t)){var s={};return n.each(t,function(t,e){s[e]=o.style[C(e)]||r.getPropertyValue(e)}),s}}var a=\"\";if(\"string\"==L(t))i||0===i?a=F(t)+\":\"+H(t,i):this.each(function(){this.style.removeProperty(F(t))});else for(e in t)t[e]||0===t[e]?a+=F(e)+\":\"+H(e,t[e])+\";\":this.each(function(){this.style.removeProperty(F(e))});return this.each(function(){this.style.cssText+=\";\"+a})},index:function(t){return t?this.indexOf(n(t)[0]):this.parent().children().indexOf(this[0])},hasClass:function(t){return t?r.some.call(this,function(t){return this.test(W(t))},q(t)):!1},addClass:function(t){return t?this.each(function(e){if(\"className\"in this){i=[];var r=W(this),o=J(this,t,e,r);o.split(/\\s+/g).forEach(function(t){n(this).hasClass(t)||i.push(t)},this),i.length&&W(this,r+(r?\" \":\"\")+i.join(\" \"))}}):this},removeClass:function(e){return this.each(function(n){if(\"className\"in this){if(e===t)return W(this,\"\");i=W(this),J(this,e,n,i).split(/\\s+/g).forEach(function(t){i=i.replace(q(t),\" \")}),W(this,i.trim())}})},toggleClass:function(e,i){return e?this.each(function(r){var o=n(this),s=J(this,e,r,W(this));s.split(/\\s+/g).forEach(function(e){(i===t?!o.hasClass(e):i)?o.addClass(e):o.removeClass(e)})}):this},scrollTop:function(e){if(this.length){var n=\"scrollTop\"in this[0];return e===t?n?this[0].scrollTop:this[0].pageYOffset:this.each(n?function(){this.scrollTop=e}:function(){this.scrollTo(this.scrollX,e)})}},scrollLeft:function(e){if(this.length){var n=\"scrollLeft\"in this[0];return e===t?n?this[0].scrollLeft:this[0].pageXOffset:this.each(n?function(){this.scrollLeft=e}:function(){this.scrollTo(e,this.scrollY)})}},position:function(){if(this.length){var t=this[0],e=this.offsetParent(),i=this.offset(),r=d.test(e[0].nodeName)?{top:0,left:0}:e.offset();return i.top-=parseFloat(n(t).css(\"margin-top\"))||0,i.left-=parseFloat(n(t).css(\"margin-left\"))||0,r.top+=parseFloat(n(e[0]).css(\"border-top-width\"))||0,r.left+=parseFloat(n(e[0]).css(\"border-left-width\"))||0,{top:i.top-r.top,left:i.left-r.left}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||a.body;t&&!d.test(t.nodeName)&&\"static\"==n(t).css(\"position\");)t=t.offsetParent;return t})}},n.fn.detach=n.fn.remove,[\"width\",\"height\"].forEach(function(e){var i=e.replace(/./,function(t){return t[0].toUpperCase()});n.fn[e]=function(r){var o,s=this[0];return r===t?_(s)?s[\"inner\"+i]:$(s)?s.documentElement[\"scroll\"+i]:(o=this.offset())&&o[e]:this.each(function(t){s=n(this),s.css(e,J(this,r,t,s[e]()))})}}),v.forEach(function(t,e){var i=e%2;n.fn[t]=function(){var t,o,r=n.map(arguments,function(e){return t=L(e),\"object\"==t||\"array\"==t||null==e?e:T.fragment(e)}),s=this.length>1;return r.length<1?this:this.each(function(t,u){o=i?u:u.parentNode,u=0==e?u.nextSibling:1==e?u.firstChild:2==e?u:null;var f=n.contains(a.documentElement,o);r.forEach(function(t){if(s)t=t.cloneNode(!0);else if(!o)return n(t).remove();o.insertBefore(t,u),f&&G(t,function(t){null==t.nodeName||\"SCRIPT\"!==t.nodeName.toUpperCase()||t.type&&\"text/javascript\"!==t.type||t.src||window.eval.call(window,t.innerHTML)})})})},n.fn[i?t+\"To\":\"insert\"+(e?\"Before\":\"After\")]=function(e){return n(e)[t](this),this}}),T.Z.prototype=n.fn,T.uniq=N,T.deserializeValue=Y,n.zepto=T,n}();window.Zepto=Zepto,void 0===window.$&&(window.$=Zepto),function(t){function l(t){return t._zid||(t._zid=e++)}function h(t,e,n,i){if(e=p(e),e.ns)var r=d(e.ns);return(s[l(t)]||[]).filter(function(t){return!(!t||e.e&&t.e!=e.e||e.ns&&!r.test(t.ns)||n&&l(t.fn)!==l(n)||i&&t.sel!=i)})}function p(t){var e=(\"\"+t).split(\".\");return{e:e[0],ns:e.slice(1).sort().join(\" \")}}function d(t){return new RegExp(\"(?:^| )\"+t.replace(\" \",\" .* ?\")+\"(?: |$)\")}function m(t,e){return t.del&&!u&&t.e in f||!!e}function g(t){return c[t]||u&&f[t]||t}function v(e,i,r,o,a,u,f){var h=l(e),d=s[h]||(s[h]=[]);i.split(/\\s/).forEach(function(i){if(\"ready\"==i)return t(document).ready(r);var s=p(i);s.fn=r,s.sel=a,s.e in c&&(r=function(e){var n=e.relatedTarget;return!n||n!==this&&!t.contains(this,n)?s.fn.apply(this,arguments):void 0}),s.del=u;var l=u||r;s.proxy=function(t){if(t=j(t),!t.isImmediatePropagationStopped()){t.data=o;var i=l.apply(e,t._args==n?[t]:[t].concat(t._args));return i===!1&&(t.preventDefault(),t.stopPropagation()),i}},s.i=d.length,d.push(s),\"addEventListener\"in e&&e.addEventListener(g(s.e),s.proxy,m(s,f))})}function y(t,e,n,i,r){var o=l(t);(e||\"\").split(/\\s/).forEach(function(e){h(t,e,n,i).forEach(function(e){delete s[o][e.i],\"removeEventListener\"in t&&t.removeEventListener(g(e.e),e.proxy,m(e,r))})})}function j(e,i){return(i||!e.isDefaultPrevented)&&(i||(i=e),t.each(E,function(t,n){var r=i[t];e[t]=function(){return this[n]=x,r&&r.apply(i,arguments)},e[n]=b}),(i.defaultPrevented!==n?i.defaultPrevented:\"returnValue\"in i?i.returnValue===!1:i.getPreventDefault&&i.getPreventDefault())&&(e.isDefaultPrevented=x)),e}function S(t){var e,i={originalEvent:t};for(e in t)w.test(e)||t[e]===n||(i[e]=t[e]);return j(i,t)}var n,e=1,i=Array.prototype.slice,r=t.isFunction,o=function(t){return\"string\"==typeof t},s={},a={},u=\"onfocusin\"in window,f={focus:\"focusin\",blur:\"focusout\"},c={mouseenter:\"mouseover\",mouseleave:\"mouseout\"};a.click=a.mousedown=a.mouseup=a.mousemove=\"MouseEvents\",t.event={add:v,remove:y},t.proxy=function(e,n){var s=2 in arguments&&i.call(arguments,2);if(r(e)){var a=function(){return e.apply(n,s?s.concat(i.call(arguments)):arguments)};return a._zid=l(e),a}if(o(n))return s?(s.unshift(e[n],e),t.proxy.apply(null,s)):t.proxy(e[n],e);throw new TypeError(\"expected function\")},t.fn.bind=function(t,e,n){return this.on(t,e,n)},t.fn.unbind=function(t,e){return this.off(t,e)},t.fn.one=function(t,e,n,i){return this.on(t,e,n,i,1)};var x=function(){return!0},b=function(){return!1},w=/^([A-Z]|returnValue$|layer[XY]$)/,E={preventDefault:\"isDefaultPrevented\",stopImmediatePropagation:\"isImmediatePropagationStopped\",stopPropagation:\"isPropagationStopped\"};t.fn.delegate=function(t,e,n){return this.on(e,t,n)},t.fn.undelegate=function(t,e,n){return this.off(e,t,n)},t.fn.live=function(e,n){return t(document.body).delegate(this.selector,e,n),this},t.fn.die=function(e,n){return t(document.body).undelegate(this.selector,e,n),this},t.fn.on=function(e,s,a,u,f){var c,l,h=this;return e&&!o(e)?(t.each(e,function(t,e){h.on(t,s,a,e,f)}),h):(o(s)||r(u)||u===!1||(u=a,a=s,s=n),(r(a)||a===!1)&&(u=a,a=n),u===!1&&(u=b),h.each(function(n,r){f&&(c=function(t){return y(r,t.type,u),u.apply(this,arguments)}),s&&(l=function(e){var n,o=t(e.target).closest(s,r).get(0);return o&&o!==r?(n=t.extend(S(e),{currentTarget:o,liveFired:r}),(c||u).apply(o,[n].concat(i.call(arguments,1)))):void 0}),v(r,e,u,a,s,l||c)}))},t.fn.off=function(e,i,s){var a=this;return e&&!o(e)?(t.each(e,function(t,e){a.off(t,i,e)}),a):(o(i)||r(s)||s===!1||(s=i,i=n),s===!1&&(s=b),a.each(function(){y(this,e,s,i)}))},t.fn.trigger=function(e,n){return e=o(e)||t.isPlainObject(e)?t.Event(e):j(e),e._args=n,this.each(function(){e.type in f&&\"function\"==typeof this[e.type]?this[e.type]():\"dispatchEvent\"in this?this.dispatchEvent(e):t(this).triggerHandler(e,n)})},t.fn.triggerHandler=function(e,n){var i,r;return this.each(function(s,a){i=S(o(e)?t.Event(e):e),i._args=n,i.target=a,t.each(h(a,e.type||e),function(t,e){return r=e.proxy(i),i.isImmediatePropagationStopped()?!1:void 0})}),r},\"focusin focusout focus blur load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error\".split(\" \").forEach(function(e){t.fn[e]=function(t){return 0 in arguments?this.bind(e,t):this.trigger(e)}}),t.Event=function(t,e){o(t)||(e=t,t=e.type);var n=document.createEvent(a[t]||\"Events\"),i=!0;if(e)for(var r in e)\"bubbles\"==r?i=!!e[r]:n[r]=e[r];return n.initEvent(t,i,!0),j(n)}}(Zepto),function(t){function h(e,n,i){var r=t.Event(n);return t(e).trigger(r,i),!r.isDefaultPrevented()}function p(t,e,i,r){return t.global?h(e||n,i,r):void 0}function d(e){e.global&&0===t.active++&&p(e,null,\"ajaxStart\")}function m(e){e.global&&!--t.active&&p(e,null,\"ajaxStop\")}function g(t,e){var n=e.context;return e.beforeSend.call(n,t,e)===!1||p(e,n,\"ajaxBeforeSend\",[t,e])===!1?!1:void p(e,n,\"ajaxSend\",[t,e])}function v(t,e,n,i){var r=n.context,o=\"success\";n.success.call(r,t,o,e),i&&i.resolveWith(r,[t,o,e]),p(n,r,\"ajaxSuccess\",[e,n,t]),x(o,e,n)}function y(t,e,n,i,r){var o=i.context;i.error.call(o,n,e,t),r&&r.rejectWith(o,[n,e,t]),p(i,o,\"ajaxError\",[n,i,t||e]),x(e,n,i)}function x(t,e,n){var i=n.context;n.complete.call(i,e,t),p(n,i,\"ajaxComplete\",[e,n]),m(n)}function b(){}function w(t){return t&&(t=t.split(\";\",2)[0]),t&&(t==f?\"html\":t==u?\"json\":s.test(t)?\"script\":a.test(t)&&\"xml\")||\"text\"}function E(t,e){return\"\"==e?t:(t+\"&\"+e).replace(/[&?]{1,2}/,\"?\")}function j(e){e.processData&&e.data&&\"string\"!=t.type(e.data)&&(e.data=t.param(e.data,e.traditional)),!e.data||e.type&&\"GET\"!=e.type.toUpperCase()||(e.url=E(e.url,e.data),e.data=void 0)}function S(e,n,i,r){return t.isFunction(n)&&(r=i,i=n,n=void 0),t.isFunction(i)||(r=i,i=void 0),{url:e,data:n,success:i,dataType:r}}function C(e,n,i,r){var o,s=t.isArray(n),a=t.isPlainObject(n);t.each(n,function(n,u){o=t.type(u),r&&(n=i?r:r+\"[\"+(a||\"object\"==o||\"array\"==o?n:\"\")+\"]\"),!r&&s?e.add(u.name,u.value):\"array\"==o||!i&&\"object\"==o?C(e,u,i,n):e.add(n,u)})}var i,r,e=0,n=window.document,o=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,s=/^(?:text|application)\\/javascript/i,a=/^(?:text|application)\\/xml/i,u=\"application/json\",f=\"text/html\",c=/^\\s*$/,l=n.createElement(\"a\");l.href=window.location.href,t.active=0,t.ajaxJSONP=function(i,r){if(!(\"type\"in i))return t.ajax(i);var f,h,o=i.jsonpCallback,s=(t.isFunction(o)?o():o)||\"jsonp\"+ ++e,a=n.createElement(\"script\"),u=window[s],c=function(e){t(a).triggerHandler(\"error\",e||\"abort\")},l={abort:c};return r&&r.promise(l),t(a).on(\"load error\",function(e,n){clearTimeout(h),t(a).off().remove(),\"error\"!=e.type&&f?v(f[0],l,i,r):y(null,n||\"error\",l,i,r),window[s]=u,f&&t.isFunction(u)&&u(f[0]),u=f=void 0}),g(l,i)===!1?(c(\"abort\"),l):(window[s]=function(){f=arguments},a.src=i.url.replace(/\\?(.+)=\\?/,\"?$1=\"+s),n.head.appendChild(a),i.timeout>0&&(h=setTimeout(function(){c(\"timeout\")},i.timeout)),l)},t.ajaxSettings={type:\"GET\",beforeSend:b,success:b,error:b,complete:b,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:\"text/javascript, application/javascript, application/x-javascript\",json:u,xml:\"application/xml, text/xml\",html:f,text:\"text/plain\"},crossDomain:!1,timeout:0,processData:!0,cache:!0},t.ajax=function(e){var a,o=t.extend({},e||{}),s=t.Deferred&&t.Deferred();for(i in t.ajaxSettings)void 0===o[i]&&(o[i]=t.ajaxSettings[i]);d(o),o.crossDomain||(a=n.createElement(\"a\"),a.href=o.url,a.href=a.href,o.crossDomain=l.protocol+\"//\"+l.host!=a.protocol+\"//\"+a.host),o.url||(o.url=window.location.toString()),j(o);var u=o.dataType,f=/\\?.+=\\?/.test(o.url);if(f&&(u=\"jsonp\"),o.cache!==!1&&(e&&e.cache===!0||\"script\"!=u&&\"jsonp\"!=u)||(o.url=E(o.url,\"_=\"+Date.now())),\"jsonp\"==u)return f||(o.url=E(o.url,o.jsonp?o.jsonp+\"=?\":o.jsonp===!1?\"\":\"callback=?\")),t.ajaxJSONP(o,s);var C,h=o.accepts[u],p={},m=function(t,e){p[t.toLowerCase()]=[t,e]},x=/^([\\w-]+:)\\/\\//.test(o.url)?RegExp.$1:window.location.protocol,S=o.xhr(),T=S.setRequestHeader;if(s&&s.promise(S),o.crossDomain||m(\"X-Requested-With\",\"XMLHttpRequest\"),m(\"Accept\",h||\"*/*\"),(h=o.mimeType||h)&&(h.indexOf(\",\")>-1&&(h=h.split(\",\",2)[0]),S.overrideMimeType&&S.overrideMimeType(h)),(o.contentType||o.contentType!==!1&&o.data&&\"GET\"!=o.type.toUpperCase())&&m(\"Content-Type\",o.contentType||\"application/x-www-form-urlencoded\"),o.headers)for(r in o.headers)m(r,o.headers[r]);if(S.setRequestHeader=m,S.onreadystatechange=function(){if(4==S.readyState){S.onreadystatechange=b,clearTimeout(C);var e,n=!1;if(S.status>=200&&S.status<300||304==S.status||0==S.status&&\"file:\"==x){u=u||w(o.mimeType||S.getResponseHeader(\"content-type\")),e=S.responseText;try{\"script\"==u?(1,eval)(e):\"xml\"==u?e=S.responseXML:\"json\"==u&&(e=c.test(e)?null:t.parseJSON(e))}catch(i){n=i}n?y(n,\"parsererror\",S,o,s):v(e,S,o,s)}else y(S.statusText||null,S.status?\"error\":\"abort\",S,o,s)}},g(S,o)===!1)return S.abort(),y(null,\"abort\",S,o,s),S;if(o.xhrFields)for(r in o.xhrFields)S[r]=o.xhrFields[r];var N=\"async\"in o?o.async:!0;S.open(o.type,o.url,N,o.username,o.password);for(r in p)T.apply(S,p[r]);return o.timeout>0&&(C=setTimeout(function(){S.onreadystatechange=b,S.abort(),y(null,\"timeout\",S,o,s)},o.timeout)),S.send(o.data?o.data:null),S},t.get=function(){return t.ajax(S.apply(null,arguments))},t.post=function(){var e=S.apply(null,arguments);return e.type=\"POST\",t.ajax(e)},t.getJSON=function(){var e=S.apply(null,arguments);return e.dataType=\"json\",t.ajax(e)},t.fn.load=function(e,n,i){if(!this.length)return this;var a,r=this,s=e.split(/\\s/),u=S(e,n,i),f=u.success;return s.length>1&&(u.url=s[0],a=s[1]),u.success=function(e){r.html(a?t(\"<div>\").html(e.replace(o,\"\")).find(a):e),f&&f.apply(r,arguments)},t.ajax(u),this};var T=encodeURIComponent;t.param=function(e,n){var i=[];return i.add=function(e,n){t.isFunction(n)&&(n=n()),null==n&&(n=\"\"),this.push(T(e)+\"=\"+T(n))},C(i,e,n),i.join(\"&\").replace(/%20/g,\"+\")}}(Zepto),function(t){t.fn.serializeArray=function(){var e,n,i=[],r=function(t){return t.forEach?t.forEach(r):void i.push({name:e,value:t})};return this[0]&&t.each(this[0].elements,function(i,o){n=o.type,e=o.name,e&&\"fieldset\"!=o.nodeName.toLowerCase()&&!o.disabled&&\"submit\"!=n&&\"reset\"!=n&&\"button\"!=n&&\"file\"!=n&&(\"radio\"!=n&&\"checkbox\"!=n||o.checked)&&r(t(o).val())}),i},t.fn.serialize=function(){var t=[];return this.serializeArray().forEach(function(e){t.push(encodeURIComponent(e.name)+\"=\"+encodeURIComponent(e.value))}),t.join(\"&\")},t.fn.submit=function(e){if(0 in arguments)this.bind(\"submit\",e);else if(this.length){var n=t.Event(\"submit\");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(Zepto),function(t){\"__proto__\"in{}||t.extend(t.zepto,{Z:function(e,n){return e=e||[],t.extend(e,t.fn),e.selector=n||\"\",e.__Z=!0,e},isZ:function(e){return\"array\"===t.type(e)&&\"__Z\"in e}});try{getComputedStyle(void 0)}catch(e){var n=getComputedStyle;window.getComputedStyle=function(t){try{return n(t)}catch(e){return null}}}}(Zepto);\nreturn root.Zepto = Zepto;\n  }).apply(root, arguments);\n});\n}(this));\n\n","\ndefine('text!platform/commonUI/general/res/templates/tree/node.html',[],function () { return '<span class=\"tree-item menus-to-left\">\\r\\n</span>\\r\\n<span class=\"tree-item-subtree\">\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/tree/toggle.html',[],function () { return '<span class=\\'ui-symbol view-control flex-elem\\'>\\r\\n</span>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/src/ui/ToggleView',[\r\n    'zepto',\r\n    'text!../../res/templates/tree/toggle.html'\r\n], function ($, toggleTemplate) {\r\n    function ToggleView(state) {\r\n        this.expanded = !!state;\r\n        this.callbacks = [];\r\n        this.el = $(toggleTemplate);\r\n        this.el.on('click', function () {\r\n            this.value(!this.expanded);\r\n        }.bind(this));\r\n    }\r\n\r\n    ToggleView.prototype.value = function (state) {\r\n        this.expanded = state;\r\n\r\n        if (state) {\r\n            this.el.addClass('expanded');\r\n        } else {\r\n            this.el.removeClass('expanded');\r\n        }\r\n\r\n        this.callbacks.forEach(function (callback) {\r\n            callback(state);\r\n        });\r\n    };\r\n\r\n    ToggleView.prototype.observe = function (callback) {\r\n        this.callbacks.push(callback);\r\n        return function () {\r\n            this.callbacks = this.callbacks.filter(function (c) {\r\n                return c !== callback;\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    ToggleView.prototype.elements = function () {\r\n        return this.el;\r\n    };\r\n\r\n    return ToggleView;\r\n});\r\n\n","\ndefine('text!platform/commonUI/general/res/templates/tree/tree-label.html',[],function () { return '<span class=\"rep-object-label\">\\r\\n    <div class=\"t-object-label l-flex-row flex-elem grows\">\\r\\n        <div class=\"t-item-icon flex-elem\"></div>\\r\\n        <div class=\\'t-title-label flex-elem grows\\'></div>\\r\\n    </div>\\r\\n</span>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/src/ui/TreeLabelView',[\r\n    'zepto',\r\n    'text!../../res/templates/tree/tree-label.html'\r\n], function ($, labelTemplate) {\r\n\r\n    function TreeLabelView(gestureService) {\r\n        this.el = $(labelTemplate);\r\n        this.gestureService = gestureService;\r\n    }\r\n\r\n    function isLink(domainObject) {\r\n        var location = domainObject.getCapability('location');\r\n        return location.isLink();\r\n    }\r\n\r\n    function getClass(domainObject) {\r\n        var type = domainObject.getCapability('type');\r\n        return type.getCssClass();\r\n    }\r\n\r\n    TreeLabelView.prototype.updateView = function (domainObject) {\r\n        var titleEl = this.el.find('.t-title-label'),\r\n            iconEl = this.el.find('.t-item-icon');\r\n\r\n        titleEl.text(domainObject ? domainObject.getModel().name : \"\");\r\n        iconEl.addClass(domainObject ? getClass(domainObject) : \"\");\r\n\r\n        if (domainObject && isLink(domainObject)) {\r\n            iconEl.addClass('l-icon-link');\r\n        } else {\r\n            iconEl.removeClass('l-icon-link');\r\n        }\r\n    };\r\n\r\n    TreeLabelView.prototype.model = function (domainObject) {\r\n        if (this.unlisten) {\r\n            this.unlisten();\r\n            delete this.unlisten;\r\n        }\r\n\r\n        if (this.activeGestures) {\r\n            this.activeGestures.destroy();\r\n            delete this.activeGestures;\r\n        }\r\n\r\n        this.updateView(domainObject);\r\n\r\n        if (domainObject) {\r\n            this.unlisten = domainObject.getCapability('mutation')\r\n                .listen(this.updateView.bind(this, domainObject));\r\n\r\n            this.activeGestures = this.gestureService.attachGestures(\r\n                this.elements(),\r\n                domainObject,\r\n                ['info', 'menu', 'drag']\r\n            );\r\n        }\r\n    };\r\n\r\n    TreeLabelView.prototype.elements = function () {\r\n        return this.el;\r\n    };\r\n\r\n    return TreeLabelView;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/src/ui/TreeNodeView',[\r\n    'zepto',\r\n    'text!../../res/templates/tree/node.html',\r\n    './ToggleView',\r\n    './TreeLabelView'\r\n], function ($, nodeTemplate, ToggleView, TreeLabelView) {\r\n\r\n    function TreeNodeView(gestureService, subtreeFactory, selectFn) {\r\n        this.li = $('<li>');\r\n\r\n        this.statusClasses = [];\r\n\r\n        this.toggleView = new ToggleView(false);\r\n        this.toggleView.observe(function (state) {\r\n            if (state) {\r\n                if (!this.subtreeView) {\r\n                    this.subtreeView = subtreeFactory();\r\n                    this.subtreeView.model(this.activeObject);\r\n                    this.li.find('.tree-item-subtree').eq(0)\r\n                        .append($(this.subtreeView.elements()));\r\n                }\r\n                $(this.subtreeView.elements()).removeClass('hidden');\r\n            } else if (this.subtreeView) {\r\n                $(this.subtreeView.elements()).addClass('hidden');\r\n            }\r\n        }.bind(this));\r\n\r\n        this.labelView = new TreeLabelView(gestureService);\r\n\r\n        $(this.labelView.elements()).on('click', function () {\r\n            selectFn(this.activeObject);\r\n        }.bind(this));\r\n\r\n        this.li.append($(nodeTemplate));\r\n        this.li.find('span').eq(0)\r\n            .append($(this.toggleView.elements()))\r\n            .append($(this.labelView.elements()));\r\n\r\n        this.model(undefined);\r\n    }\r\n\r\n    TreeNodeView.prototype.updateStatusClasses = function (statuses) {\r\n        this.statusClasses.forEach(function (statusClass) {\r\n            this.li.removeClass(statusClass);\r\n        }.bind(this));\r\n\r\n        this.statusClasses = statuses.map(function (status) {\r\n            return 's-status-' + status;\r\n        });\r\n\r\n        this.statusClasses.forEach(function (statusClass) {\r\n            this.li.addClass(statusClass);\r\n        }.bind(this));\r\n    };\r\n\r\n    TreeNodeView.prototype.model = function (domainObject) {\r\n        if (this.unlisten) {\r\n            this.unlisten();\r\n        }\r\n\r\n        this.activeObject = domainObject;\r\n\r\n        if (domainObject && domainObject.hasCapability('composition')) {\r\n            $(this.toggleView.elements()).addClass('has-children');\r\n        } else {\r\n            $(this.toggleView.elements()).removeClass('has-children');\r\n        }\r\n\r\n        if (domainObject && domainObject.hasCapability('status')) {\r\n            this.unlisten = domainObject.getCapability('status')\r\n                .listen(this.updateStatusClasses.bind(this));\r\n            this.updateStatusClasses(\r\n                domainObject.getCapability('status').list()\r\n            );\r\n        }\r\n\r\n        this.labelView.model(domainObject);\r\n        if (this.subtreeView) {\r\n            this.subtreeView.model(domainObject);\r\n        }\r\n    };\r\n\r\n    function getIdPath(domainObject) {\r\n        var context = domainObject && domainObject.getCapability('context');\r\n\r\n        function getId(domainObj) {\r\n            return domainObj.getId();\r\n        }\r\n\r\n        return context ? context.getPath().map(getId) : [];\r\n    }\r\n\r\n    TreeNodeView.prototype.value = function (domainObject) {\r\n        var activeIdPath = getIdPath(this.activeObject),\r\n            selectedIdPath = getIdPath(domainObject);\r\n\r\n        if (this.onSelectionPath) {\r\n            this.li.find('.tree-item').eq(0).removeClass('selected');\r\n            if (this.subtreeView) {\r\n                this.subtreeView.value(undefined);\r\n            }\r\n        }\r\n\r\n        this.onSelectionPath =\r\n            !!domainObject &&\r\n            !!this.activeObject &&\r\n            (activeIdPath.length <= selectedIdPath.length) &&\r\n                activeIdPath.every(function (id, index) {\r\n                    return selectedIdPath[index] === id;\r\n                });\r\n\r\n        if (this.onSelectionPath) {\r\n            if (activeIdPath.length === selectedIdPath.length) {\r\n                this.li.find('.tree-item').eq(0).addClass('selected');\r\n            } else {\r\n                // Expand to reveal the selection\r\n                this.toggleView.value(true);\r\n                this.subtreeView.value(domainObject);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {HTMLElement[]}\r\n     */\r\n    TreeNodeView.prototype.elements = function () {\r\n        return this.li;\r\n    };\r\n\r\n\r\n    return TreeNodeView;\r\n});\r\n\n","\ndefine('text!platform/commonUI/general/res/templates/tree/wait-node.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<li class=\\'tree-item t-wait-node loading\\'>\\r\\n    <span class=\"t-title-label\">Loading...</span>\\r\\n</li>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/src/ui/TreeView',[\r\n    'zepto',\r\n    './TreeNodeView',\r\n    'text!../../res/templates/tree/wait-node.html'\r\n], function ($, TreeNodeView, spinnerTemplate) {\r\n\r\n    function TreeView(gestureService, selectFn) {\r\n        this.ul = $('<ul class=\"tree\"></ul>');\r\n        this.nodeViews = [];\r\n        this.callbacks = [];\r\n        this.selectFn = selectFn || this.value.bind(this);\r\n        this.gestureService = gestureService;\r\n        this.pending = false;\r\n    }\r\n\r\n    TreeView.prototype.newTreeView = function () {\r\n        return new TreeView(this.gestureService, this.selectFn);\r\n    };\r\n\r\n    TreeView.prototype.setSize = function (sz) {\r\n        var nodeView;\r\n\r\n        while (this.nodeViews.length < sz) {\r\n            nodeView = new TreeNodeView(\r\n                this.gestureService,\r\n                this.newTreeView.bind(this),\r\n                this.selectFn\r\n            );\r\n            this.nodeViews.push(nodeView);\r\n            this.ul.append($(nodeView.elements()));\r\n        }\r\n\r\n        while (this.nodeViews.length > sz) {\r\n            nodeView = this.nodeViews.pop();\r\n            $(nodeView.elements()).remove();\r\n        }\r\n    };\r\n\r\n    TreeView.prototype.loadComposition = function () {\r\n        var self = this,\r\n            domainObject = this.activeObject;\r\n\r\n        function addNode(domainObj, index) {\r\n            self.nodeViews[index].model(domainObj);\r\n        }\r\n\r\n        function addNodes(domainObjects) {\r\n            if (self.pending) {\r\n                self.pending = false;\r\n                self.nodeViews = [];\r\n                self.ul.empty();\r\n            }\r\n\r\n            if (domainObject === self.activeObject) {\r\n                self.setSize(domainObjects.length);\r\n                domainObjects.forEach(addNode);\r\n                self.updateNodeViewSelection();\r\n            }\r\n        }\r\n\r\n        domainObject.useCapability('composition')\r\n            .then(addNodes);\r\n    };\r\n\r\n    TreeView.prototype.model = function (domainObject) {\r\n        if (this.unlisten) {\r\n            this.unlisten();\r\n        }\r\n\r\n        this.activeObject = domainObject;\r\n        this.ul.empty();\r\n\r\n        if (domainObject && domainObject.hasCapability('composition')) {\r\n            this.pending = true;\r\n            this.ul.append($(spinnerTemplate));\r\n            this.unlisten = domainObject.getCapability('mutation')\r\n                .listen(this.loadComposition.bind(this));\r\n            this.loadComposition(domainObject);\r\n        } else {\r\n            this.setSize(0);\r\n        }\r\n    };\r\n\r\n    TreeView.prototype.updateNodeViewSelection = function () {\r\n        this.nodeViews.forEach(function (nodeView) {\r\n            nodeView.value(this.selectedObject);\r\n        }.bind(this));\r\n    };\r\n\r\n    TreeView.prototype.value = function (domainObject) {\r\n        this.selectedObject = domainObject;\r\n        this.updateNodeViewSelection();\r\n        this.callbacks.forEach(function (callback) {\r\n            callback(domainObject);\r\n        });\r\n    };\r\n\r\n    TreeView.prototype.observe = function (callback) {\r\n        this.callbacks.push(callback);\r\n        return function () {\r\n            this.callbacks = this.callbacks.filter(function (c) {\r\n                return c !== callback;\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {HTMLElement[]}\r\n     */\r\n    TreeView.prototype.elements = function () {\r\n        return this.ul;\r\n    };\r\n\r\n\r\n    return TreeView;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/src/directives/MCTTree',[\r\n    'angular',\r\n    '../ui/TreeView'\r\n], function (angular, TreeView) {\r\n    function MCTTree(gestureService) {\r\n        function link(scope, element) {\r\n            var treeView = new TreeView(gestureService),\r\n                unobserve = treeView.observe(function (domainObject) {\r\n                    scope.mctModel = domainObject;\r\n                    scope.$apply();\r\n                });\r\n\r\n            element.append(angular.element(treeView.elements()));\r\n\r\n            scope.$watch('mctModel', treeView.value.bind(treeView));\r\n            scope.$watch('mctObject', treeView.model.bind(treeView));\r\n            scope.$on('$destroy', unobserve);\r\n        }\r\n\r\n        return {\r\n            restrict: \"E\",\r\n            link: link,\r\n            scope: { mctObject: \"=\", mctModel: \"=\" }\r\n        };\r\n    }\r\n\r\n    return MCTTree;\r\n});\r\n\n","\ndefine('text!platform/commonUI/general/res/templates/bottombar.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'abs bottom-bar ue-bottom-bar mobile-disable-select\\' ng-controller=\"BottomBarController as bar\">\\r\\n    <div id=\\'status\\' class=\\'status-holder\\'>\\r\\n        <mct-include ng-repeat=\"indicator in bar.getIndicators()\"\\r\\n                     ng-model=\"indicator.ngModel\"\\r\\n                     key=\"indicator.template\"\\r\\n                     class=\"status-block-holder\"\\r\\n                     ng-class=\\'indicator.ngModel.getGlyphClass()\\'>\\r\\n        </mct-include>\\r\\n    </div>\\r\\n    <mct-include key=\"\\'message-banner\\'\"></mct-include>\\r\\n    <mct-include key=\"\\'about-logo\\'\"></mct-include>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/action-button.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<a class=\"s-button key-{{parameters.action.getMetadata().key}} {{parameters.action.getMetadata().cssclass}}\"\\r\\n   ng-class=\"{ labeled: parameters.labeled }\"\\r\\n   title=\"{{parameters.action.getMetadata().description}}\"\\r\\n   ng-click=\"parameters.action.perform()\">\\r\\n    <span class=\"title-label\" ng-if=\"parameters.labeled\">\\r\\n        {{parameters.action.getMetadata().name}}\\r\\n    </span>\\r\\n</a>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/input-filter.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<!-- look at action-button for example -->\\r\\n<span class=\"t-filter l-filter s-filter\"\\r\\n      ng-controller=\"GetterSetterController\">\\r\\n\\t<input type=\"search\"\\r\\n           class=\"t-filter-input\"\\r\\n           ng-model=\"getterSetter.value\"/>\\r\\n\\t<a class=\"clear-icon icon-x-in-circle\"\\r\\n       ng-class=\"{show: !(getterSetter.value === \\'\\' || getterSetter.value === undefined)}\"\\r\\n       ng-click=\"getterSetter.value = \\'\\'\">\\r\\n    </a>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/indicator.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<!-- DO NOT ADD SPACES BETWEEN THE SPANS - IT ADDS WHITE SPACE!! -->\\r\\n<div class=\\'status block\\'\\r\\n\\t title=\"{{ngModel.getDescription()}}\"\\r\\n\\t ng-click=\\'ngModel.configure()\\'\\r\\n\\t ng-show=\"ngModel.getText().length > 0\">\\r\\n\\t<span class=\"status-indicator {{ngModel.getCssClass()}}\"></span><span class=\"label\"\\r\\n\\t\\t  ng-class=\\'ngModel.getTextClass()\\'>\\r\\n\\t\\t{{ngModel.getText()}}\\r\\n        <a class=\"s-button icon-gear\" ng-if=\"ngModel.configure\"></a>\\r\\n\\t</span><span class=\"count\">\\r\\n\\t</span>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/message-banner.html',[],function () { return '<div ng-controller=\"BannerController\" ng-show=\"active.notification\"\\r\\n     class=\"l-message-banner s-message-banner {{active.notification.model.severity}}\" ng-class=\"{\\r\\n     \\'minimized\\': active.notification.model.minimized,\\r\\n     \\'new\\': !active.notification.model.minimized}\"\\r\\n     ng-click=\"maximize(active.notification)\">\\r\\n    <span class=\"banner-elem label\">\\r\\n        {{active.notification.model.title}}\\r\\n    </span>\\r\\n    <span ng-show=\"active.notification.model.progress !== undefined || active.notification.model.unknownProgress\">\\r\\n        <mct-include key=\"\\'progress-bar\\'\" class=\"banner-elem\"\\r\\n                     ng-model=\"active.notification.model\">\\r\\n        </mct-include>\\r\\n    </span>\\r\\n    <a ng-hide=\"active.notification.model.primaryOption === undefined\"\\r\\n       class=\"banner-elem l-action s-action\"\\r\\n       ng-click=\"action(active.notification.model.primaryOption.callback, $event)\">\\r\\n        {{active.notification.model.primaryOption.label}}\\r\\n    </a>\\r\\n    <a class=\"banner-elem close icon-x\" ng-click=\"dismiss(active.notification, $event)\"></a>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/progress-bar.html',[],function () { return '<span class=\"l-progress-bar s-progress-bar\"\\r\\n      ng-class=\"{ indeterminate:ngModel.unknownProgress }\">\\r\\n    <span class=\"progress-amt-holder\">\\r\\n        <span class=\"progress-amt\" style=\"width: {{ngModel.progress}}%\"></span>\\r\\n    </span>\\r\\n</span>\\r\\n<div class=\"progress-info hint\" ng-hide=\"ngModel.progressText === undefined\">\\r\\n    <span class=\"progress-amt-text\" ng-show=\"ngModel.progress > 0\">{{ngModel.progress}}% complete. </span>\\r\\n    {{ngModel.progressText}}\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/time-controller.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"TimeRangeController as trCtrl\" class=\"l-flex-col\">\\r\\n    <form class=\"l-time-range-inputs-holder l-flex-row flex-elem\"\\r\\n          ng-submit=\"trCtrl.updateBoundsFromForm()\">\\r\\n        <span class=\"l-time-range-inputs-elem flex-elem icon-clock\"></span>\\r\\n        <span class=\"l-time-range-inputs-elem t-inputs-w l-flex-row flex-elem\">\\r\\n            <span class=\"l-time-range-input-w flex-elem\">\\r\\n                <mct-control key=\"\\'datetime-field\\'\"\\r\\n                             structure=\"{\\r\\n                                 format: parameters.format,\\r\\n                                 validate: trCtrl.validateStart\\r\\n                             }\"\\r\\n                             ng-model=\"formModel\"\\r\\n                             ng-blur=\"trCtrl.updateBoundsFromForm()\"\\r\\n                             field=\"\\'start\\'\"\\r\\n                             class=\"time-range-start\">\\r\\n                </mct-control>\\r\\n            </span>\\r\\n\\r\\n            <span class=\"l-time-range-inputs-elem lbl flex-elem\">to</span>\\r\\n\\r\\n            <span class=\"l-time-range-input-w flex-elem\" ng-controller=\"ToggleController as t2\">\\r\\n                <mct-control key=\"\\'datetime-field\\'\"\\r\\n                             structure=\"{\\r\\n                                 format: parameters.format,\\r\\n                                 validate: trCtrl.validateEnd\\r\\n                             }\"\\r\\n                             ng-model=\"formModel\"\\r\\n                             ng-blur=\"trCtrl.updateBoundsFromForm()\"\\r\\n                             field=\"\\'end\\'\"\\r\\n                             class=\"time-range-end\">\\r\\n                </mct-control>\\r\\n            </span>\\r\\n        </span>\\r\\n        <input type=\"submit\" class=\"hidden\">\\r\\n    </form>\\r\\n\\r\\n    <div class=\"l-time-range-slider-holder flex-elem\">\\r\\n        <div class=\"l-time-range-slider\">\\r\\n            <div class=\"slider\"\\r\\n                 mct-resize=\"spanWidth = bounds.width\">\\r\\n                <div class=\"knob knob-l\"\\r\\n                     mct-drag-down=\"trCtrl.startLeftDrag()\"\\r\\n                     mct-drag=\"trCtrl.leftDrag(delta[0])\"\\r\\n                     ng-style=\"{ left: startInnerPct }\">\\r\\n                    <div class=\"range-value\">{{startInnerText}}</div>\\r\\n                </div>\\r\\n                <div class=\"knob knob-r\"\\r\\n                     mct-drag-down=\"trCtrl.startRightDrag()\"\\r\\n                     mct-drag=\"trCtrl.rightDrag(delta[0])\"\\r\\n                     ng-style=\"{ right: endInnerPct }\">\\r\\n                    <div class=\"range-value\">{{endInnerText}}</div>\\r\\n                </div>\\r\\n                <div class=\"slot range-holder\">\\r\\n                    <div class=\"range\"\\r\\n                         mct-drag-down=\"trCtrl.startMiddleDrag()\"\\r\\n                         mct-drag=\"trCtrl.middleDrag(delta[0])\"\\r\\n                         ng-style=\"{\\r\\n                             left: startInnerPct,\\r\\n                             right: endInnerPct\\r\\n                         }\">\\r\\n                        <div class=\"toi-line\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\"l-time-range-ticks-holder flex-elem\">\\r\\n        <div class=\"l-time-range-ticks\">\\r\\n            <div\\r\\n                ng-repeat=\"tick in ticks track by $index\"\\r\\n                ng-style=\"{ left: $index * (100 / (ticks.length - 1)) + \\'%\\' }\"\\r\\n                class=\"tick tick-x\"\\r\\n                >\\r\\n                <span class=\"l-time-range-tick-label\">{{tick}}</span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/containers/accordion.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div\\r\\n    class=\"accordion-head\"\\r\\n    ng-click=\"toggle.toggle()\"\\r\\n    ng-class=\"{ expanded:!toggle.isActive() }\"\\r\\n    >\\r\\n    {{container.label}}\\r\\n</div>\\r\\n<div\\r\\n    class=\"accordion-contents\"\\r\\n    ng-show=\"!toggle.isActive()\"\\r\\n    ng-transclude\\r\\n    >\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/subtree.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<mct-tree mct-object=\"domainObject\" mct-model=\"ngModel.selectedObject\">\\r\\n</mct-tree>\\r\\n\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/tree.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<ul class=\"tree\">\\r\\n    <li>\\r\\n        <mct-representation key=\"\\'tree-node\\'\"\\r\\n                            mct-object=\"domainObject\"\\r\\n                            ng-model=\"ngModel\"\\r\\n                            parameters=\"parameters\">\\r\\n        </mct-representation>\\r\\n    </li>\\r\\n</ul>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/tree-node.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"ToggleController as toggle\">\\r\\n    <span ng-controller=\"TreeNodeController as treeNode\">\\r\\n        <span\\r\\n            class=\"tree-item menus-to-left\"\\r\\n            ng-class=\"{selected: treeNode.isSelected()}\"\\r\\n            >\\r\\n            <span\\r\\n                class=\\'ui-symbol view-control flex-elem\\'\\r\\n                ng-class=\"{ \\'has-children\\': model.composition !== undefined, expanded: toggle.isActive() }\"\\r\\n                ng-click=\"toggle.toggle(); treeNode.trackExpansion()\"\\r\\n                >\\r\\n            </span>\\r\\n            <mct-representation\\r\\n                class=\"rep-object-label\"\\r\\n                key=\"\\'label\\'\"\\r\\n                mct-object=\"domainObject\"\\r\\n                parameters=\"{suppressMenuOnEdit: true}\"\\r\\n                ng-click=\"treeNode.select()\"\\r\\n                >\\r\\n            </mct-representation>\\r\\n        </span>\\r\\n        <span\\r\\n            class=\"tree-item-subtree\"\\r\\n            ng-show=\"toggle.isActive()\"\\r\\n            ng-if=\"model.composition !== undefined\"\\r\\n            >\\r\\n\\r\\n            <mct-representation key=\"\\'subtree\\'\"\\r\\n                                ng-model=\"ngModel\"\\r\\n                                parameters=\"parameters\"\\r\\n                                mct-object=\"treeNode.hasBeenExpanded() && domainObject\">\\r\\n            </mct-representation>\\r\\n\\r\\n        </span>\\r\\n    </span>\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/label.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"t-object-label l-flex-row flex-elem grows\">\\r\\n    <div class=\"t-item-icon flex-elem {{type.getCssClass()}}\" ng-class=\"{ \\'l-icon-link\\':location.isLink() }\"></div>\\r\\n    <div class=\\'t-title-label flex-elem grows\\'>{{model.name}}</div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/action-group.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"ActionGroupController\">\\r\\n    <span ng-repeat=\"action in ungrouped\">\\r\\n        <mct-include key=\"\\'action-button\\'\" parameters=\"{ action: action }\"></mct-include>\\r\\n    </span>\\r\\n    <span class=\"l-btn-set\" ng-repeat=\"group in groups\">\\r\\n        <span ng-repeat=\"action in group\">\\r\\n            <mct-include key=\"\\'action-button\\'\"\\r\\n                         parameters=\"{ action: action }\"\\r\\n                         ng-class=\"{ first:$index == 0, last:$index == group.length - 1 }\"\\r\\n\\t            >\\r\\n            </mct-include>\\r\\n        </span>\\r\\n    </span>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/menu/context-menu.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"menu-element context-menu-wrapper mobile-disable-select\" ng-controller=\"ContextMenuController\">\\r\\n    <div class=\"menu context-menu\">\\r\\n        <ul>\\r\\n            <li ng-repeat=\"menuAction in menuActions\"\\r\\n                ng-click=\"menuAction.perform()\"\\r\\n                title=\"{{menuAction.getMetadata().description}}\"\\r\\n                class=\"{{menuAction.getMetadata().cssclass}}\">\\r\\n                {{menuAction.getMetadata().name}}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/switcher.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"ViewSwitcherController\">\\r\\n    <div class=\"view-switcher menu-element s-menu-button {{ngModel.selected.cssclass}}\"\\r\\n\\t    ng-if=\"view.length > 1\"\\r\\n\\t    ng-controller=\"ClickAwayController as toggle\">\\r\\n\\r\\n        <span class=\"l-click-area\"\\r\\n\\t        ng-click=\"toggle.toggle()\"\\r\\n\\t        title=\"{{ngModel.selected.name}}\"></span>\\r\\n        <span class=\"title-label\">{{ngModel.selected.name}}</span>\\r\\n\\r\\n        <div class=\"menu\" ng-show=\"toggle.isActive()\">\\r\\n            <ul>\\r\\n                <li ng-repeat=\"option in view\"\\r\\n                    ng-click=\"ngModel.selected = option; toggle.setState(false)\"\\r\\n                    class=\"{{option.cssclass}}\">\\r\\n                    {{option.name}}\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</span>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/object-inspector.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span class=\"l-inspect\">\\r\\n    <div ng-controller=\"PaneController\">\\r\\n        <mct-split-pane class=\\'abs contents split-layout\\' anchor=\\'bottom\\'>\\r\\n            <div class=\"split-pane-component pane top\">\\r\\n                <div class=\"abs holder holder-inspector l-flex-col\">\\r\\n                    <div class=\"pane-header flex-elem\">Inspection</div>\\r\\n                    <mct-representation\\r\\n                            key=\"\\'inspector-region\\'\"\\r\\n                            mct-object=\"domainObject\"\\r\\n                            ng-model=\"ngModel\"\\r\\n                            class=\"flex-elem grows vscroll l-flex-col\">\\r\\n                    </mct-representation>\\r\\n                </div>\\r\\n            </div>\\r\\n            <mct-splitter class=\"splitter-inspect-panel mobile-hide\"></mct-splitter>\\r\\n            <div class=\"split-pane-component pane bottom\">\\r\\n                <div class=\"abs holder holder-elements l-flex-col\">\\r\\n                    <em class=\"flex-elem t-inspector-part-header\">Elements</em>\\r\\n                    <mct-representation\\r\\n                            key=\"\\'edit-elements\\'\"\\r\\n                            mct-object=\"domainObject\"\\r\\n                            class=\"flex-elem l-flex-col holder grows current-elements\">\\r\\n                    </mct-representation>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mct-split-pane>\\r\\n    </div>\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/selector.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'form-control complex channel-selector cols cols-32\\'\\r\\n     ng-controller=\"SelectorController as selector\">\\r\\n    <div class=\\'col col-15\\'>\\r\\n        <div class=\\'line field-hints\\'>Available</div>\\r\\n        <!--div id=\\'_form_filter\\' class=\\'line filter\\'>\\r\\n            <input type=\\'text\\' class=\\'control filter\\' name=\\'filter-available\\' />\\r\\n            <a class=\\'icon ui-symbol t-available-trigger\\'\\r\\n               href=\\'\\'\\r\\n               title=\"Filter is case sensitive\">M</a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\"line\">\\r\\n            Showing {{shown}} of {{count}} available options.\\r\\n        </div -->\\r\\n\\r\\n        <div class=\\'line treeview\\' name=\\'available\\'>\\r\\n            <mct-representation key=\"\\'tree\\'\"\\r\\n                                mct-object=\"selector.root()\"\\r\\n                                ng-model=\"selector.treeModel\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\'col col-2\\'>\\r\\n        <div class=\\'btn-holder valign-mid btns-add-remove\\'>\\r\\n            <a class=\\'s-button major\\'\\r\\n               ng-click=\"selector.select(selector.treeModel.selectedObject)\">\\r\\n                <span class=\\'ui-symbol\\'>&gt;</span>\\r\\n            </a>\\r\\n            <a class=\\'s-button major\\'\\r\\n               ng-click=\"selector.deselect(selector.listModel.selectedObject)\">\\r\\n                <span class=\\'ui-symbol\\'>&lt;</span>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\'col col-15\\'>\\r\\n        <div class=\\'line field-hints\\'>Selected</div>\\r\\n        <!-- div id=\\'_form_filter\\' class=\\'line filter\\'>\\r\\n            <input type=\\'text\\' class=\\'control filter\\' name=\\'filter-selected\\' />\\r\\n            <a class=\\'icon ui-symbol t-selected-trigger\\'\\r\\n               href=\\'\\'\\r\\n               title=\"Filter is case sensitive\">\\r\\n                M\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\"line\">\\r\\n            Showing {{shown}} of {{count}} available options.\\r\\n        </div -->\\r\\n\\r\\n        <div class=\\'line treeview l-tree-item-flat-list\\' name=\\'selected\\'>\\r\\n            <ul class=\"tree\">\\r\\n                <li ng-repeat=\"selectedObject in selector.selected()\">\\r\\n\\t                <span\\r\\n\\t\\t                class=\"tree-item\"\\r\\n\\t\\t                ng-class=\"{selected: selector.listModel.selectedObject === selectedObject }\"\\r\\n\\t\\t                >\\r\\n                    <mct-representation\\r\\n\\t                    key=\"\\'label\\'\"\\r\\n\\t                    mct-object=\"selectedObject\"\\r\\n\\t                    ng-click=\"selector.listModel.selectedObject = selectedObject\"\\r\\n\\t                    >\\r\\n                    </mct-representation>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/datetime-picker.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n\\r\\n<div ng-controller=\"DateTimePickerController\" class=\"l-datetime-picker s-datetime-picker s-menu\">\\r\\n\\t<div class=\"holder\">\\r\\n\\t\\t<div class=\"l-month-year-pager\">\\r\\n\\t\\t\\t<a class=\"pager prev\" ng-click=\"changeMonth(-1)\"></a>\\r\\n\\t\\t\\t<span class=\"val\">{{month}} {{year}}</span>\\r\\n\\t\\t\\t<a class=\"pager next\" ng-click=\"changeMonth(1)\"></a>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"l-calendar\">\\r\\n\\t\\t\\t<ul class=\"l-cal-row l-header\">\\r\\n\\t\\t\\t\\t<li ng-repeat=\"day in [\\'Su\\',\\'Mo\\',\\'Tu\\',\\'We\\',\\'Th\\',\\'Fr\\',\\'Sa\\']\">{{day}}</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t\\t<ul class=\"l-cal-row l-body\" ng-repeat=\"row in table\">\\r\\n\\t\\t\\t\\t<li ng-repeat=\"cell in row\"\\r\\n\\t\\t\\t\\t\\tng-click=\"select(cell)\"\\r\\n\\t\\t\\t\\t\\tng-class=\\'{ \"in-month\": isInCurrentMonth(cell), selected: isSelected(cell) }\\'>\\r\\n\\t\\t\\t\\t\\t<div class=\"prime\">{{cell.day}}</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"sub\">{{cell.dayOfYear}}</div>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"l-time-selects complex datetime\"\\r\\n\\t\\t\\tng-show=\"options\">\\r\\n\\t\\t<div class=\"field-hints\">\\r\\n\\t\\t\\t<span class=\"hint time md\"\\r\\n\\t\\t\\t\\t  ng-repeat=\"key in [\\'hours\\', \\'minutes\\', \\'seconds\\']\"\\r\\n\\t\\t\\t\\t  ng-if=\"options[key]\">\\r\\n\\t\\t\\t\\t{{nameFor(key)}}\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<span class=\"field control time md\"\\r\\n\\t\\t\\t\\t  ng-repeat=\"key in [\\'hours\\', \\'minutes\\', \\'seconds\\']\"\\r\\n\\t\\t\\t\\t  ng-if=\"options[key]\">\\r\\n\\t\\t\\t\\t<div class=\\'form-control select\\'>\\r\\n\\t\\t\\t\\t\\t<select size=\"1\"\\r\\n\\t\\t\\t\\t\\t\\t\\tng-model=\"time[key]\"\\r\\n\\t\\t\\t\\t\\t\\t\\tng-options=\"i for i in optionsFor(key)\">\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/general/res/templates/controls/datetime-field.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"DateTimeFieldController\">\\r\\n    <input type=\"text\"\\r\\n           ng-model=\"textValue\"\\r\\n           ng-blur=\"restoreTextValue(); ngBlur()\"\\r\\n           ng-class=\"{\\r\\n                        error: textInvalid ||\\r\\n                            (structure.validate &&\\r\\n                                !structure.validate(ngModel[field])),\\r\\n                        \\'picker-icon\\': structure.format === \\'utc\\' || !structure.format\\r\\n                     }\">\\r\\n    </input>\\r\\n    <a class=\"ui-symbol icon icon-calendar\"\\r\\n       ng-if=\"!picker.active && (structure.format === \\'utc\\' || !structure.format)\"\\r\\n       ng-click=\"picker.active = !picker.active\"></a>\\r\\n    <!-- If picker active show icon with no onclick to prevent double registration of clicks -->\\r\\n    <a class=\"ui-symbol icon icon-calendar\" ng-if=\"picker.active\"></a>\\r\\n    <mct-popup ng-if=\"picker.active\">\\r\\n        <div mct-click-elsewhere=\"picker.active = false\">\\r\\n            <mct-control key=\"\\'datetime-picker\\'\"\\r\\n                         ng-model=\"pickerModel\"\\r\\n                         field=\"\\'value\\'\">\\r\\n            </mct-control>\\r\\n        </div>\\r\\n    </mct-popup>\\r\\n</span>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/general/bundle',[\r\n    \"./src/services/UrlService\",\r\n    \"./src/services/PopupService\",\r\n    \"./src/SplashScreenManager\",\r\n    \"./src/StyleSheetLoader\",\r\n    \"./src/controllers/TimeRangeController\",\r\n    \"./src/controllers/DateTimePickerController\",\r\n    \"./src/controllers/DateTimeFieldController\",\r\n    \"./src/controllers/TreeNodeController\",\r\n    \"./src/controllers/ActionGroupController\",\r\n    \"./src/controllers/ToggleController\",\r\n    \"./src/controllers/ContextMenuController\",\r\n    \"./src/controllers/ClickAwayController\",\r\n    \"./src/controllers/ViewSwitcherController\",\r\n    \"./src/controllers/BottomBarController\",\r\n    \"./src/controllers/GetterSetterController\",\r\n    \"./src/controllers/SelectorController\",\r\n    \"./src/controllers/ObjectInspectorController\",\r\n    \"./src/controllers/BannerController\",\r\n    \"./src/directives/MCTContainer\",\r\n    \"./src/directives/MCTDrag\",\r\n    \"./src/directives/MCTClickElsewhere\",\r\n    \"./src/directives/MCTResize\",\r\n    \"./src/directives/MCTPopup\",\r\n    \"./src/directives/MCTScroll\",\r\n    \"./src/directives/MCTSplitPane\",\r\n    \"./src/directives/MCTSplitter\",\r\n    \"./src/directives/MCTTree\",\r\n    \"text!./res/templates/bottombar.html\",\r\n    \"text!./res/templates/controls/action-button.html\",\r\n    \"text!./res/templates/controls/input-filter.html\",\r\n    \"text!./res/templates/indicator.html\",\r\n    \"text!./res/templates/message-banner.html\",\r\n    \"text!./res/templates/progress-bar.html\",\r\n    \"text!./res/templates/controls/time-controller.html\",\r\n    \"text!./res/templates/containers/accordion.html\",\r\n    \"text!./res/templates/subtree.html\",\r\n    \"text!./res/templates/tree.html\",\r\n    \"text!./res/templates/tree-node.html\",\r\n    \"text!./res/templates/label.html\",\r\n    \"text!./res/templates/controls/action-group.html\",\r\n    \"text!./res/templates/menu/context-menu.html\",\r\n    \"text!./res/templates/controls/switcher.html\",\r\n    \"text!./res/templates/object-inspector.html\",\r\n    \"text!./res/templates/controls/selector.html\",\r\n    \"text!./res/templates/controls/datetime-picker.html\",\r\n    \"text!./res/templates/controls/datetime-field.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    UrlService,\r\n    PopupService,\r\n    SplashScreenManager,\r\n    StyleSheetLoader,\r\n    TimeRangeController,\r\n    DateTimePickerController,\r\n    DateTimeFieldController,\r\n    TreeNodeController,\r\n    ActionGroupController,\r\n    ToggleController,\r\n    ContextMenuController,\r\n    ClickAwayController,\r\n    ViewSwitcherController,\r\n    BottomBarController,\r\n    GetterSetterController,\r\n    SelectorController,\r\n    ObjectInspectorController,\r\n    BannerController,\r\n    MCTContainer,\r\n    MCTDrag,\r\n    MCTClickElsewhere,\r\n    MCTResize,\r\n    MCTPopup,\r\n    MCTScroll,\r\n    MCTSplitPane,\r\n    MCTSplitter,\r\n    MCTTree,\r\n    bottombarTemplate,\r\n    actionButtonTemplate,\r\n    inputFilterTemplate,\r\n    indicatorTemplate,\r\n    messageBannerTemplate,\r\n    progressBarTemplate,\r\n    timeControllerTemplate,\r\n    accordionTemplate,\r\n    subtreeTemplate,\r\n    treeTemplate,\r\n    treeNodeTemplate,\r\n    labelTemplate,\r\n    actionGroupTemplate,\r\n    contextMenuTemplate,\r\n    switcherTemplate,\r\n    objectInspectorTemplate,\r\n    selectorTemplate,\r\n    datetimePickerTemplate,\r\n    datetimeFieldTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/general\", {\r\n        \"name\": \"General UI elements\",\r\n        \"description\": \"General UI elements, meant to be reused across modes\",\r\n        \"resources\": \"res\",\r\n        \"extensions\": {\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"urlService\",\r\n                    \"implementation\": UrlService,\r\n                    \"depends\": [\r\n                        \"$location\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"popupService\",\r\n                    \"implementation\": PopupService,\r\n                    \"depends\": [\r\n                        \"$document\",\r\n                        \"$window\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"runs\": [\r\n                {\r\n                    \"implementation\": StyleSheetLoader,\r\n                    \"depends\": [\r\n                        \"stylesheets[]\",\r\n                        \"$document\",\r\n                        \"THEME\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"implementation\": SplashScreenManager,\r\n                    \"depends\": [\r\n                        \"$document\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"filters\": [\r\n                {\r\n                    \"implementation\": \"filters/ReverseFilter.js\",\r\n                    \"key\": \"reverse\"\r\n                }\r\n            ],\r\n            \"stylesheets\": [\r\n                {\r\n                    \"stylesheetUrl\": \"css/normalize.min.css\",\r\n                    \"priority\": \"mandatory\"\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"bottombar\",\r\n                    \"template\": bottombarTemplate\r\n                },\r\n                {\r\n                    \"key\": \"action-button\",\r\n                    \"template\": actionButtonTemplate\r\n                },\r\n                {\r\n                    \"key\": \"input-filter\",\r\n                    \"template\": inputFilterTemplate\r\n                },\r\n                {\r\n                    \"key\": \"indicator\",\r\n                    \"template\": indicatorTemplate\r\n                },\r\n                {\r\n                    \"key\": \"message-banner\",\r\n                    \"template\": messageBannerTemplate\r\n                },\r\n                {\r\n                    \"key\": \"progress-bar\",\r\n                    \"template\": progressBarTemplate\r\n                },\r\n                {\r\n                    \"key\": \"time-controller\",\r\n                    \"template\": timeControllerTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"TimeRangeController\",\r\n                    \"implementation\": TimeRangeController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$timeout\",\r\n                        \"formatService\",\r\n                        \"DEFAULT_TIME_FORMAT\",\r\n                        \"now\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"DateTimePickerController\",\r\n                    \"implementation\": DateTimePickerController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"now\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"DateTimeFieldController\",\r\n                    \"implementation\": DateTimeFieldController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"formatService\",\r\n                        \"DEFAULT_TIME_FORMAT\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"TreeNodeController\",\r\n                    \"implementation\": TreeNodeController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$timeout\",\r\n                        \"navigationService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ActionGroupController\",\r\n                    \"implementation\": ActionGroupController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ToggleController\",\r\n                    \"implementation\": ToggleController\r\n                },\r\n                {\r\n                    \"key\": \"ContextMenuController\",\r\n                    \"implementation\": ContextMenuController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ClickAwayController\",\r\n                    \"implementation\": ClickAwayController,\r\n                    \"depends\": [\r\n                        \"$document\",\r\n                        \"$timeout\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ViewSwitcherController\",\r\n                    \"implementation\": ViewSwitcherController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$timeout\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"BottomBarController\",\r\n                    \"implementation\": BottomBarController,\r\n                    \"depends\": [\r\n                        \"indicators[]\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"GetterSetterController\",\r\n                    \"implementation\": GetterSetterController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"SelectorController\",\r\n                    \"implementation\": SelectorController,\r\n                    \"depends\": [\r\n                        \"objectService\",\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ObjectInspectorController\",\r\n                    \"implementation\": ObjectInspectorController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"objectService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"BannerController\",\r\n                    \"implementation\": BannerController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"notificationService\",\r\n                        \"dialogService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctContainer\",\r\n                    \"implementation\": MCTContainer,\r\n                    \"depends\": [\r\n                        \"containers[]\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctDrag\",\r\n                    \"implementation\": MCTDrag,\r\n                    \"depends\": [\r\n                        \"$document\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctClickElsewhere\",\r\n                    \"implementation\": MCTClickElsewhere,\r\n                    \"depends\": [\r\n                        \"$document\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctResize\",\r\n                    \"implementation\": MCTResize,\r\n                    \"depends\": [\r\n                        \"$timeout\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctPopup\",\r\n                    \"implementation\": MCTPopup,\r\n                    \"depends\": [\r\n                        \"$compile\",\r\n                        \"popupService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctScrollX\",\r\n                    \"implementation\": MCTScroll,\r\n                    \"depends\": [\r\n                        \"$parse\",\r\n                        \"MCT_SCROLL_X_PROPERTY\",\r\n                        \"MCT_SCROLL_X_ATTRIBUTE\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctScrollY\",\r\n                    \"implementation\": MCTScroll,\r\n                    \"depends\": [\r\n                        \"$parse\",\r\n                        \"MCT_SCROLL_Y_PROPERTY\",\r\n                        \"MCT_SCROLL_Y_ATTRIBUTE\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctSplitPane\",\r\n                    \"implementation\": MCTSplitPane,\r\n                    \"depends\": [\r\n                        \"$parse\",\r\n                        \"$log\",\r\n                        \"$interval\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctSplitter\",\r\n                    \"implementation\": MCTSplitter\r\n                },\r\n                {\r\n                    \"key\": \"mctTree\",\r\n                    \"implementation\": MCTTree,\r\n                    \"depends\": ['gestureService']\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"MCT_SCROLL_X_PROPERTY\",\r\n                    \"value\": \"scrollLeft\"\r\n                },\r\n                {\r\n                    \"key\": \"MCT_SCROLL_X_ATTRIBUTE\",\r\n                    \"value\": \"mctScrollX\"\r\n                },\r\n                {\r\n                    \"key\": \"MCT_SCROLL_Y_PROPERTY\",\r\n                    \"value\": \"scrollTop\"\r\n                },\r\n                {\r\n                    \"key\": \"MCT_SCROLL_Y_ATTRIBUTE\",\r\n                    \"value\": \"mctScrollY\"\r\n                },\r\n                {\r\n                    \"key\": \"THEME\",\r\n                    \"value\": \"unspecified\",\r\n                    \"priority\": \"fallback\"\r\n                }\r\n            ],\r\n            \"containers\": [\r\n                {\r\n                    \"key\": \"accordion\",\r\n                    \"template\": accordionTemplate,\r\n                    \"attributes\": [\r\n                        \"label\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"tree\",\r\n                    \"template\": subtreeTemplate,\r\n                    \"uses\": [\r\n                        \"composition\"\r\n                    ],\r\n                    \"type\": \"root\",\r\n                    \"priority\": \"preferred\"\r\n                },\r\n                {\r\n                    \"key\": \"tree\",\r\n                    \"template\": treeTemplate\r\n                },\r\n                {\r\n                    \"key\": \"subtree\",\r\n                    \"template\": subtreeTemplate,\r\n                    \"uses\": [\r\n                        \"composition\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"tree-node\",\r\n                    \"template\": treeNodeTemplate,\r\n                    \"uses\": [\r\n                        \"action\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"label\",\r\n                    \"template\": labelTemplate,\r\n                    \"uses\": [\r\n                        \"type\",\r\n                        \"location\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"drag\",\r\n                        \"menu\",\r\n                        \"info\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"node\",\r\n                    \"template\": labelTemplate,\r\n                    \"uses\": [\r\n                        \"type\"\r\n                    ],\r\n                    \"gestures\": [\r\n                        \"drag\",\r\n                        \"menu\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"action-group\",\r\n                    \"template\": actionGroupTemplate,\r\n                    \"uses\": [\r\n                        \"action\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"context-menu\",\r\n                    \"template\": contextMenuTemplate,\r\n                    \"uses\": [\r\n                        \"action\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"switcher\",\r\n                    \"template\": switcherTemplate,\r\n                    \"uses\": [\r\n                        \"view\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"object-inspector\",\r\n                    \"template\": objectInspectorTemplate\r\n                }\r\n            ],\r\n            \"controls\": [\r\n                {\r\n                    \"key\": \"selector\",\r\n                    \"template\": selectorTemplate\r\n                },\r\n                {\r\n                    \"key\": \"datetime-picker\",\r\n                    \"template\": datetimePickerTemplate\r\n                },\r\n                {\r\n                    \"key\": \"datetime-field\",\r\n                    \"template\": datetimeFieldTemplate\r\n                }\r\n            ],\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"Normalize.css\",\r\n                    \"version\": \"1.1.2\",\r\n                    \"description\": \"Browser style normalization\",\r\n                    \"author\": \"Nicolas Gallagher, Jonathan Neal\",\r\n                    \"website\": \"http://necolas.github.io/normalize.css/\",\r\n                    \"copyright\": \"Copyright (c) Nicolas Gallagher and Jonathan Neal\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/necolas/normalize.css/blob/v1.1.2/LICENSE.md\"\r\n                },\r\n                {\r\n                    \"name\": \"Zepto\",\r\n                    \"version\": \"1.1.6\",\r\n                    \"description\": \"DOM manipulation\",\r\n                    \"author\": \"Thomas Fuchs\",\r\n                    \"website\": \"http://zeptojs.com/\",\r\n                    \"copyright\": \"Copyright (c) 2010-2016 Thomas Fuchs\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/madrobby/zepto/blob/master/MIT-LICENSE\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/inspect/src/gestures/InfoGesture',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `info` gesture displays domain object metadata in a\r\n         * bubble on hover.\r\n         *\r\n         * @memberof platform/commonUI/inspect\r\n         * @constructor\r\n         * @implements {Gesture}\r\n         * @param $timeout Angular's `$timeout`\r\n         * @param {InfoService} infoService a service which shows info bubbles\r\n         * @param {number} delay delay, in milliseconds, before bubble appears\r\n         * @param element jqLite-wrapped DOM element\r\n         * @param {DomainObject} domainObject the domain object for which to\r\n         *        show information\r\n         */\r\n        function InfoGesture($timeout, agentService, infoService, delay, element, domainObject) {\r\n            var self = this;\r\n\r\n            // Callback functions to preserve the \"this\" pointer (in the\r\n            // absence of Function.prototype.bind)\r\n            this.showBubbleCallback = function (event) {\r\n                self.showBubble(event);\r\n            };\r\n            this.hideBubbleCallback = function (event) {\r\n                self.hideBubble(event);\r\n            };\r\n            this.trackPositionCallback = function (event) {\r\n                self.trackPosition(event);\r\n            };\r\n\r\n            this.element = element;\r\n            this.$timeout = $timeout;\r\n            this.infoService = infoService;\r\n            this.delay = delay;\r\n            this.domainObject = domainObject;\r\n\r\n            // Checks if you are on a mobile device, if the device is\r\n            // not mobile (agentService.isMobile() = false), then\r\n            // the pendingBubble and therefore hovering is allowed\r\n            if (!agentService.isMobile()) {\r\n                // Show bubble (on a timeout) on mouse over\r\n                element.on('mouseenter', this.showBubbleCallback);\r\n            }\r\n        }\r\n\r\n        InfoGesture.prototype.trackPosition = function (event) {\r\n            // Record mouse position, so bubble can be shown at latest\r\n            // mouse position (not just where the mouse entered)\r\n            this.mousePosition = [event.clientX, event.clientY];\r\n        };\r\n\r\n        InfoGesture.prototype.hideBubble = function () {\r\n            // If a bubble is showing, dismiss it\r\n            if (this.dismissBubble) {\r\n                this.dismissBubble();\r\n                this.element.off('mouseleave', this.hideBubbleCallback);\r\n                this.dismissBubble = undefined;\r\n            }\r\n            // If a bubble will be shown on a timeout, cancel that\r\n            if (this.pendingBubble) {\r\n                this.$timeout.cancel(this.pendingBubble);\r\n                this.element.off('mousemove', this.trackPositionCallback);\r\n                this.element.off('mouseleave', this.hideBubbleCallback);\r\n                this.pendingBubble = undefined;\r\n            }\r\n            // Also clear mouse position so we don't have a ton of tiny\r\n            // arrays allocated while user mouses over things\r\n            this.mousePosition = undefined;\r\n        };\r\n\r\n        InfoGesture.prototype.showBubble = function (event) {\r\n            var self = this;\r\n\r\n            function displayBubble() {\r\n                self.dismissBubble = self.infoService.display(\r\n                    \"info-table\",\r\n                    self.domainObject.getModel().name,\r\n                    self.domainObject.useCapability('metadata'),\r\n                    self.mousePosition\r\n                );\r\n                self.element.off('mousemove', self.trackPositionCallback);\r\n                self.pendingBubble = undefined;\r\n            }\r\n\r\n            this.trackPosition(event);\r\n\r\n            // Do nothing if we're already scheduled to show a bubble.\r\n            // This may happen due to redundant event firings caused\r\n            // by https://github.com/angular/angular.js/issues/12795\r\n            if (this.pendingBubble) {\r\n                return;\r\n            }\r\n\r\n            // Also need to track position during hover\r\n            this.element.on('mousemove', this.trackPositionCallback);\r\n\r\n            // Show the bubble, after a suitable delay (if mouse has\r\n            // left before this time is up, this will be canceled.)\r\n            this.pendingBubble = this.$timeout(displayBubble, this.delay);\r\n\r\n            this.element.on('mouseleave', this.hideBubbleCallback);\r\n        };\r\n\r\n\r\n        /**\r\n         * Detach any event handlers associated with this gesture.\r\n         * @method\r\n         */\r\n        InfoGesture.prototype.destroy = function () {\r\n            // Dismiss any active bubble...\r\n            this.hideBubble();\r\n            // ...and detach listeners\r\n            this.element.off('mouseenter', this.showBubbleCallback);\r\n        };\r\n\r\n        return InfoGesture;\r\n\r\n    }\r\n\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/inspect/src/gestures/InfoButtonGesture',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `info` gesture displays domain object metadata in a\r\n         * bubble on hover.\r\n         *\r\n         * @constructor\r\n         * @param $document Angular's `$document`\r\n         * @param {InfoService} infoService a service which shows info bubbles\r\n         * @param element jqLite-wrapped DOM element\r\n         * @param {DomainObject} domainObject the domain object for which to\r\n         *        show information\r\n         */\r\n        function InfoGestureButton($document, agentService, infoService, element, domainObject) {\r\n            var dismissBubble,\r\n                touchPosition,\r\n                body = $document.find('body');\r\n\r\n            function trackPosition(event) {\r\n                // Record touch position, so bubble can be shown at latest\r\n                // touch position, also offset by 22px to left (accounts for\r\n                // a finger-sized touch on the info button)\r\n                touchPosition = [event.clientX - 22, event.clientY];\r\n            }\r\n\r\n            // Hides the bubble and detaches the\r\n            // body hidebubble listener\r\n            function hideBubble() {\r\n                // If a bubble is showing, dismiss it\r\n                if (dismissBubble) {\r\n                    dismissBubble();\r\n                    dismissBubble = undefined;\r\n                }\r\n\r\n                // Detaches body touch listener\r\n                body.off('touchstart', hideBubble);\r\n            }\r\n\r\n            // Displays the bubble by tracking position of\r\n            // touch, using infoService to display the bubble,\r\n            // and then on any body touch the bubble is dismissed\r\n            function showBubble(event) {\r\n                trackPosition(event);\r\n                event.stopPropagation();\r\n                // Show the bubble, but on any touchstart on the\r\n                // body (anywhere) call hidebubble\r\n                dismissBubble = infoService.display(\r\n                    \"info-table\",\r\n                    domainObject.getModel().name,\r\n                    domainObject.useCapability('metadata'),\r\n                    touchPosition\r\n                );\r\n\r\n                // On any touch on the body, default body touches/events\r\n                // are prevented, the bubble is dismissed, and the touchstart\r\n                // body event is unbound, reallowing gestures\r\n                body.on('touchstart', function (evt) {\r\n                    evt.preventDefault();\r\n                    hideBubble();\r\n                    body.unbind('touchstart');\r\n                });\r\n            }\r\n\r\n            // Checks if you are on a mobile device, if the device is\r\n            // mobile (agentService.isMobile() = true), then\r\n            // the a click on something (info button) brings up\r\n            // the bubble\r\n            if (agentService.isMobile()) {\r\n                element.on('click', showBubble);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Detach any event handlers associated with this gesture.\r\n                 * @memberof InfoGesture\r\n                 * @method\r\n                 */\r\n                destroy: function () {\r\n                    // Dismiss any active bubble...\r\n                    hideBubble();\r\n                    // ...and detach listeners\r\n                    element.off('click', showBubble);\r\n                }\r\n            };\r\n        }\r\n\r\n        return InfoGestureButton;\r\n\r\n    }\r\n\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle provides support for object inspection (specifically, metadata\r\n * show in bubbles on hover.)\r\n * @namespace platform/commonUI/inspect\r\n */\r\n\r\ndefine('platform/commonUI/inspect/src/InfoConstants',{\r\n    BUBBLE_TEMPLATE: \"<mct-container key=\\\"bubble\\\" \" +\r\n                \"bubble-title=\\\"{{bubbleTitle}}\\\" \" +\r\n                \"bubble-layout=\\\"{{bubbleLayout}}\\\" \" +\r\n                \"class=\\\"bubble-container\\\">\" +\r\n                \"<mct-include key=\\\"bubbleTemplate\\\" \" +\r\n                \"ng-model=\\\"bubbleModel\\\">\" +\r\n                \"</mct-include>\" +\r\n                \"</mct-container>\",\r\n    // Options and classes for bubble\r\n    BUBBLE_OPTIONS: {\r\n        offsetX: 0,\r\n        offsetY: -26\r\n    },\r\n    BUBBLE_MOBILE_POSITION: [0, -25],\r\n    // Max width and margins allowed for bubbles;\r\n    // defined in /platform/commonUI/general/res/sass/_constants.scss\r\n    BUBBLE_MARGIN_LR: 10,\r\n    BUBBLE_MAX_WIDTH: 300\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/inspect/src/services/InfoService',['../InfoConstants'],\r\n    function (InfoConstants) {\r\n\r\n        var BUBBLE_TEMPLATE = InfoConstants.BUBBLE_TEMPLATE,\r\n            MOBILE_POSITION = InfoConstants.BUBBLE_MOBILE_POSITION,\r\n            OPTIONS = InfoConstants.BUBBLE_OPTIONS;\r\n\r\n        /**\r\n         * Displays informative content (\"info bubbles\") for the user.\r\n         * @memberof platform/commonUI/inspect\r\n         * @constructor\r\n         */\r\n        function InfoService($compile, $rootScope, popupService, agentService) {\r\n            this.$compile = $compile;\r\n            this.$rootScope = $rootScope;\r\n            this.popupService = popupService;\r\n            this.agentService = agentService;\r\n        }\r\n\r\n        /**\r\n         * Display an info bubble at the specified location.\r\n         * @param {string} templateKey template to place in bubble\r\n         * @param {string} title title for the bubble\r\n         * @param {*} content content to pass to the template, via\r\n         *        `ng-model`\r\n         * @param {number[]} x,y position of the info bubble, in\r\n         *        pixel coordinates.\r\n         * @returns {Function} a function that may be invoked to\r\n         *          dismiss the info bubble\r\n         */\r\n        InfoService.prototype.display = function (templateKey, title, content, position) {\r\n            var $compile = this.$compile,\r\n                $rootScope = this.$rootScope,\r\n                scope = $rootScope.$new(),\r\n                span = $compile('<span></span>')(scope),\r\n                bubbleSpaceLR = InfoConstants.BUBBLE_MARGIN_LR +\r\n                    InfoConstants.BUBBLE_MAX_WIDTH,\r\n                options,\r\n                popup,\r\n                bubble;\r\n\r\n            options = Object.create(OPTIONS);\r\n            options.marginX = -bubbleSpaceLR;\r\n\r\n            // On a phone, bubble takes up more screen real estate,\r\n            // so position it differently (toward the bottom)\r\n            if (this.agentService.isPhone()) {\r\n                position = MOBILE_POSITION;\r\n                options = {};\r\n            }\r\n\r\n            popup = this.popupService.display(span, position, options);\r\n\r\n            // Pass model & container parameters into the scope\r\n            scope.bubbleModel = content;\r\n            scope.bubbleTemplate = templateKey;\r\n            scope.bubbleTitle = title;\r\n            // Style the bubble according to how it was positioned\r\n            scope.bubbleLayout = [\r\n                popup.goesUp() ? 'arw-btm' : 'arw-top',\r\n                popup.goesLeft() ? 'arw-right' : 'arw-left'\r\n            ].join(' ');\r\n\r\n            // Create the info bubble, now that we know how to\r\n            // point the arrow...\r\n            bubble = $compile(BUBBLE_TEMPLATE)(scope);\r\n            span.append(bubble);\r\n\r\n            // Return a function to dismiss the info bubble\r\n            return function dismiss() {\r\n                popup.dismiss();\r\n                scope.$destroy();\r\n            };\r\n        };\r\n\r\n        return InfoService;\r\n    }\r\n);\r\n\r\n\n","\ndefine('text!platform/commonUI/inspect/res/info-table.html',[],function () { return '<table>\\r\\n    <tr ng-repeat=\"property in ngModel\">\\r\\n        <td class=\"label\">{{property.name}}</td>\\r\\n        <td title=\"{{property.value}}\" class=\"value align-{{property.align}}\">\\r\\n            {{property.value}}\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/inspect/res/info-bubble.html',[],function () { return '<mct-container\\r\\n\\tkey=\"bubble\"\\r\\n\\tbubble-title=\"{{parameters.title}}\"\\r\\n\\tbubble-layout=\"{{parameters.layout}}\"\\r\\n\\t>\\r\\n    <mct-include key=\"info-table\"\\r\\n                 ng-model=\"ngModel\">\\r\\n    </mct-include>\\r\\n</mct-container>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/inspect/res/bubble.html',[],function () { return '    <div class=\"t-infobubble s-infobubble l-infobubble-wrapper {{bubble.bubbleLayout}}\">\\r\\n        <div class=\"l-infobubble\">\\r\\n            <div ng-show=\"bubble.bubbleTitle.length > 0\"\\r\\n                 class=\"title\">\\r\\n                {{bubble.bubbleTitle}}\\r\\n            </div>\\r\\n            <span ng-transclude></span>\\r\\n        </div>\\r\\n    </div>\\r\\n';});\n\n","\ndefine('text!platform/commonUI/inspect/res/templates/info-button.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n\\r\\n<!--The icon for the info button appearing in a grid item (list in folder)-->\\r\\n<a class=\\'s-icon-button icon-info\\'></a>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/inspect/bundle',[\r\n    \"./src/gestures/InfoGesture\",\r\n    \"./src/gestures/InfoButtonGesture\",\r\n    \"./src/services/InfoService\",\r\n    \"text!./res/info-table.html\",\r\n    \"text!./res/info-bubble.html\",\r\n    \"text!./res/bubble.html\",\r\n    \"text!./res/templates/info-button.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    InfoGesture,\r\n    InfoButtonGesture,\r\n    InfoService,\r\n    infoTableTemplate,\r\n    infoBubbleTemplate,\r\n    bubbleTemplate,\r\n    infoButtonTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/inspect\", {\r\n        \"extensions\": {\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"info-table\",\r\n                    \"template\": infoTableTemplate\r\n                },\r\n                {\r\n                    \"key\": \"info-bubble\",\r\n                    \"template\": infoBubbleTemplate\r\n                }\r\n            ],\r\n            \"containers\": [\r\n                {\r\n                    \"key\": \"bubble\",\r\n                    \"template\": bubbleTemplate,\r\n                    \"attributes\": [\r\n                        \"bubbleTitle\",\r\n                        \"bubbleLayout\"\r\n                    ],\r\n                    \"alias\": \"bubble\"\r\n                }\r\n            ],\r\n            \"gestures\": [\r\n                {\r\n                    \"key\": \"info\",\r\n                    \"implementation\": InfoGesture,\r\n                    \"depends\": [\r\n                        \"$timeout\",\r\n                        \"agentService\",\r\n                        \"infoService\",\r\n                        \"INFO_HOVER_DELAY\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"infobutton\",\r\n                    \"implementation\": InfoButtonGesture,\r\n                    \"depends\": [\r\n                        \"$document\",\r\n                        \"agentService\",\r\n                        \"infoService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"infoService\",\r\n                    \"implementation\": InfoService,\r\n                    \"depends\": [\r\n                        \"$compile\",\r\n                        \"$rootScope\",\r\n                        \"popupService\",\r\n                        \"agentService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"INFO_HOVER_DELAY\",\r\n                    \"value\": 2000\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"info-button\",\r\n                    \"template\": infoButtonTemplate,\r\n                    \"gestures\": [\r\n                        \"infobutton\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine('platform/commonUI/mobile/src/DeviceMatchers',[],function () {\r\n\r\n    /**\r\n     * An object containing key-value pairs, where keys are symbolic of\r\n     * device attributes, and values are functions that take the\r\n     * `agentService` as inputs and return boolean values indicating\r\n     * whether or not the current device has these attributes.\r\n     *\r\n     * For internal use by the mobile support bundle.\r\n     *\r\n     * @memberof platform/commonUI/mobile\r\n     * @private\r\n     */\r\n    return {\r\n        mobile: function (agentService) {\r\n            return agentService.isMobile();\r\n        },\r\n        phone: function (agentService) {\r\n            return agentService.isPhone();\r\n        },\r\n        tablet: function (agentService) {\r\n            return agentService.isTablet();\r\n        },\r\n        desktop: function (agentService) {\r\n            return !agentService.isMobile();\r\n        },\r\n        portrait: function (agentService) {\r\n            return agentService.isPortrait();\r\n        },\r\n        landscape: function (agentService) {\r\n            return agentService.isLandscape();\r\n        },\r\n        touch: function (agentService) {\r\n            return agentService.isTouch();\r\n        }\r\n    };\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/mobile/src/MCTDevice',['./DeviceMatchers'],\r\n    function (DeviceMatchers) {\r\n\r\n        /**\r\n         * The `mct-device` directive, when applied as an attribute,\r\n         * only includes the element when the device being used matches\r\n         * a set of characteristics required.\r\n         *\r\n         * Required characteristics are given as space-separated strings\r\n         * as the value to this attribute, e.g.:\r\n         *\r\n         *    <span mct-device=\"mobile portrait\">Hello world!</span>\r\n         *\r\n         * ...will only show Hello world! when viewed on a mobile device\r\n         * in the portrait orientation.\r\n         *\r\n         * Valid device characteristics to detect are:\r\n         *\r\n         * * `mobile`: Phones or tablets.\r\n         * * `phone`: Phones specifically.\r\n         * * `tablet`: Tablets specifically.\r\n         * * `desktop`: Non-mobile devices.\r\n         * * `portrait`: Devices in a portrait-style orientation.\r\n         * * `landscape`: Devices in a landscape-style orientation.\r\n         * * `touch`: Device supports touch events.\r\n         *\r\n         * @param {AgentService} agentService used to detect device type\r\n         *        based on information about the user agent\r\n         */\r\n        function MCTDevice(agentService) {\r\n\r\n            function deviceMatches(tokens) {\r\n                tokens = tokens || \"\";\r\n                return tokens.split(\" \").every(function (token) {\r\n                    var fn = DeviceMatchers[token];\r\n                    return fn && fn(agentService);\r\n                });\r\n            }\r\n\r\n            function link(scope, element, attrs, ctrl, transclude) {\r\n                if (deviceMatches(attrs.mctDevice)) {\r\n                    transclude(function (clone) {\r\n                        element.replaceWith(clone);\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {\r\n                link: link,\r\n                // We are transcluding the whole element (like ng-if)\r\n                transclude: 'element',\r\n                // 1 more than ng-if\r\n                priority: 601,\r\n                // Also terminal, since element will be transcluded\r\n                terminal: true,\r\n                // Only apply as an attribute\r\n                restrict: \"A\"\r\n            };\r\n        }\r\n\r\n        return MCTDevice;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Provides features which support variant behavior on mobile devices.\r\n *\r\n * @namespace platform/commonUI/mobile\r\n */\r\ndefine(\r\n    'platform/commonUI/mobile/src/AgentService',[],\r\n    function () {\r\n\r\n        /**\r\n         * The query service handles calls for browser and userAgent\r\n         * info using a comparison between the userAgent and key\r\n         * device names\r\n         * @constructor\r\n         * @param $window Angular-injected instance of the window\r\n         * @memberof platform/commonUI/mobile\r\n         */\r\n        function AgentService($window) {\r\n            var userAgent = $window.navigator.userAgent,\r\n                matches = userAgent.match(/iPad|iPhone|Android/i) || [];\r\n\r\n            this.userAgent = userAgent;\r\n            this.mobileName = matches[0];\r\n            this.$window = $window;\r\n            this.touchEnabled = ($window.ontouchstart !== undefined);\r\n        }\r\n\r\n        /**\r\n         * Check if the user is on a mobile device.\r\n         * @returns {boolean} true on mobile\r\n         */\r\n        AgentService.prototype.isMobile = function () {\r\n            return !!this.mobileName;\r\n        };\r\n\r\n        /**\r\n         * Check if the user is on a phone-sized mobile device.\r\n         * @returns {boolean} true on a phone\r\n         */\r\n        AgentService.prototype.isPhone = function () {\r\n            // iOS is test-to device for mobile, so only\r\n            // make this distinction for iPhones\r\n            return this.mobileName === 'iPhone';\r\n        };\r\n\r\n        /**\r\n         * Check if the user is on a tablet-sized mobile device.\r\n         * @returns {boolean} true on a tablet\r\n         */\r\n        AgentService.prototype.isTablet = function () {\r\n            return this.isMobile() && !this.isPhone();\r\n        };\r\n\r\n        /**\r\n         * Check if the user's device is in a portrait-style\r\n         * orientation (display width is narrower than display height.)\r\n         * @returns {boolean} true in portrait mode\r\n         */\r\n        AgentService.prototype.isPortrait = function () {\r\n            return this.$window.innerWidth < this.$window.innerHeight;\r\n        };\r\n\r\n        /**\r\n         * Check if the user's device is in a landscape-style\r\n         * orientation (display width is greater than display height.)\r\n         * @returns {boolean} true in landscape mode\r\n         */\r\n        AgentService.prototype.isLandscape = function () {\r\n            return !this.isPortrait();\r\n        };\r\n\r\n        /**\r\n         * Check if the user's device supports a touch interface.\r\n         * @returns {boolean} true if touch is supported\r\n         */\r\n        AgentService.prototype.isTouch = function () {\r\n            return this.touchEnabled;\r\n        };\r\n\r\n        /**\r\n         * Check if the user agent matches a certain named device,\r\n         * as indicated by checking for a case-insensitive substring\r\n         * match.\r\n         * @param {string} name the name to check for\r\n         * @returns {boolean} true if the user agent includes that name\r\n         */\r\n        AgentService.prototype.isBrowser = function (name) {\r\n            name = name.toLowerCase();\r\n            return this.userAgent.toLowerCase().indexOf(name) !== -1;\r\n        };\r\n\r\n        return AgentService;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/mobile/src/DeviceClassifier',['./DeviceMatchers'],\r\n    function (DeviceMatchers) {\r\n\r\n        /**\r\n         * Runs at application startup and adds a subset of the following\r\n         * CSS classes to the body of the document, depending on device\r\n         * attributes:\r\n         *\r\n         * * `mobile`: Phones or tablets.\r\n         * * `phone`: Phones specifically.\r\n         * * `tablet`: Tablets specifically.\r\n         * * `desktop`: Non-mobile devices.\r\n         * * `portrait`: Devices in a portrait-style orientation.\r\n         * * `landscape`: Devices in a landscape-style orientation.\r\n         * * `touch`: Device supports touch events.\r\n         *\r\n         * @param {platform/commonUI/mobile.AgentService} agentService\r\n         *        the service used to examine the user agent\r\n         * @param $document Angular's jqLite-wrapped document element\r\n         * @constructor\r\n         */\r\n        function MobileClassifier(agentService, $document) {\r\n            var body = $document.find('body');\r\n            Object.keys(DeviceMatchers).forEach(function (key) {\r\n                if (DeviceMatchers[key](agentService)) {\r\n                    body.addClass(key);\r\n                }\r\n            });\r\n        }\r\n\r\n        return MobileClassifier;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/mobile/bundle',[\r\n    \"./src/MCTDevice\",\r\n    \"./src/AgentService\",\r\n    \"./src/DeviceClassifier\",\r\n    'legacyRegistry'\r\n], function (\r\n    MCTDevice,\r\n    AgentService,\r\n    DeviceClassifier,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/mobile\", {\r\n        \"extensions\": {\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctDevice\",\r\n                    \"implementation\": MCTDevice,\r\n                    \"depends\": [\r\n                        \"agentService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"agentService\",\r\n                    \"implementation\": AgentService,\r\n                    \"depends\": [\r\n                        \"$window\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"runs\": [\r\n                {\r\n                    \"implementation\": DeviceClassifier,\r\n                    \"depends\": [\r\n                        \"agentService\",\r\n                        \"$document\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/themes/espresso/bundle',[\r\n\r\n    'legacyRegistry'\r\n], function (\r\n\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/themes/espresso\", {\r\n        \"name\": \"Espresso\",\r\n        \"description\": \"Espresso theme: dark and rich\",\r\n        \"extensions\": {\r\n            \"stylesheets\": [\r\n                {\r\n                    \"stylesheetUrl\": \"css/theme-espresso.css\",\r\n                    \"priority\": 1000\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"THEME\",\r\n                    \"value\": \"espresso\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/notification/src/NotificationIndicatorController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provides an indicator that is visible when there are\r\n         * banner notifications that have been minimized. Will also indicate\r\n         * the number of notifications. Notifications can be viewed by\r\n         * clicking on the indicator to launch a dialog showing a list of\r\n         * notifications.\r\n         * @param $scope\r\n         * @param notificationService\r\n         * @param dialogService\r\n         * @constructor\r\n         */\r\n        function NotificationIndicatorController($scope, notificationService, dialogService) {\r\n            $scope.notifications = notificationService.notifications;\r\n            $scope.highest = notificationService.highest;\r\n\r\n            /**\r\n             * Launch a dialog showing a list of current notifications.\r\n             */\r\n            $scope.showNotificationsList = function () {\r\n                dialogService.getDialogResponse('overlay-message-list', {\r\n                    dialog: {\r\n                        title: \"Messages\",\r\n                        //Launch the message list dialog with the models\r\n                        // from the notifications\r\n                        messages: notificationService.notifications\r\n                    }\r\n                });\r\n\r\n            };\r\n        }\r\n        return NotificationIndicatorController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/notification/src/NotificationIndicator',[],\r\n    function () {\r\n\r\n        function NotificationIndicator() {}\r\n\r\n        NotificationIndicator.template = 'notificationIndicatorTemplate';\r\n\r\n        return NotificationIndicator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements the notification service, which can be used to\r\n * show banner notifications to the user. Banner notifications\r\n * are used to inform users of events in a non-intrusive way. As\r\n * much as possible, notifications share a model with blocking\r\n * dialogs so that the same information can be provided in a dialog\r\n * and then minimized to a banner notification if needed.\r\n *\r\n * @namespace platform/commonUI/notification\r\n */\r\ndefine(\r\n    'platform/commonUI/notification/src/NotificationService',[],\r\n    function () {\r\n\r\n        /**\r\n         * A representation of a user action. Options are provided to\r\n         * dialogs and notifications and are shown as buttons.\r\n         *\r\n         * @typedef {object} NotificationOption\r\n         * @property {string} label the label to appear on the button for\r\n         * this action\r\n         * @property {function} callback a callback function to be invoked\r\n         * when the button is clicked\r\n        */\r\n\r\n        /**\r\n         * A representation of a banner notification. Banner notifications\r\n         * are used to inform users of events in a non-intrusive way. As\r\n         * much as possible, notifications share a model with blocking\r\n         * dialogs so that the same information can be provided in a dialog\r\n         * and then minimized to a banner notification if needed, or vice-versa.\r\n         *\r\n         * @typedef {object} NotificationModel\r\n         * @property {string} title The title of the message\r\n         * @property {string} severity The importance of the message (one of\r\n         * 'info', 'alert', or 'error' where info < alert <error)\r\n         * @property {number} [progress] The completion status of a task\r\n         * represented numerically\r\n         * @property {boolean} [unknownProgress] a boolean indicating that the\r\n         * progress of the underlying task is unknown. This will result in a\r\n         * visually distinct progress bar.\r\n         * @property {boolean | number} [autoDismiss] If truthy, dialog will\r\n         * be automatically minimized or dismissed (depending on severity).\r\n         * Additionally, if the provided value is a number, it will be used\r\n         * as the delay period before being dismissed.\r\n         * @property {boolean} [dismissable=true] If true, notification will\r\n         * include an option to dismiss it completely.\r\n         * @property {NotificationOption} [primaryOption] the default user\r\n         * response to\r\n         * this message. Will be represented as a button with the provided\r\n         * label and action. May be used by banner notifications to display\r\n         * only the most important option to users.\r\n         * @property {NotificationOption[]} [options] any additional\r\n         * actions the user can take. Will be represented as additional buttons\r\n         * that may or may not be available from a banner.\r\n         * @see DialogModel\r\n         */\r\n\r\n        /**\r\n         * A wrapper object that is returned as a handle to a newly created\r\n         * notification. Wraps the notifications model and decorates with\r\n         * functions to dismiss or minimize the notification.\r\n         *\r\n         * @typedef {object} Notification\r\n         * @property {function} dismiss This method is added to the object\r\n         * returned by {@link NotificationService#notify} and can be used to\r\n         * dismiss this notification. Dismissing a notification will remove\r\n         * it completely and it will not appear in the notification indicator\r\n         * @property {function} minimize This method is added to the object\r\n         * returned by {@link NotificationService#notify} and can be used to\r\n         * minimize this notification. Minimizing a notification will send\r\n         * it to the notification indicator\r\n         * @property {function} dismissOrMinimize This method is added to the\r\n         * object returned by {@link NotificationService#notify}. It will\r\n         * hide the notification by either dismissing or minimizing it,\r\n         * depending on severity. Typically this is the method that should\r\n         * be used for dismissing a notification. If more control is\r\n         * required, then the minimize or dismiss functions can be called\r\n         * individually.\r\n         * @property {function} onDismiss Allows listening for on dismiss\r\n         * events. This allows cleanup etc. when the notification is dismissed.\r\n         */\r\n\r\n        /**\r\n         * The notification service is responsible for informing the user of\r\n         * events via the use of banner notifications.\r\n         * @memberof platform/commonUI/notification\r\n         * @constructor\r\n         * @param $timeout the Angular $timeout service\r\n         * @param DEFAULT_AUTO_DISMISS The period of time that an\r\n         * auto-dismissed message will be displayed for.\r\n         * @param MINIMIZE_TIMEOUT When notifications are minimized, a brief\r\n         * animation is shown. This animation requires some time to execute,\r\n         * so a timeout is required before the notification is hidden\r\n         */\r\n        function NotificationService($timeout, topic, DEFAULT_AUTO_DISMISS, MINIMIZE_TIMEOUT) {\r\n            this.notifications = [];\r\n            this.$timeout = $timeout;\r\n            this.highest = { severity: \"info\" };\r\n            this.DEFAULT_AUTO_DISMISS = DEFAULT_AUTO_DISMISS;\r\n            this.MINIMIZE_TIMEOUT = MINIMIZE_TIMEOUT;\r\n            this.topic = topic;\r\n\r\n            /*\r\n             * A context in which to hold the active notification and a\r\n             * handle to its timeout.\r\n             */\r\n            this.active = {};\r\n        }\r\n\r\n        /**\r\n         * Minimize a notification. The notification will still be available\r\n         * from the notification list. Typically notifications with a\r\n         * severity of 'info' should not be minimized, but rather\r\n         * dismissed. If you're not sure which is appropriate,\r\n         * use {@link Notification#dismissOrMinimize}\r\n         *\r\n         * @private\r\n         */\r\n        NotificationService.prototype.minimize = function (service, notification) {\r\n            //Check this is a known notification\r\n            var index = service.notifications.indexOf(notification);\r\n\r\n            if (service.active.timeout) {\r\n                /*\r\n                 Method can be called manually (clicking dismiss) or\r\n                 automatically from an auto-timeout. this.active.timeout\r\n                 acts as a semaphore to prevent race conditions. Cancel any\r\n                 timeout in progress (for the case where a manual dismiss\r\n                 has shortcut an active auto-dismiss), and clear the\r\n                 semaphore.\r\n                 */\r\n                service.$timeout.cancel(service.active.timeout);\r\n                delete service.active.timeout;\r\n            }\r\n\r\n            if (index >= 0) {\r\n                notification.model.minimized = true;\r\n                //Add a brief timeout before showing the next notification\r\n                // in order to allow the minimize animation to run through.\r\n                service.$timeout(function () {\r\n                    service.setActiveNotification(service.selectNextNotification());\r\n                }, service.MINIMIZE_TIMEOUT);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Completely removes a notification. This will dismiss it from the\r\n         * message banner and remove it from the list of notifications.\r\n         * Typically only notifications with a severity of info should be\r\n         * dismissed. If you're not sure whether to dismiss or minimize a\r\n         * notification, use {@link Notification#dismissOrMinimize}.\r\n         * dismiss\r\n         *\r\n         * @private\r\n         */\r\n        NotificationService.prototype.dismiss = function (service, notification) {\r\n            //Check this is a known notification\r\n            var index = service.notifications.indexOf(notification);\r\n\r\n            if (service.active.timeout) {\r\n                /* Method can be called manually (clicking dismiss) or\r\n                 * automatically from an auto-timeout. this.active.timeout\r\n                 * acts as a semaphore to prevent race conditions. Cancel any\r\n                 * timeout in progress (for the case where a manual dismiss\r\n                 * has shortcut an active auto-dismiss), and clear the\r\n                 * semaphore.\r\n                 */\r\n\r\n                service.$timeout.cancel(service.active.timeout);\r\n                delete service.active.timeout;\r\n            }\r\n\r\n            if (index >= 0) {\r\n                service.notifications.splice(index, 1);\r\n            }\r\n            service.setActiveNotification(service.selectNextNotification());\r\n\r\n            this.setHighestSeverity();\r\n        };\r\n\r\n        /**\r\n         * Depending on the severity of the notification will selectively\r\n         * dismiss or minimize where appropriate.\r\n         *\r\n         * @private\r\n         */\r\n        NotificationService.prototype.dismissOrMinimize = function (notification) {\r\n\r\n            //For now minimize everything, and have discussion around which\r\n            //kind of messages should or should not be in the minimized\r\n            //notifications list\r\n            notification.minimize();\r\n        };\r\n\r\n        /**\r\n         * Returns the notification that is currently visible in the banner area\r\n         * @returns {Notification}\r\n         */\r\n        NotificationService.prototype.getActiveNotification = function () {\r\n            return this.active.notification;\r\n        };\r\n\r\n        /**\r\n         * A convenience method for info notifications. Notifications\r\n         * created via this method will be auto-dismissed after a default\r\n         * wait period\r\n         * @param {NotificationModel | string} message either a string for\r\n         * the title of the notification message, or a {@link NotificationModel}\r\n         * defining the options notification to display\r\n         * @returns {Notification} the provided notification decorated with\r\n         * functions to dismiss or minimize\r\n         */\r\n        NotificationService.prototype.info = function (message) {\r\n            var notificationModel = typeof message === \"string\" ? {title: message} : message;\r\n            notificationModel.autoDismiss = notificationModel.autoDismiss || true;\r\n            notificationModel.severity = \"info\";\r\n            return this.notify(notificationModel);\r\n        };\r\n\r\n        /**\r\n         * A convenience method for alert notifications. Notifications\r\n         * created via this method will will have severity of \"alert\" enforced\r\n         * @param {NotificationModel | string} message either a string for\r\n         * the title of the alert message with default options, or a\r\n         * {@link NotificationModel} defining the options notification to\r\n         * display\r\n         * @returns {Notification} the provided notification decorated with\r\n         * functions to dismiss or minimize\r\n         */\r\n        NotificationService.prototype.alert = function (message) {\r\n            var notificationModel = typeof message === \"string\" ? {title: message} : message;\r\n            notificationModel.severity = \"alert\";\r\n            return this.notify(notificationModel);\r\n        };\r\n\r\n        /**\r\n         * A convenience method for error notifications. Notifications\r\n         * created via this method will will have severity of \"error\" enforced\r\n         * @param {NotificationModel | string} message either a string for\r\n         * the title of the error message with default options, or a\r\n         * {@link NotificationModel} defining the options notification to\r\n         * display\r\n         * @returns {Notification} the provided notification decorated with\r\n         * functions to dismiss or minimize\r\n         */\r\n        NotificationService.prototype.error = function (message) {\r\n            var notificationModel = typeof message === \"string\" ? {title: message} : message;\r\n            notificationModel.severity = \"error\";\r\n            return this.notify(notificationModel);\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        NotificationService.prototype.setHighestSeverity = function () {\r\n            var severity = {\r\n                    \"info\": 1,\r\n                    \"alert\": 2,\r\n                    \"error\": 3\r\n                };\r\n            this.highest.severity = this.notifications.reduce(function (previous, notification) {\r\n                if (severity[notification.model.severity] > severity[previous]) {\r\n                    return notification.model.severity;\r\n                } else {\r\n                    return previous;\r\n                }\r\n            }, \"info\");\r\n        };\r\n\r\n        /**\r\n         * Notifies the user of an event. If there is a banner notification\r\n         * already active, then it will be dismissed or minimized automatically,\r\n         * and the provided notification displayed in its place.\r\n         *\r\n         * @param {NotificationModel} notificationModel The notification to\r\n         * display\r\n         * @returns {Notification} the provided notification decorated with\r\n         * functions to {@link Notification#dismiss} or {@link Notification#minimize}\r\n         */\r\n        NotificationService.prototype.notify = function (notificationModel) {\r\n            var self = this,\r\n                notification,\r\n                activeNotification = self.active.notification,\r\n                topic = this.topic();\r\n\r\n            notification = {\r\n                model: notificationModel,\r\n                minimize: function () {\r\n                    self.minimize(self, notification);\r\n                },\r\n                dismiss: function () {\r\n                    self.dismiss(self, notification);\r\n                    topic.notify();\r\n                },\r\n                dismissOrMinimize: function () {\r\n                    self.dismissOrMinimize(notification);\r\n                },\r\n                onDismiss: function (callback) {\r\n                    topic.listen(callback);\r\n                }\r\n            };\r\n\r\n            notificationModel.severity = notificationModel.severity || \"info\";\r\n            if (notificationModel.autoDismiss === true) {\r\n                notificationModel.autoDismiss = this.DEFAULT_AUTO_DISMISS;\r\n            }\r\n\r\n            //Notifications support a 'dismissable' attribute. This is a\r\n            // convenience to support adding a 'dismiss' option to the\r\n            // notification for the common case of dismissing a\r\n            // notification. Could also be done manually by specifying an\r\n            // option on the model\r\n            if (notificationModel.dismissable !== false) {\r\n                notificationModel.options = notificationModel.options || [];\r\n                notificationModel.options.unshift({\r\n                    label: \"Dismiss\",\r\n                    callback: function () {\r\n                        notification.dismiss();\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.notifications.push(notification);\r\n\r\n            this.setHighestSeverity();\r\n\r\n            /*\r\n            Check if there is already an active (ie. visible) notification\r\n             */\r\n            if (!this.active.notification) {\r\n                this.setActiveNotification(notification);\r\n\r\n            } else if (!this.active.timeout) {\r\n                /*\r\n                 If there is already an active notification, time it out. If it's\r\n                 already got a timeout in progress (either because it has had\r\n                 timeout forced because of a queue of messages, or it had an\r\n                 autodismiss specified), leave it to run. Otherwise force a\r\n                  timeout.\r\n\r\n                 This notifcation has been added to queue and will be\r\n                  serviced as soon as possible.\r\n                 */\r\n                this.active.timeout = this.$timeout(function () {\r\n                    activeNotification.dismissOrMinimize();\r\n                }, this.DEFAULT_AUTO_DISMISS);\r\n            }\r\n\r\n            return notification;\r\n\r\n        };\r\n\r\n        /**\r\n         * Used internally by the NotificationService\r\n         * @private\r\n         */\r\n        NotificationService.prototype.setActiveNotification =\r\n            function (notification) {\r\n                var timeout;\r\n\r\n                this.active.notification = notification;\r\n                /*\r\n                If autoDismiss has been specified, OR there are other\r\n                 notifications queued for display, setup a timeout to\r\n                  dismiss the dialog.\r\n                 */\r\n                if (notification && (notification.model.autoDismiss ||\r\n                    this.selectNextNotification())) {\r\n\r\n                    timeout = notification.model.autoDismiss || this.DEFAULT_AUTO_DISMISS;\r\n                    this.active.timeout = this.$timeout(function () {\r\n                        notification.dismissOrMinimize();\r\n                    }, timeout);\r\n                } else {\r\n                    delete this.active.timeout;\r\n                }\r\n            };\r\n\r\n        /**\r\n         * Used internally by the NotificationService\r\n         *\r\n         * @private\r\n         */\r\n        NotificationService.prototype.selectNextNotification = function () {\r\n            var notification,\r\n                i = 0;\r\n\r\n            /*\r\n            Loop through the notifications queue and find the first one that\r\n            has not already been minimized (manually or otherwise).\r\n             */\r\n            for (; i < this.notifications.length; i++) {\r\n                notification = this.notifications[i];\r\n\r\n                if (!notification.model.minimized &&\r\n                    notification !== this.active.notification) {\r\n\r\n                    return notification;\r\n                }\r\n            }\r\n        };\r\n\r\n        return NotificationService;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/commonUI/notification/res/notification-indicator.html',[],function () { return '<!-- DO NOT ADD SPACES BETWEEN THE SPANS - IT ADDS WHITE SPACE!! -->\\r\\n<span ng-show=\"notifications.length > 0\" class=\"status block\"\\r\\n      ng-class=\"highest.severity\"\\r\\n      ng-controller=\"NotificationIndicatorController\">\\r\\n    <span class=\"status-indicator icon-bell\"></span><span class=\"label\">\\r\\n        <a ng-click=\"showNotificationsList()\">{{notifications.length}}\\r\\n            Notifications</a>\\r\\n    </span><span class=\"count\">{{notifications.length}}</span>\\r\\n</span>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/notification/bundle',[\r\n    \"./src/NotificationIndicatorController\",\r\n    \"./src/NotificationIndicator\",\r\n    \"./src/NotificationService\",\r\n    \"text!./res/notification-indicator.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    NotificationIndicatorController,\r\n    NotificationIndicator,\r\n    NotificationService,\r\n    notificationIndicatorTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/notification\", {\r\n        \"extensions\": {\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"DEFAULT_AUTO_DISMISS\",\r\n                    \"value\": 3000\r\n                },\r\n                {\r\n                    \"key\": \"FORCE_AUTO_DISMISS\",\r\n                    \"value\": 1000\r\n                },\r\n                {\r\n                    \"key\": \"MINIMIZE_TIMEOUT\",\r\n                    \"value\": 300\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"notificationIndicatorTemplate\",\r\n                    \"template\": notificationIndicatorTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"NotificationIndicatorController\",\r\n                    \"implementation\": NotificationIndicatorController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"notificationService\",\r\n                        \"dialogService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"indicators\": [\r\n                {\r\n                    \"implementation\": NotificationIndicator,\r\n                    \"priority\": \"fallback\"\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"notificationService\",\r\n                    \"implementation\": NotificationService,\r\n                    \"depends\": [\r\n                        \"$timeout\",\r\n                        \"topic\",\r\n                        \"DEFAULT_AUTO_DISMISS\",\r\n                        \"MINIMIZE_TIMEOUT\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/containment/src/CapabilityTable',[],\r\n    function () {\r\n\r\n        /**\r\n         * Build a table indicating which types are expected to expose\r\n         * which capabilities. This supports composition policy (rules\r\n         * for which objects can contain which other objects) which\r\n         * sometimes is determined based on the presence of capabilities.\r\n         * @constructor\r\n         * @memberof platform/containment\r\n         */\r\n        function CapabilityTable(typeService, capabilityService) {\r\n            var self = this;\r\n\r\n            // Build an initial model for a type\r\n            function buildModel(type) {\r\n                var model = Object.create(type.getInitialModel() || {});\r\n                model.type = type.getKey();\r\n                return model;\r\n            }\r\n\r\n            // Get capabilities expected for this type\r\n            function getCapabilities(type) {\r\n                return capabilityService.getCapabilities(buildModel(type));\r\n            }\r\n\r\n            // Populate the lookup table for this type's capabilities\r\n            function addToTable(type) {\r\n                var typeKey = type.getKey();\r\n                Object.keys(getCapabilities(type)).forEach(function (key) {\r\n                    self.table[key] = self.table[key] || {};\r\n                    self.table[key][typeKey] = true;\r\n                });\r\n            }\r\n\r\n            // Build the table\r\n            this.table = {};\r\n            (typeService.listTypes() || []).forEach(addToTable);\r\n        }\r\n\r\n        /**\r\n         * Check if a type is expected to expose a specific capability.\r\n         * @param {string} typeKey the type identifier\r\n         * @param {string} capabilityKey the capability identifier\r\n         * @returns {boolean} true if expected to be exposed\r\n         */\r\n        CapabilityTable.prototype.hasCapability = function (typeKey, capabilityKey) {\r\n            return (this.table[capabilityKey] || {})[typeKey];\r\n        };\r\n\r\n        return CapabilityTable;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/containment/src/ContainmentTable',['./CapabilityTable'],\r\n    function (CapabilityTable) {\r\n\r\n        // Symbolic value for the type table for cases when any type\r\n        // is allowed to be contained.\r\n        var ANY = true;\r\n\r\n        /**\r\n         * Supports composition policy by maintaining a table of\r\n         * domain object types, to determine if they can contain\r\n         * other domain object types. This is determined at application\r\n         * start time (plug-in support means this cannot be determined\r\n         * prior to that, but we don't want to redo these calculations\r\n         * every time policy is checked.)\r\n         * @constructor\r\n         * @memberof platform/containment\r\n         */\r\n        function ContainmentTable(typeService, capabilityService) {\r\n            var self = this,\r\n                types = typeService.listTypes(),\r\n                capabilityTable = new CapabilityTable(typeService, capabilityService);\r\n\r\n            // Add types which have all these capabilities to the set\r\n            // of allowed types\r\n            function addToSetByCapability(set, has) {\r\n                has = Array.isArray(has) ? has : [has];\r\n                types.forEach(function (type) {\r\n                    var typeKey = type.getKey();\r\n                    set[typeKey] = has.map(function (capabilityKey) {\r\n                        return capabilityTable.hasCapability(typeKey, capabilityKey);\r\n                    }).reduce(function (a, b) {\r\n                        return a && b;\r\n                    }, true);\r\n                });\r\n            }\r\n\r\n            // Add this type (or type description) to the set of allowed types\r\n            function addToSet(set, type) {\r\n                // Is this a simple case of an explicit type identifier?\r\n                if (typeof type === 'string') {\r\n                    // If so, add it to the set of allowed types\r\n                    set[type] = true;\r\n                } else {\r\n                    // Otherwise, populate that set based on capabilities\r\n                    addToSetByCapability(set, (type || {}).has || []);\r\n                }\r\n            }\r\n\r\n            // Add to the lookup table for this type\r\n            function addToTable(type) {\r\n                var key = type.getKey(),\r\n                    definition = type.getDefinition() || {},\r\n                    contains = definition.contains;\r\n\r\n                // Check for defined containment restrictions\r\n                if (contains === undefined) {\r\n                    // If not, accept anything\r\n                    self.table[key] = ANY;\r\n                } else {\r\n                    // Start with an empty set...\r\n                    self.table[key] = {};\r\n                    // ...cast accepted types to array if necessary...\r\n                    contains = Array.isArray(contains) ? contains : [contains];\r\n                    // ...and add all containment rules to that set\r\n                    contains.forEach(function (c) {\r\n                        addToSet(self.table[key], c);\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Build the table\r\n            this.table = {};\r\n            types.forEach(addToTable);\r\n        }\r\n\r\n        /**\r\n         * Check if domain objects of one type can contain domain\r\n         * objects of another type.\r\n         * @param {Type} containerType type of the containing domain object\r\n         * @param {Type} containedType type of the domain object\r\n         *        to be contained\r\n         * @returns {boolean} true if allowable\r\n         */\r\n        ContainmentTable.prototype.canContain = function (containerType, containedType) {\r\n            var set = this.table[containerType.getKey()] || {};\r\n            // Recognize either the symbolic value for \"can contain\r\n            // anything\", or lookup the specific type from the set.\r\n            return (set === ANY) || set[containedType.getKey()];\r\n        };\r\n\r\n        return ContainmentTable;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements \"containment\" rules, which determine which objects\r\n * can be contained within which other objects.\r\n * @namespace platform/containment\r\n */\r\ndefine(\r\n    'platform/containment/src/CompositionPolicy',['./ContainmentTable'],\r\n    function (ContainmentTable) {\r\n\r\n        /**\r\n         * Defines composition policy as driven by type metadata.\r\n         * @constructor\r\n         * @memberof platform/containment\r\n         * @implements {Policy.<Type, Type>}\r\n         */\r\n        function CompositionPolicy($injector) {\r\n            // We're really just wrapping the containment table and rephrasing\r\n            // it as a policy decision.\r\n            var table;\r\n\r\n            this.getTable = function () {\r\n                return (table = table || new ContainmentTable(\r\n                    $injector.get('typeService'),\r\n                    $injector.get('capabilityService')\r\n                ));\r\n            };\r\n        }\r\n\r\n        CompositionPolicy.prototype.allow = function (candidate, context) {\r\n            return this.getTable().canContain(candidate, context);\r\n        };\r\n\r\n        return CompositionPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/containment/src/CompositionMutabilityPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Disallow composition changes to objects which are not mutable.\r\n         * @memberof platform/containment\r\n         * @constructor\r\n         * @implements {Policy.<Type, Type>}\r\n         */\r\n        function CompositionMutabilityPolicy() {\r\n        }\r\n\r\n        CompositionMutabilityPolicy.prototype.allow = function (candidate) {\r\n            // Equate creatability with mutability; that is, users\r\n            // can only modify objects of types they can create, and\r\n            // vice versa.\r\n            return candidate.hasFeature('creation');\r\n        };\r\n\r\n        return CompositionMutabilityPolicy;\r\n    }\r\n);\r\n\n","\r\ndefine(\r\n    'platform/containment/src/CompositionModelPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Policy allowing composition only for domain object types which\r\n         * have a composition property.\r\n         * @constructor\r\n         * @memberof platform/containment\r\n         * @implements {Policy.<Type, Type>}\r\n         */\r\n        function CompositionModelPolicy() {\r\n        }\r\n\r\n        CompositionModelPolicy.prototype.allow = function (candidate) {\r\n            return Array.isArray(\r\n                (candidate.getInitialModel() || {}).composition\r\n            );\r\n        };\r\n\r\n        return CompositionModelPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/containment/src/ComposeActionPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Restrict `compose` actions to cases where composition\r\n         * is explicitly allowed.\r\n         *\r\n         * Note that this is a policy that needs the `policyService`,\r\n         * since it's delegated to a different policy category.\r\n         * To avoid a circular dependency, the service is obtained via\r\n         * Angular's `$injector`.\r\n         * @constructor\r\n         * @memberof platform/containment\r\n         * @implements {Policy.<Action, ActionContext>}\r\n         */\r\n        function ComposeActionPolicy($injector) {\r\n            this.getPolicyService = function () {\r\n                return $injector.get('policyService');\r\n            };\r\n        }\r\n\r\n        ComposeActionPolicy.prototype.allowComposition = function (containerObject, selectedObject) {\r\n            // Get the object types involved in the compose action\r\n            var containerType = containerObject &&\r\n                    containerObject.getCapability('type'),\r\n                selectedType = selectedObject &&\r\n                    selectedObject.getCapability('type');\r\n\r\n            // Get a reference to the policy service if needed...\r\n            this.policyService = this.policyService || this.getPolicyService();\r\n\r\n            // ...and delegate to the composition policy\r\n            return containerObject.getId() !== selectedObject.getId() &&\r\n                this.policyService.allow(\r\n                    'composition',\r\n                    containerType,\r\n                    selectedType\r\n                );\r\n        };\r\n\r\n        /**\r\n         * Check whether or not a compose action should be allowed\r\n         * in this context.\r\n         * @returns {boolean} true if it may be allowed\r\n         * @memberof platform/containment.ComposeActionPolicy#\r\n         */\r\n        ComposeActionPolicy.prototype.allow = function (candidate, context) {\r\n            if (candidate.getMetadata().key === 'compose') {\r\n                return this.allowComposition(\r\n                    (context || {}).domainObject,\r\n                    (context || {}).selectedObject\r\n                );\r\n            }\r\n            return true;\r\n        };\r\n\r\n        return ComposeActionPolicy;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/containment/bundle',[\r\n    \"./src/CompositionPolicy\",\r\n    \"./src/CompositionMutabilityPolicy\",\r\n    \"./src/CompositionModelPolicy\",\r\n    \"./src/ComposeActionPolicy\",\r\n    'legacyRegistry'\r\n], function (\r\n    CompositionPolicy,\r\n    CompositionMutabilityPolicy,\r\n    CompositionModelPolicy,\r\n    ComposeActionPolicy,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/containment\", {\r\n        \"extensions\": {\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"composition\",\r\n                    \"implementation\": CompositionPolicy,\r\n                    \"depends\": [\r\n                        \"$injector\"\r\n                    ],\r\n                    \"message\": \"Objects of this type cannot contain objects of that type.\"\r\n                },\r\n                {\r\n                    \"category\": \"composition\",\r\n                    \"implementation\": CompositionMutabilityPolicy,\r\n                    \"message\": \"Objects of this type cannot be modified.\"\r\n                },\r\n                {\r\n                    \"category\": \"composition\",\r\n                    \"implementation\": CompositionModelPolicy,\r\n                    \"message\": \"Objects of this type cannot contain other objects.\"\r\n                },\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": ComposeActionPolicy,\r\n                    \"depends\": [\r\n                        \"$injector\"\r\n                    ],\r\n                    \"message\": \"Objects of this type cannot contain objects of that type.\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\n/**\r\n * This bundle contains services for managing the flow of execution,\r\n * such as support for running web workers on background threads.\r\n * @namespace platform/execution\r\n */\r\ndefine(\r\n    'platform/execution/src/WorkerService',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles the execution of WebWorkers.\r\n         * @memberof platform/execution\r\n         * @constructor\r\n         */\r\n        function WorkerService($window, workers) {\r\n            var workerUrls = {},\r\n                sharedWorkers = {};\r\n\r\n            function addWorker(worker) {\r\n                var key = worker.key;\r\n                if (!workerUrls[key]) {\r\n                    workerUrls[key] = [\r\n                        worker.bundle.path,\r\n                        worker.bundle.sources,\r\n                        worker.scriptUrl\r\n                    ].join(\"/\");\r\n                    sharedWorkers[key] = worker.shared;\r\n                }\r\n            }\r\n\r\n            (workers || []).forEach(addWorker);\r\n            this.workerUrls = workerUrls;\r\n            this.sharedWorkers = sharedWorkers;\r\n            this.Worker = $window.Worker;\r\n            this.SharedWorker = $window.SharedWorker;\r\n        }\r\n\r\n        /**\r\n         * Start running a new web worker. This will run a worker\r\n         * that has been registered under the `workers` category\r\n         * of extension.\r\n         *\r\n         * This will return either a Worker or a SharedWorker,\r\n         * depending on whether a `shared` flag has been specified\r\n         * on the the extension definition for the referenced worker.\r\n         *\r\n         * @param {string} key symbolic identifier for the worker\r\n         * @returns {Worker | SharedWorker} the running Worker\r\n         */\r\n        WorkerService.prototype.run = function (key) {\r\n            var scriptUrl = this.workerUrls[key],\r\n                Worker = this.sharedWorkers[key] ?\r\n                        this.SharedWorker : this.Worker;\r\n            return scriptUrl && Worker && new Worker(scriptUrl);\r\n        };\r\n\r\n        return WorkerService;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/execution/bundle',[\r\n    \"./src/WorkerService\",\r\n    'legacyRegistry'\r\n], function (\r\n    WorkerService,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/execution\", {\r\n        \"extensions\": {\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"workerService\",\r\n                    \"implementation\": WorkerService,\r\n                    \"depends\": [\r\n                        \"$window\",\r\n                        \"workers[]\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","!function(t,e){\"function\"==typeof define&&define.amd?define('csv',[],e):\"object\"==typeof module&&module.exports?module.exports=e():t.CSV=e()}(this,function(){\"use strict\";function t(t){var e=typeof t;return\"function\"===e||\"object\"===e&&!!t}function e(t){return\"string\"==typeof t}function n(t){return!isNaN(+t)}function i(t){return 0==t||1==t}function r(t){return null==t}function o(t){return null!=t}function c(t,e){return o(t)?t:e}function u(t,e){for(var n=0,i=t.length;i>n&&e(t[n],n)!==!1;n+=1);}function s(t){return t.replace(/\"/g,'\\\\\"')}function a(t){return\"attrs[\"+t+\"]\"}function l(t,e){return n(t)?\"Number(\"+a(e)+\")\":i(t)?\"Boolean(\"+a(e)+\" == true)\":\"String(\"+a(e)+\")\"}function f(t,n,i,r){var o=[];return 3==arguments.length?(n?g(n)?u(i,function(i,r){e(n[r])?n[r]=n[r].toLowerCase():t[n[r]]=n[r],o.push(\"deserialize[cast[\"+r+\"]](\"+a(r)+\")\")}):u(i,function(t,e){o.push(l(t,e))}):u(i,function(t,e){o.push(a(e))}),o=\"return [\"+o.join(\",\")+\"]\"):(n?g(n)?u(i,function(i,c){e(n[c])?n[c]=n[c].toLowerCase():t[n[c]]=n[c],o.push('\"'+s(r[c])+'\": deserialize[cast['+c+\"]](\"+a(c)+\")\")}):u(i,function(t,e){o.push('\"'+s(r[e])+'\": '+l(t,e))}):u(i,function(t,e){o.push('\"'+s(r[e])+'\": '+a(e))}),o=\"return {\"+o.join(\",\")+\"}\"),Function(\"attrs\",\"deserialize\",\"cast\",o)}function h(t,e){var n,i=0;return u(e,function(e){var r,o=e;-1!=p.indexOf(e)&&(o=\"\\\\\"+o),r=t.match(RegExp(o,\"g\")),r&&r.length>i&&(i=r.length,n=e)}),n||e[0]}var p=[\"|\",\"^\"],d=[\",\",\";\",\"  \",\"|\",\"^\"],m=[\"\\r\\n\",\"\\r\",\"\\n\"],g=Array.isArray||function(t){return\"[object Array]\"===toString.call(t)},y=function(){function n(t,n){if(n||(n={}),g(t))this.mode=\"encode\";else{if(!e(t))throw Error(\"Incompatible format!\");this.mode=\"parse\"}this.data=t,this.options={header:c(n.header,!1),cast:c(n.cast,!0)};var i=n.lineDelimiter||n.line,r=n.cellDelimiter||n.delimiter;this.isParser()?(this.options.lineDelimiter=i||h(this.data,m),this.options.cellDelimiter=r||h(this.data,d),this.data=o(this.data,this.options.lineDelimiter)):this.isEncoder()&&(this.options.lineDelimiter=i||\"\\r\\n\",this.options.cellDelimiter=r||\",\")}function i(t,e,n,i,r){t(new e(n,i,r))}function o(t,e){return t.slice(-e.length)!=e&&(t+=e),t}function s(n){return g(n)?\"array\":t(n)?\"object\":e(n)?\"string\":r(n)?\"null\":\"primitive\"}return n.prototype.set=function(t,e){return this.options[t]=e},n.prototype.isParser=function(){return\"parse\"==this.mode},n.prototype.isEncoder=function(){return\"encode\"==this.mode},n.prototype.parse=function(t){function e(){s={escaped:!1,quote:!1,cell:!0}}function n(){m.cell=\"\"}function r(){m.line=[]}function o(t){m.line.push(s.escaped?t.slice(1,-1).replace(/\"\"/g,'\"'):t),n(),e()}function c(t){o(t.slice(0,1-p.lineDelimiter.length))}function u(){d?g(d)?(a=f(y,p.cast,m.line,d),(u=function(){i(t,a,m.line,y,p.cast)})()):d=m.line:(a||(a=f(y,p.cast,m.line)),(u=function(){i(t,a,m.line,y,p.cast)})())}if(\"parse\"==this.mode){if(0===this.data.trim().length)return[];var s,a,l,h=this.data,p=this.options,d=p.header,m={cell:\"\",line:[]},y=this.deserialize;t||(l=[],t=function(t){l.push(t)}),1==p.lineDelimiter.length&&(c=o);var v,A,D,b=h.length,j=p.cellDelimiter.charCodeAt(0),w=p.lineDelimiter.charCodeAt(p.lineDelimiter.length-1);for(e(),v=0,A=0;b>v;v++)D=h.charCodeAt(v),s.cell&&(s.cell=!1,34==D)?s.escaped=!0:s.escaped&&34==D?s.quote=!s.quote:(s.escaped&&s.quote||!s.escaped)&&(D==j?(o(m.cell+h.slice(A,v)),A=v+1):D==w&&(c(m.cell+h.slice(A,v)),A=v+1,(m.line.length>1||\"\"!==m.line[0])&&u(),r()));return l?l:this}},n.prototype.deserialize={string:function(t){return t+\"\"},number:function(t){return+t},\"boolean\":function(t){return!!t}},n.prototype.serialize={object:function(t){var e=this,n=Object.keys(t),i=Array(n.length);return u(n,function(n,r){i[r]=e[s(t[n])](t[n])}),i},array:function(t){var e=this,n=Array(t.length);return u(t,function(t,i){n[i]=e[s(t)](t)}),n},string:function(t){return'\"'+(t+\"\").replace(/\"/g,'\"\"')+'\"'},\"null\":function(){return\"\"},primitive:function(t){return t}},n.prototype.encode=function(t){function n(t){return t.join(c.cellDelimiter)}if(\"encode\"==this.mode){if(0==this.data.length)return\"\";var i,r,o=this.data,c=this.options,a=c.header,l=o[0],f=this.serialize,h=0;t||(r=Array(o.length),t=function(t,e){r[e+h]=t}),a&&(g(a)||(i=Object.keys(l),a=i),t(n(f.array(a)),0),h=1);var p,d=s(l);return\"array\"==d?(g(c.cast)?(p=Array(c.cast.length),u(c.cast,function(t,n){e(t)?p[n]=t.toLowerCase():(p[n]=t,f[t]=t)})):(p=Array(l.length),u(l,function(t,e){p[e]=s(t)})),u(o,function(e,i){var r=Array(p.length);u(e,function(t,e){r[e]=f[p[e]](t)}),t(n(r),i)})):\"object\"==d&&(i=Object.keys(l),g(c.cast)?(p=Array(c.cast.length),u(c.cast,function(t,n){e(t)?p[n]=t.toLowerCase():(p[n]=t,f[t]=t)})):(p=Array(i.length),u(i,function(t,e){p[e]=s(l[t])})),u(o,function(e,r){var o=Array(i.length);u(i,function(t,n){o[n]=f[p[n]](e[t])}),t(n(o),r)})),r?r.join(c.lineDelimiter):this}},n.prototype.forEach=function(t){return this[this.mode](t)},n}();return y.parse=function(t,e){return new y(t,e).parse()},y.encode=function(t,e){return new y(t,e).encode()},y.forEach=function(t,e,n){return 2==arguments.length&&(n=e),new y(t,e).forEach(n)},y});\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * @namespace platform/exporters\r\n */\r\ndefine('platform/exporters/ExportService',['csv'], function (CSV) {\r\n\r\n    /**\r\n     * Callback used to initiate saving files from the export service;\r\n     * typical implementation is\r\n     * [FileSaver.js](https://github.com/eligrey/FileSaver.js/).\r\n     * @callback platform/exporters.ExportService~saveAs\r\n     * @param {Blob} blob the contents of the file to export\r\n     * @param {string} filename the name of the file to export\r\n     */\r\n\r\n\r\n    /**\r\n     * The `exportService` provides a means to initiate downloads of\r\n     * structured data in the CSV format.\r\n     * @param {platform/exporters.ExportService~saveAs} saveAs function\r\n     *        used to initiate saving files\r\n     * @constructor\r\n     * @memberof platform/exporters\r\n     */\r\n    function ExportService(saveAs) {\r\n        this.saveAs = saveAs;\r\n    }\r\n\r\n    /**\r\n     * Export a set of data as comma-separated values. Triggers a download\r\n     * using the function provided when the ExportService was instantiated.\r\n     *\r\n     * @param {Object[]} rows an array of objects containing key-value pairs,\r\n     *        where keys are header names, and values are values\r\n     * @param {ExportOptions} [options] additional parameters for the file\r\n     *        export\r\n     */\r\n    ExportService.prototype.exportCSV = function (rows, options) {\r\n        var headers = (options && options.headers) ||\r\n                (Object.keys((rows[0] || {})).sort()),\r\n            filename = (options && options.filename) || \"export.csv\",\r\n            csvText = new CSV(rows, { header: headers }).encode(),\r\n            blob = new Blob([csvText], { type: \"text/csv\" });\r\n        this.saveAs(blob, filename);\r\n    };\r\n\r\n    /**\r\n     * Additional parameters for file export.\r\n     * @typedef ExportOptions\r\n     * @property {string} filename the name of the file to write\r\n     * @property {string[]} headers column header names, both as they\r\n     *           should appear in the output and as they should be\r\n     *           used to look up values from the data set. Defaults\r\n     *           to the keys in the first object in the data set.\r\n     */\r\n\r\n    return ExportService;\r\n});\r\n\n","(function(root,factory){'use strict';if(typeof define==='function'&&define.amd){define('saveAs',[],function(){return factory(root)})}else{root.saveAs=root.saveAs||factory(root)}})(this,function saveAsFactory(root,undefined){'use strict';if(root.navigator!==undefined){if(/MSIE [1-9]\\./.test(root.navigator.userAgent)){return}if(root.navigator.msSaveOrOpenBlob){return nativeIeSaveAs}}function nativeIeSaveAs(blob,name){return root.navigator.msSaveOrOpenBlob(autoBom(blob),name)}var view=root.self||root.window||root.content;var saveLinkElement=view.document.createElementNS('http://www.w3.org/1999/xhtml','a');var canUseSaveLink='download'in saveLinkElement;var webkitReqFs=view.webkitRequestFileSystem;var reqFs=view.requestFileSystem||webkitReqFs||view.mozRequestFileSystem;var forceSaveableType='application/octet-stream';var fsMinSize=0;var arbitraryRevokeTimeout=500;var setImmediate=view.setImmediate||view.setTimeout;function saveAs(blob,name){return new FileSaver(blob,name)}var FSProto=FileSaver.prototype;FSProto.abort=fileSaverAbort;FSProto.INIT=0;FSProto.WRITING=1;FSProto.DONE=2;FSProto.readyState=FSProto.INIT;FSProto.error=null;FSProto.onwritestart=null;FSProto.onprogress=null;FSProto.onwrite=null;FSProto.onabort=null;FSProto.onerror=null;FSProto.onwriteend=null;function FileSaver(blob,name){this.blob=blob=autoBom(blob);this.saveUsingObjectURLs=saveUsingObjectURLs;this.execSave=execSave;var filesaver=this;var type=blob.type;var blobChanged=false;var objectUrl;var targetView;filesaver.readyState=filesaver.INIT;name=name||'download';if(canUseSaveLink){return saveUsingLinkElement()}fixChromeSaveableType();fixWebKitDownload();if(!reqFs){return saveUsingObjectURLs()}return saveUsingFyleSystem(filesaver);function saveUsingLinkElement(){objectUrl=getURL().createObjectURL(blob);saveLinkElement.href=objectUrl;saveLinkElement.download=name;setImmediate(function(){triggerClickOnSaveLink();dispatchAll(filesaver);revoke(objectUrl);filesaver.readyState=filesaver.DONE},0)}function fixChromeSaveableType(){if(view.chrome&&type&&type!==forceSaveableType){var slice=blob.slice||blob.webkitSlice;blob=slice.call(blob,0,blob.size,forceSaveableType);blobChanged=true}}function fixWebKitDownload(){if(webkitReqFs&&name!=='download'){name+='.download'}if(type===forceSaveableType||webkitReqFs){targetView=view}}function saveUsingObjectURLs(){if(blobChanged||!objectUrl){objectUrl=getURL().createObjectURL(blob)}execSave(objectUrl)}function execSave(objectUrl,file,event){if(targetView){targetView.location.href=objectUrl}else{var newTab=view.open(objectUrl,'_blank');if(newTab===undefined){view.location.href=objectUrl}}filesaver.readyState=filesaver.DONE;if(!event){dispatchAll(filesaver)}else{dispatch(filesaver,'writeend',event)}revoke(file||objectUrl)}}function fileSaverAbort(){var filesaver=this;filesaver.readyState=filesaver.DONE;dispatch(filesaver,'abort')}function dispatchAll(filesaver){dispatch(filesaver,'writestart progress write writeend'.split(' '))}function dispatch(filesaver,eventTypes,event){eventTypes=[].concat(eventTypes);var i=eventTypes.length;while(i--){var listener=filesaver['on'+eventTypes[i]];if(typeof listener==='function'){try{listener.call(filesaver,event||filesaver)}catch(ex){throwOutside(ex)}}}}function saveUsingFyleSystem(filesaver){fsMinSize+=filesaver.blob.size;var createIfNotFound={create:true,exclusive:false};reqFs(view.TEMPORARY,fsMinSize,abortable(getFyleSystem),filesaver.saveUsingObjectURLs);function getFyleSystem(fs){fs.root.getDirectory('temp',createIfNotFound,abortable(getTempDirectory),filesaver.saveUsingObjectURLs)}function getTempDirectory(dir){dir.getFile(name,{create:false},abortable(getExistentFileForRemove),abortable(existentFileNotFound));function getExistentFileForRemove(file){file.remove(function(){save()})}function existentFileNotFound(ex){if(ex.name==='NotFoundError'){save()}else{filesaver.saveUsingObjectURLs()}}function save(){dir.getFile(name,createIfNotFound,abortable(getFileForWrite),filesaver.saveUsingObjectURLs)}function getFileForWrite(file){file.createWriter(abortable(createWriter),filesaver.saveUsingObjectURLs);function createWriter(writer){writer.onwriteend=onWriterEnd;writer.onerror=onError;bindEventsToWriter();writer.write(blob);filesaver.abort=onAbort;filesaver.readyState=filesaver.WRITING;function onWriterEnd(event){filesaver.execSave(file.toURL(),file,event)}function onError(){var error=writer.error;if(error.code!==error.ABORT_ERR){filesaver.saveUsingObjectURLs()}}function bindEventsToWriter(){'writestart progress write abort'.split(' ').forEach(function(event){writer['on'+event]=filesaver['on'+event]})}function onAbort(){writer.abort();filesaver.readyState=filesaver.DONE}}}}function abortable(func){return function(){if(filesaver.readyState!==filesaver.DONE){return func.apply(this,arguments)}}}}function autoBom(blob){if(/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)){return new Blob(['\\ufeff',blob],{type:blob.type})}return blob}function getURL(){return view.URL||view.webkitURL||view}function revoke(file){setTimeout(revoker,arbitraryRevokeTimeout);function revoker(){if(typeof file==='string'){getURL().revokeObjectURL(file)}else{file.remove(function(){})}}}function throwOutside(ex){setImmediate(function(){throw ex},0)}function triggerClickOnSaveLink(){var event=new MouseEvent('click');saveLinkElement.dispatchEvent(event)}return saveAs});\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/exporters/bundle',[\r\n    \"./ExportService\",\r\n    \"saveAs\",\r\n    \"legacyRegistry\"\r\n], function (ExportService, saveAs, legacyRegistry) {\r\n\r\n    legacyRegistry.register(\"platform/exporters\", {\r\n        extensions: {\r\n            services: [\r\n                {\r\n                    key: \"exportService\",\r\n                    implementation: function () {\r\n                        return new ExportService(saveAs);\r\n                    }\r\n                }\r\n            ],\r\n            licenses: [\r\n                {\r\n                    \"name\": \"CSV.js\",\r\n                    \"version\": \"3.6.4\",\r\n                    \"author\": \"Kash Nouroozi\",\r\n                    \"description\": \"Encoder for CSV (comma separated values) export\",\r\n                    \"website\": \"https://github.com/knrz/CSV.js\",\r\n                    \"copyright\": \"Copyright (c) 2014 Kash Nouroozi\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/knrz/CSV.js/blob/3.6.4/LICENSE\"\r\n                },\r\n                {\r\n                    \"name\": \"FileSaver.js\",\r\n                    \"version\": \"0.0.2\",\r\n                    \"author\": \"Eli Grey\",\r\n                    \"description\": \"File download initiator (for file exports)\",\r\n                    \"website\": \"https://github.com/eligrey/FileSaver.js/\",\r\n                    \"copyright\": \"Copyright © 2015 Eli Grey.\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle provides infrastructure and utility services for handling\r\n * telemetry data.\r\n * @namespace platform/telemetry\r\n */\r\ndefine(\r\n    'platform/telemetry/src/TelemetryAggregator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Describes a request for telemetry data. Note that responses\r\n         * may contain either a sub- or superset of the requested data.\r\n         * @typedef TelemetryRequest\r\n         * @property {string} source an identifier for the relevant\r\n         *           source of telemetry data\r\n         * @property {string} key an identifier for the specific\r\n         *           series of telemetry data provided by that source\r\n         * @property {number} [start] the earliest domain value of\r\n         *           interest for that telemetry data; for time-based\r\n         *           domains, this is in milliseconds since the start\r\n         *           of 1970\r\n         * @property {number} [end] the latest domain value of interest\r\n         *           for that telemetry data; for time-based domains,\r\n         *           this is in milliseconds since 1970\r\n         * @property {string} [domain] the domain for the query; if\r\n         *           omitted, this will be whatever the \"normal\"\r\n         *           domain is for a given telemetry series (the\r\n         *           first domain from its metadata)\r\n         * @property {number} [size] if set, indicates the maximum number\r\n         *           of data points of interest for this request (more\r\n         *           recent domain values will be preferred)\r\n         */\r\n\r\n        /**\r\n         * Request telemetry data.\r\n         * @param {TelemetryRequest[]} requests and array of\r\n         *        requests to be handled\r\n         * @returns {Promise} a promise for telemetry data\r\n         *          which may (or may not, depending on\r\n         *          availability) satisfy the requests\r\n         * @method TelemetryService#requestTelemetry\r\n         */\r\n        /**\r\n         * Subscribe to streaming updates to telemetry data.\r\n         * The provided callback will be invoked as new\r\n         * telemetry becomes available; as an argument, it\r\n         * will receive an object of key-value pairs, where\r\n         * keys are source identifiers and values are objects\r\n         * of key-value pairs, where keys are point identifiers\r\n         * and values are TelemetrySeries objects containing\r\n         * the latest streaming telemetry.\r\n         * @param {Function} callback the callback to invoke\r\n         * @param {TelemetryRequest[]} requests an array of\r\n         *        requests to be subscribed upon\r\n         * @returns {Function} a function which can be called\r\n         *        to unsubscribe\r\n         * @method TelmetryService#subscribe\r\n         */\r\n\r\n        /**\r\n         * A telemetry aggregator makes many telemetry providers\r\n         * appear as one.\r\n         *\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         */\r\n        function TelemetryAggregator($q, telemetryProviders) {\r\n            this.$q = $q;\r\n            this.telemetryProviders = telemetryProviders;\r\n        }\r\n\r\n        // Merge the results from many providers into one\r\n        // result object.\r\n        function mergeResults(results) {\r\n            var merged = {};\r\n\r\n            results.forEach(function (result) {\r\n                Object.keys(result).forEach(function (k) {\r\n                    merged[k] = result[k];\r\n                });\r\n            });\r\n\r\n            return merged;\r\n        }\r\n\r\n        // Request telemetry from all providers; once they've\r\n        // responded, merge the results into one result object.\r\n        TelemetryAggregator.prototype.requestTelemetry = function (requests) {\r\n            return this.$q.all(this.telemetryProviders.map(function (provider) {\r\n                return provider.requestTelemetry(requests);\r\n            })).then(mergeResults);\r\n        };\r\n\r\n        // Subscribe to updates from all providers\r\n        TelemetryAggregator.prototype.subscribe = function (callback, requests) {\r\n            var unsubscribes = this.telemetryProviders.map(function (provider) {\r\n                return provider.subscribe(callback, requests);\r\n            });\r\n\r\n            // Return an unsubscribe function that invokes unsubscribe\r\n            // for all providers.\r\n            return function () {\r\n                unsubscribes.forEach(function (unsubscribe) {\r\n                    if (unsubscribe) {\r\n                        unsubscribe();\r\n                    }\r\n                });\r\n            };\r\n        };\r\n\r\n\r\n        return TelemetryAggregator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining TelemetryController. Created by vwoeltje on 11/12/14.\r\n */\r\ndefine(\r\n    'platform/telemetry/src/TelemetryController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Serves as a reusable controller for views (or parts of views)\r\n         * which need to issue requests for telemetry data and use the\r\n         * results\r\n         *\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @deprecated use platform/telemetry.TelemetryHandler instead\r\n         */\r\n        function TelemetryController($scope, $q, $timeout, $log) {\r\n\r\n            // Private to maintain in this scope\r\n            var self = {\r\n                // IDs of domain objects with telemetry\r\n                ids: [],\r\n\r\n                // Containers for latest responses (id->response)\r\n                // Used internally; see buildResponseContainer\r\n                // for format\r\n                response: {},\r\n\r\n                // Request fields (id->requests)\r\n                request: {},\r\n\r\n                // Number of outstanding requests\r\n                pending: 0,\r\n\r\n                // Array of object metadatas, for easy retrieval\r\n                metadatas: [],\r\n\r\n                // Interval at which to poll for new data\r\n                interval: 1000,\r\n\r\n                // Flag tracking whether or not a request\r\n                // is in progress\r\n                refreshing: false,\r\n\r\n                // Used to track whether a new telemetryUpdate\r\n                // is being issued.\r\n                broadcasting: false,\r\n\r\n                // Active subscriptions\r\n                subscriptions: [],\r\n\r\n                // Used for getTelemetryObjects; a reference is\r\n                // stored so that this can be called in a watch\r\n                telemetryObjects: [],\r\n\r\n                // Whether or not this controller is active; once\r\n                // scope is destroyed, polling should stop.\r\n                active: true\r\n            };\r\n\r\n            // Broadcast that a telemetryUpdate has occurred.\r\n            function doBroadcast() {\r\n                // This may get called multiple times from\r\n                // multiple objects, so set a flag to suppress\r\n                // multiple simultaneous events from being\r\n                // broadcast, then issue the actual broadcast\r\n                // later (via $timeout)\r\n                if (!self.broadcasting) {\r\n                    self.broadcasting = true;\r\n                    $timeout(function () {\r\n                        self.broadcasting = false;\r\n                        $scope.$broadcast(\"telemetryUpdate\");\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Issue a request for new telemetry for one of the\r\n            // objects being tracked by this controller\r\n            function requestTelemetryForId(id, trackPending) {\r\n                var responseObject = self.response[id],\r\n                    domainObject = responseObject.domainObject,\r\n                    telemetry = domainObject.getCapability('telemetry');\r\n\r\n                // Callback for when data comes back\r\n                function storeData(data) {\r\n                    self.pending -= trackPending ? 1 : 0;\r\n                    responseObject.data = data;\r\n                    doBroadcast();\r\n                }\r\n\r\n                self.pending += trackPending ? 1 : 0;\r\n\r\n                // Shouldn't happen, but isn't fatal,\r\n                // so warn.\r\n                if (!telemetry) {\r\n                    $log.warn([\r\n                        \"Expected telemetry capability for \",\r\n                        id,\r\n                        \" but found none. Cannot request data.\"\r\n                    ].join(\"\"));\r\n\r\n                    // Request won't happen, so don't\r\n                    // mark it as pending.\r\n                    self.pending -= trackPending ? 1 : 0;\r\n                    return;\r\n                }\r\n\r\n                // Issue the request using the object's telemetry capability\r\n                return $q.when(telemetry.requestData(self.request))\r\n                    .then(storeData);\r\n            }\r\n\r\n            // Request telemetry for all objects tracked by this\r\n            // controller. A flag is passed to indicate whether the\r\n            // pending counter should be incremented (this will\r\n            // cause isRequestPending() to change, which we only\r\n            // want to happen for requests which have originated\r\n            // outside of this controller's polling action.)\r\n            function requestTelemetry(trackPending) {\r\n                return $q.all(self.ids.map(function (id) {\r\n                    return requestTelemetryForId(id, trackPending);\r\n                }));\r\n            }\r\n\r\n            // Subscribe to streaming telemetry updates\r\n            function subscribe(telemetryCapability, id) {\r\n                return telemetryCapability.subscribe(function () {\r\n                    requestTelemetryForId(id, false);\r\n                });\r\n            }\r\n\r\n            // Stop listening to active subscriptions\r\n            function unsubscribe() {\r\n                self.subscriptions.forEach(function (s) {\r\n                    return s && s();\r\n                });\r\n                self.subscriptions = [];\r\n            }\r\n\r\n            // Look up domain objects which have telemetry capabilities.\r\n            // This will either be the object in view, or object that\r\n            // this object delegates its telemetry capability to.\r\n            function promiseRelevantDomainObjects(domainObject) {\r\n                // If object has been cleared, there are no relevant\r\n                // telemetry-providing domain objects.\r\n                if (!domainObject) {\r\n                    return $q.when([]);\r\n                }\r\n\r\n                // Otherwise, try delegation first, and attach the\r\n                // object itself if it has a telemetry capability.\r\n                return $q.when(domainObject.useCapability(\r\n                    \"delegation\",\r\n                    \"telemetry\"\r\n                )).then(function (result) {\r\n                    var head = domainObject.hasCapability(\"telemetry\") ?\r\n                            [domainObject] : [],\r\n                        tail = result || [];\r\n                    return head.concat(tail);\r\n                });\r\n            }\r\n\r\n            // Build the response containers that are used internally\r\n            // by this controller to track latest responses, etc, for\r\n            // a given domain object.\r\n            function buildResponseContainer(domainObject) {\r\n                var telemetry = domainObject &&\r\n                        domainObject.getCapability(\"telemetry\"),\r\n                    id,\r\n                    metadata;\r\n\r\n                if (telemetry) {\r\n                    id = domainObject.getId();\r\n\r\n                    self.subscriptions.push(subscribe(telemetry, id));\r\n\r\n                    metadata = telemetry.getMetadata();\r\n\r\n                    self.response[id] = {\r\n                        name: domainObject.getModel().name,\r\n                        domainObject: domainObject,\r\n                        metadata: metadata,\r\n                        pending: 0,\r\n                        data: {}\r\n                    };\r\n                } else {\r\n                    // Shouldn't happen, as we've checked for\r\n                    // telemetry capabilities previously, but\r\n                    // be defensive.\r\n                    $log.warn([\r\n                        \"Expected telemetry capability for \",\r\n                        domainObject.getId(),\r\n                        \" but none was found.\"\r\n                    ].join(\"\"));\r\n\r\n                    // Create an empty container so subsequent\r\n                    // behavior won't hit an exception.\r\n                    self.response[domainObject.getId()] = {\r\n                        name: domainObject.getModel().name,\r\n                        domainObject: domainObject,\r\n                        metadata: {},\r\n                        pending: 0,\r\n                        data: {}\r\n                    };\r\n                }\r\n            }\r\n\r\n            // Build response containers (as above) for all\r\n            // domain objects, and update some controller-internal\r\n            // state to support subsequent calls.\r\n            function buildResponseContainers(domainObjects) {\r\n                // Clear out any existing subscriptions\r\n                unsubscribe();\r\n\r\n                // Build the containers\r\n                domainObjects.forEach(buildResponseContainer);\r\n\r\n                // Store the reference to support getTelemetryObjects\r\n                self.telemetryObjects = domainObjects;\r\n\r\n                // Maintain a list of relevant ids, to convert\r\n                // back from dictionary-like container objects to arrays.\r\n                self.ids = domainObjects.map(function (obj) {\r\n                    return obj.getId();\r\n                });\r\n\r\n                // Keep a reference to all applicable metadata\r\n                // to return from getMetadata\r\n                self.metadatas = self.ids.map(function (id) {\r\n                    return self.response[id].metadata;\r\n                });\r\n\r\n                // Issue a request for the new objects, if we\r\n                // know what our request looks like\r\n                if (self.request) {\r\n                    requestTelemetry(true);\r\n                }\r\n            }\r\n\r\n            // Get relevant telemetry-providing domain objects\r\n            // for the domain object which is represented in this\r\n            // scope. This will be the domain object itself, or\r\n            // its telemetry delegates, or both.\r\n            function getTelemetryObjects(domainObject) {\r\n                unsubscribe();\r\n                promiseRelevantDomainObjects(domainObject)\r\n                    .then(buildResponseContainers);\r\n            }\r\n\r\n            // Handle a polling refresh interval\r\n            function startTimeout() {\r\n                if (!self.refreshing && self.interval !== undefined) {\r\n                    self.refreshing = true;\r\n                    $timeout(function () {\r\n                        if (self.request) {\r\n                            requestTelemetry(false);\r\n                        }\r\n\r\n                        self.refreshing = false;\r\n\r\n                        if (self.active) {\r\n                            startTimeout();\r\n                        }\r\n                    }, self.interval);\r\n                }\r\n            }\r\n\r\n            // Stop polling for changes\r\n            function deactivate() {\r\n                unsubscribe();\r\n                self.active = false;\r\n            }\r\n\r\n            // Watch for a represented domain object\r\n            $scope.$watch(\"domainObject\", getTelemetryObjects);\r\n\r\n            // Stop polling when destroyed\r\n            $scope.$on(\"$destroy\", deactivate);\r\n\r\n            // Begin polling for data changes\r\n            startTimeout();\r\n\r\n            return {\r\n                /**\r\n                 * Get all telemetry metadata associated with\r\n                 * telemetry-providing domain objects managed by\r\n                 * this controller.\r\n                 *\r\n                 * This will ordered in the\r\n                 * same manner as `getTelemetryObjects()` or\r\n                 * `getResponse()`; that is, the metadata at a\r\n                 * given index will correspond to the telemetry-providing\r\n                 * domain object at the same index.\r\n                 * @returns {Array} an array of metadata objects\r\n                 * @memberof platform/telemetry.TelemetryController#\r\n                 */\r\n                getMetadata: function () {\r\n                    return self.metadatas;\r\n                },\r\n                /**\r\n                 * Get all telemetry-providing domain objects managed by\r\n                 * this controller.\r\n                 *\r\n                 * This will ordered in the\r\n                 * same manner as `getMetadata()` or\r\n                 * `getResponse()`; that is, the metadata at a\r\n                 * given index will correspond to the telemetry-providing\r\n                 * domain object at the same index.\r\n                 * @returns {DomainObject[]} an array of metadata objects\r\n                 * @memberof platform/telemetry.TelemetryController#\r\n                 */\r\n                getTelemetryObjects: function () {\r\n                    return self.telemetryObjects;\r\n                },\r\n                /**\r\n                 * Get the latest telemetry response for a specific\r\n                 * domain object (if an argument is given) or for all\r\n                 * objects managed by this controller (if no argument\r\n                 * is supplied.)\r\n                 *\r\n                 * In the first form, this returns a single object; in\r\n                 * the second form, it returns an array ordered in\r\n                 * same manner as `getMetadata()` or\r\n                 * `getTelemetryObjects()`; that is, the telemetry\r\n                 * response at a given index will correspond to the\r\n                 * telemetry-providing domain object at the same index.\r\n                 * @returns {Array} an array of responses\r\n                 * @memberof platform/telemetry.TelemetryController#\r\n                 */\r\n                getResponse: function getResponse(arg) {\r\n                    var id = arg && (typeof arg === 'string' ?\r\n                            arg : arg.getId());\r\n\r\n                    if (id) {\r\n                        return (self.response[id] || {}).data;\r\n                    }\r\n\r\n                    return (self.ids || []).map(getResponse);\r\n                },\r\n                /**\r\n                 * Check if the latest request (not counting\r\n                 * requests from TelemtryController's own polling)\r\n                 * is still outstanding. Users of the TelemetryController\r\n                 * may use this method as a condition upon which to\r\n                 * show user feedback, such as a wait spinner.\r\n                 *\r\n                 * @returns {boolean} true if the request is still outstanding\r\n                 * @memberof platform/telemetry.TelemetryController#\r\n                 */\r\n                isRequestPending: function () {\r\n                    return self.pending > 0;\r\n                },\r\n                /**\r\n                 * Issue a new data request. This will change the\r\n                 * request parameters that are passed along to all\r\n                 * telemetry capabilities managed by this controller.\r\n                 * @memberof platform/telemetry.TelemetryController#\r\n                 */\r\n                requestData: function (request) {\r\n                    self.request = request || {};\r\n                    return requestTelemetry(true);\r\n                },\r\n                /**\r\n                 * Change the interval at which this controller will\r\n                 * perform its polling activity.\r\n                 * @param {number} durationMillis the interval at\r\n                 *        which to poll, in milliseconds\r\n                 * @memberof platform/telemetry.TelemetryController#\r\n                 */\r\n                setRefreshInterval: function (durationMillis) {\r\n                    self.interval = durationMillis;\r\n                    startTimeout();\r\n                }\r\n            };\r\n        }\r\n\r\n        return TelemetryController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining TelemetryCapability. Created by vwoeltje on 11/12/14.\r\n */\r\ndefine(\r\n    'platform/telemetry/src/TelemetryCapability',[],\r\n    function () {\r\n\r\n        var ZERO = function () {\r\n            return 0;\r\n        },\r\n            EMPTY_SERIES = {\r\n                getPointCount: ZERO,\r\n                getDomainValue: ZERO,\r\n                getRangeValue: ZERO\r\n            };\r\n\r\n        /**\r\n         * Provides metadata about telemetry associated with a\r\n         * given domain object.\r\n         *\r\n         * @typedef TelemetryMetadata\r\n         * @property {string} source the machine-readable identifier for\r\n         *           the source of telemetry data for this object; used by\r\n         *           {@link TelemetryService} implementations to determine\r\n         *           whether or not they provide data for this object.\r\n         * @property {string} key the machine-readable identifier for\r\n         *           telemetry data associated with this specific object,\r\n         *           within that `source`.\r\n         * @property {TelemetryDomainMetadata[]} domains supported domain\r\n         *           options for telemetry data associated with this object,\r\n         *           to use in interpreting a {@link TelemetrySeries}\r\n         * @property {TelemetryRangeMetadata[]} ranges supported range\r\n         *           options for telemetry data associated with this object,\r\n         *           to use in interpreting a {@link TelemetrySeries}\r\n         */\r\n\r\n        /**\r\n         * Provides metadata about range options within a telemetry series.\r\n         * Range options describe distinct properties within any given datum\r\n         * of a telemetry series; for instance, a telemetry series containing\r\n         * both raw and uncalibrated values may provide separate ranges for\r\n         * each.\r\n         *\r\n         * @typedef TelemetryRangeMetadata\r\n         * @property {string} key machine-readable identifier for this range\r\n         * @property {string} name human-readable name for this range\r\n         * @property {string} [units] human-readable units for this range\r\n         * @property {string} [format] data format for this range; usually,\r\n         *                    one of `number`, or `string`. If `undefined`,\r\n         *                    should presume to be a `number`. Custom formats\r\n         *                    may be indicated here.\r\n         */\r\n\r\n        /**\r\n         * Provides metadata about domain options within a telemetry series.\r\n         * Domain options describe distinct properties within any given datum\r\n         * of a telemtry series; for instance, a telemetry series containing\r\n         * both spacecraft event time and earth received times may provide\r\n         * separate domains for each.\r\n         *\r\n         * Domains are typically used to represent timestamps in a telemetry\r\n         * series, but more generally may express any property which will\r\n         * have unique values for each datum in a series. It is this property\r\n         * which makes domains distinct from ranges, as it makes these values\r\n         * appropriate and meaningful for use to sort and bound a series.\r\n         *\r\n         * @typedef TelemetryDomainMetadata\r\n         * @property {string} key machine-readable identifier for this range\r\n         * @property {string} name human-readable name for this range\r\n         * @property {string} [system] machine-readable identifier for the\r\n         *                    time/date system associated with this domain;\r\n         *                    used by {@link DateService}\r\n         */\r\n\r\n        /**\r\n         * A telemetry capability provides a means of requesting telemetry\r\n         * for a specific object, and for unwrapping the response (to get\r\n         * at the specific data which is appropriate to the domain object.)\r\n         *\r\n         * @memberof platform/telemetry\r\n         * @implements {Capability}\r\n         * @constructor\r\n         */\r\n        function TelemetryCapability($injector, $q, $log, domainObject) {\r\n            // We could depend on telemetryService directly, but\r\n            // there isn't a platform implementation of this.\r\n            this.initializeTelemetryService = function () {\r\n                try {\r\n                    return (this.telemetryService =\r\n                        $injector.get(\"telemetryService\"));\r\n                } catch (e) {\r\n                    // $injector should throw if telemetryService\r\n                    // is unavailable or unsatisfiable.\r\n                    $log.warn(\"Telemetry service unavailable\");\r\n                    return (this.telemetryService = null);\r\n                }\r\n            };\r\n\r\n\r\n            this.$q = $q;\r\n            this.$log = $log;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        // Build a request object. This takes the request that was\r\n        // passed to the capability, and adds source, id, and key\r\n        // fields associated with the object (from its type definition\r\n        // and/or its model)\r\n        TelemetryCapability.prototype.buildRequest = function (request) {\r\n            // Start with any \"telemetry\" field in type; use that as a\r\n            // basis for the request.\r\n            var domainObject = this.domainObject,\r\n                type = domainObject.getCapability(\"type\"),\r\n                typeRequest = (type && type.getDefinition().telemetry) || {},\r\n                modelTelemetry = domainObject.getModel().telemetry,\r\n                fullRequest = Object.create(typeRequest);\r\n\r\n            // Add properties from the telemetry field of this\r\n            // specific domain object.\r\n            Object.keys(modelTelemetry).forEach(function (k) {\r\n                fullRequest[k] = modelTelemetry[k];\r\n            });\r\n\r\n            // Add properties from this specific requestData call.\r\n            Object.keys(request).forEach(function (k) {\r\n                fullRequest[k] = request[k];\r\n            });\r\n\r\n            // Ensure an ID and key are present\r\n            if (!fullRequest.id) {\r\n                fullRequest.id = domainObject.getId();\r\n            }\r\n            if (!fullRequest.key) {\r\n                fullRequest.key = domainObject.getId();\r\n            }\r\n\r\n            return fullRequest;\r\n        };\r\n\r\n\r\n        /**\r\n         * Request telemetry data for this specific domain object.\r\n         * @param {TelemetryRequest} [request] parameters for this\r\n         *        specific request\r\n         * @returns {Promise} a promise for the resulting telemetry\r\n         *          object\r\n         */\r\n        TelemetryCapability.prototype.requestData = function requestTelemetry(request) {\r\n            // Bring in any defaults from the object model\r\n            var fullRequest = this.buildRequest(request || {}),\r\n                source = fullRequest.source,\r\n                key = fullRequest.key,\r\n                telemetryService = this.telemetryService ||\r\n                    this.initializeTelemetryService(); // Lazy initialization\r\n\r\n            // Pull out the relevant field from the larger,\r\n            // structured response.\r\n            function getRelevantResponse(response) {\r\n                return ((response || {})[source] || {})[key] ||\r\n                    EMPTY_SERIES;\r\n            }\r\n\r\n            // Issue a request to the service\r\n            function requestTelemetryFromService() {\r\n                return telemetryService.requestTelemetry([fullRequest]);\r\n            }\r\n\r\n            // If a telemetryService is not available,\r\n            // getTelemetryService() should reject, and this should\r\n            // bubble through subsequent then calls.\r\n            return telemetryService &&\r\n                requestTelemetryFromService().then(getRelevantResponse);\r\n        };\r\n\r\n        /**\r\n         * Get metadata about this domain object's associated\r\n         * telemetry.\r\n         * @returns {TelemetryMetadata} metadata about this object's telemetry\r\n         */\r\n        TelemetryCapability.prototype.getMetadata = function () {\r\n            // metadata just looks like a request,\r\n            // so use buildRequest to bring in both\r\n            // type-level and object-level telemetry\r\n            // properties\r\n            return (this.metadata = this.metadata || this.buildRequest({}));\r\n        };\r\n\r\n        /**\r\n         * Subscribe to updates to telemetry data for this domain\r\n         * object.\r\n         * @param {Function} callback a function to call when new\r\n         *        data becomes available; the telemetry series\r\n         *        containing the data will be given as an argument.\r\n         * @param {TelemetryRequest} [request] parameters for the\r\n         *        subscription request\r\n         */\r\n        TelemetryCapability.prototype.subscribe = function subscribe(callback, request) {\r\n            var fullRequest = this.buildRequest(request || {}),\r\n                telemetryService = this.telemetryService ||\r\n                    this.initializeTelemetryService(); // Lazy initialization\r\n\r\n            // Unpack the relevant telemetry series\r\n            function update(telemetries) {\r\n                var source = fullRequest.source,\r\n                    key = fullRequest.key,\r\n                    result = ((telemetries || {})[source] || {})[key];\r\n                if (result) {\r\n                    callback(result);\r\n                }\r\n            }\r\n\r\n            return telemetryService &&\r\n                telemetryService.subscribe(update, [fullRequest]);\r\n        };\r\n\r\n        /**\r\n         * The telemetry capability is applicable when a\r\n         * domain object model has a \"telemetry\" field.\r\n         */\r\n        TelemetryCapability.appliesTo = function (model) {\r\n            return (model && model.telemetry) ? true : false;\r\n        };\r\n\r\n        return TelemetryCapability;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetryFormatter',[],\r\n    function () {\r\n\r\n        /**\r\n         * The TelemetryFormatter is responsible for formatting (as text\r\n         * for display) values along either the domain (usually time) or\r\n         * the range (usually value) of a data series.\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @param {FormatService} formatService the service to user to format\r\n         *        domain values\r\n         * @param {string} defaultFormatKey the format to request when no\r\n         *        format has been otherwise specified\r\n         */\r\n        function TelemetryFormatter(formatService, defaultFormatKey) {\r\n            this.formatService = formatService;\r\n            this.defaultFormat = formatService.getFormat(defaultFormatKey);\r\n        }\r\n\r\n        /**\r\n         * Format a domain value.\r\n         * @param {number} v the domain value; usually, a timestamp\r\n         *        in milliseconds since start of 1970\r\n         * @param {string} [key] a key which identifies the format\r\n         *        to use\r\n         * @returns {string} a textual representation of the\r\n         *        data and time, suitable for display.\r\n         */\r\n        TelemetryFormatter.prototype.formatDomainValue = function (v, key) {\r\n            var formatter = (key === undefined) ?\r\n                    this.defaultFormat :\r\n                    this.formatService.getFormat(key);\r\n\r\n            return isNaN(v) ? \"\" : formatter.format(v);\r\n        };\r\n\r\n        /**\r\n         * Format a range value.\r\n         * @param {number} v the range value; a numeric value\r\n         * @param {string} [key] the key which identifies the\r\n         *        range; if unspecified or unknown, this will\r\n         *        be treated as a numeric value.\r\n         * @returns {string} a textual representation of the\r\n         *        value, suitable for display.\r\n         */\r\n        TelemetryFormatter.prototype.formatRangeValue = function (v, key) {\r\n            return String(v);\r\n        };\r\n\r\n        return TelemetryFormatter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetryQueue',[],\r\n    function () {\r\n\r\n        /**\r\n         * Supports TelemetrySubscription. Provides a simple data structure\r\n         * (with a pool-like interface) that aggregates key-value pairs into\r\n         * a queued series of large objects, ensuring that no value is\r\n         * overwritten (but consolidated non-overlapping keys into single\r\n         * objects.)\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @implements {platform/telemetry.TelemetryPool}\r\n         */\r\n        function TelemetryQueue() {\r\n            // General approach here:\r\n            // * Maintain a queue as an array of objects containing key-value\r\n            //   pairs. Putting values into the queue will assign to the\r\n            //   earliest-available queue position for the associated key\r\n            //   (appending to the array if necessary.)\r\n            // * Maintain a set of counts for each key, such that determining\r\n            //   the next available queue position is easy; O(1) insertion.\r\n            // * When retrieving objects, pop off the queue and decrement\r\n            //   counts. This provides O(n+k) or O(k) retrieval for a queue\r\n            //   of length n with k unique keys; this depends on whether\r\n            //   the browser's implementation of Array.prototype.shift is\r\n            //   O(n) or O(1).\r\n\r\n            // Graphically (indexes at top, keys along side, values as *'s),\r\n            // if we have a queue that looks like:\r\n            //   0 1 2 3 4\r\n            // a * * * * *\r\n            // b * *\r\n            // c * * *\r\n            //\r\n            // And we put a new value for b, we expect:\r\n            //   0 1 2 3 4\r\n            // a * * * * *\r\n            // b * * *\r\n            // c * * *\r\n\r\n            this.queue = [];\r\n            this.counts = {};\r\n        }\r\n\r\n\r\n        TelemetryQueue.prototype.isEmpty = function () {\r\n            return this.queue.length < 1;\r\n        };\r\n\r\n        TelemetryQueue.prototype.poll = function () {\r\n            var counts = this.counts;\r\n\r\n            // Decrement counts for a specific key\r\n            function decrementCount(key) {\r\n                if (counts[key] < 2) {\r\n                    delete counts[key];\r\n                } else {\r\n                    counts[key] -= 1;\r\n                }\r\n            }\r\n\r\n            // Decrement counts for the object that will be popped\r\n            Object.keys(counts).forEach(decrementCount);\r\n            return this.queue.shift();\r\n        };\r\n\r\n        TelemetryQueue.prototype.put = function (key, value) {\r\n            var queue = this.queue,\r\n                counts = this.counts;\r\n\r\n            // Look up an object in the queue that does not have a value\r\n            // assigned to this key (or, add a new one)\r\n            function getFreeObject(k) {\r\n                var index = counts[k] || 0, object;\r\n\r\n                // Track the largest free position for this key\r\n                counts[k] = index + 1;\r\n\r\n                // If it's before the end of the queue, add it there\r\n                if (index < queue.length) {\r\n                    return queue[index];\r\n                }\r\n\r\n                // Otherwise, values have been assigned\r\n                // to that key in all queued containers, so we need to queue\r\n                // up a new  container for key-value pairs.\r\n                object = {};\r\n                queue.push(object);\r\n                return object;\r\n            }\r\n\r\n            getFreeObject(key)[key] = value;\r\n        };\r\n\r\n        return TelemetryQueue;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetryTable',[],\r\n    function () {\r\n\r\n        /**\r\n         * Supports TelemetrySubscription. Provides a simple data structure\r\n         * (with a pool-like interface) that aggregates key-value pairs into\r\n         * one large object, overwriting new values as necessary. Stands\r\n         * in contrast to the TelemetryQueue, which will avoid overwriting\r\n         * values.\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @implements {platform/telemetry.TelemetryPool}\r\n         */\r\n        function TelemetryTable() {\r\n        }\r\n\r\n        TelemetryTable.prototype.isEmpty = function () {\r\n            return !this.table;\r\n        };\r\n\r\n        TelemetryTable.prototype.poll = function () {\r\n            var t = this.table;\r\n            this.table = undefined;\r\n            return t;\r\n        };\r\n\r\n        TelemetryTable.prototype.put = function (key, value) {\r\n            this.table = this.table || {};\r\n            this.table[key] = value;\r\n        };\r\n\r\n        return TelemetryTable;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetryDelegator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Used to handle telemetry delegation associated with a\r\n         * given domain object.\r\n         * @constructor\r\n         * @memberof platform/telemetry\r\n         */\r\n        function TelemetryDelegator($q) {\r\n            this.$q = $q;\r\n        }\r\n\r\n        /**\r\n         * Promise telemetry-providing objects associated with\r\n         * this domain object (either the domain object itself,\r\n         * or the objects it delegates)\r\n         * @param {DomainObject} the domain object which may have\r\n         *        or delegate telemetry\r\n         * @returns {Promise.<DomainObject[]>} domain objects with\r\n         *          a telemetry capability\r\n         */\r\n        TelemetryDelegator.prototype.promiseTelemetryObjects = function (domainObject) {\r\n            var $q = this.$q;\r\n\r\n            // If object has been cleared, there are no relevant\r\n            // telemetry-providing domain objects.\r\n            if (!domainObject) {\r\n                return $q.when([]);\r\n            }\r\n\r\n            // Otherwise, try delegation first, and attach the\r\n            // object itself if it has a telemetry capability.\r\n            return $q.when(domainObject.useCapability(\r\n                \"delegation\",\r\n                \"telemetry\"\r\n            )).then(function (result) {\r\n                var head = domainObject.hasCapability(\"telemetry\") ?\r\n                        [domainObject] : [],\r\n                    tail = result || [];\r\n                return head.concat(tail);\r\n            });\r\n        };\r\n\r\n        return TelemetryDelegator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetrySubscription',['./TelemetryQueue', './TelemetryTable', './TelemetryDelegator'],\r\n    function (TelemetryQueue, TelemetryTable, TelemetryDelegator) {\r\n\r\n        /**\r\n         * A pool of telemetry values.\r\n         * @interface platform/telemetry.TelemetryPool\r\n         * @private\r\n         */\r\n        /**\r\n         * Check if any value groups remain in this pool.\r\n         * @return {boolean} true if value groups remain\r\n         * @method platform/telemetry.TelemetryPool#isEmpty\r\n         */\r\n        /**\r\n         * Retrieve the next value group from this pool.\r\n         * This gives an object containing key-value pairs,\r\n         * where keys and values correspond to the arguments\r\n         * given to previous put functions.\r\n         * @return {object} key-value pairs\r\n         * @method platform/telemetry.TelemetryPool#poll\r\n         */\r\n        /**\r\n         * Put a key-value pair into the pool.\r\n         * @param {string} key the key to store the value under\r\n         * @param {*} value the value to store\r\n         * @method platform/telemetry.TelemetryPool#put\r\n         */\r\n\r\n\r\n        /**\r\n         * A TelemetrySubscription tracks latest values for streaming\r\n         * telemetry data and handles notifying interested observers.\r\n         * It implements the interesting behavior behind the\r\n         * `telemetrySubscriber` service.\r\n         *\r\n         * Subscriptions may also be made directly using the\r\n         * `telemetry` capability of a domain objcet; the subscriber\r\n         * uses this as well, but additionally handles delegation\r\n         * (e.g. for telemetry panels) as well as latest-value\r\n         * extraction.\r\n         *\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @param $q Angular's $q\r\n         * @param $timeout Angular's $timeout\r\n         * @param {DomainObject} domainObject the object whose\r\n         *        associated telemetry data is of interest\r\n         * @param {Function} callback a function to invoke\r\n         *        when new data has become available.\r\n         * @param {boolean} lossless true if callback should be invoked\r\n         *        once with every data point available; otherwise, multiple\r\n         *        data events in a short period of time will only invoke\r\n         *        the callback once, with access to the latest data\r\n         */\r\n        function TelemetrySubscription($q, $timeout, domainObject, callback, lossless) {\r\n            var self = this,\r\n                delegator = new TelemetryDelegator($q),\r\n                pool = lossless ? new TelemetryQueue() : new TelemetryTable(),\r\n                updatePending;\r\n\r\n            // Look up domain objects which have telemetry capabilities.\r\n            // This will either be the object in view, or object that\r\n            // this object delegates its telemetry capability to.\r\n            function promiseRelevantObjects(domainObj) {\r\n                return delegator.promiseTelemetryObjects(domainObj);\r\n            }\r\n\r\n            function updateValuesFromPool() {\r\n                var values = pool.poll();\r\n                Object.keys(values).forEach(function (k) {\r\n                    self.latestValues[k] = values[k];\r\n                });\r\n            }\r\n\r\n            // Invoke the observer callback to notify that new streaming\r\n            // data has become available.\r\n            function fireCallback() {\r\n                // Play back from queue if we are lossless\r\n                while (!pool.isEmpty()) {\r\n                    updateValuesFromPool();\r\n                    // Fire callback, if one was provided\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }\r\n\r\n                // Clear the pending flag so that future updates will\r\n                // schedule this callback.\r\n                updatePending = false;\r\n            }\r\n\r\n\r\n            // Look up metadata associated with an object's telemetry\r\n            function lookupMetadata(domainObj) {\r\n                var telemetryCapability =\r\n                    domainObj.getCapability(\"telemetry\");\r\n                return telemetryCapability &&\r\n                        telemetryCapability.getMetadata();\r\n            }\r\n\r\n            // Update the latest telemetry data for a specific\r\n            // domain object. This will notify listeners.\r\n            function update(domainObj, series) {\r\n                var count = series && series.getPointCount();\r\n\r\n                // Only schedule notification if there isn't already\r\n                // a notification pending (and if we actually have\r\n                // data)\r\n                if (!updatePending && count) {\r\n                    updatePending = true;\r\n                    $timeout(fireCallback, 0);\r\n                }\r\n\r\n                // Update the latest-value table\r\n                if (count > 0) {\r\n                    pool.put(domainObj.getId(), {\r\n                        domain: series.getDomainValue(count - 1),\r\n                        range: series.getRangeValue(count - 1),\r\n                        datum: self.makeDatum(domainObj, series, count - 1)\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Prepare a subscription to a specific telemetry-providing\r\n            // domain object.\r\n            function subscribe(domainObj) {\r\n                var telemetryCapability =\r\n                    domainObj.getCapability(\"telemetry\");\r\n                return telemetryCapability.subscribe(function (telemetry) {\r\n                    update(domainObj, telemetry);\r\n                });\r\n            }\r\n\r\n            // Prepare subscriptions to all relevant telemetry-providing\r\n            // domain objects.\r\n            function subscribeAll(domainObjects) {\r\n                return domainObjects.map(subscribe);\r\n            }\r\n\r\n            // Cache a reference to all relevant telemetry-providing\r\n            // domain objects. This will be called during the\r\n            // initial subscription chain; this allows `getTelemetryObjects()`\r\n            // to return a non-Promise to simplify usage elsewhere.\r\n            function cacheObjectReferences(objects) {\r\n                self.telemetryObjects = objects;\r\n                self.metadatas = objects.map(lookupMetadata);\r\n\r\n                self.metadataById = {};\r\n                objects.forEach(function (obj, i) {\r\n                    self.metadataById[obj.getId()] = self.metadatas[i];\r\n                });\r\n                // Fire callback, as this will be the first time that\r\n                // telemetry objects are available, or these objects\r\n                // will have changed.\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return objects;\r\n            }\r\n\r\n            function initialize() {\r\n                // Get a reference to relevant objects (those with telemetry\r\n                // capabilities) and subscribe to their telemetry updates.\r\n                // Keep a reference to their promised return values, as these\r\n                // will be unsubscribe functions. (This must be a promise\r\n                // because delegation is supported, and retrieving delegate\r\n                // telemetry-capable objects may be an asynchronous operation.)\r\n                self.telemetryObjectPromise = promiseRelevantObjects(domainObject);\r\n                self.unsubscribePromise = self.telemetryObjectPromise\r\n                        .then(cacheObjectReferences)\r\n                        .then(subscribeAll);\r\n            }\r\n\r\n            function idsMatch(ids) {\r\n                return ids.length === self.telemetryObjects.length &&\r\n                    ids.every(function (id, index) {\r\n                        return self.telemetryObjects[index].getId() === id;\r\n                    });\r\n            }\r\n\r\n            function modelChange(model) {\r\n                if (!idsMatch((model || {}).composition || [])) {\r\n                    // Reinitialize if composition has changed\r\n                    self.unsubscribeAll().then(initialize);\r\n                }\r\n            }\r\n\r\n            function addMutationListener() {\r\n                var mutation = domainObject &&\r\n                    domainObject.getCapability('mutation');\r\n                if (mutation) {\r\n                    return mutation.listen(modelChange);\r\n                }\r\n            }\r\n\r\n            this.$q = $q;\r\n            this.latestValues = {};\r\n            this.telemetryObjects = [];\r\n            this.metadatas = [];\r\n\r\n            initialize();\r\n            this.unlistenToMutation = addMutationListener();\r\n        }\r\n\r\n\r\n        /**\r\n         * From a telemetry series, retrieve a single data point\r\n         * containing all fields for domains/ranges\r\n         * @private\r\n         */\r\n        TelemetrySubscription.prototype.makeDatum = function (domainObject, series, index) {\r\n            var id = domainObject && domainObject.getId(),\r\n                metadata = (id && this.metadataById[id]) || {},\r\n                result = {};\r\n\r\n            (metadata.domains || []).forEach(function (domain) {\r\n                result[domain.key] =\r\n                    series.getDomainValue(index, domain.key);\r\n            });\r\n\r\n            (metadata.ranges || []).forEach(function (range) {\r\n                result[range.key] =\r\n                    series.getRangeValue(index, range.key);\r\n            });\r\n\r\n            return result;\r\n        };\r\n\r\n        /**\r\n         * Terminate all underlying subscriptions.\r\n         * @private\r\n         */\r\n        TelemetrySubscription.prototype.unsubscribeAll = function () {\r\n            var $q = this.$q;\r\n            return this.unsubscribePromise.then(function (unsubscribes) {\r\n                return $q.all(unsubscribes.map(function (unsubscribe) {\r\n                    return unsubscribe();\r\n                }));\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Terminate all underlying subscriptions associated\r\n         * with this object.\r\n         */\r\n        TelemetrySubscription.prototype.unsubscribe = function () {\r\n            if (this.unlistenToMutation) {\r\n                this.unlistenToMutation();\r\n            }\r\n            return this.unsubscribeAll();\r\n        };\r\n\r\n        /**\r\n         * Get the most recent domain value that has been observed\r\n         * for the specified domain object. This will typically be\r\n         * a timestamp.\r\n         *\r\n         * The domain object passed here should be one that is\r\n         * subscribed-to here; that is, it should be one of the\r\n         * domain objects returned by `getTelemetryObjects()`.\r\n         *\r\n         * @param {DomainObject} domainObject the object of interest\r\n         * @param {string} [key] the symbolic identifier of the domain\r\n         *        to look up; if omitted, the value for this object's\r\n         *        default domain will be used\r\n         * @returns the most recent domain value observed\r\n         */\r\n        TelemetrySubscription.prototype.getDomainValue = function (domainObject, key) {\r\n            var id = domainObject.getId(),\r\n                latestValue = this.latestValues[id];\r\n            return latestValue && (key ?\r\n                                   latestValue.datum[key] :\r\n                                   latestValue.domain);\r\n        };\r\n\r\n        /**\r\n         * Get the most recent range value that has been observed\r\n         * for the specified domain object. This will typically\r\n         * be a numeric measurement.\r\n         *\r\n         * The domain object passed here should be one that is\r\n         * subscribed-to here; that is, it should be one of the\r\n         * domain objects returned by `getTelemetryObjects()`.\r\n         *\r\n         * @param {DomainObject} domainObject the object of interest\r\n         * @param {string} [key] the symbolic identifier of the range\r\n         *        to look up; if omitted, the value for this object's\r\n         *        default range will be used\r\n         * @returns the most recent range value observed\r\n         */\r\n        TelemetrySubscription.prototype.getRangeValue = function (domainObject, key) {\r\n            var id = domainObject.getId(),\r\n                latestValue = this.latestValues[id];\r\n            return latestValue && (key ?\r\n                                   latestValue.datum[key] :\r\n                                   latestValue.range);\r\n        };\r\n\r\n        /**\r\n         * Get the latest telemetry datum for this domain object.\r\n         *\r\n         * @param {DomainObject} domainObject the object of interest\r\n         * @returns {TelemetryDatum} the most recent datum\r\n         */\r\n        TelemetrySubscription.prototype.getDatum = function (domainObject) {\r\n            var id = domainObject.getId();\r\n            return (this.latestValues[id] || {}).datum;\r\n        };\r\n\r\n        /**\r\n         * Get all telemetry-providing domain objects which are\r\n         * being observed as part of this subscription.\r\n         *\r\n         * Capability delegation will be taken into account (so, if\r\n         * a Telemetry Panel was passed in the constructor, this will\r\n         * return its contents.) Capability delegation is resolved\r\n         * asynchronously so the return value here may change over\r\n         * time; while this resolution is pending, this method will\r\n         * return an empty array.\r\n         *\r\n         * @returns {DomainObject[]} all subscribed-to domain objects\r\n         */\r\n        TelemetrySubscription.prototype.getTelemetryObjects = function () {\r\n            return this.telemetryObjects;\r\n        };\r\n\r\n        /**\r\n         * Get all telemetry metadata associated with\r\n         * telemetry-providing domain objects managed by\r\n         * this controller.\r\n         *\r\n         * This will ordered in the\r\n         * same manner as `getTelemetryObjects()` or\r\n         * `getResponse()`; that is, the metadata at a\r\n         * given index will correspond to the telemetry-providing\r\n         * domain object at the same index.\r\n         * @returns {TelemetryMetadata[]} an array of metadata objects\r\n         */\r\n        TelemetrySubscription.prototype.getMetadata = function () {\r\n            return this.metadatas;\r\n        };\r\n\r\n        /**\r\n         * Get a promise for all telemetry-providing objects\r\n         * associated with this subscription.\r\n         * @returns {Promise.<DomainObject[]>} a promise for\r\n         *          telemetry-providing objects\r\n         * @memberof platform/telemetry.TelemetrySubscription#\r\n         */\r\n        TelemetrySubscription.prototype.promiseTelemetryObjects = function () {\r\n            // Unsubscribe promise is available after objects\r\n            // are loaded.\r\n            return this.telemetryObjectPromise;\r\n        };\r\n\r\n        return TelemetrySubscription;\r\n\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetrySubscriber',[\"./TelemetrySubscription\"],\r\n    function (TelemetrySubscription) {\r\n\r\n        /**\r\n         * The TelemetrySubscriber is a service which allows\r\n         * subscriptions to be made for new data associated with\r\n         * domain objects. It is exposed as a service named\r\n         * `telemetrySubscriber`.\r\n         *\r\n         * Subscriptions may also be made directly using the\r\n         * `telemetry` capability of a domain objcet; the subscriber\r\n         * uses this as well, but additionally handles delegation\r\n         * (e.g. for telemetry panels) as well as latest-value\r\n         * extraction.\r\n         *\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @param $q Angular's $q\r\n         * @param $timeout Angular's $timeout\r\n         */\r\n        function TelemetrySubscriber($q, $timeout) {\r\n            this.$q = $q;\r\n            this.$timeout = $timeout;\r\n        }\r\n\r\n        /**\r\n         * Subscribe to streaming telemetry updates\r\n         * associated with this domain object (either\r\n         * directly or via capability delegation.)\r\n         *\r\n         * @param {DomainObject} domainObject the object whose\r\n         *        associated telemetry data is of interest\r\n         * @param {Function} callback a function to invoke\r\n         *        when new data has become available.\r\n         * @param {boolean} lossless flag to indicate whether the\r\n         *        callback should be notified for all values\r\n         *        (otherwise, multiple values in quick succession\r\n         *        will call back with only the latest value.)\r\n         * @returns {platform/telemetry.TelemetrySubscription} the\r\n         *        subscription, which will provide access to latest values.\r\n         */\r\n        TelemetrySubscriber.prototype.subscribe = function (domainObject, callback, lossless) {\r\n            return new TelemetrySubscription(\r\n                this.$q,\r\n                this.$timeout,\r\n                domainObject,\r\n                callback,\r\n                lossless\r\n            );\r\n        };\r\n\r\n        return TelemetrySubscriber;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetryHandle',[],\r\n    function () {\r\n\r\n        /**\r\n         * A telemetry handle acts as a helper in issuing requests for\r\n         * new telemetry as well as subscribing to real-time updates\r\n         * for the same telemetry series. This is exposed through the\r\n         * `telemetryHandler` service.\r\n         * @param $q Angular's $q, for promises\r\n         * @param {TelemetrySubscription} subscription a subscription\r\n         *        to supplied telemetry\r\n         * @constructor\r\n         * @memberof platform/telemetry\r\n         */\r\n        function TelemetryHandle($q, subscription) {\r\n            var seriesMap = {},\r\n                active = true,\r\n                self = Object.create(subscription);\r\n\r\n            // Request a telemetry series for this specific object\r\n            function requestSeries(telemetryObject, request, callback) {\r\n                var id = telemetryObject.getId(),\r\n                    telemetry = telemetryObject.getCapability('telemetry');\r\n\r\n                function receiveSeries(series) {\r\n                    // Store it for subsequent lookup\r\n                    seriesMap[id] = series;\r\n                    // Notify callback of new series data, if there is one\r\n                    if (callback && active) {\r\n                        callback(telemetryObject, series);\r\n                    }\r\n                    // Pass it along for promise-chaining\r\n                    return series;\r\n                }\r\n\r\n                // Issue the request via the object's telemetry capability\r\n                return telemetry.requestData(request).then(receiveSeries);\r\n            }\r\n\r\n            self.unsubscribe = function () {\r\n                active = false;\r\n                return subscription.unsubscribe();\r\n            };\r\n\r\n            /**\r\n             * Get the most recently obtained telemetry data series associated\r\n             * with this domain object.\r\n             * @param {DomainObject} the domain object which has telemetry\r\n             *        data associated with it\r\n             * @return {TelemetrySeries} the most recent telemetry series\r\n             *         (or undefined if there is not one)\r\n             * @memberof platform/telemetry.TelemetryHandle#\r\n             */\r\n            self.getSeries = function (domainObject) {\r\n                var id = domainObject.getId();\r\n                return seriesMap[id];\r\n            };\r\n\r\n\r\n            /**\r\n             * Change the request duration.\r\n             * @param {TelemetryRequest} request the request to issue\r\n             * @param {Function} [callback] a callback that will be\r\n             *        invoked as new data becomes available, with the\r\n             *        domain object for which new data is available.\r\n             * @memberof platform/telemetry.TelemetryHandle#\r\n             */\r\n            self.request = function (request, callback) {\r\n                // Issue (and handle) the new request from this object\r\n                function issueRequest(telemetryObject) {\r\n                    return requestSeries(telemetryObject, request, callback);\r\n                }\r\n\r\n                // Map the request to all telemetry objects\r\n                function issueRequests(telemetryObjects) {\r\n                    return $q.all(telemetryObjects.map(issueRequest));\r\n                }\r\n\r\n                // If the request is a simple number, treat it as a duration\r\n                request = (typeof request === 'number') ?\r\n                        { duration: request } : request;\r\n\r\n                // Look up telemetry-providing objects from the subscription,\r\n                // then issue new requests.\r\n                return subscription.promiseTelemetryObjects()\r\n                    .then(issueRequests);\r\n            };\r\n\r\n            /**\r\n             * Get the latest telemetry datum for this domain object. This\r\n             * will be from real-time telemetry, unless an index is specified,\r\n             * in which case it will be pulled from the historical telemetry\r\n             * series at the specified index. If there is no latest available\r\n             * datum, this will return undefined.\r\n             *\r\n             * @param {DomainObject} domainObject the object of interest\r\n             * @param {number} [index] the index of the data of interest\r\n             * @returns {TelemetryDatum} the most recent datum\r\n             */\r\n            self.getDatum = function (telemetryObject, index) {\r\n                function makeNewDatum(series) {\r\n                    return series ?\r\n                        subscription.makeDatum(telemetryObject, series, index) :\r\n                        undefined;\r\n                }\r\n\r\n                return typeof index !== 'number' ?\r\n                        subscription.getDatum(telemetryObject) :\r\n                        makeNewDatum(this.getSeries(telemetryObject));\r\n            };\r\n\r\n            return self;\r\n        }\r\n\r\n        return TelemetryHandle;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/telemetry/src/TelemetryHandler',['./TelemetryHandle'],\r\n    function (TelemetryHandle) {\r\n\r\n\r\n        /**\r\n         * A TelemetryRequester provides an easy interface to request\r\n         * telemetry associated with a set of domain objects.\r\n         *\r\n         * @memberof platform/telemetry\r\n         * @constructor\r\n         * @param $q Angular's $q\r\n         */\r\n        function TelemetryHandler($q, telemetrySubscriber) {\r\n            this.$q = $q;\r\n            this.telemetrySubscriber = telemetrySubscriber;\r\n        }\r\n\r\n        /**\r\n         * Start receiving telemetry associated with this domain object\r\n         * (either directly, or via delegation.)\r\n         * @param {DomainObject} domainObject the domain object\r\n         * @param {Function} callback callback to invoke when new data is\r\n         *        available\r\n         * @param {boolean} lossless true if the callback should be invoked\r\n         *        one separate time for each new latest value\r\n         * @returns {TelemetryHandle} a handle to telemetry data\r\n         *          associated with this object\r\n         */\r\n        TelemetryHandler.prototype.handle = function (domainObject, callback, lossless) {\r\n            var subscription = this.telemetrySubscriber.subscribe(\r\n                domainObject,\r\n                callback,\r\n                lossless\r\n            );\r\n\r\n            return new TelemetryHandle(this.$q, subscription);\r\n        };\r\n\r\n        return TelemetryHandler;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/telemetry/bundle',[\r\n    \"./src/TelemetryAggregator\",\r\n    \"./src/TelemetryController\",\r\n    \"./src/TelemetryCapability\",\r\n    \"./src/TelemetryFormatter\",\r\n    \"./src/TelemetrySubscriber\",\r\n    \"./src/TelemetryHandler\",\r\n    'legacyRegistry'\r\n], function (\r\n    TelemetryAggregator,\r\n    TelemetryController,\r\n    TelemetryCapability,\r\n    TelemetryFormatter,\r\n    TelemetrySubscriber,\r\n    TelemetryHandler,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/telemetry\", {\r\n        \"name\": \"Data bundle\",\r\n        \"description\": \"Interfaces and infrastructure for real-time and historical data\",\r\n        \"configuration\": {\r\n            \"paths\": {\r\n                \"moment\": \"moment.min\"\r\n            },\r\n            \"shim\": {\r\n                \"moment\": {\r\n                    \"exports\": \"moment\"\r\n                }\r\n            }\r\n        },\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"telemetryService\",\r\n                    \"type\": \"aggregator\",\r\n                    \"implementation\": TelemetryAggregator,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"TelemetryController\",\r\n                    \"implementation\": TelemetryController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$q\",\r\n                        \"$timeout\",\r\n                        \"$log\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"capabilities\": [\r\n                {\r\n                    \"key\": \"telemetry\",\r\n                    \"implementation\": TelemetryCapability,\r\n                    \"depends\": [\r\n                        \"$injector\",\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"telemetryFormatter\",\r\n                    \"implementation\": TelemetryFormatter,\r\n                    \"depends\": [\r\n                        \"formatService\",\r\n                        \"DEFAULT_TIME_FORMAT\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"telemetrySubscriber\",\r\n                    \"implementation\": TelemetrySubscriber,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$timeout\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"telemetryHandler\",\r\n                    \"implementation\": TelemetryHandler,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"telemetrySubscriber\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"Moment.js\",\r\n                    \"version\": \"2.11.1\",\r\n                    \"author\": \"Tim Wood, Iskren Chernev, Moment.js contributors\",\r\n                    \"description\": \"Time/date parsing/formatting\",\r\n                    \"website\": \"http://momentjs.com\",\r\n                    \"copyright\": \"Copyright (c) 2011-2014 Tim Wood, Iskren Chernev, Moment.js contributors\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://raw.githubusercontent.com/moment/moment/develop/LICENSE\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/indicators/ClockIndicator',['moment'],\r\n    function (moment) {\r\n\r\n        /**\r\n         * Indicator that displays the current UTC time in the status area.\r\n         * @implements {Indicator}\r\n         * @memberof platform/features/clock\r\n         * @param {platform/features/clock.TickerService} tickerService\r\n         *        a service used to align behavior with clock ticks\r\n         * @param {string} indicatorFormat format string for timestamps\r\n         *        shown in this indicator\r\n         */\r\n        function ClockIndicator(tickerService, indicatorFormat) {\r\n            var self = this;\r\n\r\n            this.text = \"\";\r\n\r\n            tickerService.listen(function (timestamp) {\r\n                self.text = moment.utc(timestamp)\r\n                    .format(indicatorFormat) + \" UTC\";\r\n            });\r\n        }\r\n\r\n        ClockIndicator.prototype.getGlyphClass = function () {\r\n            return \"no-collapse float-right subdued\";\r\n        };\r\n\r\n        ClockIndicator.prototype.getCssClass = function () {\r\n            return \"icon-clock\";\r\n        };\r\n\r\n        ClockIndicator.prototype.getText = function () {\r\n            return this.text;\r\n        };\r\n\r\n        ClockIndicator.prototype.getDescription = function () {\r\n            return \"\";\r\n        };\r\n\r\n        return ClockIndicator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/services/TickerService',[],\r\n    function () {\r\n\r\n        /**\r\n         * Calls functions every second, as close to the actual second\r\n         * tick as is feasible.\r\n         * @constructor\r\n         * @memberof platform/features/clock\r\n         * @param $timeout Angular's $timeout\r\n         * @param {Function} now function to provide the current time in ms\r\n         */\r\n        function TickerService($timeout, now) {\r\n            var self = this;\r\n\r\n            function tick() {\r\n                var timestamp = now(),\r\n                    millis = timestamp % 1000;\r\n\r\n                // Only update callbacks if a second has actually passed.\r\n                if (timestamp >= self.last + 1000) {\r\n                    self.callbacks.forEach(function (callback) {\r\n                        callback(timestamp);\r\n                    });\r\n                    self.last = timestamp - millis;\r\n                }\r\n\r\n                // Try to update at exactly the next second\r\n                $timeout(tick, 1000 - millis, true);\r\n            }\r\n\r\n            tick();\r\n\r\n            this.callbacks = [];\r\n            this.last = now() - 1000;\r\n        }\r\n\r\n        /**\r\n         * Listen for clock ticks. The provided callback will\r\n         * be invoked with the current timestamp (in milliseconds\r\n         * since Jan 1 1970) at regular intervals, as near to the\r\n         * second boundary as possible.\r\n         *\r\n         * @param {Function} callback callback to invoke\r\n         * @returns {Function} a function to unregister this listener\r\n         */\r\n        TickerService.prototype.listen = function (callback) {\r\n            var self = this;\r\n\r\n            self.callbacks.push(callback);\r\n\r\n            // Provide immediate feedback\r\n            callback(this.last);\r\n\r\n            // Provide a deregistration function\r\n            return function () {\r\n                self.callbacks = self.callbacks.filter(function (cb) {\r\n                    return cb !== callback;\r\n                });\r\n            };\r\n        };\r\n\r\n        return TickerService;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/controllers/ClockController',['moment'],\r\n    function (moment) {\r\n\r\n        /**\r\n         * Controller for views of a Clock domain object.\r\n         *\r\n         * @constructor\r\n         * @memberof platform/features/clock\r\n         * @param {angular.Scope} $scope the Angular scope\r\n         * @param {platform/features/clock.TickerService} tickerService\r\n         *        a service used to align behavior with clock ticks\r\n         */\r\n        function ClockController($scope, tickerService) {\r\n            var lastTimestamp,\r\n                unlisten,\r\n                timeFormat,\r\n                self = this;\r\n\r\n            function update() {\r\n                var m = moment.utc(lastTimestamp);\r\n                self.textValue = timeFormat && m.format(timeFormat);\r\n                self.ampmValue = m.format(\"A\"); // Just the AM or PM part\r\n            }\r\n\r\n            function tick(timestamp) {\r\n                lastTimestamp = timestamp;\r\n                update();\r\n            }\r\n\r\n            function updateFormat(clockFormat) {\r\n                var baseFormat;\r\n\r\n                if (clockFormat !== undefined) {\r\n                    baseFormat = clockFormat[0];\r\n\r\n                    self.use24 = clockFormat[1] === 'clock24';\r\n                    timeFormat = self.use24 ?\r\n                            baseFormat.replace('hh', \"HH\") : baseFormat;\r\n\r\n                    update();\r\n                }\r\n            }\r\n            // Pull in the clock format from the domain object model\r\n            $scope.$watch('model.clockFormat', updateFormat);\r\n\r\n            // Listen for clock ticks ... and stop listening on destroy\r\n            unlisten = tickerService.listen(tick);\r\n            $scope.$on('$destroy', unlisten);\r\n        }\r\n\r\n        /**\r\n         * Get the clock's time zone, as displayable text.\r\n         * @returns {string}\r\n         */\r\n        ClockController.prototype.zone = function () {\r\n            return \"UTC\";\r\n        };\r\n\r\n        /**\r\n         * Get the current time, as displayable text.\r\n         * @returns {string}\r\n         */\r\n        ClockController.prototype.text = function () {\r\n            return this.textValue;\r\n        };\r\n\r\n        /**\r\n         * Get the text to display to qualify a time as AM or PM.\r\n         * @returns {string}\r\n         */\r\n        ClockController.prototype.ampm = function () {\r\n            return this.use24 ? '' : this.ampmValue;\r\n        };\r\n\r\n        return ClockController;\r\n    }\r\n);\r\n\n","(function(root) {\ndefine(\"moment-duration-format\", [\"moment\"], function() {\n  return (function() {\n/*! Moment Duration Format v1.3.0\r\n *  https://github.com/jsmreese/moment-duration-format \r\n *  Date: 2014-07-15\r\n *\r\n *  Duration format plugin function for the Moment.js library\r\n *  http://momentjs.com/\r\n *\r\n *  Copyright 2014 John Madhavan-Reese\r\n *  Released under the MIT license\r\n */\r\n\r\n(function (root, undefined) {\r\n\r\n\t// repeatZero(qty)\r\n\t// returns \"0\" repeated qty times\r\n\tfunction repeatZero(qty) {\r\n\t\tvar result = \"\";\r\n\t\t\r\n\t\t// exit early\r\n\t\t// if qty is 0 or a negative number\r\n\t\t// or doesn't coerce to an integer\r\n\t\tqty = parseInt(qty, 10);\r\n\t\tif (!qty || qty < 1) { return result; }\r\n\t\t\r\n\t\twhile (qty) {\r\n\t\t\tresult += \"0\";\r\n\t\t\tqty -= 1;\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t// padZero(str, len [, isRight])\r\n\t// pads a string with zeros up to a specified length\r\n\t// will not pad a string if its length is aready\r\n\t// greater than or equal to the specified length\r\n\t// default output pads with zeros on the left\r\n\t// set isRight to `true` to pad with zeros on the right\r\n\tfunction padZero(str, len, isRight) {\r\n\t\tif (str == null) { str = \"\"; }\r\n\t\tstr = \"\" + str;\r\n\t\t\r\n\t\treturn (isRight ? str : \"\") + repeatZero(len - str.length) + (isRight ? \"\" : str);\r\n\t}\r\n\t\r\n\t// isArray\r\n\tfunction isArray(array) {\r\n\t\treturn Object.prototype.toString.call(array) === \"[object Array]\";\r\n\t}\r\n\t\r\n\t// isObject\r\n\tfunction isObject(obj) {\r\n\t\treturn Object.prototype.toString.call(obj) === \"[object Object]\";\r\n\t}\r\n\t\r\n\t// findLast\r\n\tfunction findLast(array, callback) {\r\n\t\tvar index = array.length;\r\n\r\n\t\twhile (index -= 1) {\r\n\t\t\tif (callback(array[index])) { return array[index]; }\r\n\t\t}\r\n\t}\r\n\r\n\t// find\r\n\tfunction find(array, callback) {\r\n\t\tvar index = 0,\r\n\t\t\tmax = array.length,\r\n\t\t\tmatch;\r\n\t\t\t\r\n\t\tif (typeof callback !== \"function\") {\r\n\t\t\tmatch = callback;\r\n\t\t\tcallback = function (item) {\r\n\t\t\t\treturn item === match;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\twhile (index < max) {\r\n\t\t\tif (callback(array[index])) { return array[index]; }\r\n\t\t\tindex += 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// each\r\n\tfunction each(array, callback) {\r\n\t\tvar index = 0,\r\n\t\t\tmax = array.length;\r\n\t\t\t\r\n\t\tif (!array || !max) { return; }\r\n\r\n\t\twhile (index < max) {\r\n\t\t\tif (callback(array[index], index) === false) { return; }\r\n\t\t\tindex += 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// map\r\n\tfunction map(array, callback) {\r\n\t\tvar index = 0,\r\n\t\t\tmax = array.length,\r\n\t\t\tret = [];\r\n\r\n\t\tif (!array || !max) { return ret; }\r\n\t\t\t\t\r\n\t\twhile (index < max) {\r\n\t\t\tret[index] = callback(array[index], index);\r\n\t\t\tindex += 1;\r\n\t\t}\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\t// pluck\r\n\tfunction pluck(array, prop) {\r\n\t\treturn map(array, function (item) {\r\n\t\t\treturn item[prop];\r\n\t\t});\r\n\t}\r\n\t\r\n\t// compact\r\n\tfunction compact(array) {\r\n\t\tvar ret = [];\r\n\t\t\r\n\t\teach(array, function (item) {\r\n\t\t\tif (item) { ret.push(item); }\r\n\t\t});\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\t// unique\r\n\tfunction unique(array) {\r\n\t\tvar ret = [];\r\n\t\t\r\n\t\teach(array, function (_a) {\r\n\t\t\tif (!find(ret, _a)) { ret.push(_a); }\r\n\t\t});\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\t// intersection\r\n\tfunction intersection(a, b) {\r\n\t\tvar ret = [];\r\n\t\t\r\n\t\teach(a, function (_a) {\r\n\t\t\teach(b, function (_b) {\r\n\t\t\t\tif (_a === _b) { ret.push(_a); }\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\treturn unique(ret);\r\n\t}\r\n\t\r\n\t// rest\r\n\tfunction rest(array, callback) {\r\n\t\tvar ret = [];\r\n\t\t\r\n\t\teach(array, function (item, index) {\r\n\t\t\tif (!callback(item)) {\r\n\t\t\t\tret = array.slice(index);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t// initial\r\n\tfunction initial(array, callback) {\r\n\t\tvar reversed = array.slice().reverse();\r\n\t\t\r\n\t\treturn rest(reversed, callback).reverse();\r\n\t}\r\n\t\r\n\t// extend\r\n\tfunction extend(a, b) {\r\n\t\tfor (var key in b) {\r\n\t\t\tif (b.hasOwnProperty(key)) { a[key] = b[key]; }\r\n\t\t}\r\n\t\t\r\n\t\treturn a;\r\n\t}\r\n\t\t\t\r\n\t// define internal moment reference\r\n\tvar moment;\r\n\r\n\tif (typeof require === \"function\") {\r\n\t\ttry { moment = require('moment'); } \r\n\t\tcatch (e) {}\r\n\t} \r\n\t\r\n\tif (!moment && root.moment) {\r\n\t\tmoment = root.moment;\r\n\t}\r\n\t\r\n\tif (!moment) {\r\n\t\tthrow \"Moment Duration Format cannot find Moment.js\";\r\n\t}\r\n\t\r\n\t// moment.duration.format([template] [, precision] [, settings])\r\n\tmoment.duration.fn.format = function () {\r\n\r\n\t\tvar tokenizer, tokens, types, typeMap, momentTypes, foundFirst, trimIndex,\r\n\t\t\targs = [].slice.call(arguments),\r\n\t\t\tsettings = extend({}, this.format.defaults),\r\n\t\t\t// keep a shadow copy of this moment for calculating remainders\r\n\t\t\tremainder = moment.duration(this);\r\n\r\n\t\t// add a reference to this duration object to the settings for use\r\n\t\t// in a template function\r\n\t\tsettings.duration = this;\r\n\r\n\t\t// parse arguments\r\n\t\teach(args, function (arg) {\r\n\t\t\tif (typeof arg === \"string\" || typeof arg === \"function\") {\r\n\t\t\t\tsettings.template = arg;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof arg === \"number\") {\r\n\t\t\t\tsettings.precision = arg;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (isObject(arg)) {\r\n\t\t\t\textend(settings, arg);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// types\r\n\t\ttypes = settings.types = (isArray(settings.types) ? settings.types : settings.types.split(\" \"));\r\n\r\n\t\t// template\r\n\t\tif (typeof settings.template === \"function\") {\r\n\t\t\tsettings.template = settings.template.apply(settings);\r\n\t\t}\r\n\r\n\t\t// tokenizer regexp\r\n\t\ttokenizer = new RegExp(map(types, function (type) {\r\n\t\t\treturn settings[type].source;\r\n\t\t}).join(\"|\"), \"g\");\r\n\r\n\t\t// token type map function\r\n\t\ttypeMap = function (token) {\r\n\t\t\treturn find(types, function (type) {\r\n\t\t\t\treturn settings[type].test(token);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// tokens array\r\n\t\ttokens = map(settings.template.match(tokenizer), function (token, index) {\r\n\t\t\tvar type = typeMap(token),\r\n\t\t\t\tlength = token.length;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tindex: index,\r\n\t\t\t\tlength: length,\r\n\r\n\t\t\t\t// replace escaped tokens with the non-escaped token text\r\n\t\t\t\ttoken: (type === \"escape\" ? token.replace(settings.escape, \"$1\") : token),\r\n\r\n\t\t\t\t// ignore type on non-moment tokens\r\n\t\t\t\ttype: ((type === \"escape\" || type === \"general\") ? null : type)\r\n\r\n\t\t\t\t// calculate base value for all moment tokens\r\n\t\t\t\t//baseValue: ((type === \"escape\" || type === \"general\") ? null : this.as(type))\r\n\t\t\t};\r\n\t\t}, this);\r\n\r\n\t\t// unique moment token types in the template (in order of descending magnitude)\r\n\t\tmomentTypes = intersection(types, unique(compact(pluck(tokens, \"type\"))));\r\n\r\n\t\t// exit early if there are no momentTypes\r\n\t\tif (!momentTypes.length) {\r\n\t\t\treturn pluck(tokens, \"token\").join(\"\");\r\n\t\t}\r\n\r\n\t\t// calculate values for each token type in the template\r\n\t\teach(momentTypes, function (momentType, index) {\r\n\t\t\tvar value, wholeValue, decimalValue, isLeast, isMost;\r\n\r\n\t\t\t// calculate integer and decimal value portions\r\n\t\t\tvalue = remainder.as(momentType);\r\n\t\t\twholeValue = (value > 0 ? Math.floor(value) : Math.ceil(value));\r\n\t\t\tdecimalValue = value - wholeValue;\r\n\r\n\t\t\t// is this the least-significant moment token found?\r\n\t\t\tisLeast = ((index + 1) === momentTypes.length);\r\n\r\n\t\t\t// is this the most-significant moment token found?\r\n\t\t\tisMost = (!index);\r\n\r\n\t\t\t// update tokens array\r\n\t\t\t// using this algorithm to not assume anything about\r\n\t\t\t// the order or frequency of any tokens\r\n\t\t\teach(tokens, function (token) {\r\n\t\t\t\tif (token.type === momentType) {\r\n\t\t\t\t\textend(token, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\twholeValue: wholeValue,\r\n\t\t\t\t\t\tdecimalValue: decimalValue,\r\n\t\t\t\t\t\tisLeast: isLeast,\r\n\t\t\t\t\t\tisMost: isMost\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (isMost) {\r\n\t\t\t\t\t\t// note the length of the most-significant moment token:\r\n\t\t\t\t\t\t// if it is greater than one and forceLength is not set, default forceLength to `true`\r\n\t\t\t\t\t\tif (settings.forceLength == null && token.length > 1) {\r\n\t\t\t\t\t\t\tsettings.forceLength = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// rationale is this:\r\n\t\t\t\t\t\t// if the template is \"h:mm:ss\" and the moment value is 5 minutes, the user-friendly output is \"5:00\", not \"05:00\"\r\n\t\t\t\t\t\t// shouldn't pad the `minutes` token even though it has length of two\r\n\t\t\t\t\t\t// if the template is \"hh:mm:ss\", the user clearly wanted everything padded so we should output \"05:00\"\r\n\t\t\t\t\t\t// if the user wanted the full padded output, they can set `{ trim: false }` to get \"00:05:00\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// update remainder\r\n\t\t\tremainder.subtract(wholeValue, momentType);\r\n\t\t});\r\n\t\r\n\t\t// trim tokens array\r\n\t\tif (settings.trim) {\r\n\t\t\ttokens = (settings.trim === \"left\" ? rest : initial)(tokens, function (token) {\r\n\t\t\t\t// return `true` if:\r\n\t\t\t\t// the token is not the least moment token (don't trim the least moment token)\r\n\t\t\t\t// the token is a moment token that does not have a value (don't trim moment tokens that have a whole value)\r\n\t\t\t\treturn !(token.isLeast || (token.type != null && token.wholeValue));\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// build output\r\n\r\n\t\t// the first moment token can have special handling\r\n\t\tfoundFirst = false;\r\n\r\n\t\t// run the map in reverse order if trimming from the right\r\n\t\tif (settings.trim === \"right\") {\r\n\t\t\ttokens.reverse();\r\n\t\t}\r\n\r\n\t\ttokens = map(tokens, function (token) {\r\n\t\t\tvar val,\r\n\t\t\t\tdecVal;\r\n\r\n\t\t\tif (!token.type) {\r\n\t\t\t\t// if it is not a moment token, use the token as its own value\r\n\t\t\t\treturn token.token;\r\n\t\t\t}\r\n\r\n\t\t\t// apply negative precision formatting to the least-significant moment token\r\n\t\t\tif (token.isLeast && (settings.precision < 0)) {\r\n\t\t\t\tval = (Math.floor(token.wholeValue * Math.pow(10, settings.precision)) * Math.pow(10, -settings.precision)).toString();\r\n\t\t\t} else {\r\n\t\t\t\tval = token.wholeValue.toString();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// remove negative sign from the beginning\r\n\t\t\tval = val.replace(/^\\-/, \"\");\r\n\r\n\t\t\t// apply token length formatting\r\n\t\t\t// special handling for the first moment token that is not the most significant in a trimmed template\r\n\t\t\tif (token.length > 1 && (foundFirst || token.isMost || settings.forceLength)) {\r\n\t\t\t\tval = padZero(val, token.length);\r\n\t\t\t}\r\n\r\n\t\t\t// add decimal value if precision > 0\r\n\t\t\tif (token.isLeast && (settings.precision > 0)) {\r\n\t\t\t\tdecVal = token.decimalValue.toString().replace(/^\\-/, \"\").split(/\\.|e\\-/);\r\n\t\t\t\tswitch (decVal.length) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tval += \".\" + padZero(decVal[0], settings.precision, true).slice(0, settings.precision);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tval += \".\" + padZero(decVal[1], settings.precision, true).slice(0, settings.precision);\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tval += \".\" + padZero(repeatZero((+decVal[2]) - 1) + (decVal[0] || \"0\") + decVal[1], settings.precision, true).slice(0, settings.precision);\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"Moment Duration Format: unable to parse token decimal value.\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// add a negative sign if the value is negative and token is most significant\r\n\t\t\tif (token.isMost && token.value < 0) {\r\n\t\t\t\tval = \"-\" + val;\r\n\t\t\t}\r\n\r\n\t\t\tfoundFirst = true;\r\n\r\n\t\t\treturn val;\r\n\t\t});\r\n\r\n\t\t// undo the reverse if trimming from the right\r\n\t\tif (settings.trim === \"right\") {\r\n\t\t\ttokens.reverse();\r\n\t\t}\r\n\r\n\t\treturn tokens.join(\"\");\r\n\t};\r\n\r\n\tmoment.duration.fn.format.defaults = {\r\n\t\t// token definitions\r\n\t\tescape: /\\[(.+?)\\]/,\r\n\t\tyears: /[Yy]+/,\r\n\t\tmonths: /M+/,\r\n\t\tweeks: /[Ww]+/,\r\n\t\tdays: /[Dd]+/,\r\n\t\thours: /[Hh]+/,\r\n\t\tminutes: /m+/,\r\n\t\tseconds: /s+/,\r\n\t\tmilliseconds: /S+/,\r\n\t\tgeneral: /.+?/,\r\n\r\n\t\t// token type names\r\n\t\t// in order of descending magnitude\r\n\t\t// can be a space-separated token name list or an array of token names\r\n\t\ttypes: \"escape years months weeks days hours minutes seconds milliseconds general\",\r\n\r\n\t\t// format options\r\n\r\n\t\t// trim\r\n\t\t// \"left\" - template tokens are trimmed from the left until the first moment token that has a value >= 1\r\n\t\t// \"right\" - template tokens are trimmed from the right until the first moment token that has a value >= 1\r\n\t\t// (the final moment token is not trimmed, regardless of value)\r\n\t\t// `false` - template tokens are not trimmed\r\n\t\ttrim: \"left\",\r\n\r\n\t\t// precision\r\n\t\t// number of decimal digits to include after (to the right of) the decimal point (positive integer)\r\n\t\t// or the number of digits to truncate to 0 before (to the left of) the decimal point (negative integer)\r\n\t\tprecision: 0,\r\n\r\n\t\t// force first moment token with a value to render at full length even when template is trimmed and first moment token has length of 1\r\n\t\tforceLength: null,\r\n\r\n\t\t// template used to format duration\r\n\t\t// may be a function or a string\r\n\t\t// template functions are executed with the `this` binding of the settings object\r\n\t\t// so that template strings may be dynamically generated based on the duration object\r\n\t\t// (accessible via `this.duration`)\r\n\t\t// or any of the other settings\r\n\t\ttemplate: function () {\r\n\t\t\tvar types = this.types,\r\n\t\t\t\tdur = this.duration,\r\n\t\t\t\tlastType = findLast(types, function (type) {\r\n\t\t\t\t\treturn dur._data[type];\r\n\t\t\t\t});\r\n\r\n\t\t\t// default template strings for each duration dimension type\r\n\t\t\tswitch (lastType) {\r\n\t\t\t\tcase \"seconds\":\r\n\t\t\t\t\treturn \"h:mm:ss\";\r\n\t\t\t\tcase \"minutes\":\r\n\t\t\t\t\treturn \"d[d] h:mm\";\r\n\t\t\t\tcase \"hours\":\r\n\t\t\t\t\treturn \"d[d] h[h]\";\r\n\t\t\t\tcase \"days\":\r\n\t\t\t\t\treturn \"M[m] d[d]\";\r\n\t\t\t\tcase \"weeks\":\r\n\t\t\t\t\treturn \"y[y] w[w]\";\r\n\t\t\t\tcase \"months\":\r\n\t\t\t\t\treturn \"y[y] M[m]\";\r\n\t\t\t\tcase \"years\":\r\n\t\t\t\t\treturn \"y[y]\";\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn \"y[y] M[m] d[d] h:mm:ss\";\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n})(this);\r\n\n\n  }).apply(root, arguments);\n});\n}(this));\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/controllers/TimerFormatter',['moment', 'moment-duration-format'],\r\n    function (moment) {\r\n\r\n        var SHORT_FORMAT = \"HH:mm:ss\",\r\n            LONG_FORMAT = \"d[D] HH:mm:ss\";\r\n\r\n        /**\r\n         * Provides formatting functions for Timers.\r\n         *\r\n         * Display formats for timers are a little different from what\r\n         * moment.js provides, so we have custom logic here. This specifically\r\n         * supports `TimerController`.\r\n         *\r\n         * @constructor\r\n         * @memberof platform/features/clock\r\n         */\r\n        function TimerFormatter() {\r\n        }\r\n\r\n        // Round this timestamp down to the second boundary\r\n        // (e.g. 1124ms goes down to 1000ms, -2400ms goes down to -3000ms)\r\n        function toWholeSeconds(duration) {\r\n            return Math.abs(Math.floor(duration / 1000) * 1000);\r\n        }\r\n\r\n        /**\r\n         * Format a duration for display, using the short form.\r\n         * (e.g. 03:33:11)\r\n         * @param {number} duration the duration, in milliseconds\r\n         * @param {boolean} sign true if positive\r\n         */\r\n        TimerFormatter.prototype.short = function (duration) {\r\n            return moment.duration(toWholeSeconds(duration), 'ms')\r\n                .format(SHORT_FORMAT, { trim: false });\r\n        };\r\n\r\n        /**\r\n         * Format a duration for display, using the long form.\r\n         * (e.g. 0d 03:33:11)\r\n         * @param {number} duration the duration, in milliseconds\r\n         * @param {boolean} sign true if positive\r\n         */\r\n        TimerFormatter.prototype.long = function (duration) {\r\n            return moment.duration(toWholeSeconds(duration), 'ms')\r\n                .format(LONG_FORMAT, { trim: false });\r\n        };\r\n\r\n        return TimerFormatter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/controllers/TimerController',['./TimerFormatter'],\r\n    function (TimerFormatter) {\r\n\r\n        var FORMATTER = new TimerFormatter();\r\n\r\n\r\n        /**\r\n         * Controller for views of a Timer domain object.\r\n         *\r\n         * @constructor\r\n         * @memberof platform/features/clock\r\n         * @param {angular.Scope} $scope the Angular scope\r\n         * @param $window Angular-provided window object\r\n         * @param {Function} now a function which returns the current\r\n         *        time (typically wrapping `Date.now`)\r\n         */\r\n        function TimerController($scope, $window, now) {\r\n            var formatter,\r\n                active = true,\r\n                relativeTimestamp,\r\n                lastTimestamp,\r\n                self = this;\r\n\r\n            function update() {\r\n                var timeDelta = lastTimestamp - relativeTimestamp;\r\n\r\n                if (formatter && !isNaN(timeDelta)) {\r\n                    self.textValue = formatter(timeDelta);\r\n                    self.signValue = timeDelta < 0 ? \"-\" :\r\n                        timeDelta >= 1000 ? \"+\" : \"\";\r\n                    self.signCssClass = timeDelta < 0 ? \"icon-minus\" :\r\n                        timeDelta >= 1000 ? \"icon-plus\" : \"\";\r\n                } else {\r\n                    self.textValue = \"\";\r\n                    self.signValue = \"\";\r\n                    self.signCssClass = \"\";\r\n                }\r\n            }\r\n\r\n            function updateFormat(key) {\r\n                formatter = FORMATTER[key] || FORMATTER.long;\r\n            }\r\n\r\n            function updateTimestamp(timestamp) {\r\n                relativeTimestamp = timestamp;\r\n            }\r\n\r\n            function updateObject(domainObject) {\r\n                var model = domainObject.getModel(),\r\n                    timestamp = model.timestamp,\r\n                    formatKey = model.timerFormat,\r\n                    actionCapability = domainObject.getCapability('action'),\r\n                    actionKey = (timestamp === undefined) ?\r\n                            'timer.start' : 'timer.restart';\r\n\r\n                updateFormat(formatKey);\r\n                updateTimestamp(timestamp);\r\n\r\n                self.relevantAction = actionCapability &&\r\n                    actionCapability.getActions(actionKey)[0];\r\n\r\n                update();\r\n            }\r\n\r\n            function handleObjectChange(domainObject) {\r\n                if (domainObject) {\r\n                    updateObject(domainObject);\r\n                }\r\n            }\r\n\r\n            function handleModification() {\r\n                handleObjectChange($scope.domainObject);\r\n            }\r\n\r\n            function tick() {\r\n                var lastSign = self.signValue,\r\n                    lastText = self.textValue;\r\n                lastTimestamp = now();\r\n                update();\r\n                // We're running in an animation frame, not in a digest cycle.\r\n                // We need to trigger a digest cycle if our displayable data\r\n                // changes.\r\n                if (lastSign !== self.signValue || lastText !== self.textValue) {\r\n                    $scope.$apply();\r\n                }\r\n                if (active) {\r\n                    $window.requestAnimationFrame(tick);\r\n                }\r\n            }\r\n\r\n            $window.requestAnimationFrame(tick);\r\n\r\n            // Pull in the timer format from the domain object model\r\n            $scope.$watch('domainObject', handleObjectChange);\r\n            $scope.$watch('model.modified', handleModification);\r\n\r\n            // When the scope is destroyed, stop requesting anim. frames\r\n            $scope.$on('$destroy', function () {\r\n                active = false;\r\n            });\r\n\r\n            this.$scope = $scope;\r\n            this.signValue = '';\r\n            this.textValue = '';\r\n            this.updateObject = updateObject;\r\n        }\r\n\r\n        /**\r\n         * Get the CSS class to display the right icon\r\n         * for the start/restart button.\r\n         * @returns {string} cssclass to display\r\n         */\r\n        TimerController.prototype.buttonCssClass = function () {\r\n            return this.relevantAction ?\r\n                    this.relevantAction.getMetadata().cssclass : \"\";\r\n        };\r\n\r\n        /**\r\n         * Get the text to show for the start/restart button\r\n         * (e.g. in a tooltip)\r\n         * @returns {string} name of the action\r\n         */\r\n        TimerController.prototype.buttonText = function () {\r\n            return this.relevantAction ?\r\n                    this.relevantAction.getMetadata().name : \"\";\r\n        };\r\n\r\n\r\n        /**\r\n         * Perform the action associated with the start/restart button.\r\n         */\r\n        TimerController.prototype.clickButton = function () {\r\n            if (this.relevantAction) {\r\n                this.relevantAction.perform();\r\n                this.updateObject(this.$scope.domainObject);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the sign (+ or -) of the current timer value, as\r\n         * displayable text.\r\n         * @returns {string} sign of the current timer value\r\n         */\r\n        TimerController.prototype.sign = function () {\r\n            return this.signValue;\r\n        };\r\n\r\n        /**\r\n         * Get the sign (+ or -) of the current timer value, as\r\n         * a CSS class.\r\n         * @returns {string} sign of the current timer value\r\n         */\r\n        TimerController.prototype.signClass = function () {\r\n            return this.signCssClass;\r\n        };\r\n\r\n        /**\r\n         * Get the text to display for the current timer value.\r\n         * @returns {string} current timer value\r\n         */\r\n        TimerController.prototype.text = function () {\r\n            return this.textValue;\r\n        };\r\n\r\n        return TimerController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/controllers/RefreshingController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Continually refreshes the represented domain object.\r\n         *\r\n         * This is a short-term workaround to assure Timer views stay\r\n         * up-to-date; should be replaced by a global auto-refresh.\r\n         *\r\n         * @constructor\r\n         * @memberof platform/features/clock\r\n         * @param {angular.Scope} $scope the Angular scope\r\n         * @param {platform/features/clock.TickerService} tickerService\r\n         *        a service used to align behavior with clock ticks\r\n         */\r\n        function RefreshingController($scope, tickerService) {\r\n            var unlisten;\r\n\r\n            function triggerRefresh() {\r\n                var persistence = $scope.domainObject &&\r\n                    $scope.domainObject.getCapability('persistence');\r\n                return persistence && persistence.refresh();\r\n            }\r\n\r\n            unlisten = tickerService.listen(triggerRefresh);\r\n            $scope.$on('$destroy', unlisten);\r\n        }\r\n\r\n        return RefreshingController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/actions/AbstractStartTimerAction',[],\r\n    function () {\r\n\r\n        /**\r\n         * Implements the \"Start\" and \"Restart\" action for timers.\r\n         *\r\n         * Sets the reference timestamp in a timer to the current\r\n         * time, such that it begins counting up.\r\n         *\r\n         * Both \"Start\" and \"Restart\" share this implementation, but\r\n         * control their visibility with different `appliesTo` behavior.\r\n         *\r\n         * @implements {Action}\r\n         * @memberof platform/features/clock\r\n         * @constructor\r\n         * @param {Function} now a function which returns the current\r\n         *        time (typically wrapping `Date.now`)\r\n         * @param {ActionContext} context the context for this action\r\n         */\r\n        function AbstractStartTimerAction(now, context) {\r\n            this.domainObject = context.domainObject;\r\n            this.now = now;\r\n        }\r\n\r\n        AbstractStartTimerAction.prototype.perform = function () {\r\n            var domainObject = this.domainObject,\r\n                now = this.now;\r\n\r\n            function doPersist() {\r\n                var persistence = domainObject.getCapability('persistence');\r\n                return persistence && persistence.persist();\r\n            }\r\n\r\n            function setTimestamp(model) {\r\n                model.timestamp = now();\r\n            }\r\n\r\n            return domainObject.useCapability('mutation', setTimestamp)\r\n                .then(doPersist);\r\n        };\r\n\r\n        return AbstractStartTimerAction;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/actions/StartTimerAction',['./AbstractStartTimerAction'],\r\n    function (AbstractStartTimerAction) {\r\n\r\n        /**\r\n         * Implements the \"Start\" action for timers.\r\n         *\r\n         * Sets the reference timestamp in a timer to the current\r\n         * time, such that it begins counting up.\r\n         *\r\n         * @extends {platform/features/clock.AbstractTimerAction}\r\n         * @implements {Action}\r\n         * @memberof platform/features/clock\r\n         * @constructor\r\n         * @param {Function} now a function which returns the current\r\n         *        time (typically wrapping `Date.now`)\r\n         * @param {ActionContext} context the context for this action\r\n         */\r\n        function StartTimerAction(now, context) {\r\n            AbstractStartTimerAction.apply(this, [now, context]);\r\n        }\r\n\r\n        StartTimerAction.prototype =\r\n            Object.create(AbstractStartTimerAction.prototype);\r\n\r\n        StartTimerAction.appliesTo = function (context) {\r\n            var model =\r\n                (context.domainObject && context.domainObject.getModel()) ||\r\n                {};\r\n\r\n            // We show this variant for timers which do not yet have\r\n            // a target time.\r\n            return model.type === 'timer' &&\r\n                    model.timestamp === undefined;\r\n        };\r\n\r\n        return StartTimerAction;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/clock/src/actions/RestartTimerAction',['./AbstractStartTimerAction'],\r\n    function (AbstractStartTimerAction) {\r\n\r\n        /**\r\n         * Implements the \"Restart at 0\" action.\r\n         *\r\n         * Behaves the same as (and delegates functionality to)\r\n         * the \"Start\" action.\r\n         *\r\n         * @extends {platform/features/clock.AbstractTimerAction}\r\n         * @implements {Action}\r\n         * @memberof platform/features/clock\r\n         * @constructor\r\n         * @param {Function} now a function which returns the current\r\n         *        time (typically wrapping `Date.now`)\r\n         * @param {ActionContext} context the context for this action\r\n         */\r\n        function RestartTimerAction(now, context) {\r\n            AbstractStartTimerAction.apply(this, [now, context]);\r\n        }\r\n\r\n        RestartTimerAction.prototype =\r\n            Object.create(AbstractStartTimerAction.prototype);\r\n\r\n        RestartTimerAction.appliesTo = function (context) {\r\n            var model =\r\n                (context.domainObject && context.domainObject.getModel()) ||\r\n                {};\r\n\r\n            // We show this variant for timers which already have\r\n            // a target time.\r\n            return model.type === 'timer' &&\r\n                    model.timestamp !== undefined;\r\n        };\r\n\r\n        return RestartTimerAction;\r\n\r\n    }\r\n);\r\n\n","\ndefine('text!platform/features/clock/res/templates/clock.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"l-time-display l-digital l-clock s-clock\" ng-controller=\"ClockController as clock\">\\r\\n\\t<div class=\"l-elem-wrapper\">\\r\\n\\t    <span class=\"l-elem timezone\">\\r\\n\\t        {{clock.zone()}}\\r\\n\\t    </span>\\r\\n\\t    <span class=\"l-elem value active\">\\r\\n\\t        {{clock.text()}}\\r\\n\\t    </span>\\r\\n\\t    <span class=\"l-elem ampm\">\\r\\n\\t        {{clock.ampm()}}\\r\\n\\t    </span>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!platform/features/clock/res/templates/timer.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"l-time-display l-digital l-timer s-timer\" ng-controller=\"TimerController as timer\">\\r\\n\\t<div class=\"l-elem-wrapper l-flex-row\">\\r\\n\\t\\t<a ng-click=\"timer.clickButton()\"\\r\\n\\t\\t\\ttitle=\"{{timer.buttonText()}}\"\\r\\n\\t\\t\\tclass=\"flex-elem control s-icon-button {{timer.buttonCssClass()}}\"></a>\\r\\n\\t    <span class=\"flex-elem l-value {{timer.signClass()}}\">\\r\\n\\t        <span class=\"value\"\\r\\n\\t\\t        ng-class=\"{ active:timer.text() }\">{{timer.text() || \"--:--:--\"}}\\r\\n            </span>\\r\\n\\t    </span>\\r\\n\\t    <span ng-controller=\"RefreshingController\"></span>\\r\\n\\t</div>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/clock/bundle',[\r\n    \"./src/indicators/ClockIndicator\",\r\n    \"./src/services/TickerService\",\r\n    \"./src/controllers/ClockController\",\r\n    \"./src/controllers/TimerController\",\r\n    \"./src/controllers/RefreshingController\",\r\n    \"./src/actions/StartTimerAction\",\r\n    \"./src/actions/RestartTimerAction\",\r\n    \"text!./res/templates/clock.html\",\r\n    \"text!./res/templates/timer.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    ClockIndicator,\r\n    TickerService,\r\n    ClockController,\r\n    TimerController,\r\n    RefreshingController,\r\n    StartTimerAction,\r\n    RestartTimerAction,\r\n    clockTemplate,\r\n    timerTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/clock\", {\r\n        \"name\": \"Clocks/Timers\",\r\n        \"descriptions\": \"Domain objects for displaying current & relative times.\",\r\n        \"configuration\": {\r\n            \"paths\": {\r\n                \"moment-duration-format\": \"moment-duration-format\"\r\n            },\r\n            \"shim\": {\r\n                \"moment-duration-format\": {\r\n                    \"deps\": [\r\n                        \"moment\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        \"extensions\": {\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"CLOCK_INDICATOR_FORMAT\",\r\n                    \"value\": \"YYYY/MM/DD HH:mm:ss\"\r\n                }\r\n            ],\r\n            \"indicators\": [\r\n                {\r\n                    \"implementation\": ClockIndicator,\r\n                    \"depends\": [\r\n                        \"tickerService\",\r\n                        \"CLOCK_INDICATOR_FORMAT\"\r\n                    ],\r\n                    \"priority\": \"preferred\"\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"tickerService\",\r\n                    \"implementation\": TickerService,\r\n                    \"depends\": [\r\n                        \"$timeout\",\r\n                        \"now\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"ClockController\",\r\n                    \"implementation\": ClockController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"tickerService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"TimerController\",\r\n                    \"implementation\": TimerController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$window\",\r\n                        \"now\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"RefreshingController\",\r\n                    \"implementation\": RefreshingController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"tickerService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"views\": [\r\n                {\r\n                    \"key\": \"clock\",\r\n                    \"type\": \"clock\",\r\n                    \"editable\": false,\r\n                    \"template\": clockTemplate\r\n                },\r\n                {\r\n                    \"key\": \"timer\",\r\n                    \"type\": \"timer\",\r\n                    \"editable\": false,\r\n                    \"template\": timerTemplate\r\n                }\r\n            ],\r\n            \"actions\": [\r\n                {\r\n                    \"key\": \"timer.start\",\r\n                    \"implementation\": StartTimerAction,\r\n                    \"depends\": [\r\n                        \"now\"\r\n                    ],\r\n                    \"category\": \"contextual\",\r\n                    \"name\": \"Start\",\r\n                    \"cssclass\": \"icon-play\",\r\n                    \"priority\": \"preferred\"\r\n                },\r\n                {\r\n                    \"key\": \"timer.restart\",\r\n                    \"implementation\": RestartTimerAction,\r\n                    \"depends\": [\r\n                        \"now\"\r\n                    ],\r\n                    \"category\": \"contextual\",\r\n                    \"name\": \"Restart at 0\",\r\n                    \"cssclass\": \"icon-refresh\",\r\n                    \"priority\": \"preferred\"\r\n                }\r\n            ],\r\n            \"types\": [\r\n                {\r\n                    \"key\": \"clock\",\r\n                    \"name\": \"Clock\",\r\n                    \"cssclass\": \"icon-clock\",\r\n                    \"description\": \"A UTC-based clock that supports a variety of display formats. Clocks can be added to Display Layouts.\",\r\n                    \"priority\": 101,\r\n                    \"features\": [\r\n                        \"creation\"\r\n                    ],\r\n                    \"properties\": [\r\n                        {\r\n                            \"key\": \"clockFormat\",\r\n                            \"name\": \"Display Format\",\r\n                            \"control\": \"composite\",\r\n                            \"items\": [\r\n                                {\r\n                                    \"control\": \"select\",\r\n                                    \"options\": [\r\n                                        {\r\n                                            \"value\": \"YYYY/MM/DD hh:mm:ss\",\r\n                                            \"name\": \"YYYY/MM/DD hh:mm:ss\"\r\n                                        },\r\n                                        {\r\n                                            \"value\": \"YYYY/DDD hh:mm:ss\",\r\n                                            \"name\": \"YYYY/DDD hh:mm:ss\"\r\n                                        },\r\n                                        {\r\n                                            \"value\": \"hh:mm:ss\",\r\n                                            \"name\": \"hh:mm:ss\"\r\n                                        }\r\n                                    ],\r\n                                    \"cssclass\": \"l-inline\"\r\n                                },\r\n                                {\r\n                                    \"control\": \"select\",\r\n                                    \"options\": [\r\n                                        {\r\n                                            \"value\": \"clock12\",\r\n                                            \"name\": \"12hr\"\r\n                                        },\r\n                                        {\r\n                                            \"value\": \"clock24\",\r\n                                            \"name\": \"24hr\"\r\n                                        }\r\n                                    ],\r\n                                    \"cssclass\": \"l-inline\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"clockFormat\": [\r\n                            \"YYYY/MM/DD hh:mm:ss\",\r\n                            \"clock12\"\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"key\": \"timer\",\r\n                    \"name\": \"Timer\",\r\n                    \"cssclass\": \"icon-timer\",\r\n                    \"description\": \"A timer that counts up or down to a datetime. Timers can be started, stopped and reset whenever needed, and support a variety of display formats. Each Timer displays the same value to all users. Timers can be added to Display Layouts.\",\r\n                    \"priority\": 100,\r\n                    \"features\": [\r\n                        \"creation\"\r\n                    ],\r\n                    \"properties\": [\r\n                        {\r\n                            \"key\": \"timestamp\",\r\n                            \"control\": \"datetime\",\r\n                            \"name\": \"Target\"\r\n                        },\r\n                        {\r\n                            \"key\": \"timerFormat\",\r\n                            \"control\": \"select\",\r\n                            \"name\": \"Display Format\",\r\n                            \"options\": [\r\n                                {\r\n                                    \"value\": \"long\",\r\n                                    \"name\": \"DDD hh:mm:ss\"\r\n                                },\r\n                                {\r\n                                    \"value\": \"short\",\r\n                                    \"name\": \"hh:mm:ss\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"timerFormat\": \"DDD hh:mm:ss\"\r\n                    }\r\n                }\r\n            ],\r\n            \"licenses\": [\r\n                {\r\n                    \"name\": \"moment-duration-format\",\r\n                    \"version\": \"1.3.0\",\r\n                    \"author\": \"John Madhavan-Reese\",\r\n                    \"description\": \"Duration parsing/formatting\",\r\n                    \"website\": \"https://github.com/jsmreese/moment-duration-format\",\r\n                    \"copyright\": \"Copyright 2014 John Madhavan-Reese\",\r\n                    \"license\": \"license-mit\",\r\n                    \"link\": \"https://github.com/jsmreese/moment-duration-format/blob/master/LICENSE\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('text!platform/features/layout/res/templates/fixed.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"t-fixed-position l-fixed-position\"\\r\\n     ng-controller=\"FixedController as controller\">\\r\\n\\r\\n    <!-- Background grid -->\\r\\n    <div class=\"l-grid-holder\" ng-click=\"controller.clearSelection()\">\\r\\n        <div class=\"l-grid l-grid-x\"\\r\\n             ng-style=\"{ \\'background-size\\': controller.getGridSize() [0] + \\'px 100%\\' }\"></div>\\r\\n        <div class=\"l-grid l-grid-y\"\\r\\n             ng-style=\"{ \\'background-size\\': \\'100% \\' + controller.getGridSize() [1] + \\'px\\' }\"></div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Fixed position elements -->\\r\\n    <div ng-repeat=\"element in controller.getElements()\"\\r\\n         class=\"l-fixed-position-item\"\\r\\n         ng-class=\"{ \\'s-not-selected\\': controller.selected() && !controller.selected(element) }\"\\r\\n         ng-style=\"element.style\"\\r\\n         ng-click=\"controller.select(element)\">\\r\\n        <mct-include key=\"element.template\"\\r\\n                     parameters=\"{ gridSize: controller.getGridSize() }\"\\r\\n                     ng-model=\"element\">\\r\\n        </mct-include>\\r\\n    </div>\\r\\n\\r\\n    <!-- Selection highlight, handles -->\\r\\n    <span ng-if=\"controller.selected()\">\\r\\n        <div class=\"l-fixed-position-item s-selected\"\\r\\n             mct-drag-down=\"controller.moveHandle().startDrag(controller.selected())\"\\r\\n             mct-drag=\"controller.moveHandle().continueDrag(delta)\"\\r\\n             mct-drag-up=\"controller.moveHandle().endDrag()\"\\r\\n             ng-style=\"controller.selected().style\">\\r\\n        </div>\\r\\n        <div ng-repeat=\"handle in controller.handles()\"\\r\\n             class=\"l-fixed-position-item-handle\"\\r\\n             ng-style=\"handle.style()\"\\r\\n             mct-drag-down=\"handle.startDrag()\"\\r\\n             mct-drag=\"handle.continueDrag(delta)\"\\r\\n             mct-drag-up=\"handle.endDrag()\">\\r\\n        </div>\\r\\n    </span>\\r\\n\\r\\n</div>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/fixed/bundle',[\r\n    \"text!../layout/res/templates/fixed.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    fixedTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/fixed\", {\r\n        \"name\": \"Fixed position components.\",\r\n        \"description\": \"Plug in adding Fixed Position object type.\",\r\n        \"extensions\": {\r\n            \"views\": [\r\n                {\r\n                    \"key\": \"fixed-display\",\r\n                    \"name\": \"Fixed Position Display\",\r\n                    \"cssclass\": \"icon-box-with-dashed-lines\",\r\n                    \"type\": \"telemetry.fixed\",\r\n                    \"template\": fixedTemplate,\r\n                    \"uses\": [\r\n                        \"composition\"\r\n                    ],\r\n                    \"editable\": true,\r\n                    \"toolbar\": {\r\n                        \"sections\": [\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"add\",\r\n                                        \"cssclass\": \"icon-plus\",\r\n                                        \"control\": \"menu-button\",\r\n                                        \"text\": \"Add\",\r\n                                        \"options\": [\r\n                                            {\r\n                                                \"name\": \"Box\",\r\n                                                \"cssclass\": \"icon-box\",\r\n                                                \"key\": \"fixed.box\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Line\",\r\n                                                \"cssclass\": \"icon-line-horz\",\r\n                                                \"key\": \"fixed.line\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Text\",\r\n                                                \"cssclass\": \"icon-T\",\r\n                                                \"key\": \"fixed.text\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Image\",\r\n                                                \"cssclass\": \"icon-image\",\r\n                                                \"key\": \"fixed.image\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"order\",\r\n                                        \"cssclass\": \"icon-layers\",\r\n                                        \"control\": \"menu-button\",\r\n                                        \"title\": \"Layering\",\r\n                                        \"description\": \"Move the selected object above or below other objects\",\r\n                                        \"options\": [\r\n                                            {\r\n                                                \"name\": \"Move to Top\",\r\n                                                \"cssclass\": \"icon-arrow-double-up\",\r\n                                                \"key\": \"top\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Move Up\",\r\n                                                \"cssclass\": \"icon-arrow-up\",\r\n                                                \"key\": \"up\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Move Down\",\r\n                                                \"cssclass\": \"icon-arrow-down\",\r\n                                                \"key\": \"down\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Move to Bottom\",\r\n                                                \"cssclass\": \"icon-arrow-double-down\",\r\n                                                \"key\": \"bottom\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"fill\",\r\n                                        \"cssclass\": \"icon-paint-bucket\",\r\n                                        \"title\": \"Fill color\",\r\n                                        \"description\": \"Set fill color\",\r\n                                        \"control\": \"color\"\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"stroke\",\r\n                                        \"cssclass\": \"icon-line-horz\",\r\n                                        \"title\": \"Border color\",\r\n                                        \"description\": \"Set border color\",\r\n                                        \"control\": \"color\"\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"color\",\r\n                                        \"cssclass\": \"icon-T\",\r\n                                        \"title\": \"Text color\",\r\n                                        \"description\": \"Set text color\",\r\n                                        \"mandatory\": true,\r\n                                        \"control\": \"color\"\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"url\",\r\n                                        \"cssclass\": \"icon-image\",\r\n                                        \"control\": \"dialog-button\",\r\n                                        \"title\": \"Image Properties\",\r\n                                        \"description\": \"Edit image properties\",\r\n                                        \"dialog\": {\r\n                                            \"control\": \"textfield\",\r\n                                            \"name\": \"Image URL\",\r\n                                            \"required\": true\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"text\",\r\n                                        \"cssclass\": \"icon-gear\",\r\n                                        \"control\": \"dialog-button\",\r\n                                        \"title\": \"Text Properties\",\r\n                                        \"description\": \"Edit text properties\",\r\n                                        \"dialog\": {\r\n                                            \"control\": \"textfield\",\r\n                                            \"name\": \"Text\",\r\n                                            \"required\": true\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"method\": \"showTitle\",\r\n                                        \"cssclass\": \"icon-two-parts-both\",\r\n                                        \"control\": \"button\",\r\n                                        \"title\": \"Show title\",\r\n                                        \"description\": \"Show telemetry element title\"\r\n                                    },\r\n                                    {\r\n                                        \"method\": \"hideTitle\",\r\n                                        \"cssclass\": \"icon-two-parts-one-only\",\r\n                                        \"control\": \"button\",\r\n                                        \"title\": \"Hide title\",\r\n                                        \"description\": \"Hide telemetry element title\"\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"remove\",\r\n                                        \"control\": \"button\",\r\n                                        \"cssclass\": \"icon-trash\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ],\r\n            \"types\": [\r\n                {\r\n                    \"key\": \"telemetry.fixed\",\r\n                    \"name\": \"Fixed Position Display\",\r\n                    \"cssclass\": \"icon-box-with-dashed-lines\",\r\n                    \"description\": \"Collect and display telemetry elements in \" +\r\n                    \"alphanumeric format in a simple canvas workspace. \" +\r\n                    \"Elements can be positioned and sized. \" +\r\n                    \"Lines, boxes and images can be added as well.\",\r\n                    \"priority\": 899,\r\n                    \"delegates\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"features\": \"creation\",\r\n                    \"contains\": [\r\n                        {\r\n                            \"has\": \"telemetry\"\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"composition\": []\r\n                    },\r\n                    \"properties\": [\r\n                        {\r\n                            \"name\": \"Layout Grid\",\r\n                            \"control\": \"composite\",\r\n                            \"items\": [\r\n                                {\r\n                                    \"name\": \"Horizontal grid (px)\",\r\n                                    \"control\": \"textfield\",\r\n                                    \"cssclass\": \"l-small l-numeric\"\r\n                                },\r\n                                {\r\n                                    \"name\": \"Vertical grid (px)\",\r\n                                    \"control\": \"textfield\",\r\n                                    \"cssclass\": \"l-small l-numeric\"\r\n                                }\r\n                            ],\r\n                            \"pattern\": \"^(\\\\d*[1-9]\\\\d*)?$\",\r\n                            \"property\": \"layoutGrid\",\r\n                            \"conversion\": \"number[]\"\r\n                        }\r\n                    ],\r\n                    \"views\": [\r\n                        \"fixed-display\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/imagery/src/policies/ImageryViewPolicy',[],function () {\r\n\r\n        /**\r\n         * Policy preventing the Imagery view from being made available for\r\n         * domain objects which do not have associated image telemetry.\r\n         * @implements {Policy.<View, DomainObject>}\r\n         * @constructor\r\n         */\r\n        function ImageryViewPolicy() {\r\n        }\r\n\r\n        function hasImageTelemetry(domainObject) {\r\n            var telemetry = domainObject &&\r\n                    domainObject.getCapability('telemetry'),\r\n                metadata = telemetry ? telemetry.getMetadata() : {},\r\n                ranges = metadata.ranges || [];\r\n\r\n            return ranges.some(function (range) {\r\n                return range.format === 'imageUrl' ||\r\n                    range.format === 'image';\r\n            });\r\n        }\r\n\r\n        ImageryViewPolicy.prototype.allow = function (view, domainObject) {\r\n            if (view.key === 'imagery') {\r\n                return hasImageTelemetry(domainObject);\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        return ImageryViewPolicy;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements views of image telemetry.\r\n * @namespace platform/features/imagery\r\n */\r\ndefine(\r\n    'platform/features/imagery/src/controllers/ImageryController',['moment'],\r\n    function (moment) {\r\n\r\n        var DATE_FORMAT = \"YYYY-MM-DD\",\r\n            TIME_FORMAT = \"HH:mm:ss.SSS\";\r\n\r\n        /**\r\n         * Controller for the \"Imagery\" view of a domain object which\r\n         * provides image telemetry.\r\n         * @constructor\r\n         * @memberof platform/features/imagery\r\n         */\r\n        function ImageryController($scope, telemetryHandler) {\r\n            var self = this;\r\n\r\n            function releaseSubscription() {\r\n                if (self.handle) {\r\n                    self.handle.unsubscribe();\r\n                    self.handle = undefined;\r\n                }\r\n            }\r\n\r\n            function updateValuesCallback() {\r\n                return self.updateValues();\r\n            }\r\n\r\n            // Create a new subscription; telemetrySubscriber gets\r\n            // to do the meaningful work here.\r\n            function subscribe(domainObject) {\r\n                releaseSubscription();\r\n                self.date = \"\";\r\n                self.time = \"\";\r\n                self.zone = \"\";\r\n                self.imageUrl = \"\";\r\n                self.handle = domainObject && telemetryHandler.handle(\r\n                    domainObject,\r\n                    updateValuesCallback,\r\n                    true // Lossless\r\n                );\r\n            }\r\n\r\n            // Subscribe to telemetry when a domain object becomes available\r\n            $scope.$watch('domainObject', subscribe);\r\n\r\n            // Unsubscribe when the plot is destroyed\r\n            $scope.$on(\"$destroy\", releaseSubscription);\r\n        }\r\n\r\n        // Update displayable values to reflect latest image telemetry\r\n        ImageryController.prototype.updateValues = function () {\r\n            var imageObject =\r\n                    this.handle && this.handle.getTelemetryObjects()[0],\r\n                timestamp,\r\n                m;\r\n            if (imageObject && !this.isPaused) {\r\n                timestamp = this.handle.getDomainValue(imageObject);\r\n                m = timestamp !== undefined ?\r\n                        moment.utc(timestamp) :\r\n                        undefined;\r\n                this.date = m ? m.format(DATE_FORMAT) : \"\";\r\n                this.time = m ? m.format(TIME_FORMAT) : \"\";\r\n                this.zone = m ? \"UTC\" : \"\";\r\n                this.imageUrl = this.handle.getRangeValue(imageObject);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the time portion (hours, minutes, seconds) of the\r\n         * timestamp associated with the incoming image telemetry.\r\n         * @returns {string} the time\r\n         */\r\n        ImageryController.prototype.getTime = function () {\r\n            return this.time;\r\n        };\r\n\r\n        /**\r\n         * Get the date portion (month, year) of the\r\n         * timestamp associated with the incoming image telemetry.\r\n         * @returns {string} the date\r\n         */\r\n        ImageryController.prototype.getDate = function () {\r\n            return this.date;\r\n        };\r\n\r\n        /**\r\n         * Get the time zone for the displayed time/date corresponding\r\n         * to the timestamp associated with the incoming image\r\n         * telemetry.\r\n         * @returns {string} the time\r\n         */\r\n        ImageryController.prototype.getZone = function () {\r\n            return this.zone;\r\n        };\r\n\r\n        /**\r\n         * Get the URL of the image telemetry to display.\r\n         * @returns {string} URL for telemetry image\r\n         */\r\n        ImageryController.prototype.getImageUrl = function () {\r\n            return this.imageUrl;\r\n        };\r\n\r\n        /**\r\n         * Getter-setter for paused state of the view (true means\r\n         * paused, false means not.)\r\n         * @param {boolean} [state] the state to set\r\n         * @returns {boolean} the current state\r\n         */\r\n        ImageryController.prototype.paused = function (state) {\r\n            if (arguments.length > 0 && state !== this.isPaused) {\r\n                this.isPaused = state;\r\n                // Switch to latest image\r\n                this.updateValues();\r\n            }\r\n            return this.isPaused;\r\n        };\r\n\r\n        return ImageryController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/imagery/src/directives/MCTBackgroundImage',[],function () {\r\n\r\n        /**\r\n         * Defines the `mct-background-image` directive.\r\n         *\r\n         * Used as an attribute, this will set the `background-image`\r\n         * property to the URL given in its value, but only after that\r\n         * image has loaded; this avoids \"flashing\" as images change.\r\n         *\r\n         * If `src` is falsy, no image will be displayed (immediately.)\r\n         *\r\n         * @constructor\r\n         * @memberof platform/features/imagery\r\n         */\r\n        function MCTBackgroundImage($document) {\r\n            function link(scope, element) {\r\n                // General strategy here:\r\n                // - Keep count of how many images have been requested; this\r\n                //   counter will be used as an internal identifier or sorts\r\n                //   for each image that loads.\r\n                // - As the src attribute changes, begin loading those images.\r\n                // - When images do load, update the background-image property\r\n                //   of the element, but only if a more recently\r\n                //   requested image has not already been loaded.\r\n                // The order in which URLs are passed in and the order\r\n                // in which images are actually loaded may be different, so\r\n                // some strategy like this is necessary to ensure that images\r\n                // do not display out-of-order.\r\n                var requested = 0, loaded = 0;\r\n\r\n                function nextImage(url) {\r\n                    var myCounter = requested,\r\n                        image;\r\n\r\n                    function useImage() {\r\n                        if (loaded <= myCounter) {\r\n                            loaded = myCounter;\r\n                            element.css('background-image', \"url('\" + url + \"')\");\r\n                        }\r\n                    }\r\n\r\n                    if (!url) {\r\n                        loaded = myCounter;\r\n                        element.css('background-image', 'none');\r\n                    } else {\r\n                        image = $document[0].createElement('img');\r\n                        image.src = url;\r\n                        image.onload = useImage;\r\n                    }\r\n\r\n                    requested += 1;\r\n                }\r\n\r\n                scope.$watch('mctBackgroundImage', nextImage);\r\n            }\r\n\r\n            return {\r\n                restrict: \"A\",\r\n                scope: { mctBackgroundImage: \"=\" },\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTBackgroundImage;\r\n    }\r\n);\r\n\r\n\n","\ndefine('text!platform/features/imagery/res/templates/imagery.html',[],function () { return '<div class=\"t-imagery\" ng-controller=\"ImageryController as imagery\">\\r\\n    <div class=\"l-image-main-wrapper l-flex-col\"\\r\\n        ng-mouseenter=\"showLocalControls = true;\"\\r\\n        ng-mouseleave=\"showLocalControls = false;\">\\r\\n        <div\\r\\n            class=\"l-local-controls s-local-controls\"\\r\\n            ng-show=\"false && showLocalControls\">\\r\\n            <a class=\"s-button icon-arrow-left\"\\r\\n               ng-click=\"plot.stepBackPanZoom()\"\\r\\n               ng-show=\"1\"\\r\\n               title=\"Restore previous pan/zoom\">\\r\\n            </a>\\r\\n\\r\\n            <a class=\"s-button icon-arrows-out\"\\r\\n               ng-click=\"plot.unzoom()\"\\r\\n               ng-show=\"1\"\\r\\n               title=\"Reset pan/zoom\">\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\"l-image-main s-image-main flex-elem grows\"\\r\\n            ng-class=\"{ paused: imagery.paused(), stale:false }\"\\r\\n            mct-background-image=\"imagery.getImageUrl()\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\"l-image-main-controlbar flex-elem l-flex-row\">\\r\\n            <div class=\"left flex-elem grows\">\\r\\n                <a class=\"s-button show-thumbs sm hidden icon-thumbs-strip\"\\r\\n                    ng-click=\"showThumbsBubble = (showThumbsBubble)? false:true\"></a>\\r\\n                <span class=\"l-timezone\">{{imagery.getZone()}}</span>\\r\\n                <span class=\"l-time\">{{imagery.getTime()}}</span>\\r\\n                <span class=\"l-date\">{{imagery.getDate()}}</span>\\r\\n            </div>\\r\\n            <div class=\"right flex-elem\">\\r\\n                <a class=\"s-button pause-play\"\\r\\n                    ng-click=\"imagery.paused(!imagery.paused())\"\\r\\n                    ng-class=\"{ paused: imagery.paused() }\"></a>\\r\\n                <a href=\"{{imagery.getImageUrl()}}\"\\r\\n                   ng-if=\"imagery.getImageUrl()\"\\r\\n                   target=\"_blank\"\\r\\n                   title=\"Open image in new tab.\"\\r\\n                   class=\"s-button icon-new-window\">\\r\\n                   </a>\\r\\n                <a href=\"\"\\r\\n                    class=\"s-button l-mag s-mag ui-symbol vsm icon-arrows-out\"\\r\\n                    ng-click=\"clipped = false\"\\r\\n                    ng-show=\"clipped === true\"\\r\\n                    title=\"Not all of image is visible; click to reset.\"></a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/imagery/bundle',[\r\n    \"./src/policies/ImageryViewPolicy\",\r\n    \"./src/controllers/ImageryController\",\r\n    \"./src/directives/MCTBackgroundImage\",\r\n    \"text!./res/templates/imagery.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    ImageryViewPolicy,\r\n    ImageryController,\r\n    MCTBackgroundImage,\r\n    imageryTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/imagery\", {\r\n        \"name\": \"Plot view for telemetry\",\r\n        \"extensions\": {\r\n            \"views\": [\r\n                {\r\n                    \"name\": \"Imagery\",\r\n                    \"key\": \"imagery\",\r\n                    \"cssclass\": \"icon-image\",\r\n                    \"template\": imageryTemplate,\r\n                    \"priority\": \"preferred\",\r\n                    \"needs\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"editable\": false\r\n                }\r\n            ],\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"view\",\r\n                    \"implementation\": ImageryViewPolicy\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"ImageryController\",\r\n                    \"implementation\": ImageryController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"telemetryHandler\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctBackgroundImage\",\r\n                    \"implementation\": MCTBackgroundImage,\r\n                    \"depends\": [\r\n                        \"$document\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/LayoutDrag',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles drag interactions on frames in layouts. This will\r\n         * provides new positions/dimensions for frames based on\r\n         * relative pixel positions provided; these will take into account\r\n         * the grid size (in a snap-to sense) and will enforce some minimums\r\n         * on both position and dimensions.\r\n         *\r\n         * The provided position and dimensions factors will determine\r\n         * whether this is a move or a resize, and what type of resize it\r\n         * will be. For instance, a position factor of [1, 1]\r\n         * will move a frame along with the mouse as the drag\r\n         * proceeds, while a dimension factor of [0, 0] will leave\r\n         * dimensions unchanged. Combining these in different\r\n         * ways results in different handles; a position factor of\r\n         * [1, 0] and a dimensions factor of [-1, 0] will implement\r\n         * a left-edge resize, as the horizontal position will move\r\n         * with the mouse while the horizontal dimensions shrink in\r\n         * kind (and vertical properties remain unmodified.)\r\n         *\r\n         * @param {object} rawPosition the initial position/dimensions\r\n         *                 of the frame being interacted with\r\n         * @param {number[]} posFactor the position factor\r\n         * @param {number[]} dimFactor the dimensions factor\r\n         * @param {number[]} the size of each grid element, in pixels\r\n         * @constructor\r\n         * @memberof platform/features/layout\r\n         */\r\n        function LayoutDrag(rawPosition, posFactor, dimFactor, gridSize) {\r\n            this.rawPosition = rawPosition;\r\n            this.posFactor = posFactor;\r\n            this.dimFactor = dimFactor;\r\n            this.gridSize = gridSize;\r\n        }\r\n\r\n        // Convert a delta from pixel coordinates to grid coordinates,\r\n        // rounding to whole-number grid coordinates.\r\n        function toGridDelta(gridSize, pixelDelta) {\r\n            return pixelDelta.map(function (v, i) {\r\n                return Math.round(v / gridSize[i]);\r\n            });\r\n        }\r\n\r\n        // Utility function to perform element-by-element multiplication\r\n        function multiply(array, factors) {\r\n            return array.map(function (v, i) {\r\n                return v * factors[i];\r\n            });\r\n        }\r\n\r\n        // Utility function to perform element-by-element addition\r\n        function add(array, other) {\r\n            return array.map(function (v, i) {\r\n                return v + other[i];\r\n            });\r\n        }\r\n\r\n        // Utility function to perform element-by-element max-choosing\r\n        function max(array, other) {\r\n            return array.map(function (v, i) {\r\n                return Math.max(v, other[i]);\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * Get a new position object in grid coordinates, with\r\n         * position and dimensions both offset appropriately\r\n         * according to the factors supplied in the constructor.\r\n         * @param {number[]} pixelDelta the offset from the\r\n         *        original position, in pixels\r\n         */\r\n        LayoutDrag.prototype.getAdjustedPosition = function (pixelDelta) {\r\n            var gridDelta = toGridDelta(this.gridSize, pixelDelta);\r\n            return {\r\n                position: max(add(\r\n                    this.rawPosition.position,\r\n                    multiply(gridDelta, this.posFactor)\r\n                ), [0, 0]),\r\n                dimensions: max(add(\r\n                    this.rawPosition.dimensions,\r\n                    multiply(gridDelta, this.dimFactor)\r\n                ), [1, 1])\r\n            };\r\n        };\r\n\r\n        return LayoutDrag;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements object types and associated views for\r\n * display-building.\r\n * @namespace platform/features/layout\r\n */\r\ndefine(\r\n    'platform/features/layout/src/LayoutController',['./LayoutDrag'],\r\n    function (LayoutDrag) {\r\n\r\n        var DEFAULT_DIMENSIONS = [12, 8],\r\n            DEFAULT_GRID_SIZE = [32, 32],\r\n            MINIMUM_FRAME_SIZE = [320, 180];\r\n\r\n        /**\r\n         * The LayoutController is responsible for supporting the\r\n         * Layout view. It arranges frames according to saved configuration\r\n         * and provides methods for updating these based on mouse\r\n         * movement.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param {Scope} $scope the controller's Angular scope\r\n         */\r\n        function LayoutController($scope) {\r\n            var self = this,\r\n                callbackCount = 0;\r\n\r\n            // Update grid size when it changed\r\n            function updateGridSize(layoutGrid) {\r\n                var oldSize = self.gridSize;\r\n\r\n                self.gridSize = layoutGrid || DEFAULT_GRID_SIZE;\r\n\r\n                // Only update panel positions if this actually changed things\r\n                if (self.gridSize[0] !== oldSize[0] ||\r\n                        self.gridSize[1] !== oldSize[1]) {\r\n                    self.layoutPanels(Object.keys(self.positions));\r\n                }\r\n            }\r\n\r\n            // Position a panel after a drop event\r\n            function handleDrop(e, id, position) {\r\n                if (e.defaultPrevented) {\r\n                    return;\r\n                }\r\n\r\n                // Ensure that configuration field is populated\r\n                $scope.configuration = $scope.configuration || {};\r\n                // Make sure there is a \"panels\" field in the\r\n                // view configuration.\r\n                $scope.configuration.panels =\r\n                    $scope.configuration.panels || {};\r\n                // Store the position of this panel.\r\n                $scope.configuration.panels[id] = {\r\n                    position: [\r\n                        Math.floor(position.x / self.gridSize[0]),\r\n                        Math.floor(position.y / self.gridSize[1])\r\n                    ],\r\n                    dimensions: self.defaultDimensions()\r\n                };\r\n                // Mark change as persistable\r\n                if ($scope.commit) {\r\n                    $scope.commit(\"Dropped a frame.\");\r\n                }\r\n                // Populate template-facing position for this id\r\n                self.rawPositions[id] =\r\n                    $scope.configuration.panels[id];\r\n                self.populatePosition(id);\r\n                // Layout may contain embedded views which will\r\n                // listen for drops, so call preventDefault() so\r\n                // that they can recognize that this event is handled.\r\n                e.preventDefault();\r\n            }\r\n\r\n            //Will fetch fully contextualized composed objects, and populate\r\n            // scope with them.\r\n            function refreshComposition() {\r\n                //Keep a track of how many composition callbacks have been made\r\n                var thisCount = ++callbackCount;\r\n\r\n                $scope.domainObject.useCapability('composition').then(function (composition) {\r\n                    var ids;\r\n\r\n                    //Is this callback for the most recent composition\r\n                    // request? If not, discard it. Prevents race condition\r\n                    if (thisCount === callbackCount) {\r\n                        ids = composition.map(function (object) {\r\n                                return object.getId();\r\n                            }) || [];\r\n\r\n                        $scope.composition = composition;\r\n                        self.layoutPanels(ids);\r\n                    }\r\n                });\r\n            }\r\n\r\n            // End drag; we don't want to put $scope into this\r\n            // because it triggers \"cpws\" (copy window or scope)\r\n            // errors in Angular.\r\n            this.endDragInScope = function () {\r\n                // Write to configuration; this is watched and\r\n                // saved by the EditRepresenter.\r\n                $scope.configuration =\r\n                    $scope.configuration || {};\r\n                // Make sure there is a \"panels\" field in the\r\n                // view configuration.\r\n                $scope.configuration.panels =\r\n                    $scope.configuration.panels || {};\r\n                // Store the position of this panel.\r\n                $scope.configuration.panels[self.activeDragId] =\r\n                    self.rawPositions[self.activeDragId];\r\n                // Mark this object as dirty to encourage persistence\r\n                if ($scope.commit) {\r\n                    $scope.commit(\"Moved frame.\");\r\n                }\r\n            };\r\n\r\n            this.positions = {};\r\n            this.rawPositions = {};\r\n            this.gridSize = DEFAULT_GRID_SIZE;\r\n            this.$scope = $scope;\r\n\r\n            // Watch for changes to the grid size in the model\r\n            $scope.$watch(\"model.layoutGrid\", updateGridSize);\r\n\r\n            // Update composed objects on screen, and position panes\r\n            $scope.$watchCollection(\"model.composition\", refreshComposition);\r\n\r\n            // Position panes where they are dropped\r\n            $scope.$on(\"mctDrop\", handleDrop);\r\n        }\r\n\r\n        // Convert from { positions: ..., dimensions: ... } to an\r\n        // apropriate ng-style argument, to position frames.\r\n        LayoutController.prototype.convertPosition = function (raw) {\r\n            var gridSize = this.gridSize;\r\n            // Multiply position/dimensions by grid size\r\n            return {\r\n                left: (gridSize[0] * raw.position[0]) + 'px',\r\n                top: (gridSize[1] * raw.position[1]) + 'px',\r\n                width: (gridSize[0] * raw.dimensions[0]) + 'px',\r\n                height: (gridSize[1] * raw.dimensions[1]) + 'px'\r\n            };\r\n        };\r\n\r\n        // Generate default positions for a new panel\r\n        LayoutController.prototype.defaultDimensions = function () {\r\n            var gridSize = this.gridSize;\r\n            return MINIMUM_FRAME_SIZE.map(function (min, i) {\r\n                return Math.max(\r\n                    Math.ceil(min / gridSize[i]),\r\n                    DEFAULT_DIMENSIONS[i]\r\n                );\r\n            });\r\n        };\r\n\r\n        // Generate a default position (in its raw format) for a frame.\r\n        // Use an index to ensure that default positions are unique.\r\n        LayoutController.prototype.defaultPosition = function (index) {\r\n            return {\r\n                position: [index, index],\r\n                dimensions: this.defaultDimensions()\r\n            };\r\n        };\r\n\r\n        // Store a computed position for a contained frame by its\r\n        // domain object id. Called in a forEach loop, so arguments\r\n        // are as expected there.\r\n        LayoutController.prototype.populatePosition = function (id, index) {\r\n            this.rawPositions[id] =\r\n                this.rawPositions[id] || this.defaultPosition(index || 0);\r\n            this.positions[id] =\r\n                this.convertPosition(this.rawPositions[id]);\r\n        };\r\n\r\n        /**\r\n         * Get a style object for a frame with the specified domain\r\n         * object identifier, suitable for use in an `ng-style`\r\n         * directive to position a frame as configured for this layout.\r\n         * @param {string} id the object identifier\r\n         * @returns {Object.<string, string>} an object with\r\n         *          appropriate left, width, etc fields for positioning\r\n         */\r\n        LayoutController.prototype.getFrameStyle = function (id) {\r\n            // Called in a loop, so just look up; the \"positions\"\r\n            // object is kept up to date by a watch.\r\n            return this.positions[id];\r\n        };\r\n\r\n        /**\r\n         * Start a drag gesture to move/resize a frame.\r\n         *\r\n         * The provided position and dimensions factors will determine\r\n         * whether this is a move or a resize, and what type it\r\n         * will be. For instance, a position factor of [1, 1]\r\n         * will move a frame along with the mouse as the drag\r\n         * proceeds, while a dimension factor of [0, 0] will leave\r\n         * dimensions unchanged. Combining these in different\r\n         * ways results in different handles; a position factor of\r\n         * [1, 0] and a dimensions factor of [-1, 0] will implement\r\n         * a left-edge resize, as the horizontal position will move\r\n         * with the mouse while the horizontal dimensions shrink in\r\n         * kind (and vertical properties remain unmodified.)\r\n         *\r\n         * @param {string} id the identifier of the domain object\r\n         *        in the frame being manipulated\r\n         * @param {number[]} posFactor the position factor\r\n         * @param {number[]} dimFactor the dimensions factor\r\n         */\r\n        LayoutController.prototype.startDrag = function (id, posFactor, dimFactor) {\r\n            this.activeDragId = id;\r\n            this.activeDrag = new LayoutDrag(\r\n                this.rawPositions[id],\r\n                posFactor,\r\n                dimFactor,\r\n                this.gridSize\r\n            );\r\n        };\r\n        /**\r\n         * Continue an active drag gesture.\r\n         * @param {number[]} delta the offset, in pixels,\r\n         *        of the current pointer position, relative\r\n         *        to its position when the drag started\r\n         */\r\n        LayoutController.prototype.continueDrag = function (delta) {\r\n            if (this.activeDrag) {\r\n                this.rawPositions[this.activeDragId] =\r\n                    this.activeDrag.getAdjustedPosition(delta);\r\n                this.populatePosition(this.activeDragId);\r\n            }\r\n        };\r\n\r\n        // Utility function to copy raw positions from configuration,\r\n        // without writing directly to configuration (to avoid triggering\r\n        // persistence from watchers during drags).\r\n        function shallowCopy(obj, keys) {\r\n            var copy = {};\r\n            keys.forEach(function (k) {\r\n                copy[k] = obj[k];\r\n            });\r\n            return copy;\r\n        }\r\n\r\n        /**\r\n         * Compute panel positions based on the layout's object model.\r\n         * Defined as member function to facilitate testing.\r\n         * @private\r\n         */\r\n        LayoutController.prototype.layoutPanels = function (ids) {\r\n            var configuration = this.$scope.configuration || {},\r\n                self = this;\r\n\r\n            // Pull panel positions from configuration\r\n            this.rawPositions =\r\n                shallowCopy(configuration.panels || {}, ids);\r\n\r\n            // Clear prior computed positions\r\n            this.positions = {};\r\n\r\n            // Update width/height that we are tracking\r\n            this.gridSize =\r\n                (this.$scope.model || {}).layoutGrid || DEFAULT_GRID_SIZE;\r\n\r\n            // Compute positions and add defaults where needed\r\n            ids.forEach(function (id, index) {\r\n                self.populatePosition(id, index);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * End the active drag gesture. This will update the\r\n         * view configuration.\r\n         */\r\n        LayoutController.prototype.endDrag = function () {\r\n            this.endDragInScope();\r\n        };\r\n\r\n        return LayoutController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/ElementFactory',[],\r\n    function () {\r\n\r\n        var INITIAL_STATES = {\r\n                \"fixed.image\": {\r\n                    stroke: \"transparent\"\r\n                },\r\n                \"fixed.box\": {\r\n                    fill: \"#717171\",\r\n                    border: \"transparent\",\r\n                    stroke: \"transparent\"\r\n                },\r\n                \"fixed.line\": {\r\n                    x: 5,\r\n                    y: 9,\r\n                    x2: 6,\r\n                    y2: 6,\r\n                    stroke: \"#717171\"\r\n                },\r\n                \"fixed.text\": {\r\n                    fill: \"transparent\",\r\n                    stroke: \"transparent\"\r\n                }\r\n            },\r\n            DIALOGS = {\r\n                \"fixed.image\": {\r\n                    name: \"Image Properties\",\r\n                    sections: [\r\n                        {\r\n                            rows: [\r\n                                {\r\n                                    key: \"url\",\r\n                                    control: \"textfield\",\r\n                                    name: \"Image URL\",\r\n                                    required: true\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"fixed.text\": {\r\n                    name: \"Text Element Properties\",\r\n                    sections: [\r\n                        {\r\n                            rows: [\r\n                                {\r\n                                    key: \"text\",\r\n                                    control: \"textfield\",\r\n                                    name: \"Text\",\r\n                                    required: true\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n\r\n        /**\r\n         * The ElementFactory creates new instances of elements for the\r\n         * fixed position view, prompting for user input where necessary.\r\n         * @param {DialogService} dialogService service to request user input\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         */\r\n        function ElementFactory(dialogService) {\r\n            this.dialogService = dialogService;\r\n        }\r\n\r\n        /**\r\n         * Create a new element for the fixed position view.\r\n         * @param {string} type the type of element to create\r\n         * @returns {Promise|object} the created element, or a promise\r\n         *          for that element\r\n         */\r\n        ElementFactory.prototype.createElement = function (type) {\r\n            var initialState = INITIAL_STATES[type] || {};\r\n\r\n            // Clone that state\r\n            initialState = JSON.parse(JSON.stringify(initialState));\r\n\r\n            // Show a dialog to configure initial state, if appropriate\r\n            return DIALOGS[type] ? this.dialogService.getUserInput(\r\n                DIALOGS[type],\r\n                initialState\r\n            ) : initialState;\r\n        };\r\n\r\n        return ElementFactory;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/FixedProxy',['./elements/ElementFactory'],\r\n    function (ElementFactory) {\r\n\r\n        /**\r\n         * Proxy for configuring a fixed position view via the toolbar.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param {Function} addElementCallback callback to invoke when\r\n         *        elements are created\r\n         * @param $q Angular's $q, for promise-handling\r\n         * @param {DialogService} dialogService dialog service to use\r\n         *        when adding a new element will require user input\r\n         */\r\n        function FixedProxy(addElementCallback, $q, dialogService) {\r\n            this.factory = new ElementFactory(dialogService);\r\n            this.$q = $q;\r\n            this.addElementCallback = addElementCallback;\r\n        }\r\n\r\n        /**\r\n         * Add a new visual element to this view. Supported types are:\r\n         *\r\n         * * `fixed.image`\r\n         * * `fixed.box`\r\n         * * `fixed.text`\r\n         * * `fixed.line`\r\n         *\r\n         * @param {string} type the type of element to add\r\n         */\r\n        FixedProxy.prototype.add = function (type) {\r\n            var addElementCallback = this.addElementCallback;\r\n\r\n            // Place a configured element into the view configuration\r\n            function addElement(element) {\r\n                // Configure common properties of the element\r\n                element.x = element.x || 0;\r\n                element.y = element.y || 0;\r\n                element.width = element.width || 1;\r\n                element.height = element.height || 1;\r\n                element.type = type;\r\n\r\n                // Finally, add it to the view's configuration\r\n                addElementCallback(element);\r\n            }\r\n\r\n            // Defer creation to the factory\r\n            this.$q.when(this.factory.createElement(type)).then(addElement);\r\n        };\r\n\r\n        return FixedProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/AccessorMutator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Utility function for creating getter-setter functions,\r\n         * since these are frequently useful for element proxies.\r\n         *\r\n         * An optional third argument may be supplied in order to\r\n         * constrain or modify arguments when using as a setter;\r\n         * this argument is a function which takes two arguments\r\n         * (the current value for the property, and the requested\r\n         * new value.) This is useful when values need to be kept\r\n         * in certain ranges; specifically, to keep x/y positions\r\n         * non-negative in a fixed position view.\r\n         *\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param {Object} object the object to get/set values upon\r\n         * @param {string} key the property to get/set\r\n         * @param {function} [updater] function used to process updates\r\n         */\r\n        function AccessorMutator(object, key, updater) {\r\n            return function (value) {\r\n                if (arguments.length > 0) {\r\n                    object[key] = updater ?\r\n                            updater(value, object[key]) :\r\n                            value;\r\n                }\r\n                return object[key];\r\n            };\r\n        }\r\n\r\n        return AccessorMutator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/layout/src/elements/ResizeHandle',[],\r\n    function () {\r\n\r\n        /**\r\n         * @interface platform/features/layout.ElementHandle\r\n         * @private\r\n         */\r\n\r\n        /**\r\n         * Handle for changing width/height properties of an element.\r\n         * This is used to support drag handles for different\r\n         * element types in a fixed position view.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         */\r\n        function ResizeHandle(element, minWidth, minHeight) {\r\n            this.element = element;\r\n\r\n            // Ensure reasonable defaults\r\n            this.minWidth = minWidth || 0;\r\n            this.minHeight = minHeight || 0;\r\n        }\r\n\r\n        ResizeHandle.prototype.x = function (value) {\r\n            var element = this.element;\r\n            if (arguments.length > 0) {\r\n                element.width = Math.max(\r\n                    this.minWidth,\r\n                    value - element.x\r\n                );\r\n            }\r\n            return element.x + element.width;\r\n        };\r\n\r\n        ResizeHandle.prototype.y = function (value) {\r\n            var element = this.element;\r\n            if (arguments.length > 0) {\r\n                element.height = Math.max(\r\n                    this.minHeight,\r\n                    value - element.y\r\n                );\r\n            }\r\n            return element.y + element.height;\r\n        };\r\n\r\n        return ResizeHandle;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/ElementProxy',['./AccessorMutator', './ResizeHandle'],\r\n    function (AccessorMutator, ResizeHandle) {\r\n\r\n        // Index deltas for changes in order\r\n        var ORDERS = {\r\n            top: Number.POSITIVE_INFINITY,\r\n            up: 1,\r\n            down: -1,\r\n            bottom: Number.NEGATIVE_INFINITY\r\n        };\r\n\r\n        // Ensure a value is non-negative (for x/y setters)\r\n        function clamp(value) {\r\n            return Math.max(value, 0);\r\n        }\r\n\r\n        /**\r\n         * Abstract superclass for other classes which provide useful\r\n         * interfaces upon an elements in a fixed position view.\r\n         * This handles the generic operations (e.g. remove) so that\r\n         * subclasses only need to implement element-specific behaviors.\r\n         *\r\n         * Note that arguments here are meant to match those expected\r\n         * by `Array.prototype.map`\r\n         *\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the fixed position element, as stored in its\r\n         *        configuration\r\n         * @param index the element's index within its array\r\n         * @param {Array} elements the full array of elements\r\n         */\r\n        function ElementProxy(element, index, elements) {\r\n            this.resizeHandles = [new ResizeHandle(element, 1, 1)];\r\n\r\n            /**\r\n             * The element as stored in the view configuration.\r\n             * @memberof platform/features/layout.ElementProxy#\r\n             */\r\n            this.element = element;\r\n\r\n            /**\r\n             * Get and/or set the x position of this element.\r\n             * Units are in fixed position grid space.\r\n             * @param {number} [x] the new x position (if setting)\r\n             * @returns {number} the x position\r\n             * @memberof platform/features/layout.ElementProxy#\r\n             */\r\n            this.x = new AccessorMutator(element, 'x', clamp);\r\n\r\n            /**\r\n             * Get and/or set the y position of this element.\r\n             * Units are in fixed position grid space.\r\n             * @param {number} [y] the new y position (if setting)\r\n             * @returns {number} the y position\r\n             * @memberof platform/features/layout.ElementProxy#\r\n             */\r\n            this.y = new AccessorMutator(element, 'y', clamp);\r\n\r\n            /**\r\n             * Get and/or set the stroke color of this element.\r\n             * @param {string} [stroke] the new stroke color (if setting)\r\n             * @returns {string} the stroke color\r\n             * @memberof platform/features/layout.ElementProxy#\r\n             */\r\n            this.stroke = new AccessorMutator(element, 'stroke');\r\n\r\n            /**\r\n             * Get and/or set the width of this element.\r\n             * Units are in fixed position grid space.\r\n             * @param {number} [w] the new width (if setting)\r\n             * @returns {number} the width\r\n             * @memberof platform/features/layout.ElementProxy#\r\n             */\r\n            this.width = new AccessorMutator(element, 'width');\r\n\r\n            /**\r\n             * Get and/or set the height of this element.\r\n             * Units are in fixed position grid space.\r\n             * @param {number} [h] the new height (if setting)\r\n             * @returns {number} the height\r\n             * @memberof platform/features/layout.ElementProxy#\r\n             */\r\n            this.height = new AccessorMutator(element, 'height');\r\n\r\n            this.index = index;\r\n            this.elements = elements;\r\n        }\r\n\r\n        /**\r\n         * Change the display order of this element.\r\n         * @param {string} o where to move this element;\r\n         *        one of \"top\", \"up\", \"down\", or \"bottom\"\r\n         */\r\n        ElementProxy.prototype.order = function (o) {\r\n            var index = this.index,\r\n                elements = this.elements,\r\n                element = this.element,\r\n                delta = ORDERS[o] || 0,\r\n                desired = Math.max(\r\n                    Math.min(index + delta, elements.length - 1),\r\n                    0\r\n                );\r\n            // Move to the desired index, if this is a change\r\n            if ((desired !== index) && (elements[index] === element)) {\r\n                // Splice out the current element\r\n                elements.splice(index, 1);\r\n                // Splice it back in at the correct index\r\n                elements.splice(desired, 0, element);\r\n                // Track change in index (proxy should be recreated\r\n                // anyway, but be consistent)\r\n                this.index = desired;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Remove this element from the fixed position view.\r\n         */\r\n        ElementProxy.prototype.remove = function () {\r\n            var index = this.index;\r\n            if (this.elements[index] === this.element) {\r\n                this.elements.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get handles to control specific features of this element,\r\n         * e.g. corner size.\r\n         * @return {platform/features/layout.ElementHandle[]} handles\r\n         *         for moving/resizing this element\r\n         */\r\n        ElementProxy.prototype.handles = function () {\r\n            return this.resizeHandles;\r\n        };\r\n\r\n        return ElementProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/BoxProxy',['./ElementProxy', './AccessorMutator'],\r\n    function (ElementProxy, AccessorMutator) {\r\n\r\n        /**\r\n         * Selection proxy for Box elements in a fixed position view.\r\n         * Also serves as a superclass for Text elements, since those\r\n         * elements have a superset of Box properties.\r\n         *\r\n         * Note that arguments here are meant to match those expected\r\n         * by `Array.prototype.map`\r\n         *\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the fixed position element, as stored in its\r\n         *        configuration\r\n         * @param index the element's index within its array\r\n         * @param {Array} elements the full array of elements\r\n         */\r\n        function BoxProxy(element, index, elements) {\r\n            var proxy = new ElementProxy(element, index, elements);\r\n\r\n            /**\r\n             * Get/set this element's fill color. (Omitting the\r\n             * argument makes this act as a getter.)\r\n             * @method\r\n             * @param {string} fill the new fill color\r\n             * @returns {string} the fill color\r\n             * @memberof platform/features/layout.BoxProxy#\r\n             */\r\n            proxy.fill = new AccessorMutator(element, 'fill');\r\n\r\n            return proxy;\r\n        }\r\n\r\n        return BoxProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/TextProxy',['./BoxProxy', './AccessorMutator'],\r\n    function (BoxProxy, AccessorMutator) {\r\n\r\n        /**\r\n         * Selection proxy for Text elements in a fixed position view.\r\n         *\r\n         * Note that arguments here are meant to match those expected\r\n         * by `Array.prototype.map`\r\n         *\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the fixed position element, as stored in its\r\n         *        configuration\r\n         * @param index the element's index within its array\r\n         * @param {Array} elements the full array of elements\r\n         * @augments {platform/features/layout.ElementProxy}\r\n         */\r\n        function TextProxy(element, index, elements) {\r\n            var proxy = new BoxProxy(element, index, elements);\r\n\r\n            /**\r\n             * Get and/or set the text color of this element.\r\n             * @param {string} [color] the new text color (if setting)\r\n             * @returns {string} the text color\r\n             * @memberof platform/features/layout.TextProxy#\r\n             */\r\n            proxy.color = new AccessorMutator(element, 'color');\r\n\r\n            /**\r\n             * Get and/or set the displayed text of this element.\r\n             * @param {string} [text] the new text (if setting)\r\n             * @returns {string} the text\r\n             * @memberof platform/features/layout.TextProxy#\r\n             */\r\n            proxy.text = new AccessorMutator(element, 'text');\r\n\r\n            return proxy;\r\n        }\r\n\r\n        return TextProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/TelemetryProxy',['./TextProxy'],\r\n    function (TextProxy) {\r\n\r\n        // Method names to expose from this proxy\r\n        var HIDE = 'hideTitle', SHOW = 'showTitle';\r\n\r\n        /**\r\n         * Selection proxy for telemetry elements in a fixed position view.\r\n         *\r\n         * Note that arguments here are meant to match those expected\r\n         * by `Array.prototype.map`\r\n         *\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the fixed position element, as stored in its\r\n         *        configuration\r\n         * @param index the element's index within its array\r\n         * @param {Array} elements the full array of elements\r\n         * @augments {platform/features/layout.ElementProxy}\r\n         */\r\n        function TelemetryProxy(element, index, elements) {\r\n            var proxy = new TextProxy(element, index, elements);\r\n\r\n            // Toggle the visibility of the title\r\n            function toggle() {\r\n                // Toggle the state\r\n                element.titled = !element.titled;\r\n\r\n                // Change which method is exposed, to influence\r\n                // which button is shown in the toolbar\r\n                delete proxy[SHOW];\r\n                delete proxy[HIDE];\r\n                proxy[element.titled ? HIDE : SHOW] = toggle;\r\n            }\r\n\r\n            // Expose the domain object identifier\r\n            proxy.id = element.id;\r\n\r\n            // Expose initial toggle\r\n            proxy[element.titled ? HIDE : SHOW] = toggle;\r\n\r\n            // Don't expose text configuration\r\n            delete proxy.text;\r\n\r\n            return proxy;\r\n        }\r\n\r\n        return TelemetryProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/ImageProxy',['./ElementProxy', './AccessorMutator'],\r\n    function (ElementProxy, AccessorMutator) {\r\n\r\n        /**\r\n         * Selection proxy for Image elements in a fixed position view.\r\n         *\r\n         * Note that arguments here are meant to match those expected\r\n         * by `Array.prototype.map`\r\n         *\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the fixed position element, as stored in its\r\n         *        configuration\r\n         * @param index the element's index within its array\r\n         * @param {Array} elements the full array of elements\r\n         * @augments {platform/features/layout.ElementProxy}\r\n         */\r\n        function ImageProxy(element, index, elements) {\r\n            var proxy = new ElementProxy(element, index, elements);\r\n\r\n            /**\r\n             * Get and/or set the displayed text of this element.\r\n             * @param {string} [text] the new text (if setting)\r\n             * @returns {string} the text\r\n             * @memberof platform/features/layout.ImageProxy#\r\n             */\r\n            proxy.url = new AccessorMutator(element, 'url');\r\n\r\n            return proxy;\r\n        }\r\n\r\n        return ImageProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/layout/src/elements/LineHandle',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handle for changing x/y position of a line's end point.\r\n         * This is used to support drag handles for line elements\r\n         * in a fixed position view. Field names for opposite ends\r\n         * are provided to avoid zero-length lines.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the line element\r\n         * @param {string} xProperty field which stores x position\r\n         * @param {string} yProperty field which stores x position\r\n         * @param {string} xOther field which stores x of other end\r\n         * @param {string} yOther field which stores y of other end\r\n         * @implements {platform/features/layout.ElementHandle}\r\n         */\r\n        function LineHandle(element, xProperty, yProperty, xOther, yOther) {\r\n            this.element = element;\r\n            this.xProperty = xProperty;\r\n            this.yProperty = yProperty;\r\n            this.xOther = xOther;\r\n            this.yOther = yOther;\r\n        }\r\n\r\n        LineHandle.prototype.x = function (value) {\r\n            var element = this.element,\r\n                xProperty = this.xProperty,\r\n                yProperty = this.yProperty,\r\n                xOther = this.xOther,\r\n                yOther = this.yOther;\r\n\r\n            if (arguments.length > 0) {\r\n                // Ensure we stay in view\r\n                value = Math.max(value, 0);\r\n                // Make sure end points will still be different\r\n                if (element[yOther] !== element[yProperty] ||\r\n                    element[xOther] !== value) {\r\n                    element[xProperty] = value;\r\n                }\r\n            }\r\n            return element[xProperty];\r\n        };\r\n\r\n        LineHandle.prototype.y = function (value) {\r\n            var element = this.element,\r\n                xProperty = this.xProperty,\r\n                yProperty = this.yProperty,\r\n                xOther = this.xOther,\r\n                yOther = this.yOther;\r\n\r\n            if (arguments.length > 0) {\r\n                // Ensure we stay in view\r\n                value = Math.max(value, 0);\r\n                // Make sure end points will still be different\r\n                if (element[xOther] !== element[xProperty] ||\r\n                    element[yOther] !== value) {\r\n                    element[yProperty] = value;\r\n                }\r\n            }\r\n            return element[yProperty];\r\n        };\r\n\r\n        return LineHandle;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/LineProxy',['./ElementProxy', './LineHandle'],\r\n    function (ElementProxy, LineHandle) {\r\n\r\n        /**\r\n         * Selection/diplay proxy for line elements of a fixed position\r\n         * view.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param element the fixed position element, as stored in its\r\n         *        configuration\r\n         * @param index the element's index within its array\r\n         * @param {Array} elements the full array of elements\r\n         * @augments {platform/features/layout.ElementProxy}\r\n         */\r\n        function LineProxy(element, index, elements) {\r\n            var proxy = new ElementProxy(element, index, elements),\r\n                handles = [\r\n                    new LineHandle(element, 'x', 'y', 'x2', 'y2'),\r\n                    new LineHandle(element, 'x2', 'y2', 'x', 'y')\r\n                ];\r\n\r\n            /**\r\n             * Get the top-left x coordinate, in grid space, of\r\n             * this line's bounding box.\r\n             * @returns {number} the x coordinate\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.x = function (v) {\r\n                var x = Math.min(element.x, element.x2),\r\n                    delta = Math.max(v, 0) - x;\r\n                if (arguments.length > 0 && delta) {\r\n                    element.x += delta;\r\n                    element.x2 += delta;\r\n                }\r\n                return x;\r\n            };\r\n\r\n            /**\r\n             * Get the top-left y coordinate, in grid space, of\r\n             * this line's bounding box.\r\n             * @returns {number} the y coordinate\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.y = function (v) {\r\n                var y = Math.min(element.y, element.y2),\r\n                    delta = Math.max(v, 0) - y;\r\n                if (arguments.length > 0 && delta) {\r\n                    element.y += delta;\r\n                    element.y2 += delta;\r\n                }\r\n                return y;\r\n            };\r\n\r\n            /**\r\n             * Get the width, in grid space, of\r\n             * this line's bounding box.\r\n             * @returns {number} the width\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.width = function () {\r\n                return Math.max(Math.abs(element.x - element.x2), 1);\r\n            };\r\n\r\n            /**\r\n             * Get the height, in grid space, of\r\n             * this line's bounding box.\r\n             * @returns {number} the height\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.height = function () {\r\n                return Math.max(Math.abs(element.y - element.y2), 1);\r\n            };\r\n\r\n            /**\r\n             * Get the x position, in grid units relative to\r\n             * the top-left corner, of the first point in this line\r\n             * segment.\r\n             * @returns {number} the x position of the first point\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.x1 = function () {\r\n                return element.x - proxy.x();\r\n            };\r\n\r\n            /**\r\n             * Get the y position, in grid units relative to\r\n             * the top-left corner, of the first point in this line\r\n             * segment.\r\n             * @returns {number} the y position of the first point\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.y1 = function () {\r\n                return element.y - proxy.y();\r\n            };\r\n\r\n            /**\r\n             * Get the x position, in grid units relative to\r\n             * the top-left corner, of the second point in this line\r\n             * segment.\r\n             * @returns {number} the x position of the second point\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.x2 = function () {\r\n                return element.x2 - proxy.x();\r\n            };\r\n\r\n            /**\r\n             * Get the y position, in grid units relative to\r\n             * the top-left corner, of the second point in this line\r\n             * segment.\r\n             * @returns {number} the y position of the second point\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.y2 = function () {\r\n                return element.y2 - proxy.y();\r\n            };\r\n\r\n            /**\r\n             * Get element handles for changing the position of end\r\n             * points of this line.\r\n             * @returns {LineHandle[]} line handles for both end points\r\n             * @memberof platform/features/layout.LineProxy#\r\n             */\r\n            proxy.handles = function () {\r\n                return handles;\r\n            };\r\n\r\n            return proxy;\r\n        }\r\n\r\n        return LineProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/elements/ElementProxies',['./TelemetryProxy', './ImageProxy', './LineProxy', './BoxProxy', './TextProxy'],\r\n    function (TelemetryProxy, ImageProxy, LineProxy, BoxProxy, TextProxy) {\r\n\r\n        return {\r\n            \"fixed.telemetry\": TelemetryProxy,\r\n            \"fixed.line\": LineProxy,\r\n            \"fixed.box\": BoxProxy,\r\n            \"fixed.image\": ImageProxy,\r\n            \"fixed.text\": TextProxy\r\n        };\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/FixedDragHandle',[],\r\n    function () {\r\n\r\n\r\n        // Drag handle dimensions\r\n        var DRAG_HANDLE_SIZE = [6, 6];\r\n\r\n        /**\r\n         * Template-displayable drag handle for an element in fixed\r\n         * position mode.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         */\r\n        function FixedDragHandle(elementHandle, gridSize, update, commit) {\r\n            this.elementHandle = elementHandle;\r\n            this.gridSize = gridSize;\r\n            this.update = update;\r\n            this.commit = commit;\r\n        }\r\n\r\n        /**\r\n         * Get a CSS style to position this drag handle.\r\n         * @returns CSS style object (for `ng-style`)\r\n         * @memberof platform/features/layout.FixedDragHandle#\r\n         */\r\n        FixedDragHandle.prototype.style = function () {\r\n            // Adjust from grid to pixel coordinates\r\n            var x = this.elementHandle.x() * this.gridSize[0],\r\n                y = this.elementHandle.y() * this.gridSize[1];\r\n\r\n            // Convert to a CSS style centered on that point\r\n            return {\r\n                left: (x - DRAG_HANDLE_SIZE[0] / 2) + 'px',\r\n                top: (y - DRAG_HANDLE_SIZE[1] / 2) + 'px',\r\n                width: DRAG_HANDLE_SIZE[0] + 'px',\r\n                height: DRAG_HANDLE_SIZE[1] + 'px'\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Start a drag gesture. This should be called when a drag\r\n         * begins to track initial state.\r\n         */\r\n        FixedDragHandle.prototype.startDrag = function startDrag() {\r\n            // Cache initial x/y positions\r\n            this.dragging = {\r\n                x: this.elementHandle.x(),\r\n                y: this.elementHandle.y()\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Continue a drag gesture; update x/y positions.\r\n         * @param {number[]} delta x/y pixel difference since drag\r\n         *                   started\r\n         */\r\n        FixedDragHandle.prototype.continueDrag = function (delta) {\r\n            if (this.dragging) {\r\n                // Update x/y positions (snapping to grid)\r\n                this.elementHandle.x(\r\n                    this.dragging.x + Math.round(delta[0] / this.gridSize[0])\r\n                );\r\n                this.elementHandle.y(\r\n                    this.dragging.y + Math.round(delta[1] / this.gridSize[1])\r\n                );\r\n                // Invoke update callback\r\n                if (this.update) {\r\n                    this.update();\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * End a drag gesture. This should be callled when a drag\r\n         * concludes to trigger commit of changes.\r\n         */\r\n        FixedDragHandle.prototype.endDrag = function () {\r\n            // Clear cached state\r\n            this.dragging = undefined;\r\n            // Mark change as complete\r\n            if (this.commit) {\r\n                this.commit(\"Dragged handle.\");\r\n            }\r\n        };\r\n\r\n        return FixedDragHandle;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/FixedController',['./FixedProxy', './elements/ElementProxies', './FixedDragHandle'],\r\n    function (FixedProxy, ElementProxies, FixedDragHandle) {\r\n\r\n        var DEFAULT_DIMENSIONS = [2, 1],\r\n            DEFAULT_GRID_SIZE = [64, 16];\r\n\r\n        /**\r\n         * The FixedController is responsible for supporting the\r\n         * Fixed Position view. It arranges frames according to saved\r\n         * configuration and provides methods for updating these based on\r\n         * mouse movement.\r\n         * @memberof platform/features/layout\r\n         * @constructor\r\n         * @param {Scope} $scope the controller's Angular scope\r\n         */\r\n        function FixedController($scope, $q, dialogService, telemetryHandler, telemetryFormatter) {\r\n            var self = this,\r\n                handle,\r\n                names = {}, // Cache names by ID\r\n                values = {}, // Cache values by ID\r\n                elementProxiesById = {},\r\n                maxDomainValue = Number.POSITIVE_INFINITY;\r\n\r\n            // Convert from element x/y/width/height to an\r\n            // appropriate ng-style argument, to position elements.\r\n            function convertPosition(elementProxy) {\r\n                var gridSize = self.gridSize;\r\n                // Multiply position/dimensions by grid size\r\n                return {\r\n                    left: (gridSize[0] * elementProxy.x()) + 'px',\r\n                    top: (gridSize[1] * elementProxy.y()) + 'px',\r\n                    width: (gridSize[0] * elementProxy.width()) + 'px',\r\n                    height: (gridSize[1] * elementProxy.height()) + 'px'\r\n                };\r\n            }\r\n\r\n            // Update the style for a selected element\r\n            function updateSelectionStyle() {\r\n                var element = self.selection && self.selection.get();\r\n                if (element) {\r\n                    element.style = convertPosition(element);\r\n                }\r\n            }\r\n\r\n            // Generate a specific drag handle\r\n            function generateDragHandle(elementHandle) {\r\n                return new FixedDragHandle(\r\n                    elementHandle,\r\n                    self.gridSize,\r\n                    updateSelectionStyle,\r\n                    $scope.commit\r\n                );\r\n            }\r\n\r\n            // Generate drag handles for an element\r\n            function generateDragHandles(element) {\r\n                return element.handles().map(generateDragHandle);\r\n            }\r\n\r\n            // Update the value displayed in elements of this telemetry object\r\n            function setDisplayedValue(telemetryObject, value, alarm) {\r\n                var id = telemetryObject.getId();\r\n                (elementProxiesById[id] || []).forEach(function (element) {\r\n                    names[id] = telemetryObject.getModel().name;\r\n                    values[id] = telemetryFormatter.formatRangeValue(value);\r\n                    element.name = names[id];\r\n                    element.value = values[id];\r\n                    element.cssClass = alarm && alarm.cssClass;\r\n                });\r\n            }\r\n\r\n            // Update the displayed value for this object, from a specific\r\n            // telemetry series\r\n            function updateValueFromSeries(telemetryObject, telemetrySeries) {\r\n                var index = telemetrySeries.getPointCount() - 1,\r\n                    limit = telemetryObject &&\r\n                        telemetryObject.getCapability('limit'),\r\n                    datum = telemetryObject && handle.getDatum(\r\n                        telemetryObject,\r\n                        index\r\n                    );\r\n\r\n                if (index >= 0) {\r\n                    setDisplayedValue(\r\n                        telemetryObject,\r\n                        telemetrySeries.getRangeValue(index),\r\n                        limit && datum && limit.evaluate(datum)\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Update the displayed value for this object\r\n            function updateValue(telemetryObject) {\r\n                var limit = telemetryObject &&\r\n                        telemetryObject.getCapability('limit'),\r\n                    datum = telemetryObject &&\r\n                        handle.getDatum(telemetryObject);\r\n\r\n                if (telemetryObject &&\r\n                        (handle.getDomainValue(telemetryObject) < maxDomainValue)) {\r\n                    setDisplayedValue(\r\n                        telemetryObject,\r\n                        handle.getRangeValue(telemetryObject),\r\n                        limit && datum && limit.evaluate(datum)\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Update element positions when grid size changes\r\n            function updateElementPositions(layoutGrid) {\r\n                // Update grid size from model\r\n                self.gridSize = layoutGrid || DEFAULT_GRID_SIZE;\r\n\r\n                self.elementProxies.forEach(function (elementProxy) {\r\n                    elementProxy.style = convertPosition(elementProxy);\r\n                });\r\n            }\r\n\r\n            // Update telemetry values based on new data available\r\n            function updateValues() {\r\n                if (handle) {\r\n                    handle.getTelemetryObjects().forEach(updateValue);\r\n                }\r\n            }\r\n\r\n            // Decorate an element for display\r\n            function makeProxyElement(element, index, elements) {\r\n                var ElementProxy = ElementProxies[element.type],\r\n                    e = ElementProxy && new ElementProxy(element, index, elements);\r\n\r\n                if (e) {\r\n                    // Provide a displayable position (convert from grid to px)\r\n                    e.style = convertPosition(e);\r\n                    // Template names are same as type names, presently\r\n                    e.template = element.type;\r\n                }\r\n\r\n                return e;\r\n            }\r\n\r\n            // Decorate elements in the current configuration\r\n            function refreshElements() {\r\n                // Cache selection; we are instantiating new proxies\r\n                // so we may want to restore this.\r\n                var selected = self.selection && self.selection.get(),\r\n                    elements = (($scope.configuration || {}).elements || []),\r\n                    index = -1; // Start with a 'not-found' value\r\n\r\n                // Find the selection in the new array\r\n                if (selected !== undefined) {\r\n                    index = elements.indexOf(selected.element);\r\n                }\r\n\r\n                // Create the new proxies...\r\n                self.elementProxies = elements.map(makeProxyElement);\r\n\r\n                // Clear old selection, and restore if appropriate\r\n                if (self.selection) {\r\n                    self.selection.deselect();\r\n                    if (index > -1) {\r\n                        self.select(self.elementProxies[index]);\r\n                    }\r\n                }\r\n\r\n                // Finally, rebuild lists of elements by id to\r\n                // facilitate faster update when new telemetry comes in.\r\n                elementProxiesById = {};\r\n                self.elementProxies.forEach(function (elementProxy) {\r\n                    var id = elementProxy.id;\r\n                    if (elementProxy.element.type === 'fixed.telemetry') {\r\n                        // Provide it a cached name/value to avoid flashing\r\n                        elementProxy.name = names[id];\r\n                        elementProxy.value = values[id];\r\n                        elementProxiesById[id] = elementProxiesById[id] || [];\r\n                        elementProxiesById[id].push(elementProxy);\r\n                    }\r\n                });\r\n\r\n                // TODO: Ensure elements for all domain objects?\r\n            }\r\n\r\n            // Free up subscription to telemetry\r\n            function releaseSubscription() {\r\n                if (handle) {\r\n                    handle.unsubscribe();\r\n                    handle = undefined;\r\n                }\r\n            }\r\n\r\n            // Subscribe to telemetry updates for this domain object\r\n            function subscribe(domainObject) {\r\n                // Release existing subscription (if any)\r\n                if (handle) {\r\n                    handle.unsubscribe();\r\n                }\r\n\r\n                // Make a new subscription\r\n                handle = domainObject && telemetryHandler.handle(\r\n                    domainObject,\r\n                    updateValues\r\n                );\r\n                // Request an initial historical telemetry value\r\n                handle.request(\r\n                    { size: 1 }, // Only need a single data point\r\n                    updateValueFromSeries\r\n                );\r\n            }\r\n\r\n            // Handle changes in the object's composition\r\n            function updateComposition() {\r\n                // Populate panel positions\r\n                // TODO: Ensure defaults here\r\n                // Resubscribe - objects in view have changed\r\n                subscribe($scope.domainObject);\r\n            }\r\n\r\n            // Trigger a new query for telemetry data\r\n            function updateDisplayBounds(event, bounds) {\r\n                maxDomainValue = bounds.end;\r\n                if (handle) {\r\n                    handle.request(\r\n                        { size: 1 }, // Only need a single data point\r\n                        updateValueFromSeries\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Add an element to this view\r\n            function addElement(element) {\r\n                // Ensure that configuration field is populated\r\n                $scope.configuration = $scope.configuration || {};\r\n                // Make sure there is a \"elements\" field in the\r\n                // view configuration.\r\n                $scope.configuration.elements =\r\n                    $scope.configuration.elements || [];\r\n                // Store the position of this element.\r\n                $scope.configuration.elements.push(element);\r\n                // Refresh displayed elements\r\n                refreshElements();\r\n                // Select the newly-added element\r\n                self.select(\r\n                    self.elementProxies[self.elementProxies.length - 1]\r\n                );\r\n                // Mark change as persistable\r\n                if ($scope.commit) {\r\n                    $scope.commit(\"Dropped an element.\");\r\n                }\r\n            }\r\n\r\n            // Position a panel after a drop event\r\n            function handleDrop(e, id, position) {\r\n                // Don't handle this event if it has already been handled\r\n                // color is set to \"\" to let the CSS theme determine the default color\r\n                if (e.defaultPrevented) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                // Store the position of this element.\r\n                addElement({\r\n                    type: \"fixed.telemetry\",\r\n                    x: Math.floor(position.x / self.gridSize[0]),\r\n                    y: Math.floor(position.y / self.gridSize[1]),\r\n                    id: id,\r\n                    stroke: \"transparent\",\r\n                    color: \"\",\r\n                    titled: true,\r\n                    width: DEFAULT_DIMENSIONS[0],\r\n                    height: DEFAULT_DIMENSIONS[1]\r\n                });\r\n            }\r\n\r\n            this.gridSize = DEFAULT_GRID_SIZE;\r\n            this.elementProxies = [];\r\n            this.generateDragHandle = generateDragHandle;\r\n            this.generateDragHandles = generateDragHandles;\r\n\r\n            // Track current selection state\r\n            $scope.$watch(\"selection\", function (selection) {\r\n                this.selection = selection;\r\n\r\n                // Expose the view's selection proxy\r\n                if (this.selection) {\r\n                    this.selection.proxy(\r\n                        new FixedProxy(addElement, $q, dialogService)\r\n                    );\r\n                }\r\n            }.bind(this));\r\n\r\n            // Refresh list of elements whenever model changes\r\n            $scope.$watch(\"model.modified\", refreshElements);\r\n\r\n            // Position panes when the model field changes\r\n            $scope.$watch(\"model.composition\", updateComposition);\r\n\r\n            // Detect changes to grid size\r\n            $scope.$watch(\"model.layoutGrid\", updateElementPositions);\r\n\r\n            // Subscribe to telemetry when an object is available\r\n            $scope.$watch(\"domainObject\", subscribe);\r\n\r\n            // Free up subscription on destroy\r\n            $scope.$on(\"$destroy\", releaseSubscription);\r\n\r\n            // Position panes where they are dropped\r\n            $scope.$on(\"mctDrop\", handleDrop);\r\n\r\n            // Respond to external bounds changes\r\n            $scope.$on(\"telemetry:display:bounds\", updateDisplayBounds);\r\n        }\r\n\r\n        /**\r\n         * Get the size of the grid, in pixels. The returned array\r\n         * is in the form `[x, y]`.\r\n         * @returns {number[]} the grid size\r\n         * @memberof platform/features/layout.FixedController#\r\n         */\r\n        FixedController.prototype.getGridSize = function () {\r\n            return this.gridSize;\r\n        };\r\n\r\n        /**\r\n         * Get an array of elements in this panel; these are\r\n         * decorated proxies for both selection and display.\r\n         * @returns {Array} elements in this panel\r\n         */\r\n        FixedController.prototype.getElements = function () {\r\n            return this.elementProxies;\r\n        };\r\n\r\n        /**\r\n         * Check if the element is currently selected, or (if no\r\n         * argument is supplied) get the currently selected element.\r\n         * @returns {boolean} true if selected\r\n         */\r\n        FixedController.prototype.selected = function (element) {\r\n            var selection = this.selection;\r\n            return selection && ((arguments.length > 0) ?\r\n                    selection.selected(element) : selection.get());\r\n        };\r\n\r\n        /**\r\n         * Set the active user selection in this view.\r\n         * @param element the element to select\r\n         */\r\n        FixedController.prototype.select = function select(element) {\r\n            if (this.selection) {\r\n                // Update selection...\r\n                this.selection.select(element);\r\n                // ...as well as move, resize handles\r\n                this.mvHandle = this.generateDragHandle(element);\r\n                this.resizeHandles = this.generateDragHandles(element);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Clear the current user selection.\r\n         */\r\n        FixedController.prototype.clearSelection = function () {\r\n            if (this.selection) {\r\n                this.selection.deselect();\r\n                this.resizeHandles = [];\r\n                this.mvHandle = undefined;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get drag handles.\r\n         * @returns {platform/features/layout.FixedDragHandle[]}\r\n         *          drag handles for the current selection\r\n         */\r\n        FixedController.prototype.handles = function () {\r\n            return this.resizeHandles;\r\n        };\r\n\r\n        /**\r\n         * Get the handle to handle dragging to reposition an element.\r\n         * @returns {platform/features/layout.FixedDragHandle} the drag handle\r\n         */\r\n        FixedController.prototype.moveHandle = function () {\r\n            return this.mvHandle;\r\n        };\r\n\r\n        return FixedController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/layout/src/LayoutCompositionPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Defines composition policy for Display Layout objects.\r\n         * They cannot contain folders.\r\n         * @constructor\r\n         * @memberof platform/features/layout\r\n         * @implements {Policy.<View, DomainObject>}\r\n         */\r\n        function LayoutCompositionPolicy() {\r\n        }\r\n\r\n        LayoutCompositionPolicy.prototype.allow = function (candidate, context) {\r\n            var isFolderInLayout =\r\n                candidate &&\r\n                context &&\r\n                candidate.instanceOf('layout') &&\r\n                context.instanceOf('folder');\r\n            return !isFolderInLayout;\r\n        };\r\n\r\n        return LayoutCompositionPolicy;\r\n    }\r\n);\r\n\r\n\n","\ndefine('text!platform/features/layout/res/templates/layout.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"l-layout\"\\r\\n     ng-controller=\"LayoutController as controller\">\\r\\n\\r\\n    <div class=\\'frame child-frame panel abs\\'\\r\\n         ng-repeat=\"childObject in composition\"\\r\\n         ng-style=\"controller.getFrameStyle(childObject.getId())\">\\r\\n\\r\\n        <div class=\"frame child-frame holder contents abs\">\\r\\n            <mct-representation key=\"\\'frame\\'\"\\r\\n                                mct-object=\"childObject\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n        <!-- Drag handles -->\\r\\n        <span ng-show=\"domainObject.hasCapability(\\'editor\\')\">\\r\\n\\r\\n            <span\\r\\n                class=\"edit-handle edit-move\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [1,1], [0,0])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            <!--\\r\\n            <span\\r\\n                class=\"edit-handle edit-resize-w\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [1,0], [-1,0])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            <span\\r\\n                class=\"edit-handle edit-resize-e\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [0,0], [1,0])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n\\r\\n            <span\\r\\n                class=\"edit-handle edit-resize-n\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [0,1], [0,-1])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            <span\\r\\n                class=\"edit-handle edit-resize-s\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [0,0], [0,1])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            -->\\r\\n\\r\\n            <span\\r\\n                class=\"edit-corner edit-resize-nw\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [1,1], [-1,-1])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            <span\\r\\n                class=\"edit-corner edit-resize-ne\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [0,1], [1,-1])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            <span\\r\\n                class=\"edit-corner edit-resize-sw\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [1,0], [-1,1])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n            <span\\r\\n                class=\"edit-corner edit-resize-se\"\\r\\n                  mct-drag-down=\"controller.startDrag(childObject.getId(), [0,0], [1,1])\"\\r\\n                  mct-drag=\"controller.continueDrag(delta)\"\\r\\n                  mct-drag-up=\"controller.endDrag()\">\\r\\n            </span>\\r\\n        </span>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>';});\n\n","\ndefine('text!platform/features/layout/res/templates/frame.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"frame frame-template abs\">\\r\\n    <div class=\"abs object-top-bar l-flex-row\">\\r\\n        <div class=\"left flex-elem l-flex-row grows\">\\r\\n            <mct-representation\\r\\n                key=\"\\'object-header\\'\"\\r\\n                mct-object=\"domainObject\"\\r\\n                class=\"l-flex-row flex-elem object-header grows\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n        <div class=\"btn-bar right l-flex-row flex-elem flex-justify-end flex-fixed\">\\r\\n            <mct-representation key=\"\\'switcher\\'\"\\r\\n                                ng-model=\"representation\"\\r\\n                                mct-object=\"domainObject\">\\r\\n            </mct-representation>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"abs object-holder\">\\r\\n        <mct-representation key=\"representation.selected.key\"\\r\\n                            mct-object=\"representation.selected.key && domainObject\">\\r\\n        </mct-representation>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/features/layout/res/templates/elements/telemetry.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div\\r\\n    class=\"l-fixed-position-text l-telemetry\"\\r\\n    ng-style=\"{ background: ngModel.fill(), \\'border-color\\': ngModel.stroke(), color: ngModel.color() }\"\\r\\n    >\\r\\n    <span\\r\\n        class=\"l-elem l-value l-obj-val-format\"\\r\\n        data-value=\"{{ngModel.value}}\"\\r\\n        ng-class=\"ngModel.cssClass\"\\r\\n        >\\r\\n        {{ngModel.value}}\\r\\n    </span>\\r\\n    <span\\r\\n        class=\"l-elem l-title\"\\r\\n        ng-show=\"ngModel.element.titled\"\\r\\n        >\\r\\n        {{ngModel.name}}\\r\\n    </span>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/features/layout/res/templates/elements/box.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div\\r\\n\\tclass=\"l-fixed-position-box\"\\r\\n\\tng-style=\"{ background: ngModel.fill(), border: \\'1px \\' + ngModel.stroke() + \\' solid\\' }\"\\r\\n\\t>\\r\\n</div>';});\n\n","\ndefine('text!platform/features/layout/res/templates/elements/line.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<svg ng-attr-width=\"{{parameters.gridSize[0] * ngModel.width()}}\"\\r\\n     ng-attr-height=\"{{parameters.gridSize[1] * ngModel.height()}}\">\\r\\n    <line ng-attr-x1=\"{{parameters.gridSize[0] * ngModel.x1() + 1}}\"\\r\\n          ng-attr-y1=\"{{parameters.gridSize[1] * ngModel.y1() + 1}}\"\\r\\n          ng-attr-x2=\"{{parameters.gridSize[0] * ngModel.x2() + 1}}\"\\r\\n          ng-attr-y2=\"{{parameters.gridSize[1] * ngModel.y2() + 1}}\"\\r\\n          ng-attr-stroke=\"{{ngModel.stroke()}}\"\\r\\n          stroke-width=\"2\">\\r\\n    </line>\\r\\n</svg>';});\n\n","\ndefine('text!platform/features/layout/res/templates/elements/text.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div\\r\\n\\tclass=\"l-fixed-position-text l-static-text\"\\r\\n\\tng-style=\"{ background: ngModel.fill(), \\'border-color\\': ngModel.stroke(), color: ngModel.color() }\"\\r\\n\\t>\\r\\n    {{ngModel.element.text}}\\r\\n</div>';});\n\n","\ndefine('text!platform/features/layout/res/templates/elements/image.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div\\r\\n\\tng-style=\"{ \\'background-image\\': \\'url(\\' + ngModel.element.url + \\')\\', border: \\'1px solid \\' + ngModel.stroke() }\"\\r\\n    class=\"l-fixed-position-image\"\\r\\n\\t>\\r\\n</div>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/layout/bundle',[\r\n    \"./src/LayoutController\",\r\n    \"./src/FixedController\",\r\n    \"./src/LayoutCompositionPolicy\",\r\n    \"text!./res/templates/layout.html\",\r\n    \"text!./res/templates/fixed.html\",\r\n    \"text!./res/templates/frame.html\",\r\n    \"text!./res/templates/elements/telemetry.html\",\r\n    \"text!./res/templates/elements/box.html\",\r\n    \"text!./res/templates/elements/line.html\",\r\n    \"text!./res/templates/elements/text.html\",\r\n    \"text!./res/templates/elements/image.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    LayoutController,\r\n    FixedController,\r\n    LayoutCompositionPolicy,\r\n    layoutTemplate,\r\n    fixedTemplate,\r\n    frameTemplate,\r\n    telemetryTemplate,\r\n    boxTemplate,\r\n    lineTemplate,\r\n    textTemplate,\r\n    imageTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/layout\", {\r\n        \"name\": \"Layout components.\",\r\n        \"description\": \"Plug in adding Layout capabilities.\",\r\n        \"extensions\": {\r\n            \"views\": [\r\n                {\r\n                    \"key\": \"layout\",\r\n                    \"name\": \"Display Layout\",\r\n                    \"cssclass\": \"icon-layout\",\r\n                    \"type\": \"layout\",\r\n                    \"template\": layoutTemplate,\r\n                    \"editable\": true,\r\n                    \"uses\": []\r\n                },\r\n                {\r\n                    \"key\": \"fixed\",\r\n                    \"name\": \"Fixed Position\",\r\n                    \"cssclass\": \"icon-box-with-dashed-lines\",\r\n                    \"type\": \"telemetry.panel\",\r\n                    \"template\": fixedTemplate,\r\n                    \"uses\": [\r\n                        \"composition\"\r\n                    ],\r\n                    \"toolbar\": {\r\n                        \"sections\": [\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"add\",\r\n                                        \"cssclass\": \"icon-plus\",\r\n                                        \"control\": \"menu-button\",\r\n                                        \"text\": \"Add\",\r\n                                        \"title\": \"Add\",\r\n                                        \"description\": \"Add new items\",\r\n                                        \"options\": [\r\n                                            {\r\n                                                \"name\": \"Box\",\r\n                                                \"cssclass\": \"icon-box\",\r\n                                                \"key\": \"fixed.box\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Line\",\r\n                                                \"cssclass\": \"icon-line-horz\",\r\n                                                \"key\": \"fixed.line\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Text\",\r\n                                                \"cssclass\": \"icon-T\",\r\n                                                \"key\": \"fixed.text\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Image\",\r\n                                                \"cssclass\": \"icon-image\",\r\n                                                \"key\": \"fixed.image\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"order\",\r\n                                        \"cssclass\": \"icon-layers\",\r\n                                        \"control\": \"menu-button\",\r\n                                        \"title\": \"Layering\",\r\n                                        \"description\": \"Move the selected object above or below other objects\",\r\n                                        \"options\": [\r\n                                            {\r\n                                                \"name\": \"Move to Top\",\r\n                                                \"cssclass\": \"icon-arrow-double-up\",\r\n                                                \"key\": \"top\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Move Up\",\r\n                                                \"cssclass\": \"icon-arrow-up\",\r\n                                                \"key\": \"up\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Move Down\",\r\n                                                \"cssclass\": \"icon-arrow-down\",\r\n                                                \"key\": \"down\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Move to Bottom\",\r\n                                                \"cssclass\": \"icon-arrow-double-down\",\r\n                                                \"key\": \"bottom\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"fill\",\r\n                                        \"cssclass\": \"icon-paint-bucket\",\r\n                                        \"title\": \"Fill color\",\r\n                                        \"description\": \"Set fill color\",\r\n                                        \"control\": \"color\"\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"stroke\",\r\n                                        \"cssclass\": \"icon-line-horz\",\r\n                                        \"title\": \"Border color\",\r\n                                        \"description\": \"Set border color\",\r\n                                        \"control\": \"color\"\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"color\",\r\n                                        \"cssclass\": \"icon-T\",\r\n                                        \"title\": \"Text color\",\r\n                                        \"description\": \"Set text color\",\r\n                                        \"mandatory\": true,\r\n                                        \"control\": \"color\"\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"url\",\r\n                                        \"cssclass\": \"icon-image\",\r\n                                        \"control\": \"dialog-button\",\r\n                                        \"title\": \"Image Properties\",\r\n                                        \"description\": \"Edit image properties\",\r\n                                        \"dialog\": {\r\n                                            \"control\": \"textfield\",\r\n                                            \"name\": \"Image URL\",\r\n                                            \"required\": true\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"property\": \"text\",\r\n                                        \"cssclass\": \"icon-gear\",\r\n                                        \"control\": \"dialog-button\",\r\n                                        \"title\": \"Text Properties\",\r\n                                        \"description\": \"Edit text properties\",\r\n                                        \"dialog\": {\r\n                                            \"control\": \"textfield\",\r\n                                            \"name\": \"Text\",\r\n                                            \"required\": true\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"method\": \"showTitle\",\r\n                                        \"cssclass\": \"icon-two-parts-both\",\r\n                                        \"control\": \"button\",\r\n                                        \"title\": \"Show title\",\r\n                                        \"description\": \"Show telemetry element title\"\r\n                                    },\r\n                                    {\r\n                                        \"method\": \"hideTitle\",\r\n                                        \"cssclass\": \"icon-two-parts-one-only\",\r\n                                        \"control\": \"button\",\r\n                                        \"title\": \"Hide title\",\r\n                                        \"description\": \"Hide telemetry element title\"\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"remove\",\r\n                                        \"control\": \"button\",\r\n                                        \"cssclass\": \"icon-trash\",\r\n                                        \"title\": \"Delete\",\r\n                                        \"description\": \"Delete the selected item\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"frame\",\r\n                    \"template\": frameTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"LayoutController\",\r\n                    \"implementation\": LayoutController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"FixedController\",\r\n                    \"implementation\": FixedController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$q\",\r\n                        \"dialogService\",\r\n                        \"telemetryHandler\",\r\n                        \"telemetryFormatter\",\r\n                        \"throttle\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"fixed.telemetry\",\r\n                    \"template\": telemetryTemplate\r\n                },\r\n                {\r\n                    \"key\": \"fixed.box\",\r\n                    \"template\": boxTemplate\r\n                },\r\n                {\r\n                    \"key\": \"fixed.line\",\r\n                    \"template\": lineTemplate\r\n                },\r\n                {\r\n                    \"key\": \"fixed.text\",\r\n                    \"template\": textTemplate\r\n                },\r\n                {\r\n                    \"key\": \"fixed.image\",\r\n                    \"template\": imageTemplate\r\n                }\r\n            ],\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"composition\",\r\n                    \"implementation\": LayoutCompositionPolicy\r\n                }\r\n            ],\r\n            \"types\": [\r\n                {\r\n                    \"key\": \"layout\",\r\n                    \"name\": \"Display Layout\",\r\n                    \"cssclass\": \"icon-layout\",\r\n                    \"description\": \"Assemble other objects and components together into a reusable screen layout. Working in a simple canvas workspace, simply drag in the objects you want, position and size them. Save your design and view or edit it at any time.\",\r\n                    \"priority\": 900,\r\n                    \"features\": \"creation\",\r\n                    \"model\": {\r\n                        \"composition\": []\r\n                    },\r\n                    \"properties\": [\r\n                        {\r\n                            \"name\": \"Layout Grid\",\r\n                            \"control\": \"composite\",\r\n                            \"pattern\": \"^(\\\\d*[1-9]\\\\d*)?$\",\r\n                            \"items\": [\r\n                                {\r\n                                    \"name\": \"Horizontal grid (px)\",\r\n                                    \"control\": \"textfield\",\r\n                                    \"cssclass\": \"l-input-sm l-numeric\"\r\n                                },\r\n                                {\r\n                                    \"name\": \"Vertical grid (px)\",\r\n                                    \"control\": \"textfield\",\r\n                                    \"cssclass\": \"l-input-sm l-numeric\"\r\n                                }\r\n                            ],\r\n                            \"key\": \"layoutGrid\",\r\n                            \"conversion\": \"number[]\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"telemetry.panel\",\r\n                    \"name\": \"Telemetry Panel\",\r\n                    \"cssclass\": \"icon-telemetry-panel\",\r\n                    \"description\": \"A panel for collecting telemetry elements.\",\r\n                    \"priority\": 899,\r\n                    \"delegates\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"features\": \"creation\",\r\n                    \"contains\": [\r\n                        {\r\n                            \"has\": \"telemetry\"\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"composition\": []\r\n                    },\r\n                    \"properties\": [\r\n                        {\r\n                            \"name\": \"Layout Grid\",\r\n                            \"control\": \"composite\",\r\n                            \"items\": [\r\n                                {\r\n                                    \"name\": \"Horizontal grid (px)\",\r\n                                    \"control\": \"textfield\",\r\n                                    \"cssclass\": \"l-small l-numeric\"\r\n                                },\r\n                                {\r\n                                    \"name\": \"Vertical grid (px)\",\r\n                                    \"control\": \"textfield\",\r\n                                    \"cssclass\": \"l-small l-numeric\"\r\n                                }\r\n                            ],\r\n                            \"pattern\": \"^(\\\\d*[1-9]\\\\d*)?$\",\r\n                            \"property\": \"layoutGrid\",\r\n                            \"conversion\": \"number[]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle adds the Web Page object type, which can be used to embed\r\n * other web pages with layouts.\r\n * @namespace platform/features/pages\r\n */\r\ndefine(\r\n    'platform/features/pages/src/EmbeddedPageController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for embedded web pages; serves simply as a\r\n         * wrapper for `$sce` to mark pages as trusted.\r\n         * @constructor\r\n         * @memberof platform/features/pages\r\n         */\r\n        function EmbeddedPageController($sce) {\r\n            this.$sce = $sce;\r\n        }\r\n\r\n        /**\r\n         * Alias of `$sce.trustAsResourceUrl`.\r\n         * @param {string} url the URL to trust\r\n         * @returns {string} the trusted URL\r\n         */\r\n        EmbeddedPageController.prototype.trust = function (url) {\r\n            return this.$sce.trustAsResourceUrl(url);\r\n        };\r\n\r\n\r\n        return EmbeddedPageController;\r\n    }\r\n\r\n);\r\n\n","\ndefine('text!platform/features/pages/res/iframe.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"l-iframe abs\">\\r\\n<iframe ng-controller=\"EmbeddedPageController as ctl\"\\r\\n        ng-src=\"{{ctl.trust(model.url)}}\">\\r\\n</iframe>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/pages/bundle',[\r\n    \"./src/EmbeddedPageController\",\r\n    \"text!./res/iframe.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    EmbeddedPageController,\r\n    iframeTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/pages\", {\r\n        \"extensions\": {\r\n            \"types\": [\r\n                {\r\n                    \"key\": \"example.page\",\r\n                    \"name\": \"Web Page\",\r\n                    \"cssclass\": \"icon-page\",\r\n                    \"description\": \"Embed a web page or web-based image in a resizeable window component. Can be added to Display Layouts. Note that the URL being embedded must allow iframing.\",\r\n                    \"priority\": 50,\r\n                    \"features\": [\r\n                        \"creation\"\r\n                    ],\r\n                    \"properties\": [\r\n                        {\r\n                            \"key\": \"url\",\r\n                            \"name\": \"URL\",\r\n                            \"control\": \"textfield\",\r\n                            \"pattern\": \"^(ftp|https?)\\\\:\\\\/\\\\/\\\\w+(\\\\.\\\\w+)*(\\\\:\\\\d+)?(\\\\/\\\\S*)*$\",\r\n                            \"required\": true,\r\n                            \"cssclass\": \"l-input-lg\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"views\": [\r\n                {\r\n                    \"template\": iframeTemplate,\r\n                    \"name\": \"Page\",\r\n                    \"type\": \"example.page\",\r\n                    \"key\": \"example.page\",\r\n                    \"editable\": false\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"EmbeddedPageController\",\r\n                    \"implementation\": EmbeddedPageController,\r\n                    \"depends\": [\r\n                        \"$sce\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining GLPlot. Created by vwoeltje on 11/12/14.\r\n */\r\ndefine(\r\n    'platform/features/plot/src/GLChart',[],\r\n    function () {\r\n\r\n        // WebGL shader sources (for drawing plain colors)\r\n        var FRAGMENT_SHADER = [\r\n                \"precision mediump float;\",\r\n                \"uniform vec4 uColor;\",\r\n                \"void main(void) {\",\r\n                \"gl_FragColor = uColor;\",\r\n                \"}\"\r\n            ].join('\\n'),\r\n            VERTEX_SHADER = [\r\n                \"attribute vec2 aVertexPosition;\",\r\n                \"uniform vec2 uDimensions;\",\r\n                \"uniform vec2 uOrigin;\",\r\n                \"void main(void) {\",\r\n                \"gl_Position = vec4(2.0 * ((aVertexPosition - uOrigin) / uDimensions) - vec2(1,1), 0, 1);\",\r\n                \"}\"\r\n            ].join('\\n');\r\n\r\n        /**\r\n         * Create a new chart which uses WebGL for rendering.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @implements {platform/features/plot.Chart}\r\n         * @param {CanvasElement} canvas the canvas object to render upon\r\n         * @throws {Error} an error is thrown if WebGL is unavailable.\r\n         */\r\n        function GLChart(canvas) {\r\n            var gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\"),\r\n                vertexShader,\r\n                fragmentShader,\r\n                program,\r\n                aVertexPosition,\r\n                uColor,\r\n                uDimensions,\r\n                uOrigin;\r\n\r\n            // Ensure a context was actually available before proceeding\r\n            if (!gl) {\r\n                throw new Error(\"WebGL unavailable.\");\r\n            }\r\n\r\n            // Initialize shaders\r\n            vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(vertexShader, VERTEX_SHADER);\r\n            gl.compileShader(vertexShader);\r\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(fragmentShader, FRAGMENT_SHADER);\r\n            gl.compileShader(fragmentShader);\r\n\r\n            // Assemble vertex/fragment shaders into programs\r\n            program = gl.createProgram();\r\n            gl.attachShader(program, vertexShader);\r\n            gl.attachShader(program, fragmentShader);\r\n            gl.linkProgram(program);\r\n            gl.useProgram(program);\r\n\r\n            // Get locations for attribs/uniforms from the\r\n            // shader programs (to pass values into shaders at draw-time)\r\n            aVertexPosition = gl.getAttribLocation(program, \"aVertexPosition\");\r\n            uColor = gl.getUniformLocation(program, \"uColor\");\r\n            uDimensions = gl.getUniformLocation(program, \"uDimensions\");\r\n            uOrigin = gl.getUniformLocation(program, \"uOrigin\");\r\n            gl.enableVertexAttribArray(aVertexPosition);\r\n\r\n            // Create a buffer to holds points which will be drawn\r\n            this.buffer = gl.createBuffer();\r\n\r\n            // Use a line width of 2.0 for legibility\r\n            gl.lineWidth(2.0);\r\n\r\n            // Enable blending, for smoothness\r\n            gl.enable(gl.BLEND);\r\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n            this.gl = gl;\r\n            this.aVertexPosition = aVertexPosition;\r\n            this.uColor = uColor;\r\n            this.uDimensions = uDimensions;\r\n            this.uOrigin = uOrigin;\r\n        }\r\n\r\n        // Utility function to handle drawing of a buffer;\r\n        // drawType will determine whether this is a box, line, etc.\r\n        GLChart.prototype.doDraw = function (drawType, buf, color, points) {\r\n            var gl = this.gl;\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, buf, gl.DYNAMIC_DRAW);\r\n            gl.vertexAttribPointer(this.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\r\n            gl.uniform4fv(this.uColor, color);\r\n            gl.drawArrays(drawType, 0, points);\r\n        };\r\n\r\n        GLChart.prototype.clear = function () {\r\n            var gl = this.gl;\r\n\r\n            // Set the viewport size; note that we use the width/height\r\n            // that our WebGL context reports, which may be lower\r\n            // resolution than the canvas we requested.\r\n            gl.viewport(\r\n                0,\r\n                0,\r\n                gl.drawingBufferWidth,\r\n                gl.drawingBufferHeight\r\n            );\r\n            gl.clear(gl.COLOR_BUFFER_BIT + gl.DEPTH_BUFFER_BIT);\r\n        };\r\n\r\n\r\n        GLChart.prototype.setDimensions = function (dimensions, origin) {\r\n            var gl = this.gl;\r\n            if (dimensions && dimensions.length > 0 &&\r\n                origin && origin.length > 0) {\r\n                gl.uniform2fv(this.uDimensions, dimensions);\r\n                gl.uniform2fv(this.uOrigin, origin);\r\n            }\r\n        };\r\n\r\n        GLChart.prototype.drawLine = function (buf, color, points) {\r\n            this.doDraw(this.gl.LINE_STRIP, buf, color, points);\r\n        };\r\n\r\n        GLChart.prototype.drawSquare = function (min, max, color) {\r\n            this.doDraw(this.gl.TRIANGLE_FAN, new Float32Array(\r\n                min.concat([min[0], max[1]]).concat(max).concat([max[0], min[1]])\r\n            ), color, 4);\r\n        };\r\n\r\n        return GLChart;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/Canvas2DChart',[],\r\n    function () {\r\n\r\n        /**\r\n         * Create a new chart which uses Canvas's 2D API for rendering.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @implements {platform/features/plot.Chart}\r\n         * @param {CanvasElement} canvas the canvas object to render upon\r\n         * @throws {Error} an error is thrown if Canvas's 2D API is unavailable.\r\n         */\r\n        function Canvas2DChart(canvas) {\r\n            this.canvas = canvas;\r\n            this.c2d = canvas.getContext('2d');\r\n            this.width = canvas.width;\r\n            this.height = canvas.height;\r\n            this.dimensions = [this.width, this.height];\r\n            this.origin = [0, 0];\r\n\r\n            if (!this.c2d) {\r\n                throw new Error(\"Canvas 2d API unavailable.\");\r\n            }\r\n        }\r\n\r\n        // Convert from logical to physical x coordinates\r\n        Canvas2DChart.prototype.x = function (v) {\r\n            return ((v - this.origin[0]) / this.dimensions[0]) * this.width;\r\n        };\r\n\r\n        // Convert from logical to physical y coordinates\r\n        Canvas2DChart.prototype.y = function (v) {\r\n            return this.height -\r\n                ((v - this.origin[1]) / this.dimensions[1]) * this.height;\r\n        };\r\n\r\n        // Set the color to be used for drawing operations\r\n        Canvas2DChart.prototype.setColor = function (color) {\r\n            var mappedColor = color.map(function (c, i) {\r\n                return i < 3 ? Math.floor(c * 255) : (c);\r\n            }).join(',');\r\n            this.c2d.strokeStyle = \"rgba(\" + mappedColor + \")\";\r\n            this.c2d.fillStyle = \"rgba(\" + mappedColor + \")\";\r\n        };\r\n\r\n\r\n        Canvas2DChart.prototype.clear = function () {\r\n            var canvas = this.canvas;\r\n            this.width = canvas.width;\r\n            this.height = canvas.height;\r\n            this.c2d.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        Canvas2DChart.prototype.setDimensions = function (newDimensions, newOrigin) {\r\n            this.dimensions = newDimensions;\r\n            this.origin = newOrigin;\r\n        };\r\n\r\n        Canvas2DChart.prototype.drawLine = function (buf, color, points) {\r\n            var i;\r\n\r\n            this.setColor(color);\r\n\r\n            // Configure context to draw two-pixel-thick lines\r\n            this.c2d.lineWidth = 2;\r\n\r\n            // Start a new path...\r\n            if (buf.length > 1) {\r\n                this.c2d.beginPath();\r\n                this.c2d.moveTo(this.x(buf[0]), this.y(buf[1]));\r\n            }\r\n\r\n            // ...and add points to it...\r\n            for (i = 2; i < points * 2; i = i + 2) {\r\n                this.c2d.lineTo(this.x(buf[i]), this.y(buf[i + 1]));\r\n            }\r\n\r\n            // ...before finally drawing it.\r\n            this.c2d.stroke();\r\n        };\r\n\r\n        Canvas2DChart.prototype.drawSquare = function (min, max, color) {\r\n            var x1 = this.x(min[0]),\r\n                y1 = this.y(min[1]),\r\n                w = this.x(max[0]) - x1,\r\n                h = this.y(max[1]) - y1;\r\n\r\n            this.setColor(color);\r\n            this.c2d.fillRect(x1, y1, w, h);\r\n        };\r\n\r\n        return Canvas2DChart;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining MCTChart. Created by vwoeltje on 11/12/14.\r\n */\r\ndefine(\r\n    'platform/features/plot/src/MCTChart',[\"./GLChart\", \"./Canvas2DChart\"],\r\n    function (GLChart, Canvas2DChart) {\r\n\r\n        var TEMPLATE = \"<canvas style='position: absolute; background: none; width: 100%; height: 100%;'></canvas>\";\r\n\r\n        /**\r\n         * The mct-chart directive provides a canvas element which can be\r\n         * drawn upon, to support Plot view and similar visualizations.\r\n         *\r\n         * This directive takes one attribute, \"draw\", which is an Angular\r\n         * expression which will be two-way bound to a drawing object. This\r\n         * drawing object should contain:\r\n         *\r\n         * * `dimensions`: An object describing the logical bounds of the\r\n         *   drawable area, containing two fields:\r\n         *   * `origin`: The position, in logical coordinates, of the\r\n         *     lower-left corner of the chart area. A two-element array.\r\n         *   * `dimensions`: A two-element array containing the width\r\n         *     and height of the chart area, in logical coordinates.\r\n         * * `lines`: An array of lines to be drawn, where each line is\r\n         *   expressed as an object containing:\r\n         *   * `buffer`: A Float32Array containing points in the line,\r\n         *     in logical coordinate, in sequential x/y pairs.\r\n         *   * `color`: The color of the line, as a four-element RGBA\r\n         *     array, where each element is in the range of 0.0-1.0\r\n         *   * `points`: The number of points in the line.\r\n         * * `boxes`: An array of rectangles to draw in the chart area\r\n         *   (used for marquee zoom). Each is an object containing:\r\n         *   * `start`: The first corner of the rectangle (as a two-element\r\n         *      array, logical coordinates)\r\n         *   * `end`: The opposite corner of the rectangle (again, as a\r\n         *      two-element array)\r\n         *   * `color`: The color of the box, as a four-element RGBA\r\n         *     array, where each element is in the range of 0.0-1.0\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         */\r\n        function MCTChart($interval, $log) {\r\n            // Get an underlying chart implementation\r\n            function getChart(Charts, canvas) {\r\n                // Try the first available option...\r\n                var Chart = Charts[0];\r\n\r\n                // This function recursively try-catches all options;\r\n                // if these all fail, issue a warning.\r\n                if (!Chart) {\r\n                    $log.warn(\"Cannot initialize mct-chart.\");\r\n                    return undefined;\r\n                }\r\n\r\n                // Try first option; if it fails, try remaining options\r\n                try {\r\n                    return new Chart(canvas);\r\n                } catch (e) {\r\n                    $log.warn([\r\n                        \"Could not instantiate chart\",\r\n                        Chart.name,\r\n                        \";\",\r\n                        e.message\r\n                    ].join(\" \"));\r\n\r\n                    return getChart(Charts.slice(1), canvas);\r\n                }\r\n            }\r\n\r\n            function linkChart(scope, element) {\r\n                var canvas = element.find(\"canvas\")[0],\r\n                    activeInterval,\r\n                    chart;\r\n\r\n                // Handle drawing, based on contents of the \"draw\" object\r\n                // in scope\r\n                function doDraw(draw) {\r\n                    // Ensure canvas context has same resolution\r\n                    // as canvas element\r\n                    canvas.width = canvas.offsetWidth;\r\n                    canvas.height = canvas.offsetHeight;\r\n\r\n                    // Clear previous contents\r\n                    chart.clear();\r\n\r\n                    // Nothing to draw if no draw object defined\r\n                    if (!draw) {\r\n                        return;\r\n                    }\r\n\r\n                    // Set logical boundaries for the chart\r\n                    chart.setDimensions(\r\n                        draw.dimensions || [1, 1],\r\n                        draw.origin || [0, 0]\r\n                    );\r\n\r\n                    // Draw line segments\r\n                    (draw.lines || []).forEach(function (line) {\r\n                        chart.drawLine(\r\n                            line.buffer,\r\n                            line.color,\r\n                            line.points\r\n                        );\r\n                    });\r\n\r\n                    // Draw boxes (e.g. marquee zoom rect)\r\n                    (draw.boxes || []).forEach(function (box) {\r\n                        chart.drawSquare(\r\n                            box.start,\r\n                            box.end,\r\n                            box.color\r\n                        );\r\n                    });\r\n\r\n                }\r\n\r\n                // Issue a drawing call, if-and-only-if canvas size\r\n                // has changed. This will be called on a timer, since\r\n                // there is no event to depend on.\r\n                function drawIfResized() {\r\n                    if (canvas.width !== canvas.offsetWidth ||\r\n                            canvas.height !== canvas.offsetHeight) {\r\n                        doDraw(scope.draw);\r\n                        scope.$apply();\r\n                    }\r\n                }\r\n\r\n                // Stop watching for changes to size (scope destroyed)\r\n                function releaseInterval() {\r\n                    if (activeInterval) {\r\n                        $interval.cancel(activeInterval);\r\n                    }\r\n                }\r\n\r\n                // Switch from WebGL to plain 2D if context is lost\r\n                function fallbackFromWebGL() {\r\n                    element.html(TEMPLATE);\r\n                    canvas = element.find(\"canvas\")[0];\r\n                    chart = getChart([Canvas2DChart], canvas);\r\n                    if (chart) {\r\n                        doDraw(scope.draw);\r\n                    }\r\n                }\r\n\r\n                // Try to initialize a chart.\r\n                chart = getChart([GLChart, Canvas2DChart], canvas);\r\n\r\n                // If that failed, there's nothing more we can do here.\r\n                // (A warning will already have been issued)\r\n                if (!chart) {\r\n                    return;\r\n                }\r\n\r\n                // WebGL is a bit of a special case; it may work, then fail\r\n                // later for various reasons, so we need to listen for this\r\n                // and fall back to plain canvas drawing when it occurs.\r\n                canvas.addEventListener(\"webglcontextlost\", fallbackFromWebGL);\r\n\r\n                // Check for resize, on a timer\r\n                activeInterval = $interval(drawIfResized, 1000, 0, false);\r\n\r\n                // Watch \"draw\" for external changes to the set of\r\n                // things to be drawn.\r\n                scope.$watchCollection(\"draw\", doDraw);\r\n\r\n                // Stop checking for resize when scope is destroyed\r\n                scope.$on(\"$destroy\", releaseInterval);\r\n            }\r\n\r\n            return {\r\n                // Apply directive only to elements\r\n                restrict: \"E\",\r\n\r\n                // Template to use (a canvas element)\r\n                template: TEMPLATE,\r\n\r\n                // Link function; set up scope\r\n                link: linkChart,\r\n\r\n                // Initial, isolate scope for the directive\r\n                scope: { draw: \"=\" }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @interface platform/features/plot.Chart\r\n         * @private\r\n         */\r\n\r\n        /**\r\n         * Clear the chart.\r\n         * @method platform/features/plot.Chart#clear\r\n         */\r\n        /**\r\n         * Set the logical boundaries of the chart.\r\n         * @param {number[]} dimensions the horizontal and\r\n         *        vertical dimensions of the chart\r\n         * @param {number[]} origin the horizontal/vertical\r\n         *        origin of the chart\r\n         * @memberof platform/features/plot.Chart#setDimensions\r\n         */\r\n        /**\r\n         * Draw the supplied buffer as a line strip (a sequence\r\n         * of line segments), in the chosen color.\r\n         * @param {Float32Array} buf the line strip to draw,\r\n         *        in alternating x/y positions\r\n         * @param {number[]} color the color to use when drawing\r\n         *        the line, as an RGBA color where each element\r\n         *        is in the range of 0.0-1.0\r\n         * @param {number} points the number of points to draw\r\n         * @memberof platform/features/plot.Chart#drawLine\r\n         */\r\n        /**\r\n         * Draw a rectangle extending from one corner to another,\r\n         * in the chosen color.\r\n         * @param {number[]} min the first corner of the rectangle\r\n         * @param {number[]} max the opposite corner\r\n         * @param {number[]} color the color to use when drawing\r\n         *        the rectangle, as an RGBA color where each element\r\n         *        is in the range of 0.0-1.0\r\n         * @memberof platform/features/plot.Chart#drawSquare\r\n         */\r\n\r\n        return MCTChart;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotSeriesWindow',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provides a window on a telemetry data series, to support\r\n         * insertion into a plot line.\r\n         * @constructor\r\n         * @memberof platform/features/plot\r\n         * @implements {TelemetrySeries}\r\n         */\r\n        function PlotSeriesWindow(series, domain, range, start, end) {\r\n            this.series = series;\r\n            this.domain = domain;\r\n            this.range = range;\r\n            this.start = start;\r\n            this.end = end;\r\n        }\r\n\r\n        PlotSeriesWindow.prototype.getPointCount = function () {\r\n            return this.end - this.start;\r\n        };\r\n\r\n        PlotSeriesWindow.prototype.getDomainValue = function (index) {\r\n            return this.series.getDomainValue(index + this.start, this.domain);\r\n        };\r\n\r\n        PlotSeriesWindow.prototype.getRangeValue = function (index) {\r\n            return this.series.getRangeValue(index + this.start, this.range);\r\n        };\r\n\r\n        /**\r\n         * Split this series into two series of equal (or nearly-equal) size.\r\n         * @returns {PlotSeriesWindow[]} two series\r\n         */\r\n        PlotSeriesWindow.prototype.split = function () {\r\n            var mid = Math.floor((this.end + this.start) / 2);\r\n            return ((this.end - this.start) > 1) ?\r\n                [\r\n                    new PlotSeriesWindow(\r\n                        this.series,\r\n                        this.domain,\r\n                        this.range,\r\n                        this.start,\r\n                        mid\r\n                    ),\r\n                    new PlotSeriesWindow(\r\n                        this.series,\r\n                        this.domain,\r\n                        this.range,\r\n                        mid,\r\n                        this.end\r\n                    )\r\n                ] : [];\r\n        };\r\n\r\n        return PlotSeriesWindow;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotLine',['./PlotSeriesWindow'],\r\n    function (PlotSeriesWindow) {\r\n\r\n\r\n        /**\r\n         * Represents a single line or trace of a plot.\r\n         * @param {{PlotLineBuffer}} buffer the plot buffer\r\n         * @constructor\r\n         */\r\n        function PlotLine(buffer) {\r\n            this.buffer = buffer;\r\n        }\r\n\r\n        /**\r\n         * Add a point to this plot line.\r\n         * @param {number} domainValue the domain value\r\n         * @param {number} rangeValue the range value\r\n         */\r\n        PlotLine.prototype.addPoint = function (domainValue, rangeValue) {\r\n            var buffer = this.buffer,\r\n                index;\r\n\r\n            // Make sure we got real/useful values here...\r\n            if (domainValue !== undefined && rangeValue !== undefined) {\r\n                index = buffer.findInsertionIndex(domainValue);\r\n\r\n                // Already in the buffer? Skip insertion\r\n                if (index < 0) {\r\n                    return;\r\n                }\r\n\r\n                // Insert the point\r\n                if (!buffer.insertPoint(domainValue, rangeValue, index)) {\r\n                    // If insertion failed, trim from the beginning...\r\n                    buffer.trim(1);\r\n                    // ...and try again.\r\n                    buffer.insertPoint(domainValue, rangeValue, index);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Add a series of telemetry data to this plot line.\r\n         * @param {TelemetrySeries} series the data series\r\n         * @param {string} [domain] the key indicating which domain\r\n         *        to use when looking up data from this series\r\n         * @param {string} [range] the key indicating which range\r\n         *        to use when looking up data from this series\r\n         */\r\n        PlotLine.prototype.addSeries = function (series, domain, range) {\r\n            var buffer = this.buffer;\r\n\r\n            // Insert a time-windowed data series into the buffer\r\n            function insertSeriesWindow(seriesWindow) {\r\n                var count = seriesWindow.getPointCount();\r\n\r\n                function doInsert() {\r\n                    var firstTimestamp = seriesWindow.getDomainValue(0),\r\n                        lastTimestamp = seriesWindow.getDomainValue(count - 1),\r\n                        startIndex = buffer.findInsertionIndex(firstTimestamp),\r\n                        endIndex = buffer.findInsertionIndex(lastTimestamp);\r\n\r\n                    // Does the whole series fit in between two adjacent indexes?\r\n                    if ((startIndex === endIndex) && startIndex > -1) {\r\n                        // Insert it in between\r\n                        buffer.insert(seriesWindow, startIndex);\r\n                    } else {\r\n                        // Split it up, and add the two halves\r\n                        seriesWindow.split().forEach(insertSeriesWindow);\r\n                    }\r\n                }\r\n\r\n                // Only insert if there are points to insert\r\n                if (count > 0) {\r\n                    doInsert();\r\n                }\r\n            }\r\n\r\n            // Should try to add via insertion if a\r\n            // clear insertion point is available;\r\n            // if not, should split and add each half.\r\n            // Insertion operation also needs to factor out\r\n            // redundant timestamps, for overlapping data\r\n            insertSeriesWindow(new PlotSeriesWindow(\r\n                series,\r\n                domain,\r\n                range,\r\n                0,\r\n                series.getPointCount()\r\n            ));\r\n        };\r\n\r\n        return PlotLine;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotLineBuffer',[],\r\n    function () {\r\n\r\n        /**\r\n         * Contains the buffer used to draw a plot.\r\n         * @param {number} domainOffset number to subtract from domain values\r\n         * @param {number} initialSize initial buffer size\r\n         * @param {number} maxSize maximum buffer size\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         */\r\n        function PlotLineBuffer(domainOffset, initialSize, maxSize) {\r\n            this.buffer = new Float32Array(initialSize * 2);\r\n            this.rangeExtrema =\r\n                [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n            this.length = 0;\r\n            this.domainOffset = domainOffset;\r\n            this.initialSize = initialSize;\r\n            this.maxSize = maxSize;\r\n        }\r\n\r\n        // Binary search for an insertion index\r\n        PlotLineBuffer.prototype.binSearch = function (value, min, max) {\r\n            var mid = Math.floor((min + max) / 2),\r\n                found = this.buffer[mid * 2];\r\n\r\n            // On collisions, insert at same index\r\n            if (found === value) {\r\n                return mid;\r\n            }\r\n\r\n            // Otherwise, if we're down to a single index,\r\n            // we've found our insertion point\r\n            if (min >= max) {\r\n                // Compare the found timestamp with the search\r\n                // value to decide if we'll insert after or before.\r\n                return min + ((found < value) ? 1 : 0);\r\n            }\r\n\r\n            // Finally, do the recursive step\r\n            if (found < value) {\r\n                return this.binSearch(value, mid + 1, max);\r\n            } else {\r\n                return this.binSearch(value, min, mid - 1);\r\n            }\r\n        };\r\n\r\n        // Increase the size of the buffer\r\n        PlotLineBuffer.prototype.doubleBufferSize = function () {\r\n            var sz = Math.min(this.maxSize * 2, this.buffer.length * 2),\r\n                canDouble = sz > this.buffer.length,\r\n                doubled = canDouble && new Float32Array(sz);\r\n\r\n            if (canDouble) {\r\n                doubled.set(this.buffer); // Copy contents of original\r\n                this.buffer = doubled;\r\n            }\r\n\r\n            return canDouble;\r\n        };\r\n\r\n        // Decrease the size of the buffer\r\n        PlotLineBuffer.prototype.halveBufferSize = function () {\r\n            var sz = Math.max(this.initialSize * 2, this.buffer.length / 2),\r\n                canHalve = sz < this.buffer.length;\r\n\r\n            if (canHalve) {\r\n                this.buffer = new Float32Array(this.buffer.subarray(0, sz));\r\n            }\r\n\r\n            return canHalve;\r\n        };\r\n\r\n        // Set a value in the buffer\r\n        PlotLineBuffer.prototype.setValue = function (index, domainValue, rangeValue) {\r\n            this.buffer[index * 2] = domainValue - this.domainOffset;\r\n            this.buffer[index * 2 + 1] = rangeValue;\r\n            // Track min/max of range values (min/max for\r\n            // domain values can be read directly from buffer)\r\n            this.rangeExtrema[0] = Math.min(this.rangeExtrema[0], rangeValue);\r\n            this.rangeExtrema[1] = Math.max(this.rangeExtrema[1], rangeValue);\r\n        };\r\n\r\n        /**\r\n         * Get the WebGL-displayable buffer of points to plot.\r\n         * @returns {Float32Array} displayable buffer for this line\r\n         */\r\n        PlotLineBuffer.prototype.getBuffer = function () {\r\n            return this.buffer;\r\n        };\r\n\r\n        /**\r\n         * Get the number of points stored in this buffer.\r\n         * @returns {number} the number of points stored\r\n         */\r\n        PlotLineBuffer.prototype.getLength = function () {\r\n            return this.length;\r\n        };\r\n\r\n        /**\r\n         * Get the min/max range values that are currently in this\r\n         * buffer. Unlike range extrema, these will change as the\r\n         * buffer gets trimmed.\r\n         * @returns {number[]} min, max domain values\r\n         */\r\n        PlotLineBuffer.prototype.getDomainExtrema = function () {\r\n            // Since these are ordered in the buffer, assume\r\n            // these are the values at the first and last index\r\n            return [\r\n                this.buffer[0] + this.domainOffset,\r\n                this.buffer[this.length * 2 - 2] + this.domainOffset\r\n            ];\r\n        };\r\n\r\n        /**\r\n         * Get the min/max range values that have been observed for this\r\n         * buffer. Note that these values may have been trimmed out at\r\n         * some point.\r\n         * @returns {number[]} min, max range values\r\n         */\r\n        PlotLineBuffer.prototype.getRangeExtrema = function () {\r\n            return this.rangeExtrema;\r\n        };\r\n\r\n        /**\r\n         * Remove values from this buffer.\r\n         * Normally, values are removed from the start\r\n         * of the buffer; a truthy value in the second argument\r\n         * will cause values to be removed from the end.\r\n         * @param {number} count number of values to remove\r\n         * @param {boolean} [fromEnd] true if the most recent\r\n         *        values should be removed\r\n         */\r\n        PlotLineBuffer.prototype.trim = function (count, fromEnd) {\r\n            // If we're removing values from the start...\r\n            if (!fromEnd) {\r\n                // ...do so by shifting buffer contents over\r\n                this.buffer.set(this.buffer.subarray(2 * count));\r\n            }\r\n            // Reduce used buffer size accordingly\r\n            this.length -= count;\r\n            // Finally, if less than half of the buffer is being\r\n            // used, free up some memory.\r\n            if (this.length < this.buffer.length / 4) {\r\n                this.halveBufferSize();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Insert data from the provided series at the specified\r\n         * index. If this would exceed the buffer's maximum capacity,\r\n         * this operation fails and the buffer is unchanged.\r\n         * @param {TelemetrySeries} series the series to insert\r\n         * @param {number} index the index at which to insert this\r\n         *        series\r\n         * @returns {boolean} true if insertion succeeded; otherwise\r\n         *          false\r\n         */\r\n        PlotLineBuffer.prototype.insert = function (series, index) {\r\n            var sz = series.getPointCount(),\r\n                i;\r\n\r\n            // Don't allow append after the end; that doesn't make sense\r\n            index = Math.min(index, this.length);\r\n\r\n            // Resize if necessary\r\n            while (sz > ((this.buffer.length / 2) - this.length)) {\r\n                if (!this.doubleBufferSize()) {\r\n                    // Can't make room for this, insertion fails\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // Shift data over if necessary\r\n            if (index < this.length) {\r\n                this.buffer.set(\r\n                    this.buffer.subarray(index * 2, this.length * 2),\r\n                    (index + sz) * 2\r\n                );\r\n            }\r\n\r\n            // Insert data into the set\r\n            for (i = 0; i < sz; i += 1) {\r\n                this.setValue(\r\n                    i + index,\r\n                    series.getDomainValue(i),\r\n                    series.getRangeValue(i)\r\n                );\r\n            }\r\n\r\n            // Increase the length\r\n            this.length += sz;\r\n\r\n            // Indicate that insertion was successful\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Append a single data point.\r\n         * @memberof platform/features/plot.PlotLineBuffer#\r\n         */\r\n        PlotLineBuffer.prototype.insertPoint = function (domainValue, rangeValue) {\r\n            // Ensure there is space for this point\r\n            if (this.length >= (this.buffer.length / 2)) {\r\n                if (!this.doubleBufferSize()) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // Put the data in the buffer\r\n            this.setValue(this.length, domainValue, rangeValue);\r\n\r\n            // Update length\r\n            this.length += 1;\r\n\r\n            // Indicate that this was successful\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Find an index for inserting data with this\r\n         * timestamp. The second argument indicates whether\r\n         * we are searching for insert-before or insert-after\r\n         * positions.\r\n         * Timestamps are meant to be unique, so if a collision\r\n         * occurs, this will return -1.\r\n         * @param {number} timestamp timestamp to insert\r\n         * @returns {number} the index for insertion (or -1)\r\n         */\r\n        PlotLineBuffer.prototype.findInsertionIndex = function (timestamp) {\r\n            var value = timestamp - this.domainOffset;\r\n\r\n            // Handle empty buffer case and check for an\r\n            // append opportunity (which is most common case for\r\n            // real-time data so is optimized-for) before falling\r\n            // back to a binary search for the insertion point.\r\n            return (this.length < 1) ? 0 :\r\n                (value > this.buffer[this.length * 2 - 2]) ? this.length :\r\n                    this.binSearch(value, 0, this.length - 1);\r\n        };\r\n\r\n        return PlotLineBuffer;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotUpdater',['./PlotLine', './PlotLineBuffer'],\r\n    function (PlotLine, PlotLineBuffer) {\r\n\r\n        var MAX_POINTS = 86400,\r\n            PADDING_RATIO = 0.10, // Padding percentage for top & bottom\r\n            INITIAL_SIZE = 675; // 1/128 of MAX_POINTS\r\n\r\n        /**\r\n         * The PlotPreparer is responsible for handling data sets and\r\n         * preparing them to be rendered. It creates a WebGL-plottable\r\n         * Float32Array for each trace, and tracks the boundaries of the\r\n         * data sets (since this is convenient to do during the same pass).\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {TelemetryHandle} handle the handle to telemetry access\r\n         * @param {string} domain the key to use when looking up domain values\r\n         * @param {string} range the key to use when looking up range values\r\n         * @param {number} fixedDuration maximum plot duration to display\r\n         * @param {number} maxPoints maximum number of points to display\r\n         */\r\n        function PlotUpdater(handle, domain, range, fixedDuration, maxPoints) {\r\n            this.handle = handle;\r\n            this.domain = domain;\r\n            this.range = range;\r\n            this.fixedDuration = fixedDuration;\r\n            this.maxPoints = maxPoints;\r\n\r\n            this.ids = [];\r\n            this.lines = {};\r\n            this.buffers = {};\r\n            this.bufferArray = [];\r\n\r\n            // Use a default MAX_POINTS if none is provided\r\n            this.maxPoints = maxPoints !== undefined ? maxPoints : MAX_POINTS;\r\n            this.dimensions = [0, 0];\r\n            this.origin = [0, 0];\r\n\r\n            // Initially prepare state for these objects.\r\n            // Note that this may be an empty array at this time,\r\n            // so we also need to check during update cycles.\r\n            this.update();\r\n        }\r\n\r\n        // Look up a domain object's id (for mapping, below)\r\n        function getId(domainObject) {\r\n            return domainObject.getId();\r\n        }\r\n\r\n        // Used in the reduce step of updateExtrema\r\n        function reduceExtrema(a, b) {\r\n            return [Math.min(a[0], b[0]), Math.max(a[1], b[1])];\r\n        }\r\n\r\n        // Convert a domain/range extrema to plot dimensions\r\n        function dimensionsOf(extrema) {\r\n            return extrema[1] - extrema[0];\r\n        }\r\n\r\n        // Convert a domain/range extrema to a plot origin\r\n        function originOf(extrema) {\r\n            return extrema[0];\r\n        }\r\n\r\n        // Check if this set of ids matches the current set of ids\r\n        // (used to detect if line preparation can be skipped)\r\n        PlotUpdater.prototype.idsMatch = function (nextIds) {\r\n            var ids = this.ids;\r\n            return ids.length === nextIds.length &&\r\n                nextIds.every(function (id, index) {\r\n                    return ids[index] === id;\r\n                });\r\n        };\r\n\r\n        // Prepare plot lines for this group of telemetry objects\r\n        PlotUpdater.prototype.prepareLines = function (telemetryObjects) {\r\n            var nextIds = telemetryObjects.map(getId),\r\n                next = {},\r\n                self = this;\r\n\r\n            // Detect if we already have everything we need prepared\r\n            if (this.idsMatch(nextIds)) {\r\n                // Nothing to prepare, move on\r\n                return;\r\n            }\r\n\r\n            // Built up a set of ids. Note that we can only\r\n            // create plot lines after our domain offset has\r\n            // been determined.\r\n            if (this.domainOffset !== undefined) {\r\n                // Update list of ids in use\r\n                this.ids = nextIds;\r\n\r\n                // Create buffers for these objects\r\n                this.bufferArray = this.ids.map(function (id) {\r\n                    self.buffers[id] = self.buffers[id] || new PlotLineBuffer(\r\n                        self.domainOffset,\r\n                        INITIAL_SIZE,\r\n                        self.maxPoints\r\n                    );\r\n                    next[id] =\r\n                        self.lines[id] || new PlotLine(self.buffers[id]);\r\n                    return self.buffers[id];\r\n                });\r\n            }\r\n\r\n            // If there are no more lines, clear the domain offset\r\n            if (Object.keys(next).length < 1) {\r\n                this.domainOffset = undefined;\r\n            }\r\n\r\n            // Update to the current set of lines\r\n            this.lines = next;\r\n        };\r\n\r\n        // Initialize the domain offset, based on these observed values\r\n        PlotUpdater.prototype.initializeDomainOffset = function (values) {\r\n            this.domainOffset =\r\n                ((this.domainOffset === undefined) && (values.length > 0)) ?\r\n                        (values.reduce(function (a, b) {\r\n                            return (a || 0) + (b || 0);\r\n                        }, 0) / values.length) :\r\n                        this.domainOffset;\r\n        };\r\n\r\n        // Expand range slightly so points near edges are visible\r\n        PlotUpdater.prototype.expandRange = function () {\r\n            var padding = PADDING_RATIO * this.dimensions[1],\r\n                top;\r\n            padding = Math.max(padding, 1.0);\r\n            top = Math.ceil(this.origin[1] + this.dimensions[1] + padding / 2);\r\n            this.origin[1] = Math.floor(this.origin[1] - padding / 2);\r\n            this.dimensions[1] = top - this.origin[1];\r\n        };\r\n\r\n        // Update dimensions and origin based on extrema of plots\r\n        PlotUpdater.prototype.updateBounds = function () {\r\n            var bufferArray = this.bufferArray.filter(function (lineBuffer) {\r\n                    return lineBuffer.getLength() > 0; // Ignore empty lines\r\n                }),\r\n                priorDomainOrigin = this.origin[0],\r\n                priorDomainDimensions = this.dimensions[0];\r\n\r\n            if (bufferArray.length > 0) {\r\n                this.domainExtrema = bufferArray.map(function (lineBuffer) {\r\n                    return lineBuffer.getDomainExtrema();\r\n                }).reduce(reduceExtrema);\r\n\r\n                this.rangeExtrema = bufferArray.map(function (lineBuffer) {\r\n                    return lineBuffer.getRangeExtrema();\r\n                }).reduce(reduceExtrema);\r\n\r\n                // Calculate best-fit dimensions\r\n                this.dimensions = [this.domainExtrema, this.rangeExtrema]\r\n                    .map(dimensionsOf);\r\n                this.origin = [this.domainExtrema, this.rangeExtrema]\r\n                    .map(originOf);\r\n\r\n                // Enforce some minimum visible area\r\n                this.expandRange();\r\n\r\n                // Suppress domain changes when pinned\r\n                if (this.hasSpecificDomainBounds) {\r\n                    this.origin[0] = priorDomainOrigin;\r\n                    this.dimensions[0] = priorDomainDimensions;\r\n                    if (this.following) {\r\n                        this.origin[0] = Math.max(\r\n                            this.domainExtrema[1] - this.dimensions[0],\r\n                            this.origin[0]\r\n                        );\r\n                    }\r\n                }\r\n\r\n                // ...then enforce a fixed duration if needed\r\n                if (this.fixedDuration !== undefined) {\r\n                    this.origin[0] = this.origin[0] + this.dimensions[0] -\r\n                        this.fixedDuration;\r\n                    this.dimensions[0] = this.fixedDuration;\r\n                }\r\n            }\r\n        };\r\n\r\n        // Add latest data for this domain object\r\n        PlotUpdater.prototype.addPointFor = function (domainObject) {\r\n            var line = this.lines[domainObject.getId()];\r\n            if (line) {\r\n                line.addPoint(\r\n                    this.handle.getDomainValue(domainObject, this.domain),\r\n                    this.handle.getRangeValue(domainObject, this.range)\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Update with latest data.\r\n         */\r\n        PlotUpdater.prototype.update = function update() {\r\n            var objects = this.handle.getTelemetryObjects(),\r\n                self = this;\r\n\r\n            // Initialize domain offset if necessary\r\n            if (this.domainOffset === undefined) {\r\n                this.initializeDomainOffset(objects.map(function (obj) {\r\n                    return self.handle.getDomainValue(obj, self.domain);\r\n                }).filter(function (value) {\r\n                    return typeof value === 'number';\r\n                }));\r\n            }\r\n\r\n            // Make sure lines are available\r\n            this.prepareLines(objects);\r\n\r\n            // Add new data\r\n            objects.forEach(function (domainObject, index) {\r\n                self.addPointFor(domainObject, index);\r\n            });\r\n\r\n            // Then, update extrema\r\n            this.updateBounds();\r\n        };\r\n\r\n        /**\r\n         * Get the dimensions which bound all data in the provided\r\n         * data sets. This is given as a two-element array where the\r\n         * first element is domain, and second is range.\r\n         * @returns {number[]} the dimensions which bound this data set\r\n         */\r\n        PlotUpdater.prototype.getDimensions = function () {\r\n            return this.dimensions;\r\n        };\r\n\r\n        /**\r\n         * Get the origin of this data set's boundary.\r\n         * This is given as a two-element array where the\r\n         * first element is domain, and second is range.\r\n         * The domain value here is not adjusted by the domain offset.\r\n         * @returns {number[]} the origin of this data set's boundary\r\n         */\r\n        PlotUpdater.prototype.getOrigin = function () {\r\n            return this.origin;\r\n        };\r\n\r\n        /**\r\n         * Get the domain offset; this offset will have been subtracted\r\n         * from all domain values in all buffers returned by this\r\n         * preparer, in order to minimize loss-of-precision due to\r\n         * conversion to the 32-bit float format needed by WebGL.\r\n         * @returns {number} the domain offset\r\n         * @memberof platform/features/plot.PlotUpdater#\r\n         */\r\n        PlotUpdater.prototype.getDomainOffset = function () {\r\n            return this.domainOffset;\r\n        };\r\n\r\n        /**\r\n         * Get all renderable buffers for this data set. This will\r\n         * be returned as an array which can be correlated back to\r\n         * the provided telemetry data objects (from the constructor\r\n         * call) by index.\r\n         *\r\n         * Internally, these are flattened; each buffer contains a\r\n         * sequence of alternating domain and range values.\r\n         *\r\n         * All domain values in all buffers will have been adjusted\r\n         * from their original values by subtraction of the domain\r\n         * offset; this minimizes loss-of-precision resulting from\r\n         * the conversion to 32-bit floats, which may otherwise\r\n         * cause aliasing artifacts (particularly for timestamps)\r\n         *\r\n         * @returns {Float32Array[]} the buffers for these traces\r\n         * @memberof platform/features/plot.PlotUpdater#\r\n         */\r\n        PlotUpdater.prototype.getLineBuffers = function () {\r\n            return this.bufferArray;\r\n        };\r\n\r\n        /**\r\n         * Set the start and end boundaries (usually time) for the\r\n         * domain axis of this updater.\r\n         */\r\n        PlotUpdater.prototype.setDomainBounds = function (start, end) {\r\n            this.fixedDuration = end - start;\r\n            this.origin[0] = start;\r\n            this.dimensions[0] = this.fixedDuration;\r\n\r\n            // Suppress follow behavior if we have windowed in on the past\r\n            this.hasSpecificDomainBounds = true;\r\n            this.following =\r\n                !this.domainExtrema || (end >= this.domainExtrema[1]);\r\n        };\r\n\r\n        /**\r\n         * Fill in historical data.\r\n         */\r\n        PlotUpdater.prototype.addHistorical = function (domainObject, series) {\r\n            var count = series ? series.getPointCount() : 0,\r\n                line;\r\n\r\n            // Nothing to do if it's an empty series\r\n            if (count < 1) {\r\n                return;\r\n            }\r\n\r\n            // Initialize domain offset if necessary\r\n            if (this.domainOffset === undefined) {\r\n                this.initializeDomainOffset([\r\n                    series.getDomainValue(0, this.domain),\r\n                    series.getDomainValue(count - 1, this.domain)\r\n                ]);\r\n            }\r\n\r\n            // Make sure lines are available\r\n            this.prepareLines(this.handle.getTelemetryObjects());\r\n\r\n            // Look up the line for this domain object\r\n            line = this.lines[domainObject.getId()];\r\n\r\n            // ...and put the data into it.\r\n            if (line) {\r\n                line.addSeries(series, this.domain, this.range);\r\n            }\r\n\r\n            // Update extrema\r\n            this.updateBounds();\r\n        };\r\n\r\n        return PlotUpdater;\r\n\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Plot palette. Defines colors for various plot lines.\r\n */\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotPalette',[],function () {\r\n\r\n        // Prepare different forms of the palette, since we wish to\r\n        // describe colors in several ways (as RGB 0-255, as\r\n        // RGB 0.0-1.0, or as stylesheet-appropriate #-prefixed colors).\r\n        var integerPalette = [\r\n            [0x20, 0xB2, 0xAA],\r\n            [0x9A, 0xCD, 0x32],\r\n            [0xFF, 0x8C, 0x00],\r\n            [0xD2, 0xB4, 0x8C],\r\n            [0x40, 0xE0, 0xD0],\r\n            [0x41, 0x69, 0xFF],\r\n            [0xFF, 0xD7, 0x00],\r\n            [0x6A, 0x5A, 0xCD],\r\n            [0xEE, 0x82, 0xEE],\r\n            [0xCC, 0x99, 0x66],\r\n            [0x99, 0xCC, 0xCC],\r\n            [0x66, 0xCC, 0x33],\r\n            [0xFF, 0xCC, 0x00],\r\n            [0xFF, 0x66, 0x33],\r\n            [0xCC, 0x66, 0xFF],\r\n            [0xFF, 0x00, 0x66],\r\n            [0xFF, 0xFF, 0x00],\r\n            [0x80, 0x00, 0x80],\r\n            [0x00, 0x86, 0x8B],\r\n            [0x00, 0x8A, 0x00],\r\n            [0xFF, 0x00, 0x00],\r\n            [0x00, 0x00, 0xFF],\r\n            [0xF5, 0xDE, 0xB3],\r\n            [0xBC, 0x8F, 0x8F],\r\n            [0x46, 0x82, 0xB4],\r\n            [0xFF, 0xAF, 0xAF],\r\n            [0x43, 0xCD, 0x80],\r\n            [0xCD, 0xC1, 0xC5],\r\n            [0xA0, 0x52, 0x2D],\r\n            [0x64, 0x95, 0xED]\r\n        ], stringPalette = integerPalette.map(function (arr) {\r\n            // Convert to # notation for use in styles\r\n            return '#' + arr.map(function (c) {\r\n                return (c < 16 ? '0' : '') + c.toString(16);\r\n            }).join('');\r\n        }), floatPalette = integerPalette.map(function (arr) {\r\n            return arr.map(function (c) {\r\n                return c / 255.0;\r\n            }).concat([1]); // RGBA\r\n        });\r\n\r\n        /**\r\n         * PlotPalette allows a consistent set of colors to be retrieved\r\n         * by index, in various color formats. All PlotPalette methods are\r\n         * static, so there is no need for a constructor call; using\r\n         * this will simply return PlotPalette itself.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         */\r\n        function PlotPalette() {\r\n            return PlotPalette;\r\n        }\r\n\r\n        /**\r\n         * Look up a color in the plot's palette, by index.\r\n         * This will be returned as a three element array of RGB\r\n         * values, as integers in the range of 0-255.\r\n         * @param {number} i the index of the color to look up\r\n         * @return {number[]} the color, as integer RGB values\r\n         */\r\n        PlotPalette.getIntegerColor = function (i) {\r\n            return integerPalette[Math.floor(i) % integerPalette.length];\r\n        };\r\n\r\n\r\n        /**\r\n         * Look up a color in the plot's palette, by index.\r\n         * This will be returned as a three element array of RGB\r\n         * values, in the range of 0.0-1.0.\r\n         *\r\n         * This format is present specifically to support use with\r\n         * WebGL, which expects colors of that form.\r\n         *\r\n         * @param {number} i the index of the color to look up\r\n         * @return {number[]} the color, as floating-point RGB values\r\n         */\r\n        PlotPalette.getFloatColor = function (i) {\r\n            return floatPalette[Math.floor(i) % floatPalette.length];\r\n        };\r\n\r\n\r\n        /**\r\n         * Look up a color in the plot's palette, by index.\r\n         * This will be returned as a string using #-prefixed\r\n         * six-digit RGB hex notation (e.g. #FF0000)\r\n         * See http://www.w3.org/TR/css3-color/#rgb-color.\r\n         *\r\n         * This format is useful for representing colors in in-line\r\n         * styles.\r\n         *\r\n         * @param {number} i the index of the color to look up\r\n         * @return {string} the color, as a style-friendly string\r\n         */\r\n        PlotPalette.getStringColor = function (i) {\r\n            return stringPalette[Math.floor(i) % stringPalette.length];\r\n        };\r\n\r\n        return PlotPalette;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotAxis',[],\r\n    function () {\r\n\r\n        /**\r\n         * A PlotAxis provides a template-ready set of options\r\n         * for the domain or range axis, sufficient to populate\r\n         * selectors.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {string} axisType the field in metadatas to\r\n         *        look at for axis options; usually one of\r\n         *        \"domains\" or \"ranges\"\r\n         * @param {object[]} metadatas metadata objects, as\r\n         *        returned by the `getMetadata()` method of\r\n         *        a `telemetry` capability.\r\n         * @param {object} defaultValue the value to use for the\r\n         *        active state in the event that no options are\r\n         *        found; should contain \"name\" and \"key\" at\r\n         *        minimum.\r\n         *\r\n         */\r\n        function PlotAxis(axisType, metadatas, defaultValue) {\r\n            this.axisType = axisType;\r\n            this.defaultValue = defaultValue;\r\n            this.optionKeys = {};\r\n\r\n            /**\r\n             * The currently chosen option for this axis. An\r\n             * initial value is provided; this will be updated\r\n             * directly form the plot template.\r\n             * @memberof platform/features/plot.PlotAxis#\r\n             */\r\n            this.active = defaultValue;\r\n\r\n            /**\r\n             * The set of options applicable for this axis;\r\n             * an array of objects, where each object contains a\r\n             * \"key\" field and a \"name\" field (for machine- and\r\n             * human-readable names respectively)\r\n             * @memberof platform/features/plot.PlotAxis#\r\n             */\r\n            this.options = [];\r\n\r\n            // Initialize options from metadata objects\r\n            this.updateMetadata(metadatas);\r\n        }\r\n\r\n\r\n        /**\r\n         * Update axis options to reflect current metadata.\r\n         * @param {TelemetryMetadata[]} metadata objects describing\r\n         *        applicable telemetry\r\n         */\r\n        PlotAxis.prototype.updateMetadata = function (metadatas) {\r\n            var axisType = this.axisType,\r\n                optionKeys = this.optionKeys,\r\n                newOptions = {},\r\n                toAdd = [];\r\n\r\n            function isValid(option) {\r\n                return option && optionKeys[option.key];\r\n            }\r\n\r\n            metadatas.forEach(function (m) {\r\n                (m[axisType] || []).forEach(function (option) {\r\n                    var key = option.key;\r\n                    if (!optionKeys[key] && !newOptions[key]) {\r\n                        toAdd.push(option);\r\n                    }\r\n                    newOptions[key] = true;\r\n                });\r\n            });\r\n\r\n            optionKeys = this.optionKeys = newOptions;\r\n\r\n            // General approach here is to avoid changing object\r\n            // instances unless something has really changed, since\r\n            // Angular is watching; don't want to trigger extra digests.\r\n            if (!this.options.every(isValid)) {\r\n                this.options = this.options.filter(isValid);\r\n            }\r\n\r\n            if (toAdd.length > 0) {\r\n                this.options = this.options.concat(toAdd);\r\n            }\r\n\r\n            if (!isValid(this.active)) {\r\n                this.active = this.options[0] || this.defaultValue;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Change the domain/range selection for this axis. If the\r\n         * provided `key` is not recognized as an option, no change\r\n         * will occur.\r\n         * @param {string} key the identifier for the domain/range\r\n         */\r\n        PlotAxis.prototype.chooseOption = function (key) {\r\n            var self = this;\r\n            this.options.forEach(function (option) {\r\n                if (option.key === key) {\r\n                    self.active = option;\r\n                }\r\n            });\r\n        };\r\n\r\n        return PlotAxis;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotLimitTracker',[],\r\n    function () {\r\n\r\n        /**\r\n         * Tracks the limit state of telemetry objects being plotted.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {platform/telemetry.TelemetryHandle} handle the handle\r\n         *        to telemetry access\r\n         * @param {string} range the key to use when looking up range values\r\n         */\r\n        function PlotLimitTracker(handle, range) {\r\n            this.handle = handle;\r\n            this.range = range;\r\n            this.legendClasses = {};\r\n        }\r\n\r\n        /**\r\n         * Update limit states to reflect the latest data.\r\n         */\r\n        PlotLimitTracker.prototype.update = function () {\r\n            var legendClasses = {},\r\n                range = this.range,\r\n                handle = this.handle;\r\n\r\n            function updateLimit(telemetryObject) {\r\n                var limit = telemetryObject.getCapability('limit'),\r\n                    datum = handle.getDatum(telemetryObject);\r\n\r\n                if (limit && datum) {\r\n                    legendClasses[telemetryObject.getId()] =\r\n                        (limit.evaluate(datum, range) || {}).cssClass;\r\n                }\r\n            }\r\n\r\n            handle.getTelemetryObjects().forEach(updateLimit);\r\n\r\n            this.legendClasses = legendClasses;\r\n        };\r\n\r\n        /**\r\n         * Get the CSS class associated with any limit violations for this\r\n         * telemetry object.\r\n         * @param {DomainObject} domainObject the telemetry object to check\r\n         * @returns {string} the CSS class name, if any\r\n         */\r\n        PlotLimitTracker.prototype.getLegendClass = function (domainObject) {\r\n            var id = domainObject && domainObject.getId();\r\n            return id && this.legendClasses[id];\r\n        };\r\n\r\n        return PlotLimitTracker;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotTelemetryFormatter',[],\r\n    function () {\r\n\r\n        var DIGITS = 3;\r\n\r\n        /**\r\n         * Wraps a `TelemetryFormatter` to provide formats for domain and\r\n         * range values; provides a single place to track domain/range\r\n         * formats within a plot, allowing other plot elements to simply\r\n         * request that values be formatted.\r\n         * @constructor\r\n         * @memberof platform/features/plot\r\n         * @implements {platform/telemetry.TelemetryFormatter}\r\n         * @param {TelemetryFormatter} telemetryFormatter the formatter\r\n         *        to wrap.\r\n         */\r\n        function PlotTelemetryFormatter(telemetryFormatter) {\r\n            this.telemetryFormatter = telemetryFormatter;\r\n        }\r\n\r\n        /**\r\n         * Specify the format to use for domain values.\r\n         * @param {string} key the format's identifier\r\n         */\r\n        PlotTelemetryFormatter.prototype.setDomainFormat = function (key) {\r\n            this.domainFormat = key;\r\n        };\r\n\r\n        /**\r\n         * Specify the format to use for range values.\r\n         * @param {string} key the format's identifier\r\n         */\r\n        PlotTelemetryFormatter.prototype.setRangeFormat = function (key) {\r\n            this.rangeFormat = key;\r\n        };\r\n\r\n        PlotTelemetryFormatter.prototype.formatDomainValue = function (value) {\r\n            return this.telemetryFormatter\r\n                .formatDomainValue(value, this.domainFormat);\r\n        };\r\n\r\n        PlotTelemetryFormatter.prototype.formatRangeValue = function (value) {\r\n            if (typeof value === 'number') {\r\n                return value.toFixed(DIGITS);\r\n            }\r\n\r\n            return this.telemetryFormatter\r\n                .formatRangeValue(value, this.rangeFormat);\r\n        };\r\n\r\n        return PlotTelemetryFormatter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotPosition',[],\r\n    function () {\r\n\r\n        /**\r\n         * A PlotPosition converts from pixel coordinates to domain-range\r\n         * coordinates, based on the current plot boundary as described on\r\n         * the pan-zoom stack.\r\n         *\r\n         * These coordinates are not updated after construction; that is,\r\n         * they represent the result of the conversion at the time the\r\n         * PlotPosition was instantiated. Care should be taken when retaining\r\n         * PlotPosition objects across changes to the pan-zoom stack.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {number} x the horizontal pixel position in the plot area\r\n         * @param {number} y the vertical pixel position in the plot area\r\n         * @param {number} width the width of the plot area\r\n         * @param {number} height the height of the plot area\r\n         * @param {PanZoomStack} panZoomStack the applicable pan-zoom stack,\r\n         *        used to determine the plot's domain-range boundaries.\r\n         */\r\n        function PlotPosition(x, y, width, height, panZoomStack) {\r\n            var panZoom = panZoomStack.getPanZoom(),\r\n                origin = panZoom.origin,\r\n                dimensions = panZoom.dimensions;\r\n\r\n            function convert(v, i) {\r\n                return v * dimensions[i] + origin[i];\r\n            }\r\n\r\n            if (!dimensions || !origin) {\r\n                // We need both dimensions and origin to compute a position\r\n                this.position = [];\r\n            } else {\r\n                // Convert from pixel to domain-range space.\r\n                // Note that range is reversed from the y-axis in pixel space\r\n                //(positive range points up, positive pixel-y points down)\r\n                this.position =\r\n                    [x / width, (height - y) / height].map(convert);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get the domain value corresponding to this pixel position.\r\n         * @returns {number} the domain value\r\n         */\r\n        PlotPosition.prototype.getDomain = function () {\r\n            return this.position[0];\r\n        };\r\n\r\n        /**\r\n         * Get the range value corresponding to this pixel position.\r\n         * @returns {number} the range value\r\n         */\r\n        PlotPosition.prototype.getRange = function () {\r\n            return this.position[1];\r\n        };\r\n\r\n        /**\r\n         * Get the domain and values corresponding to this\r\n         * pixel position.\r\n         * @returns {number[]} an array containing the domain and\r\n         *          the range value, in that order\r\n         */\r\n        PlotPosition.prototype.getPosition = function () {\r\n            return this.position;\r\n        };\r\n\r\n        return PlotPosition;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotTickGenerator',[],\r\n    function () {\r\n\r\n        /**\r\n         * The PlotTickGenerator provides labels for ticks along the\r\n         * domain and range axes of the plot, to support the plot\r\n         * template.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {PlotPanZoomStack} panZoomStack the pan-zoom stack for\r\n         *        this plot, used to determine plot boundaries\r\n         * @param {TelemetryFormatter} formatter used to format (for display)\r\n         *        domain and range values.\r\n         */\r\n        function PlotTickGenerator(panZoomStack, formatter) {\r\n            this.panZoomStack = panZoomStack;\r\n            this.formatter = formatter;\r\n        }\r\n\r\n        // For phantomjs compatibility, for headless testing\r\n        // (Function.prototype.bind unsupported)\r\n        function bind(fn, thisObj) {\r\n            return fn.bind ? fn.bind(thisObj) : function () {\r\n                return fn.apply(thisObj, arguments);\r\n            };\r\n        }\r\n\r\n        // Generate ticks; interpolate from start up to\r\n        // start + span in count steps, using the provided\r\n        // formatter to represent each value.\r\n        PlotTickGenerator.prototype.generateTicks = function (start, span, count, format) {\r\n            var step = span / (count - 1),\r\n                result = [],\r\n                i;\r\n\r\n            for (i = 0; i < count; i += 1) {\r\n                result.push({\r\n                    //If data to show, display label for each tick line, otherwise show lines but suppress labels.\r\n                    label: span > 0 ? format(i * step + start) : ''\r\n                });\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        /**\r\n         * Generate tick marks for the domain axis.\r\n         * @param {number} count the number of ticks\r\n         * @returns {string[]} labels for those ticks\r\n         */\r\n        PlotTickGenerator.prototype.generateDomainTicks = function (count) {\r\n            var panZoom = this.panZoomStack.getPanZoom();\r\n            return this.generateTicks(\r\n                panZoom.origin[0],\r\n                panZoom.dimensions[0],\r\n                count,\r\n                bind(this.formatter.formatDomainValue, this.formatter)\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Generate tick marks for the range axis.\r\n         * @param {number} count the number of ticks\r\n         * @returns {string[]} labels for those ticks\r\n         */\r\n        PlotTickGenerator.prototype.generateRangeTicks = function (count) {\r\n            var panZoom = this.panZoomStack.getPanZoom();\r\n            return this.generateTicks(\r\n                panZoom.origin[1],\r\n                panZoom.dimensions[1],\r\n                count,\r\n                bind(this.formatter.formatRangeValue, this.formatter)\r\n            );\r\n        };\r\n\r\n        return PlotTickGenerator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/SubPlot',[\r\n        './elements/PlotPosition',\r\n        './elements/PlotTickGenerator'\r\n    ],\r\n    function (PlotPosition, PlotTickGenerator) {\r\n\r\n        var DOMAIN_TICKS = 5,\r\n            RANGE_TICKS = 7;\r\n\r\n        /**\r\n         * A SubPlot is an individual plot within a Plot View (which\r\n         * may contain multiple plots, specifically when in Stacked\r\n         * plot mode.)\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {DomainObject[]} telemetryObjects the domain objects\r\n         *        which will be plotted in this sub-plot\r\n         * @param {PlotPanZoomStack} panZoomStack the stack of pan-zoom\r\n         *        states which is applicable to this sub-plot\r\n         * @param {TelemetryFormatter} telemetryFormatter the telemetry\r\n         *        formatting service; used to convert domain/range values\r\n         *        from telemetry data sets to a human-readable form.\r\n         */\r\n        function SubPlot(telemetryObjects, panZoomStack, telemetryFormatter) {\r\n            // We are used from a template often, so maintain\r\n            // state in local variables to allow for fast look-up,\r\n            // as is normal for controllers.\r\n            this.telemetryObjects = telemetryObjects;\r\n            this.domainTicks = [];\r\n            this.rangeTicks = [];\r\n            this.formatter = telemetryFormatter;\r\n            this.draw = {};\r\n            this.hovering = false;\r\n            this.panZoomStack = panZoomStack;\r\n\r\n            // Start with the right initial drawing bounds,\r\n            // tick marks\r\n            this.updateDrawingBounds();\r\n            this.updateTicks();\r\n        }\r\n\r\n        /**\r\n         * Tests whether this subplot has domain data to show for the current pan/zoom level. Absence of domain data\r\n         * implies that there is no range data displayed either\r\n         * @returns {boolean} true if domain data exists for the current pan/zoom level\r\n         */\r\n        SubPlot.prototype.hasDomainData = function () {\r\n            return this.panZoomStack &&\r\n                this.panZoomStack.getDimensions()[0] > 0;\r\n        };\r\n\r\n        // Utility function for filtering out empty strings.\r\n        function isNonEmpty(v) {\r\n            return typeof v === 'string' && v !== \"\";\r\n        }\r\n\r\n        // Converts from pixel coordinates to domain-range,\r\n        // to interpret mouse gestures.\r\n        SubPlot.prototype.mousePositionToDomainRange = function (mousePosition) {\r\n            return new PlotPosition(\r\n                mousePosition.x,\r\n                mousePosition.y,\r\n                mousePosition.width,\r\n                mousePosition.height,\r\n                this.panZoomStack\r\n            ).getPosition();\r\n        };\r\n\r\n        // Utility function to get the mouse position (in x,y\r\n        // pixel coordinates in the canvas area) from a mouse\r\n        // event object.\r\n        SubPlot.prototype.toMousePosition = function ($event) {\r\n            var bounds = this.subPlotBounds;\r\n\r\n            return {\r\n                x: $event.clientX - bounds.left,\r\n                y: $event.clientY - bounds.top,\r\n                width: bounds.width,\r\n                height: bounds.height\r\n            };\r\n        };\r\n\r\n        // Convert a domain-range position to a displayable\r\n        // position. This will subtract the domain offset, which\r\n        // is used to bias domain values to minimize loss-of-precision\r\n        // associated with conversion to a 32-bit floating point\r\n        // format (which is needed in the chart area itself, by WebGL.)\r\n        SubPlot.prototype.toDisplayable = function (position) {\r\n            return [position[0] - this.domainOffset, position[1]];\r\n        };\r\n\r\n        // Update the current hover coordinates\r\n        SubPlot.prototype.updateHoverCoordinates = function () {\r\n            var formatter = this.formatter;\r\n\r\n            // Utility, for map/forEach loops. Index 0 is domain,\r\n            // index 1 is range.\r\n            function formatValue(v, i) {\r\n                return i ?\r\n                    formatter.formatRangeValue(v) :\r\n                    formatter.formatDomainValue(v);\r\n            }\r\n\r\n            this.hoverCoordinates = this.mousePosition &&\r\n                this.mousePositionToDomainRange(this.mousePosition)\r\n                    .map(formatValue)\r\n                    .filter(isNonEmpty)\r\n                    .join(\", \");\r\n        };\r\n\r\n        // Update the drawable marquee area to reflect current\r\n        // mouse position (or don't show it at all, if no marquee\r\n        // zoom is in progress)\r\n        SubPlot.prototype.updateMarqueeBox = function () {\r\n            // Express this as a box in the draw object, which\r\n            // is passed to an mct-chart in the template for rendering.\r\n            this.draw.boxes = this.marqueeStart ?\r\n                [{\r\n                    start: this.toDisplayable(\r\n                        this.mousePositionToDomainRange(this.marqueeStart)\r\n                    ),\r\n                    end: this.toDisplayable(\r\n                        this.mousePositionToDomainRange(this.mousePosition)\r\n                    ),\r\n                    color: [1, 1, 1, 0.5]\r\n                }] : undefined;\r\n        };\r\n\r\n        // Update the bounds (origin and dimensions) of the drawing area.\r\n        SubPlot.prototype.updateDrawingBounds = function () {\r\n            var panZoom = this.panZoomStack.getPanZoom();\r\n\r\n            // Communicate pan-zoom state from stack to the draw object\r\n            // which is passed to mct-chart in the template.\r\n            this.draw.dimensions = panZoom.dimensions;\r\n            this.draw.origin = [\r\n                panZoom.origin[0] - this.domainOffset,\r\n                panZoom.origin[1]\r\n            ];\r\n        };\r\n\r\n        // Update tick marks in scope.\r\n        SubPlot.prototype.updateTicks = function () {\r\n            var tickGenerator =\r\n                new PlotTickGenerator(this.panZoomStack, this.formatter);\r\n\r\n            this.domainTicks =\r\n                tickGenerator.generateDomainTicks(DOMAIN_TICKS);\r\n            this.rangeTicks =\r\n                tickGenerator.generateRangeTicks(RANGE_TICKS);\r\n        };\r\n\r\n        SubPlot.prototype.updatePan = function () {\r\n            var start, current, delta, nextOrigin;\r\n\r\n            // Clear the previous panning pan-zoom state\r\n            this.panZoomStack.popPanZoom();\r\n\r\n            // Calculate what the new resulting pan-zoom should be\r\n            start = this.mousePositionToDomainRange(\r\n                this.panStart,\r\n                this.panZoomStack\r\n            );\r\n            current = this.mousePositionToDomainRange(\r\n                this.mousePosition,\r\n                this.panZoomStack\r\n            );\r\n\r\n            delta = [current[0] - start[0], current[1] - start[1]];\r\n            nextOrigin = [\r\n                this.panStartBounds.origin[0] - delta[0],\r\n                this.panStartBounds.origin[1] - delta[1]\r\n            ];\r\n\r\n            // ...and push a new one at the current mouse position\r\n            this.panZoomStack\r\n                .pushPanZoom(nextOrigin, this.panStartBounds.dimensions);\r\n        };\r\n\r\n        /**\r\n         * Get the set of domain objects which are being\r\n         * represented in this sub-plot.\r\n         * @returns {DomainObject[]} the domain objects which\r\n         *          will have data plotted in this sub-plot\r\n         */\r\n        SubPlot.prototype.getTelemetryObjects = function () {\r\n            return this.telemetryObjects;\r\n        };\r\n\r\n        /**\r\n         * Get ticks mark information appropriate for using in the\r\n         * template for this sub-plot's domain axis, as prepared\r\n         * by the PlotTickGenerator.\r\n         * @returns {Array} tick marks for the domain axis\r\n         */\r\n        SubPlot.prototype.getDomainTicks = function () {\r\n            return this.domainTicks;\r\n        };\r\n\r\n        /**\r\n         * Get ticks mark information appropriate for using in the\r\n         * template for this sub-plot's range axis, as prepared\r\n         * by the PlotTickGenerator.\r\n         * @returns {Array} tick marks for the range axis\r\n         */\r\n        SubPlot.prototype.getRangeTicks = function () {\r\n            return this.rangeTicks;\r\n        };\r\n\r\n        /**\r\n         * Get the drawing object associated with this sub-plot;\r\n         * this object will be passed to the mct-chart in which\r\n         * this sub-plot's lines will be plotted, as its \"draw\"\r\n         * attribute, and should have the same internal format\r\n         * expected by that directive.\r\n         * @return {object} the drawing object\r\n         */\r\n        SubPlot.prototype.getDrawingObject = function () {\r\n            return this.draw;\r\n        };\r\n\r\n        /**\r\n         * Get the coordinates (as displayable text) for the\r\n         * current mouse position.\r\n         * @returns {string[]} the displayable domain and range\r\n         *          coordinates over which the mouse is hovered\r\n         */\r\n        SubPlot.prototype.getHoverCoordinates = function () {\r\n            return this.hoverCoordinates;\r\n        };\r\n\r\n        /**\r\n         * Handle mouse movement over the chart area.\r\n         * @param $event the mouse event\r\n         * @memberof platform/features/plot.SubPlot#\r\n         */\r\n        SubPlot.prototype.hover = function ($event) {\r\n            this.hovering = true;\r\n            this.subPlotBounds = $event.target.getBoundingClientRect();\r\n            this.mousePosition = this.toMousePosition($event);\r\n            //If there is a domain to display, show hover coordinates, otherwise hover coordinates are meaningless\r\n            if (this.hasDomainData()) {\r\n                this.updateHoverCoordinates();\r\n            }\r\n            if (this.marqueeStart) {\r\n                this.updateMarqueeBox();\r\n            }\r\n            if (this.panStart) {\r\n                this.updatePan();\r\n                this.updateDrawingBounds();\r\n                this.updateTicks();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Continue a previously-start pan or zoom gesture.\r\n         * @param $event the mouse event\r\n         * @memberof platform/features/plot.SubPlot#\r\n         */\r\n        SubPlot.prototype.continueDrag = function ($event) {\r\n            this.mousePosition = this.toMousePosition($event);\r\n            if (this.marqueeStart) {\r\n                this.updateMarqueeBox();\r\n            }\r\n            if (this.panStart) {\r\n                this.updatePan();\r\n                this.updateDrawingBounds();\r\n                this.updateTicks();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Initiate a marquee zoom action.\r\n         * @param $event the mouse event\r\n         */\r\n        SubPlot.prototype.startDrag = function ($event) {\r\n            this.subPlotBounds = $event.target.getBoundingClientRect();\r\n            this.mousePosition = this.toMousePosition($event);\r\n            // Treat any modifier key as a pan\r\n            if ($event.altKey || $event.shiftKey || $event.ctrlKey) {\r\n                // Start panning\r\n                this.panStart = this.mousePosition;\r\n                this.panStartBounds = this.panZoomStack.getPanZoom();\r\n                // We're starting a pan, so add this back as a\r\n                // state on the stack; it will get replaced\r\n                // during the pan.\r\n                this.panZoomStack.pushPanZoom(\r\n                    this.panStartBounds.origin,\r\n                    this.panStartBounds.dimensions\r\n                );\r\n                $event.preventDefault();\r\n            } else {\r\n                // Start marquee zooming\r\n                this.marqueeStart = this.mousePosition;\r\n                this.updateMarqueeBox();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Complete a marquee zoom action.\r\n         * @param $event the mouse event\r\n         */\r\n        SubPlot.prototype.endDrag = function ($event) {\r\n            var self = this;\r\n\r\n            // Perform a marquee zoom.\r\n            function marqueeZoom(start, end) {\r\n                // Determine what boundary is described by the marquee,\r\n                // in domain-range values. Use the minima for origin, so that\r\n                // it doesn't matter what direction the user marqueed in.\r\n                var a = self.mousePositionToDomainRange(start),\r\n                    b = self.mousePositionToDomainRange(end),\r\n                    origin = [\r\n                        Math.min(a[0], b[0]),\r\n                        Math.min(a[1], b[1])\r\n                    ],\r\n                    dimensions = [\r\n                        Math.max(a[0], b[0]) - origin[0],\r\n                        Math.max(a[1], b[1]) - origin[1]\r\n                    ];\r\n\r\n                // Proceed with zoom if zoom dimensions are non zeros\r\n                if (!(dimensions[0] === 0 && dimensions[1] === 0)) {\r\n                    // Push the new state onto the pan-zoom stack\r\n                    self.panZoomStack.pushPanZoom(origin, dimensions);\r\n\r\n                    // Make sure tick marks reflect new bounds\r\n                    self.updateTicks();\r\n                }\r\n            }\r\n\r\n            this.mousePosition = this.toMousePosition($event);\r\n            this.subPlotBounds = undefined;\r\n            if (this.marqueeStart) {\r\n                marqueeZoom(this.marqueeStart, this.mousePosition);\r\n                this.marqueeStart = undefined;\r\n                this.updateMarqueeBox();\r\n                this.updateDrawingBounds();\r\n                this.updateTicks();\r\n            }\r\n            if (this.panStart) {\r\n                // End panning\r\n                this.panStart = undefined;\r\n                this.panStartBounds = undefined;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Update the drawing bounds, marquee box, and\r\n         * tick marks for this subplot.\r\n         */\r\n        SubPlot.prototype.update = function () {\r\n            this.updateDrawingBounds();\r\n            this.updateMarqueeBox();\r\n            this.updateTicks();\r\n        };\r\n\r\n        /**\r\n         * Set the domain offset associated with this sub-plot.\r\n         * A domain offset is subtracted from all domain\r\n         * before lines are drawn to avoid artifacts associated\r\n         * with the use of 32-bit floats when domain values\r\n         * are often timestamps (due to insufficient precision.)\r\n         * A SubPlot will be drawing boxes (for marquee zoom) in\r\n         * the same offset coordinate space, so it needs to know\r\n         * the value of this to position that marquee box\r\n         * correctly.\r\n         * @param {number} value the domain offset\r\n         */\r\n        SubPlot.prototype.setDomainOffset = function (value) {\r\n            this.domainOffset = value;\r\n        };\r\n\r\n        /**\r\n         * When used with no argument, check whether or not the user\r\n         * is currently hovering over this subplot. When used with\r\n         * an argument, set that state.\r\n         * @param {boolean} [state] the new hovering state\r\n         * @returns {boolean} the hovering state\r\n         */\r\n        SubPlot.prototype.isHovering = function (state) {\r\n            if (state !== undefined) {\r\n                this.hovering = state;\r\n            }\r\n            return this.hovering;\r\n        };\r\n\r\n        return SubPlot;\r\n\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotPanZoomStack',[],\r\n    function () {\r\n\r\n        /**\r\n         * The PlotPanZoomStack is responsible for maintaining the\r\n         * pan-zoom state of a plot (expressed as a boundary starting\r\n         * at an origin and extending to certain dimensions) in a\r\n         * stack, to support the back and unzoom buttons in plot controls.\r\n         *\r\n         * Dimensions and origins are here described each by two-element\r\n         * arrays, where the first element describes a value or quantity\r\n         * along the domain axis, and the second element describes the same\r\n         * along the range axis.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {number[]} origin the plot's origin, initially\r\n         * @param {number[]} dimensions the plot's dimensions, initially\r\n         */\r\n        function PlotPanZoomStack(origin, dimensions) {\r\n            // Use constructor parameters as the stack's initial state\r\n            this.stack = [{ origin: origin, dimensions: dimensions }];\r\n        }\r\n\r\n        // Various functions which follow are simply wrappers for\r\n        // normal stack-like array methods, with the exception that\r\n        // they prevent undesired modification and enforce that this\r\n        // stack must remain non-empty.\r\n        // See JSDoc for specific methods below for more detail.\r\n\r\n        /**\r\n         * Get the current stack depth; that is, the number\r\n         * of items on the stack. A depth of one means that no\r\n         * panning or zooming relative to the base value has\r\n         * been applied.\r\n         * @returns {number} the depth of the stack\r\n         */\r\n        PlotPanZoomStack.prototype.getDepth = function getDepth() {\r\n            return this.stack.length;\r\n        };\r\n\r\n        /**\r\n         * Push a new pan-zoom state onto the stack; this will\r\n         * become the active pan-zoom state.\r\n         * @param {number[]} origin the new origin\r\n         * @param {number[]} dimensions the new dimensions\r\n         */\r\n        PlotPanZoomStack.prototype.pushPanZoom = function (origin, dimensions) {\r\n            this.stack.push({ origin: origin, dimensions: dimensions });\r\n        };\r\n\r\n        /**\r\n         * Pop a pan-zoom state from the stack. Whatever pan-zoom\r\n         * state was previously present will become current.\r\n         * If called when there is only one pan-zoom state on the\r\n         * stack, this acts as a no-op (that is, the lowest\r\n         * pan-zoom state on the stack cannot be popped, to ensure\r\n         * that some pan-zoom state is always available.)\r\n         */\r\n        PlotPanZoomStack.prototype.popPanZoom = function popPanZoom() {\r\n            if (this.stack.length > 1) {\r\n                this.stack.pop();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set the base pan-zoom state; that is, the state at the\r\n         * bottom of the stack. This allows the \"unzoomed\" state of\r\n         * a plot to be updated (e.g. as new data comes in) without\r\n         * interfering with the user's chosen zoom level.\r\n         * @param {number[]} origin the base origin\r\n         * @param {number[]} dimensions the base dimensions\r\n         * @memberof platform/features/plot.PlotPanZoomStack#\r\n         */\r\n        PlotPanZoomStack.prototype.setBasePanZoom = function (origin, dimensions) {\r\n            this.stack[0] = { origin: origin, dimensions: dimensions };\r\n        };\r\n\r\n        /**\r\n         * Clear the pan-zoom stack down to its bottom element;\r\n         * in effect, pop all elements but the last, e.g. to remove\r\n         * any temporary user modifications to pan-zoom state.\r\n         */\r\n        PlotPanZoomStack.prototype.clearPanZoom = function clearPanZoom() {\r\n            this.stack = [this.stack[0]];\r\n        };\r\n\r\n        /**\r\n         * Get the current pan-zoom state (the state at the top\r\n         * of the stack), expressed as an object with \"origin\" and\r\n         * \"dimensions\" fields.\r\n         * @returns {object} the current pan-zoom state\r\n         */\r\n        PlotPanZoomStack.prototype.getPanZoom = function getPanZoom() {\r\n            return this.stack[this.stack.length - 1];\r\n        };\r\n\r\n        /**\r\n         * Get the current origin, as represented on the top of the\r\n         * stack.\r\n         * @returns {number[]} the current plot origin\r\n         */\r\n        PlotPanZoomStack.prototype.getOrigin = function getOrigin() {\r\n            return this.getPanZoom().origin;\r\n        };\r\n\r\n        /**\r\n         * Get the current dimensions, as represented on the top of\r\n         * the stack.\r\n         * @returns {number[]} the current plot dimensions\r\n         */\r\n        PlotPanZoomStack.prototype.getDimensions = function getDimensions() {\r\n            return this.getPanZoom().dimensions;\r\n        };\r\n\r\n        return PlotPanZoomStack;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/modes/PlotOverlayMode',[\"../SubPlot\", \"../elements/PlotPalette\", \"../elements/PlotPanZoomStack\"],\r\n    function (SubPlot, PlotPalette, PlotPanZoomStack) {\r\n\r\n        /**\r\n         * Handles plotting in Overlaid mode. In overlaid mode, there\r\n         * is one sub-plot which contains all plotted objects.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @implements {platform/features/plot.PlotModeHandler}\r\n         * @param {DomainObject[]} the domain objects to be plotted\r\n         */\r\n        function PlotOverlayMode(telemetryObjects, subPlotFactory) {\r\n            this.panZoomStack = new PlotPanZoomStack([], []);\r\n            this.subplot = subPlotFactory.createSubPlot(\r\n                telemetryObjects,\r\n                this.panZoomStack\r\n            );\r\n            this.subplots = [this.subplot];\r\n        }\r\n\r\n        PlotOverlayMode.prototype.plotTelemetry = function (updater) {\r\n            // Fit to the boundaries of the data, but don't\r\n            // override any user-initiated pan-zoom changes.\r\n            this.panZoomStack.setBasePanZoom(\r\n                updater.getOrigin(),\r\n                updater.getDimensions()\r\n            );\r\n\r\n            // Track the domain offset, used to bias domain values\r\n            // to minimize loss of precision when converted to 32-bit\r\n            // floating point values for display.\r\n            this.subplot.setDomainOffset(updater.getDomainOffset());\r\n\r\n            // Draw the buffers. Select color by index.\r\n            this.subplot.getDrawingObject().lines =\r\n                updater.getLineBuffers().map(function (buf, i) {\r\n                    return {\r\n                        buffer: buf.getBuffer(),\r\n                        color: PlotPalette.getFloatColor(i),\r\n                        points: buf.getLength()\r\n                    };\r\n                });\r\n        };\r\n\r\n        PlotOverlayMode.prototype.getSubPlots = function () {\r\n            return this.subplots;\r\n        };\r\n\r\n        PlotOverlayMode.prototype.isZoomed = function () {\r\n            return this.panZoomStack.getDepth() > 1;\r\n        };\r\n\r\n        PlotOverlayMode.prototype.stepBackPanZoom = function () {\r\n            this.panZoomStack.popPanZoom();\r\n            this.subplot.update();\r\n        };\r\n\r\n        PlotOverlayMode.prototype.unzoom = function () {\r\n            this.panZoomStack.clearPanZoom();\r\n            this.subplot.update();\r\n        };\r\n\r\n        return PlotOverlayMode;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/elements/PlotPanZoomStackGroup',['./PlotPanZoomStack'],\r\n    function (PlotPanZoomStack) {\r\n\r\n        /**\r\n         * A plot pan zoom stack group provides a collection of individual\r\n         * pan-zoom stacks that synchronize upon the domain axis, but\r\n         * remain independent upon the range axis. This supports panning\r\n         * and zooming in stacked-plot mode (and, importantly,\r\n         * stepping back through those states.)\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {number} count the number of stacks to include in this\r\n         *        group\r\n         */\r\n        function PlotPanZoomStackGroup(count) {\r\n            var self = this;\r\n\r\n            // Push a pan-zoom state; the index argument identifies\r\n            // which stack originated the request (all other stacks\r\n            // will ignore the range part of the change.)\r\n            function pushPanZoom(origin, dimensions, index) {\r\n                self.stacks.forEach(function (stack, i) {\r\n                    if (i === index) {\r\n                        // Do a normal push for the specified stack\r\n                        stack.pushPanZoom(origin, dimensions);\r\n                    } else {\r\n                        // For other stacks, do a push, but repeat\r\n                        // their current range axis bounds.\r\n                        stack.pushPanZoom(\r\n                            [origin[0], stack.getOrigin()[1]],\r\n                            [dimensions[0], stack.getDimensions()[1]]\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n            // Decorate a pan-zoom stack; returns an object with\r\n            // the same interface, but whose stack-mutation methods\r\n            // effect all items in the group.\r\n            function decorateStack(stack, index) {\r\n                var result = Object.create(stack);\r\n\r\n                // Use the methods defined above\r\n                result.pushPanZoom = function (origin, dimensions) {\r\n                    pushPanZoom(origin, dimensions, index);\r\n                };\r\n                result.setBasePanZoom = function () {\r\n                    self.setBasePanZoom.apply(self, arguments);\r\n                };\r\n                result.popPanZoom = function () {\r\n                    self.popPanZoom.apply(self, arguments);\r\n                };\r\n                result.clearPanZoom = function () {\r\n                    self.clearPanZoom.apply(self, arguments);\r\n                };\r\n\r\n                return result;\r\n            }\r\n\r\n            // Create the stacks in this group ...\r\n            this.stacks = [];\r\n            while (this.stacks.length < count) {\r\n                this.stacks.push(new PlotPanZoomStack([], []));\r\n            }\r\n            // ... and their decorated-to-synchronize versions.\r\n            this.decoratedStacks = this.stacks.map(decorateStack);\r\n        }\r\n\r\n        /**\r\n         * Pop a pan-zoom state from all stacks in the group.\r\n         * If called when there is only one pan-zoom state on each\r\n         * stack, this acts as a no-op (that is, the lowest\r\n         * pan-zoom state on the stack cannot be popped, to ensure\r\n         * that some pan-zoom state is always available.)\r\n         */\r\n        PlotPanZoomStackGroup.prototype.popPanZoom = function () {\r\n            this.stacks.forEach(function (stack) {\r\n                stack.popPanZoom();\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Set the base pan-zoom state for all stacks in this group.\r\n         * This changes the state at the bottom of each stack.\r\n         * This allows the \"unzoomed\" state of plots to be updated\r\n         * (e.g. as new data comes in) without\r\n         * interfering with the user's chosen pan/zoom states.\r\n         * @param {number[]} origin the base origin\r\n         * @param {number[]} dimensions the base dimensions\r\n         */\r\n        PlotPanZoomStackGroup.prototype.setBasePanZoom = function (origin, dimensions) {\r\n            this.stacks.forEach(function (stack) {\r\n                stack.setBasePanZoom(origin, dimensions);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Clear all pan-zoom stacks in this group down to\r\n         * their bottom element; in effect, pop all elements\r\n         * but the last, e.g. to remove any temporary user\r\n         * modifications to pan-zoom state.\r\n         */\r\n        PlotPanZoomStackGroup.prototype.clearPanZoom = function () {\r\n            this.stacks.forEach(function (stack) {\r\n                stack.clearPanZoom();\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Get the current stack depth; that is, the number\r\n         * of items on each stack in the group.\r\n         * A depth of one means that no\r\n         * panning or zooming relative to the base value has\r\n         * been applied.\r\n         * @returns {number} the depth of the stacks in this group\r\n         */\r\n        PlotPanZoomStackGroup.prototype.getDepth = function () {\r\n            // All stacks are kept in sync, so look up depth\r\n            // from the first one.\r\n            return this.stacks.length > 0 ? this.stacks[0].getDepth() : 0;\r\n        };\r\n\r\n        /**\r\n         * Get a specific pan-zoom stack in this group.\r\n         * Stacks are specified by index; this index must be less\r\n         * than the count provided at construction time, and must\r\n         * not be less than zero.\r\n         * The stack returned by this function will be synchronized\r\n         * to other stacks in this group; that is, mutating that\r\n         * stack directly will result in other stacks in this group\r\n         * undergoing similar updates to ensure that domain bounds\r\n         * remain the same.\r\n         * @param {number} index the index of the stack to get\r\n         * @returns {PlotPanZoomStack} the pan-zoom stack in the\r\n         *          group identified by that index\r\n         */\r\n        PlotPanZoomStackGroup.prototype.getPanZoomStack = function (index) {\r\n            return this.decoratedStacks[index];\r\n        };\r\n\r\n        return PlotPanZoomStackGroup;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/modes/PlotStackMode',[\"../SubPlot\", \"../elements/PlotPalette\", \"../elements/PlotPanZoomStackGroup\"],\r\n    function (SubPlot, PlotPalette, PlotPanZoomStackGroup) {\r\n\r\n        /**\r\n         * Handles plotting in Stacked mode. In stacked mode, there\r\n         * is one sub-plot for each plotted object.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @implements {platform/features/plot.PlotModeHandler}\r\n         * @param {DomainObject[]} the domain objects to be plotted\r\n         */\r\n        function PlotStackMode(telemetryObjects, subPlotFactory) {\r\n            var self = this;\r\n\r\n            this.panZoomStackGroup =\r\n                new PlotPanZoomStackGroup(telemetryObjects.length);\r\n\r\n            this.subplots = telemetryObjects.map(function (telemetryObject, i) {\r\n                    return subPlotFactory.createSubPlot(\r\n                        [telemetryObject],\r\n                        self.panZoomStackGroup.getPanZoomStack(i)\r\n                    );\r\n                });\r\n        }\r\n\r\n        PlotStackMode.prototype.plotTelemetryTo = function (subplot, prepared, index) {\r\n            var buffer = prepared.getLineBuffers()[index];\r\n\r\n            // Track the domain offset, used to bias domain values\r\n            // to minimize loss of precision when converted to 32-bit\r\n            // floating point values for display.\r\n            subplot.setDomainOffset(prepared.getDomainOffset());\r\n\r\n            // Draw the buffers. Always use the 0th color, because there\r\n            // is one line per plot.\r\n            subplot.getDrawingObject().lines = [{\r\n                buffer: buffer.getBuffer(),\r\n                color: PlotPalette.getFloatColor(0),\r\n                points: buffer.getLength()\r\n            }];\r\n        };\r\n\r\n        PlotStackMode.prototype.plotTelemetry = function (prepared) {\r\n            var self = this;\r\n            // Fit to the boundaries of the data, but don't\r\n            // override any user-initiated pan-zoom changes.\r\n            this.panZoomStackGroup.setBasePanZoom(\r\n                prepared.getOrigin(),\r\n                prepared.getDimensions()\r\n            );\r\n\r\n            this.subplots.forEach(function (subplot, index) {\r\n                self.plotTelemetryTo(subplot, prepared, index);\r\n            });\r\n        };\r\n\r\n        PlotStackMode.prototype.getSubPlots = function () {\r\n            return this.subplots;\r\n        };\r\n\r\n        PlotStackMode.prototype.isZoomed = function () {\r\n            return this.panZoomStackGroup.getDepth() > 1;\r\n        };\r\n\r\n        PlotStackMode.prototype.stepBackPanZoom = function () {\r\n            this.panZoomStackGroup.popPanZoom();\r\n            this.subplots.forEach(function (subplot) {\r\n                subplot.update();\r\n            });\r\n        };\r\n\r\n        PlotStackMode.prototype.unzoom = function () {\r\n            this.panZoomStackGroup.clearPanZoom();\r\n            this.subplots.forEach(function (subplot) {\r\n                subplot.update();\r\n            });\r\n        };\r\n\r\n        return PlotStackMode;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/modes/PlotModeOptions',[\"./PlotOverlayMode\", \"./PlotStackMode\"],\r\n    function (PlotOverlayMode, PlotStackMode) {\r\n\r\n        var STACKED = {\r\n                key: \"stacked\",\r\n                name: \"Stacked\",\r\n                cssclass: \"icon-plot-stacked\",\r\n                Constructor: PlotStackMode\r\n            },\r\n            OVERLAID = {\r\n                key: \"overlaid\",\r\n                name: \"Overlaid\",\r\n                cssclass: \"icon-plot-overlay\",\r\n                Constructor: PlotOverlayMode\r\n            };\r\n\r\n        /**\r\n         * Handles distinct behavior associated with different\r\n         * plot modes.\r\n         *\r\n         * @interface platform/features/plot.PlotModeHandler\r\n         * @private\r\n         */\r\n\r\n        /**\r\n         * Plot telemetry to the sub-plot(s) managed by this mode.\r\n         * @param {platform/features/plot.PlotUpdater} updater a source\r\n         *        of data that is ready to plot\r\n         * @method platform/features/plot.PlotModeHandler#plotTelemetry\r\n         */\r\n        /**\r\n         * Get all sub-plots to be displayed in this mode; used\r\n         * to populate the plot template.\r\n         * @return {platform/features/plot.SubPlot[]} all sub-plots to\r\n         *         display in this mode\r\n         * @method platform/features/plot.PlotModeHandler#getSubPlots\r\n         */\r\n        /**\r\n         * Check if we are not in our base pan-zoom state (that is,\r\n         * there are some temporary user modifications to the\r\n         * current pan-zoom state.)\r\n         * @returns {boolean} true if not in the base pan-zoom state\r\n         * @method platform/features/plot.PlotModeHandler#isZoomed\r\n         */\r\n        /**\r\n         * Undo the most recent pan/zoom change and restore\r\n         * the prior state.\r\n         * @method platform/features/plot.PlotModeHandler#stepBackPanZoom\r\n         */\r\n        /**\r\n         * Undo all pan/zoom change and restore the base state.\r\n         * @method platform/features/plot.PlotModeHandler#unzoom\r\n         */\r\n\r\n        /**\r\n         * Determines which plotting modes (stacked/overlaid)\r\n         * are applicable in a given plot view, maintains current\r\n         * selection state thereof, and provides handlers for the\r\n         * different behaviors associated with these modes.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {DomainObject[]} telemetryObjects the telemetry objects being\r\n         *        represented in this plot view\r\n         * @param {platform/features/plot.SubPlotFactory} subPlotFactory a\r\n         *        factory for creating sub-plots\r\n         */\r\n        function PlotModeOptions(telemetryObjects, subPlotFactory) {\r\n            this.options = telemetryObjects.length > 1 ?\r\n                    [OVERLAID, STACKED] : [OVERLAID];\r\n            this.mode = this.options[0]; // Initial selection (overlaid)\r\n            this.telemetryObjects = telemetryObjects;\r\n            this.subPlotFactory = subPlotFactory;\r\n        }\r\n\r\n        /**\r\n         * Get a handler for the current mode. This will handle\r\n         * plotting telemetry, providing subplots for the template,\r\n         * and view-level interactions with pan-zoom state.\r\n         * @returns {PlotOverlayMode|PlotStackMode} a handler\r\n         *          for the current mode\r\n         */\r\n        PlotModeOptions.prototype.getModeHandler = function () {\r\n            // Lazily initialize\r\n            if (!this.modeHandler) {\r\n                this.modeHandler = new this.mode.Constructor(\r\n                    this.telemetryObjects,\r\n                    this.subPlotFactory\r\n                );\r\n            }\r\n            return this.modeHandler;\r\n        };\r\n\r\n        /**\r\n         * Get all mode options available for each plot. Each\r\n         * mode contains a `name` and `cssclass` field suitable\r\n         * for display in a template.\r\n         * @return {Array} the available modes\r\n         */\r\n        PlotModeOptions.prototype.getModeOptions = function () {\r\n            return this.options;\r\n        };\r\n\r\n        /**\r\n         * Get the plotting mode option currently in use.\r\n         * This will be one of the elements returned from\r\n         * `getModeOptions`.\r\n         * @return {*} the current mode\r\n         */\r\n        PlotModeOptions.prototype.getMode = function () {\r\n            return this.mode;\r\n        };\r\n\r\n        /**\r\n         * Set the plotting mode option to use.\r\n         * The passed argument must be one of the options\r\n         * returned by `getModeOptions`.\r\n         * @param {object} option one of the plot mode options\r\n         *        from `getModeOptions`\r\n         */\r\n        PlotModeOptions.prototype.setMode = function (option) {\r\n            if (this.mode !== option) {\r\n                this.mode = option;\r\n                // Clear the existing mode handler, so it\r\n                // can be instantiated next time it's needed.\r\n                this.modeHandler = undefined;\r\n            }\r\n        };\r\n\r\n\r\n        return PlotModeOptions;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/SubPlotFactory',[\"./SubPlot\"],\r\n    function (SubPlot) {\r\n\r\n        /**\r\n         * Utility factory; wraps the SubPlot constructor and adds\r\n         * in a reference to the telemetryFormatter, which will be\r\n         * used to represent telemetry values (timestamps or data\r\n         * values) as human-readable strings.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         */\r\n        function SubPlotFactory(telemetryFormatter) {\r\n            this.telemetryFormatter = telemetryFormatter;\r\n        }\r\n\r\n        /**\r\n         * Instantiate a new sub-plot.\r\n         * @param {DomainObject[]} telemetryObjects the domain objects\r\n         *        which will be plotted in this sub-plot\r\n         * @param {PlotPanZoomStack} panZoomStack the stack of pan-zoom\r\n         *        states which is applicable to this sub-plot\r\n         * @returns {SubPlot} the instantiated sub-plot\r\n         * @method\r\n         */\r\n        SubPlotFactory.prototype.createSubPlot = function (telemetryObjects, panZoomStack) {\r\n            return new SubPlot(\r\n                telemetryObjects,\r\n                panZoomStack,\r\n                this.telemetryFormatter\r\n            );\r\n        };\r\n\r\n        return SubPlotFactory;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle adds a \"Plot\" view for numeric telemetry data.\r\n * @namespace platform/features/plot\r\n */\r\ndefine(\r\n    'platform/features/plot/src/PlotController',[\r\n        \"./elements/PlotUpdater\",\r\n        \"./elements/PlotPalette\",\r\n        \"./elements/PlotAxis\",\r\n        \"./elements/PlotLimitTracker\",\r\n        \"./elements/PlotTelemetryFormatter\",\r\n        \"./modes/PlotModeOptions\",\r\n        \"./SubPlotFactory\"\r\n    ],\r\n    function (\r\n        PlotUpdater,\r\n        PlotPalette,\r\n        PlotAxis,\r\n        PlotLimitTracker,\r\n        PlotTelemetryFormatter,\r\n        PlotModeOptions,\r\n        SubPlotFactory\r\n    ) {\r\n\r\n        var AXIS_DEFAULTS = [\r\n                { \"name\": \"Time\" },\r\n                { \"name\": \"Value\" }\r\n            ];\r\n\r\n        /**\r\n         * The PlotController is responsible for any computation/logic\r\n         * associated with displaying the plot view. Specifically, these\r\n         * responsibilities include:\r\n         *\r\n         * * Describing axes and labeling.\r\n         * * Handling user interactions.\r\n         * * Deciding what needs to be drawn in the chart area.\r\n         *\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         */\r\n        function PlotController(\r\n            $scope,\r\n            telemetryFormatter,\r\n            telemetryHandler,\r\n            throttle,\r\n            PLOT_FIXED_DURATION\r\n        ) {\r\n            var self = this,\r\n                plotTelemetryFormatter =\r\n                    new PlotTelemetryFormatter(telemetryFormatter),\r\n                subPlotFactory =\r\n                    new SubPlotFactory(plotTelemetryFormatter),\r\n                cachedObjects = [],\r\n                updater,\r\n                lastBounds,\r\n                lastRange,\r\n                lastDomain,\r\n                handle;\r\n\r\n            // Populate the scope with axis information (specifically, options\r\n            // available for each axis.)\r\n            function setupAxes(metadatas) {\r\n                $scope.axes.forEach(function (axis) {\r\n                    axis.updateMetadata(metadatas);\r\n                });\r\n            }\r\n\r\n            // Trigger an update of a specific subplot;\r\n            // used in a loop to update all subplots.\r\n            function updateSubplot(subplot) {\r\n                subplot.update();\r\n            }\r\n\r\n            // Set up available modes (stacked/overlaid), based on the\r\n            // set of telemetry objects in this plot view.\r\n            function setupModes(telemetryObjects) {\r\n                if (cachedObjects !== telemetryObjects) {\r\n                    cachedObjects = telemetryObjects;\r\n                    self.modeOptions = new PlotModeOptions(\r\n                        telemetryObjects || [],\r\n                        subPlotFactory\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Change the displayable bounds\r\n            function setBasePanZoom(bounds) {\r\n                var start = bounds.start,\r\n                    end = bounds.end;\r\n                if (updater) {\r\n                    updater.setDomainBounds(start, end);\r\n                    self.update();\r\n                }\r\n                lastBounds = bounds;\r\n            }\r\n\r\n            // Reinstantiate the plot updater (e.g. because we have a\r\n            // new subscription.) This will clear the plot.\r\n            function recreateUpdater() {\r\n                var domain = $scope.axes[0].active.key,\r\n                    range = $scope.axes[1].active.key,\r\n                    duration = PLOT_FIXED_DURATION;\r\n\r\n                updater = new PlotUpdater(handle, domain, range, duration);\r\n                lastDomain = domain;\r\n                lastRange = range;\r\n\r\n                self.limitTracker = new PlotLimitTracker(handle, range);\r\n\r\n                // Keep any externally-provided bounds\r\n                if (lastBounds) {\r\n                    setBasePanZoom(lastBounds);\r\n                }\r\n            }\r\n\r\n            function getUpdater() {\r\n                if (!updater) {\r\n                    recreateUpdater();\r\n                }\r\n                return updater;\r\n            }\r\n\r\n            // Handle new telemetry data in this plot\r\n            function updateValues() {\r\n                self.pending = false;\r\n                if (handle) {\r\n                    setupModes(handle.getTelemetryObjects());\r\n                    setupAxes(handle.getMetadata());\r\n                    getUpdater().update();\r\n                    self.modeOptions.getModeHandler().plotTelemetry(updater);\r\n                    self.limitTracker.update();\r\n                    self.update();\r\n                }\r\n            }\r\n\r\n            // Display new historical data as it becomes available\r\n            function addHistoricalData(domainObject, series) {\r\n                self.pending = false;\r\n                getUpdater().addHistorical(domainObject, series);\r\n                self.modeOptions.getModeHandler().plotTelemetry(updater);\r\n                self.update();\r\n            }\r\n\r\n            // Issue a new request for historical telemetry\r\n            function requestTelemetry() {\r\n                if (handle) {\r\n                    handle.request({}, addHistoricalData);\r\n                }\r\n            }\r\n\r\n            // Requery for data entirely\r\n            function replot() {\r\n                if (handle) {\r\n                    updater = undefined;\r\n                    requestTelemetry();\r\n                }\r\n            }\r\n\r\n            // Create a new subscription; telemetrySubscriber gets\r\n            // to do the meaningful work here.\r\n            function subscribe(domainObject) {\r\n                if (handle) {\r\n                    handle.unsubscribe();\r\n                }\r\n                handle = domainObject && telemetryHandler.handle(\r\n                    domainObject,\r\n                    updateValues,\r\n                    true // Lossless\r\n                );\r\n                replot();\r\n            }\r\n\r\n            // Release the current subscription (called when scope is destroyed)\r\n            function releaseSubscription() {\r\n                if (handle) {\r\n                    handle.unsubscribe();\r\n                    handle = undefined;\r\n                }\r\n            }\r\n\r\n            function requery() {\r\n                self.pending = true;\r\n                releaseSubscription();\r\n                subscribe($scope.domainObject);\r\n            }\r\n\r\n            function updateDomainFormat() {\r\n                var domainAxis = $scope.axes[0];\r\n                plotTelemetryFormatter\r\n                    .setDomainFormat(domainAxis.active.format);\r\n            }\r\n\r\n            function domainRequery(newDomain) {\r\n                if (newDomain !== lastDomain) {\r\n                    updateDomainFormat();\r\n                    requery();\r\n                }\r\n            }\r\n\r\n            function rangeRequery(newRange) {\r\n                if (newRange !== lastRange) {\r\n                    requery();\r\n                }\r\n            }\r\n\r\n            // Respond to a display bounds change (requery for data)\r\n            function changeDisplayBounds(event, bounds) {\r\n                var domainAxis = $scope.axes[0];\r\n\r\n                domainAxis.chooseOption(bounds.domain);\r\n                updateDomainFormat();\r\n                setBasePanZoom(bounds);\r\n                requery();\r\n            }\r\n\r\n            this.modeOptions = new PlotModeOptions([], subPlotFactory);\r\n            this.updateValues = updateValues;\r\n\r\n            // Create a throttled update function\r\n            this.scheduleUpdate = throttle(function () {\r\n                self.modeOptions.getModeHandler().getSubPlots()\r\n                    .forEach(updateSubplot);\r\n            });\r\n\r\n            self.pending = true;\r\n\r\n            // Initialize axes; will get repopulated when telemetry\r\n            // metadata becomes available.\r\n            $scope.axes = [\r\n                new PlotAxis(\"domains\", [], AXIS_DEFAULTS[0]),\r\n                new PlotAxis(\"ranges\", [], AXIS_DEFAULTS[1])\r\n            ];\r\n\r\n            // Watch for changes to the selected axis\r\n            $scope.$watch(\"axes[0].active.key\", domainRequery);\r\n            $scope.$watch(\"axes[1].active.key\", rangeRequery);\r\n\r\n            // Subscribe to telemetry when a domain object becomes available\r\n            $scope.$watch('domainObject', subscribe);\r\n\r\n            // Respond to external bounds changes\r\n            $scope.$on(\"telemetry:display:bounds\", changeDisplayBounds);\r\n\r\n            // Unsubscribe when the plot is destroyed\r\n            $scope.$on(\"$destroy\", releaseSubscription);\r\n        }\r\n\r\n        /**\r\n         * Get the color (as a style-friendly string) to use\r\n         * for plotting the trace at the specified index.\r\n         * @param {number} index the index of the trace\r\n         * @returns {string} the color, in #RRGGBB form\r\n         */\r\n        PlotController.prototype.getColor = function (index) {\r\n            return PlotPalette.getStringColor(index);\r\n        };\r\n\r\n        /**\r\n         * Check if the plot is zoomed or panned out\r\n         * of its default state (to determine whether back/unzoom\r\n         * controls should be shown)\r\n         * @returns {boolean} true if not in default state\r\n         */\r\n        PlotController.prototype.isZoomed = function () {\r\n            return this.modeOptions.getModeHandler().isZoomed();\r\n        };\r\n\r\n        /**\r\n         * Undo the most recent pan/zoom change and restore\r\n         * the prior state.\r\n         */\r\n        PlotController.prototype.stepBackPanZoom = function () {\r\n            return this.modeOptions.getModeHandler().stepBackPanZoom();\r\n        };\r\n\r\n        /**\r\n         * Undo all pan/zoom changes and restore the initial state.\r\n         */\r\n        PlotController.prototype.unzoom = function () {\r\n            return this.modeOptions.getModeHandler().unzoom();\r\n        };\r\n\r\n        /**\r\n         * Get the mode options (Stacked/Overlaid) that are applicable\r\n         * for this plot.\r\n         */\r\n        PlotController.prototype.getModeOptions = function () {\r\n            return this.modeOptions.getModeOptions();\r\n        };\r\n\r\n        /**\r\n         * Get the current mode that is applicable to this plot. This\r\n         * will include key, name, and cssclass fields.\r\n         */\r\n        PlotController.prototype.getMode = function () {\r\n            return this.modeOptions.getMode();\r\n        };\r\n\r\n        /**\r\n         * Set the mode which should be active in this plot.\r\n         * @param mode one of the mode options returned from\r\n         *        getModeOptions()\r\n         */\r\n        PlotController.prototype.setMode = function (mode) {\r\n            this.modeOptions.setMode(mode);\r\n            this.updateValues();\r\n        };\r\n\r\n        /**\r\n         * Get all individual plots contained within this Plot view.\r\n         * (Multiple may be contained when in Stacked mode).\r\n         * @returns {SubPlot[]} all subplots in this Plot view\r\n         */\r\n        PlotController.prototype.getSubPlots = function () {\r\n            return this.modeOptions.getModeHandler().getSubPlots();\r\n        };\r\n\r\n        /**\r\n         * Get the CSS class to apply to the legend for this domain\r\n         * object; this will reflect limit state.\r\n         * @returns {string} the CSS class\r\n         */\r\n        PlotController.prototype.getLegendClass = function (telemetryObject) {\r\n            return this.limitTracker &&\r\n                this.limitTracker.getLegendClass(telemetryObject);\r\n        };\r\n\r\n        /**\r\n         * Explicitly update all plots.\r\n         */\r\n        PlotController.prototype.update = function () {\r\n            this.scheduleUpdate();\r\n        };\r\n\r\n        /**\r\n         * Check if a request is pending (to show the wait spinner)\r\n         */\r\n        PlotController.prototype.isRequestPending = function () {\r\n            // Placeholder; this should reflect request state\r\n            // when requesting historical telemetry\r\n            return this.pending;\r\n        };\r\n\r\n        return PlotController;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/policies/PlotViewPolicy',[],function () {\r\n\r\n        /**\r\n         * Policy preventing the Plot view from being made available for\r\n         * domain objects which have non-numeric telemetry.\r\n         * @implements {Policy.<View, DomainObject>}\r\n         * @constructor\r\n         * @memberof platform/features/plot\r\n         */\r\n        function PlotViewPolicy() {\r\n        }\r\n\r\n        function hasNumericTelemetry(domainObject) {\r\n            var telemetry = domainObject &&\r\n                    domainObject.getCapability('telemetry'),\r\n                metadata = telemetry ? telemetry.getMetadata() : {},\r\n                ranges = metadata.ranges || [];\r\n\r\n            // Generally, we want to allow Plot for telemetry-providing\r\n            // objects (most telemetry is plottable.) We only want to\r\n            // suppress this for telemetry which only has explicitly\r\n            // non-numeric values.\r\n            return ranges.length === 0 || ranges.some(function (range) {\r\n                    // Assume format is numeric if it is undefined\r\n                    // (numeric telemetry is the common case)\r\n                    return range.format === undefined ||\r\n                        range.format === 'number';\r\n                });\r\n        }\r\n\r\n        PlotViewPolicy.prototype.allow = function (view, domainObject) {\r\n            if (view.key === 'plot') {\r\n                return hasNumericTelemetry(domainObject);\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        return PlotViewPolicy;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/PlotOptionsForm',[],\r\n    function () {\r\n\r\n        /**\r\n         * A class for encapsulating structure and behaviour of the plot\r\n         * options form\r\n         * @memberOf platform/features/plot\r\n         * @param topic\r\n         * @constructor\r\n         */\r\n        function PlotOptionsForm() {\r\n\r\n            /*\r\n             Defined below are the form structures for the plot options.\r\n             */\r\n            this.xAxisForm = {\r\n                'name': 'x-axis',\r\n                'sections': [{\r\n                    'name': 'x-axis',\r\n                    'rows': [\r\n                        {\r\n                            'name': 'Domain',\r\n                            'control': 'select',\r\n                            'key': 'key',\r\n                            'options': [\r\n                                {'name': 'SCET', 'value': 'scet'},\r\n                                {'name': 'SCLK', 'value': 'sclk'},\r\n                                {'name': 'LST', 'value': 'lst'}\r\n                            ]\r\n                        }\r\n                    ]\r\n                }]};\r\n\r\n            this.yAxisForm = {\r\n                'name': 'y-axis',\r\n                'sections': [{\r\n                    // Will need to be repeated for each y-axis, with a\r\n                    // distinct name for each. Ideally the name of the axis\r\n                    // itself.\r\n                    'name': 'y-axis',\r\n                    'rows': [\r\n                    {\r\n                        'name': 'Range',\r\n                        'control': 'select',\r\n                        'key': 'key',\r\n                        'options': [\r\n                            {'name': 'EU', 'value': 'eu'},\r\n                            {'name': 'DN', 'value': 'dn'},\r\n                            {'name': 'Status', 'value': 'status'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        'name': 'Autoscale',\r\n                        'control': 'checkbox',\r\n                        'key': 'autoscale'\r\n                    },\r\n                    {\r\n                        'name': 'Min',\r\n                        'control': 'textfield',\r\n                        'key': 'min',\r\n                        'pattern': '[0-9]',\r\n                        'inputsize' : 'sm'\r\n                    },\r\n                    {\r\n                        'name': 'Max',\r\n                        'control': 'textfield',\r\n                        'key': 'max',\r\n                        'pattern': '[0-9]',\r\n                        'inputsize' : 'sm'\r\n                    }\r\n                ]\r\n                }]\r\n            };\r\n            this.plotSeriesForm = {\r\n                'name': 'Series Options',\r\n                'sections': [\r\n                    {\r\n                        rows: [\r\n                        {\r\n                            'name': 'Color',\r\n                            'control': 'color',\r\n                            'key': 'color'\r\n                        }]\r\n                    },\r\n                    {\r\n                        'rows': [\r\n                            {\r\n                                'name': 'Markers',\r\n                                'control': 'checkbox',\r\n                                'key': 'markers',\r\n                                'layout': 'control-first'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        'rows': [\r\n                            {\r\n                                'name': 'No Line',\r\n                                'control': 'radio',\r\n                                'key': 'lineType',\r\n                                'value': 'noLine',\r\n                                'layout': 'control-first'\r\n                            },\r\n                            {\r\n                                'name': 'Step Line',\r\n                                'control': 'radio',\r\n                                'key': 'lineType',\r\n                                'value': 'stepLine',\r\n                                'layout': 'control-first'\r\n                            },\r\n                            {\r\n                                'name': 'Linear Line',\r\n                                'control': 'radio',\r\n                                'key': 'lineType',\r\n                                'value': 'linearLine',\r\n                                'layout': 'control-first'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        return PlotOptionsForm;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/plot/src/PlotOptionsController',['./PlotOptionsForm'],\r\n    function (PlotOptionsForm) {\r\n\r\n        /**\r\n         * Notes on implementation of plot options\r\n         *\r\n         * Multiple y-axes will have to be handled with multiple forms as\r\n         * they will need to be stored on distinct model object\r\n         *\r\n         * Likewise plot series options per-child will need to be separate\r\n         * forms.\r\n         */\r\n\r\n        /**\r\n         * The LayoutController is responsible for supporting the\r\n         * Layout view. It arranges frames according to saved configuration\r\n         * and provides methods for updating these based on mouse\r\n         * movement.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {Scope} $scope the controller's Angular scope\r\n         */\r\n        function PlotOptionsController($scope) {\r\n\r\n            var self = this;\r\n            this.$scope = $scope;\r\n            this.domainObject = $scope.domainObject;\r\n            this.configuration = this.domainObject.getModel().configuration || {};\r\n            this.plotOptionsForm = new PlotOptionsForm();\r\n            this.composition = [];\r\n            this.watches = [];\r\n\r\n            /*\r\n             Listen for changes to the domain object and update the object's\r\n             children.\r\n             */\r\n            this.mutationListener = this.domainObject.getCapability('mutation').listen(function (model) {\r\n                if (self.hasCompositionChanged(self.composition, model.composition)) {\r\n                    self.updateChildren();\r\n                }\r\n            });\r\n\r\n            /*\r\n             Set form structures on scope\r\n             */\r\n            $scope.plotSeriesForm = this.plotOptionsForm.plotSeriesForm;\r\n            $scope.xAxisForm = this.plotOptionsForm.xAxisForm;\r\n            $scope.yAxisForm = this.plotOptionsForm.yAxisForm;\r\n\r\n            $scope.$on(\"$destroy\", function () {\r\n                //Clean up any listeners on destruction of controller\r\n                self.mutationListener();\r\n            });\r\n\r\n            this.defaultConfiguration();\r\n            this.updateChildren();\r\n\r\n            /*\r\n             * Setup a number of watches for changes to form values. On\r\n             * change, update the model configuration via mutation\r\n             */\r\n            $scope.$watchCollection('configuration.plot.yAxis', function (newValue, oldValue) {\r\n                self.updateConfiguration(newValue, oldValue);\r\n            });\r\n            $scope.$watchCollection('configuration.plot.xAxis', function (newValue, oldValue) {\r\n                self.updateConfiguration(newValue, oldValue);\r\n            });\r\n\r\n            this.watchSeries();\r\n\r\n        }\r\n\r\n        /**\r\n         * Unregister all watches for series data (ie. the configuration for\r\n         * child objects)\r\n         * @private\r\n         */\r\n        PlotOptionsController.prototype.clearSeriesWatches = function () {\r\n            this.watches.forEach(function (watch) {\r\n                watch();\r\n            });\r\n            this.watches = [];\r\n        };\r\n\r\n        /**\r\n         * Attach watches for each object in the plot's composition\r\n         * @private\r\n         */\r\n        PlotOptionsController.prototype.watchSeries = function () {\r\n            var self = this;\r\n\r\n            this.clearSeriesWatches();\r\n\r\n            (self.$scope.children || []).forEach(function (child, index) {\r\n                self.watches.push(\r\n                    self.$scope.$watchCollection(\r\n                        'configuration.plot.series[' + index + ']',\r\n                        function (newValue, oldValue) {\r\n                            self.updateConfiguration(newValue, oldValue);\r\n                        }\r\n                    )\r\n                );\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Determine whether the changes to the model that triggered a\r\n         * mutation event were purely compositional.\r\n         *\r\n         * @private\r\n         */\r\n        PlotOptionsController.prototype.hasCompositionChanged = function (oldComposition, newComposition) {\r\n            // Framed slightly strangely, but the boolean logic is\r\n            // easier to follow for the unchanged case.\r\n            var isUnchanged = oldComposition === newComposition ||\r\n                    (\r\n                        oldComposition.length === newComposition.length &&\r\n                        oldComposition.every(function (currentValue, index) {\r\n                            return newComposition[index] && currentValue === newComposition[index];\r\n                        })\r\n                    );\r\n            return !isUnchanged;\r\n        };\r\n\r\n        /**\r\n         * Default the plot options model\r\n         *\r\n         * @private\r\n         */\r\n        PlotOptionsController.prototype.defaultConfiguration = function () {\r\n            this.configuration.plot = this.configuration.plot || {};\r\n            this.configuration.plot.xAxis = this.configuration.plot.xAxis || {};\r\n            this.configuration.plot.yAxis = this.configuration.plot.yAxis || {}; // y-axes will be associative array keyed on axis key\r\n            this.configuration.plot.series = this.configuration.plot.series || []; // series will be associative array keyed on sub-object id\r\n            this.$scope.configuration = this.configuration;\r\n        };\r\n\r\n        /**\r\n         * When a child is added to, or removed from a plot, update the\r\n         * plot options model\r\n         * @private\r\n         */\r\n        PlotOptionsController.prototype.updateChildren = function () {\r\n            var self = this;\r\n            this.domainObject.useCapability('composition').then(function (children) {\r\n                self.$scope.children = children;\r\n                self.composition = self.domainObject.getModel().composition;\r\n                children.forEach(function (child, index) {\r\n                    self.configuration.plot.series[index] =\r\n                        self.configuration.plot.series[index] || {'id': child.getId()};\r\n                });\r\n                self.watchSeries();\r\n            });\r\n        };\r\n\r\n        /**\r\n         * On changes to the form, update the configuration on the domain\r\n         * object\r\n         * @private\r\n         */\r\n        PlotOptionsController.prototype.updateConfiguration = function () {\r\n            var self = this;\r\n            this.domainObject.useCapability('mutation', function (model) {\r\n                model.configuration = model.configuration || {};\r\n                model.configuration.plot = self.configuration.plot;\r\n            });\r\n        };\r\n\r\n        return PlotOptionsController;\r\n    }\r\n);\r\n\r\n\n","\ndefine('text!platform/features/plot/res/templates/plot.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"PlotController as plot\"\\r\\n      class=\"abs holder holder-plot\">\\r\\n    <div class=\"gl-plot\"\\r\\n         ng-style=\"{ height: 100 / plot.getSubPlots().length + \\'%\\'}\"\\r\\n         ng-repeat=\"subplot in plot.getSubPlots()\">\\r\\n        <div class=\"gl-plot-legend\">\\r\\n            <!-- ng-class is temporarily hard-coded in next element -->\\r\\n            <span\\r\\n                class=\\'plot-legend-item\\'\\r\\n                ng-repeat=\"telemetryObject in subplot.getTelemetryObjects()\"\\r\\n                ng-class=\"plot.getLegendClass(telemetryObject)\">\\r\\n                <span class=\\'plot-color-swatch\\'\\r\\n                      ng-style=\"{ \\'background-color\\': plot.getColor($index) }\">\\r\\n                </span>\\r\\n                <span class=\\'title-label\\'>{{telemetryObject.getModel().name}}</span>\\r\\n            </span>\\r\\n        </div>\\r\\n        <div class=\"gl-plot-coords\"\\r\\n            ng-if=\"subplot.isHovering() && subplot.getHoverCoordinates()\">\\r\\n            {{subplot.getHoverCoordinates()}}\\r\\n        </div>\\r\\n        <div class=\"gl-plot-axis-area gl-plot-y\">\\r\\n            <div class=\"gl-plot-label gl-plot-y-label\">\\r\\n                {{axes[1].active.name}}\\r\\n            </div>\\r\\n            <div ng-repeat=\"tick in subplot.getRangeTicks()\"\\r\\n                 class=\"gl-plot-tick gl-plot-y-tick-label\"\\r\\n                 ng-style=\"{ bottom: (100 * $index / (subplot.getRangeTicks().length - 1)) + \\'%\\' }\">\\r\\n                {{tick.label | reverse}}\\r\\n            </div>\\r\\n            <div class=\"gl-plot-y-options gl-plot-local-controls\"\\r\\n                 ng-if=\"axes[1].options.length > 1\">\\r\\n                <div class=\\'form-control shell select\\'>\\r\\n                    <select class=\"form-control input shell\"\\r\\n                            ng-model=\"axes[1].active\"\\r\\n                            ng-options=\"option.name for option in axes[1].options\">\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"gl-plot-display-area\"\\r\\n             ng-mouseenter=\"subplot.isHovering(true);\"\\r\\n             ng-mouseleave=\"subplot.isHovering(false)\"\\r\\n             ng-class=\"{ loading: plot.isRequestPending() }\">\\r\\n            <!-- Out-of-bounds data indicators -->\\r\\n            <!-- ng-show is temporarily hard-coded in next element -->\\r\\n            <div ng-show=\"false\" class=\"l-oob-data l-oob-data-up\"></div>\\r\\n            <div ng-show=\"false\" class=\"l-oob-data l-oob-data-dwn\"></div>\\r\\n            <div class=\"gl-plot-hash hash-v\"\\r\\n                 ng-repeat=\"tick in subplot.getDomainTicks()\"\\r\\n                 ng-style=\"{ left: (100 * $index / (subplot.getDomainTicks().length - 1)) + \\'%\\', height: \\'100%\\' }\"\\r\\n                 ng-show=\"$index > 0 && $index < (subplot.getDomainTicks().length - 1)\">\\r\\n            </div>\\r\\n            <div class=\"gl-plot-hash hash-h\"\\r\\n                 ng-repeat=\"tick in subplot.getRangeTicks()\"\\r\\n                 ng-style=\"{ bottom: (100 * $index / (subplot.getRangeTicks().length - 1)) + \\'%\\', width: \\'100%\\' }\"\\r\\n                 ng-show=\"$index > 0 && $index < (subplot.getRangeTicks().length - 1)\">\\r\\n            </div>\\r\\n            <mct-chart draw=\"subplot.getDrawingObject()\"\\r\\n                       ng-if=\"subplot.getTelemetryObjects().length > 0\"\\r\\n                       ng-mousemove=\"subplot.hover($event)\"\\r\\n                       mct-drag=\"subplot.continueDrag($event)\"\\r\\n                       mct-drag-down=\"subplot.startDrag($event)\"\\r\\n                       mct-drag-up=\"subplot.endDrag($event); plot.update()\">\\r\\n            </mct-chart>\\r\\n            <!-- TODO: Move into correct position; make part of group; infer from set of actions -->\\r\\n            <div class=\"l-local-controls gl-plot-local-controls t-plot-display-controls\"\\r\\n                 ng-if=\"$first\">\\r\\n                <a class=\"s-button icon-arrow-left\"\\r\\n                   ng-click=\"plot.stepBackPanZoom()\"\\r\\n                   ng-show=\"plot.isZoomed()\"\\r\\n                   title=\"Restore previous pan/zoom\">\\r\\n                </a>\\r\\n                <a class=\"s-button icon-arrows-out\"\\r\\n                   ng-click=\"plot.unzoom()\"\\r\\n                   ng-show=\"plot.isZoomed()\"\\r\\n                   title=\"Reset pan/zoom\">\\r\\n                </a>\\r\\n                <div class=\"menu-element s-menu-button menus-to-left {{plot.getMode().cssclass}}\"\\r\\n                     ng-if=\"plot.getModeOptions().length > 1\"\\r\\n                     ng-controller=\"ClickAwayController as toggle\">\\r\\n                    <span class=\"l-click-area\" ng-click=\"toggle.toggle()\"></span>\\r\\n                    <span>{{plot.getMode().name}}</span>\\r\\n                    <div class=\"menu\" ng-show=\"toggle.isActive()\">\\r\\n                        <ul>\\r\\n                            <li ng-repeat=\"option in plot.getModeOptions()\"\\r\\n                                ng-click=\"plot.setMode(option); toggle.setState(false)\"\\r\\n                                class=\"{{option.cssclass}}\">\\r\\n                                    {{option.name}}\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div ng-if=\"$last\" class=\"gl-plot-axis-area gl-plot-x\">\\r\\n            <div ng-repeat=\"tick in subplot.getDomainTicks()\"\\r\\n                 class=\"gl-plot-tick gl-plot-x-tick-label\"\\r\\n                 ng-show=\"$index > 0 && $index < (subplot.getDomainTicks().length - 1)\"\\r\\n                 ng-style=\"{ left: (100 * $index / (subplot.getDomainTicks().length - 1)) + \\'%\\' }\">\\r\\n                {{tick.label | reverse}}\\r\\n            </div>\\r\\n            <div class=\"gl-plot-label gl-plot-x-label\">\\r\\n                {{axes[0].active.name}}\\r\\n            </div>\\r\\n            <div class=\"gl-plot-x-options gl-plot-local-controls\"\\r\\n                 ng-if=\"axes[0].options.length > 1\">\\r\\n                <div class=\\'form-control shell select\\'>\\r\\n                    <select class=\"form-control input shell\"\\r\\n                            ng-model=\"axes[0].active\"\\r\\n                            ng-options=\"option.name for option in axes[0].options\">\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/features/plot/res/templates/plot-options-browse.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div ng-controller=\"PlotOptionsController\" class=\"flex-elem grows l-inspector-part\">\\r\\n    <em class=\"t-inspector-part-header\" title=\"Display properties for this object\">Plot Options</em>\\r\\n    <mct-form\\r\\n            ng-model=\"configuration.plot.xAxis\"\\r\\n            structure=\"xAxisForm\"\\r\\n            name=\"xAxisFormState\"\\r\\n            class=\"flex-elem l-flex-row no-margin\">\\r\\n    </mct-form>\\r\\n    <mct-form\\r\\n            ng-model=\"configuration.plot.yAxis\"\\r\\n            structure=\"yAxisForm\"\\r\\n            name=\"yAxisFormState\"\\r\\n            class=\"flex-elem l-flex-row no-margin\">\\r\\n    </mct-form>\\r\\n    <div class=\"form\">\\r\\n        <div class=\"section-header ng-binding ng-scope\">\\r\\n            Plot Series\\r\\n        </div>\\r\\n        <ul class=\"first flex-elem grows vscroll\">\\r\\n            <ul class=\"tree\">\\r\\n                <li ng-repeat=\"child in children\">\\r\\n                    <span ng-controller=\"ToggleController as toggle\">\\r\\n                        <span ng-controller=\"TreeNodeController as treeNode\">\\r\\n                            <span class=\"tree-item menus-to-left\">\\r\\n                                <span\\r\\n                                    class=\\'ui-symbol view-control flex-elem has-children\\'\\r\\n                                    ng-class=\"{ expanded: toggle.isActive() }\"\\r\\n                                    ng-click=\"toggle.toggle(); treeNode.trackExpansion()\">\\r\\n                                </span>\\r\\n                                <mct-representation\\r\\n                                    class=\"rep-object-label\"\\r\\n                                    key=\"\\'label\\'\"\\r\\n                                    mct-object=\"child\">\\r\\n                                </mct-representation>\\r\\n                            </span>\\r\\n                        </span>\\r\\n                        <mct-form\\r\\n                            ng-class=\"{hidden: !toggle.isActive()}\"\\r\\n                            ng-model=\"configuration.plot.series[$index]\"\\r\\n                            structure=\"plotSeriesForm\"\\r\\n                            name=\"plotOptionsState\"\\r\\n                            class=\"flex-elem l-flex-row\">\\r\\n                        </mct-form>\\r\\n                    </span>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/plot/bundle',[\r\n    \"./src/MCTChart\",\r\n    \"./src/PlotController\",\r\n    \"./src/policies/PlotViewPolicy\",\r\n    \"./src/PlotOptionsController\",\r\n    \"text!./res/templates/plot.html\",\r\n    \"text!./res/templates/plot-options-browse.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    MCTChart,\r\n    PlotController,\r\n    PlotViewPolicy,\r\n    PlotOptionsController,\r\n    plotTemplate,\r\n    plotOptionsBrowseTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/plot\", {\r\n        \"name\": \"Plot view for telemetry\",\r\n        \"extensions\": {\r\n            \"views\": [\r\n                {\r\n                    \"name\": \"Plot\",\r\n                    \"key\": \"plot\",\r\n                    \"cssclass\": \"icon-sine\",\r\n                    \"template\": plotTemplate,\r\n                    \"needs\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"priority\": \"preferred\",\r\n                    \"delegation\": true\r\n                }\r\n            ],\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctChart\",\r\n                    \"implementation\": MCTChart,\r\n                    \"depends\": [\r\n                        \"$interval\",\r\n                        \"$log\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"PlotController\",\r\n                    \"implementation\": PlotController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"telemetryFormatter\",\r\n                        \"telemetryHandler\",\r\n                        \"throttle\",\r\n                        \"PLOT_FIXED_DURATION\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"PlotOptionsController\",\r\n                    \"implementation\": PlotOptionsController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"PLOT_FIXED_DURATION\",\r\n                    \"value\": 900000,\r\n                    \"priority\": \"fallback\",\r\n                    \"comment\": \"Fifteen minutes.\"\r\n                }\r\n            ],\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"view\",\r\n                    \"implementation\": PlotViewPolicy\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"plot-options-browse\",\r\n                    \"template\": plotOptionsBrowseTemplate\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/TimelineTraverser',[], function () {\r\n\r\n    /**\r\n     * Builds a list of domain objects which should be included\r\n     * in the CSV export of a given timeline.\r\n     * @param {DomainObject} domainObject the object being exported\r\n     * @constructor\r\n     */\r\n    function TimelineTraverser(domainObject) {\r\n        this.domainObject = domainObject;\r\n    }\r\n\r\n    /**\r\n     * Get a list of domain objects for CSV export.\r\n     * @returns {Promise.<DomainObject[]>} a list of domain objects\r\n     */\r\n    TimelineTraverser.prototype.buildObjectList = function () {\r\n        var idSet = {},\r\n            objects = [];\r\n\r\n        function addObject(domainObject) {\r\n            var id = domainObject.getId(),\r\n                subtasks = [];\r\n\r\n            function addCompositionObjects() {\r\n                return domainObject.useCapability('composition')\r\n                    .then(function (childObjects) {\r\n                        return Promise.all(childObjects.map(addObject));\r\n                    });\r\n            }\r\n\r\n            function addRelationships() {\r\n                var relationship = domainObject.getCapability('relationship');\r\n                relationship.getRelatedObjects('modes')\r\n                    .then(function (modeObjects) {\r\n                        return Promise.all(modeObjects.map(addObject));\r\n                    });\r\n            }\r\n\r\n            if (!idSet[id]) {\r\n                idSet[id] = true;\r\n                objects.push(domainObject);\r\n                if (domainObject.hasCapability('composition')) {\r\n                    subtasks.push(addCompositionObjects());\r\n                }\r\n                if (domainObject.hasCapability('relationship')) {\r\n                    subtasks.push(addRelationships());\r\n                }\r\n            }\r\n\r\n            return Promise.all(subtasks);\r\n        }\r\n\r\n        return addObject(this.domainObject).then(function () {\r\n            return objects;\r\n        });\r\n    };\r\n\r\n    return TimelineTraverser;\r\n\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/IdColumn',[], function () {\r\n\r\n    /**\r\n     * A column showing identifying domain objects.\r\n     * @constructor\r\n     * @param idMap an object containing key value pairs, where keys\r\n     *        are domain object identifiers and values are whatever\r\n     *        should appear in CSV output in their place\r\n     * @implements {platform/features/timeline.TimelineCSVColumn}\r\n     */\r\n    function IdColumn(idMap) {\r\n        this.idMap = idMap;\r\n    }\r\n\r\n    IdColumn.prototype.name = function () {\r\n        return \"Index\";\r\n    };\r\n\r\n    IdColumn.prototype.value = function (domainObject) {\r\n        return this.idMap[domainObject.getId()];\r\n    };\r\n\r\n    return IdColumn;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/ModeColumn',[], function () {\r\n\r\n    /**\r\n     * A column showing relationships to activity modes.\r\n     * @constructor\r\n     * @param {number} index the zero-based index of the composition\r\n     *        element associated with this column\r\n     * @param idMap an object containing key value pairs, where keys\r\n     *        are domain object identifiers and values are whatever\r\n     *        should appear in CSV output in their place\r\n     * @implements {platform/features/timeline.TimelineCSVColumn}\r\n     */\r\n    function ModeColumn(index, idMap) {\r\n        this.index = index;\r\n        this.idMap = idMap;\r\n    }\r\n\r\n    ModeColumn.prototype.name = function () {\r\n        return \"Activity Mode \" + (this.index + 1);\r\n    };\r\n\r\n    ModeColumn.prototype.value = function (domainObject) {\r\n        var model = domainObject.getModel(),\r\n            modes = (model.relationships || {}).modes || [];\r\n        return modes.length > this.index ?\r\n            this.idMap[modes[this.index]] : \"\";\r\n    };\r\n\r\n    return ModeColumn;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/CompositionColumn',[], function () {\r\n\r\n    /**\r\n     * A column containing references to other objects contained\r\n     * in a domain object's composition.\r\n     * @param {number} index the zero-based index of the composition\r\n     *        element associated with this column\r\n     * @param idMap an object containing key value pairs, where keys\r\n     *        are domain object identifiers and values are whatever\r\n     *        should appear in CSV output in their place\r\n     * @constructor\r\n     * @implements {platform/features/timeline.TimelineCSVColumn}\r\n     */\r\n    function CompositionColumn(index, idMap) {\r\n        this.index = index;\r\n        this.idMap = idMap;\r\n    }\r\n\r\n    CompositionColumn.prototype.name = function () {\r\n        return \"Child \" + (this.index + 1);\r\n    };\r\n\r\n    CompositionColumn.prototype.value = function (domainObject) {\r\n        var model = domainObject.getModel(),\r\n            composition = model.composition || [];\r\n\r\n        return composition.length > this.index ?\r\n            this.idMap[composition[this.index]] : \"\";\r\n    };\r\n\r\n    return CompositionColumn;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/MetadataColumn',[], function () {\r\n\r\n    /**\r\n     * A column reflecting properties from domain object metadata.\r\n     * @constructor\r\n     * @implements {platform/features/timeline.TimelineCSVColumn}\r\n     */\r\n    function MetadataColumn(propertyName) {\r\n        this.propertyName = propertyName;\r\n    }\r\n\r\n    MetadataColumn.prototype.name = function () {\r\n        return this.propertyName;\r\n    };\r\n\r\n    MetadataColumn.prototype.value = function (domainObject) {\r\n        var properties = domainObject.useCapability('metadata'),\r\n            name = this.propertyName;\r\n        return properties.reduce(function (value, property) {\r\n            return property.name === name ?\r\n                property.value : value;\r\n        }, \"\");\r\n    };\r\n\r\n    return MetadataColumn;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/TimelineFormatter',[],\r\n    function () {\r\n\r\n        // Conversion factors from time units to milliseconds\r\n        var SECONDS = 1000,\r\n            MINUTES = SECONDS * 60,\r\n            HOURS = MINUTES * 60,\r\n            DAYS = HOURS * 24;\r\n\r\n        /**\r\n         * Formatters for durations shown in a timeline view.\r\n         * @constructor\r\n         */\r\n        function TimelineFormatter() {\r\n\r\n            // Format a numeric value to a string with some number of digits\r\n            function formatValue(value, digits) {\r\n                var v = value.toString(10);\r\n                // Pad with zeroes\r\n                while (v.length < digits) {\r\n                    v = \"0\" + v;\r\n                }\r\n                return v;\r\n            }\r\n\r\n            // Format duration to string\r\n            function formatDuration(duration) {\r\n                var days = Math.floor(duration / DAYS),\r\n                    hours = Math.floor(duration / HOURS) % 24,\r\n                    minutes = Math.floor(duration / MINUTES) % 60,\r\n                    seconds = Math.floor(duration / SECONDS) % 60,\r\n                    millis = Math.floor(duration) % 1000;\r\n\r\n                return formatValue(days, 3) + \" \" +\r\n                    formatValue(hours, 2) + \":\" +\r\n                    formatValue(minutes, 2) + \":\" +\r\n                    formatValue(seconds, 2) + \".\" +\r\n                    formatValue(millis, 3);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Format the provided duration.\r\n                 * @param {number} duration duration, in milliseconds\r\n                 * @returns {string} displayable representation of duration\r\n                 */\r\n                format: formatDuration\r\n            };\r\n        }\r\n\r\n        return TimelineFormatter;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/TimespanColumn',['../TimelineFormatter'], function (TimelineFormatter) {\r\n\r\n    var FORMATTER = new TimelineFormatter();\r\n\r\n    /**\r\n     * A column showing start or end times associated with a domain object.\r\n     * @constructor\r\n     * @param {boolean} isStart true if this column refers to the object's\r\n     *        start time; false if it refers to the object's end time\r\n     * @implements {platform/features/timeline.TimelineCSVColumn}\r\n     */\r\n    function TimespanColumn(isStart) {\r\n        this.isStart = isStart;\r\n    }\r\n\r\n    TimespanColumn.prototype.name = function () {\r\n        return this.isStart ? \"Start\" : \"End\";\r\n    };\r\n\r\n    TimespanColumn.prototype.value = function (domainObject) {\r\n        var isStart = this.isStart;\r\n        return domainObject.hasCapability('timespan') ?\r\n            domainObject.useCapability('timespan').then(function (timespan) {\r\n                return FORMATTER.format(\r\n                    isStart ? timespan.getStart() : timespan.getEnd()\r\n                );\r\n            }) : \"\";\r\n    };\r\n\r\n    return TimespanColumn;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/UtilizationColumn',[], function () {\r\n    /**\r\n     * A column showing utilization costs associated with activities.\r\n     * @constructor\r\n     * @param {string} key the key for the particular cost\r\n     * @implements {platform/features/timeline.TimelineCSVColumn}\r\n     */\r\n    function UtilizationColumn(resource) {\r\n        this.resource = resource;\r\n    }\r\n\r\n    UtilizationColumn.prototype.name = function () {\r\n        var units = {\r\n            \"Kbps\": \"Kb\",\r\n            \"watts\": \"watt-seconds\"\r\n        }[this.resource.units] || \"unknown units\";\r\n\r\n        return this.resource.name + \" (\" + units + \")\";\r\n    };\r\n\r\n    UtilizationColumn.prototype.value = function (domainObject) {\r\n        var resource = this.resource;\r\n\r\n        function getCost(utilization) {\r\n            var seconds = (utilization.end - utilization.start) / 1000;\r\n            return seconds * utilization.value;\r\n        }\r\n\r\n        function getUtilizationValue(utilizations) {\r\n            utilizations = utilizations.filter(function (utilization) {\r\n                return utilization.key === resource.key;\r\n            });\r\n\r\n            if (utilizations.length === 0) {\r\n                return \"\";\r\n            }\r\n\r\n            return utilizations.map(getCost).reduce(function (a, b) {\r\n                return a + b;\r\n            }, 0);\r\n        }\r\n\r\n        return domainObject.hasCapability('utilization') ?\r\n            domainObject.getCapability('utilization').internal()\r\n                .then(getUtilizationValue) :\r\n            \"\";\r\n    };\r\n\r\n    return UtilizationColumn;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/TimelineColumnizer',[\r\n    \"./IdColumn\",\r\n    \"./ModeColumn\",\r\n    \"./CompositionColumn\",\r\n    \"./MetadataColumn\",\r\n    \"./TimespanColumn\",\r\n    \"./UtilizationColumn\"\r\n], function (\r\n    IdColumn,\r\n    ModeColumn,\r\n    CompositionColumn,\r\n    MetadataColumn,\r\n    TimespanColumn,\r\n    UtilizationColumn\r\n) {\r\n\r\n    /**\r\n     * A description of how to populate a given column within a\r\n     * prepared table of domain object data, for CSV export.\r\n     * @interface platform/features/timeline.TimelineCSVColumn\r\n     */\r\n\r\n    /**\r\n     * Get the value that belongs in this column for a given\r\n     * domain object.\r\n     * @memberof {platform/features/timeline.TimelineCSVColumn#}\r\n     * @method value\r\n     * @param {DomainObject} domainObject the domain object\r\n     *        represented by this row\r\n     * @returns {string|Promise<string>} the value for this cell\r\n     */\r\n\r\n    /**\r\n     * Get the name of this column, as belongs in a header.\r\n     * @memberof {platform/features/timeline.TimelineCSVColumn#}\r\n     * @method name\r\n     * @returns {string} the name of this column\r\n     */\r\n\r\n    /**\r\n     * Handles conversion of a list of domain objects to a table\r\n     * representation appropriate for CSV export.\r\n     *\r\n     * @param {DomainObject[]} domainObjects the objects to include\r\n     *        in the exported data\r\n     * @param {Array} resources an array of `resources` extensions\r\n     * @constructor\r\n     * @memberof {platform/features/timeline}\r\n     */\r\n    function TimelineColumnizer(domainObjects, resources) {\r\n        var maxComposition = 0,\r\n            maxRelationships = 0,\r\n            columnNames = {},\r\n            columns = [],\r\n            foundTimespan = false,\r\n            idMap,\r\n            i;\r\n\r\n        function addMetadataProperty(property) {\r\n            var name = property.name;\r\n            if (!columnNames[name]) {\r\n                columnNames[name] = true;\r\n                columns.push(new MetadataColumn(name));\r\n            }\r\n        }\r\n\r\n        idMap = domainObjects.reduce(function (map, domainObject, index) {\r\n            map[domainObject.getId()] = index + 1;\r\n            return map;\r\n        }, {});\r\n\r\n        columns.push(new IdColumn(idMap));\r\n\r\n        domainObjects.forEach(function (domainObject) {\r\n            var model = domainObject.getModel(),\r\n                composition = model.composition,\r\n                relationships = model.relationships,\r\n                modes = relationships && relationships.modes,\r\n                metadataProperties = domainObject.useCapability('metadata');\r\n\r\n            if (composition) {\r\n                maxComposition = Math.max(maxComposition, composition.length);\r\n            }\r\n\r\n            if (modes) {\r\n                maxRelationships = Math.max(maxRelationships, modes.length);\r\n            }\r\n\r\n            if (domainObject.hasCapability('timespan')) {\r\n                foundTimespan = true;\r\n            }\r\n\r\n            if (metadataProperties) {\r\n                metadataProperties.forEach(addMetadataProperty);\r\n            }\r\n        });\r\n\r\n        if (foundTimespan) {\r\n            columns.push(new TimespanColumn(true));\r\n            columns.push(new TimespanColumn(false));\r\n        }\r\n\r\n        resources.forEach(function (resource) {\r\n            columns.push(new UtilizationColumn(resource));\r\n        });\r\n\r\n        for (i = 0; i < maxComposition; i += 1) {\r\n            columns.push(new CompositionColumn(i, idMap));\r\n        }\r\n\r\n        for (i = 0; i < maxRelationships; i += 1) {\r\n            columns.push(new ModeColumn(i, idMap));\r\n        }\r\n\r\n        this.domainObjects = domainObjects;\r\n        this.columns = columns;\r\n    }\r\n\r\n    /**\r\n     * Get a tabular representation of domain object data.\r\n     * Each row corresponds to a single object; each element\r\n     * in each row corresponds to a property designated by\r\n     * the `headers`, correlated by index.\r\n     * @returns {Promise.<string[][]>} domain object data\r\n     */\r\n    TimelineColumnizer.prototype.rows = function () {\r\n        var columns = this.columns;\r\n\r\n        function toRow(domainObject) {\r\n            return Promise.all(columns.map(function (column) {\r\n                return column.value(domainObject);\r\n            }));\r\n        }\r\n\r\n        return Promise.all(this.domainObjects.map(toRow));\r\n    };\r\n\r\n    /**\r\n     * Get the column headers associated with this tabular\r\n     * representation of objects.\r\n     * @returns {string[]} column headers\r\n     */\r\n    TimelineColumnizer.prototype.headers = function () {\r\n        return this.columns.map(function (column) {\r\n            return column.name();\r\n        });\r\n    };\r\n\r\n    return TimelineColumnizer;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining ExportTimelineAsCSVTask. Created by vwoeltje on 2/8/16.\r\n */\r\ndefine('platform/features/timeline/src/actions/ExportTimelineAsCSVTask',[\r\n    \"./TimelineTraverser\",\r\n    \"./TimelineColumnizer\"\r\n], function (TimelineTraverser, TimelineColumnizer) {\r\n\r\n    /**\r\n     * Runs (and coordinates) the preparation and export of CSV data\r\n     * for the \"Export Timeline as CSV\" action.\r\n     *\r\n     * @constructor\r\n     * @memberof {platform/features/timeline}\r\n     * @param exportService the service used to export as CSV\r\n     * @param resources the `resources` extension category\r\n     * @param {DomainObject} domainObject the timeline being exported\r\n     */\r\n    function ExportTimelineAsCSVTask(exportService, resources, domainObject) {\r\n        this.domainObject = domainObject;\r\n        this.exportService = exportService;\r\n        this.resources = resources;\r\n    }\r\n\r\n    /**\r\n     * Run this CSV export task.\r\n     *\r\n     * @returns {Promise} a promise that will be resolved when the\r\n     *          export has finished (or rejected if there are problems.)\r\n     */\r\n    ExportTimelineAsCSVTask.prototype.run = function () {\r\n        var exportService = this.exportService;\r\n        var resources = this.resources;\r\n\r\n        function doExport(objects) {\r\n            var exporter = new TimelineColumnizer(objects, resources),\r\n                options = { headers: exporter.headers() };\r\n            return exporter.rows().then(function (rows) {\r\n                return exportService.exportCSV(rows, options);\r\n            });\r\n        }\r\n\r\n        return new TimelineTraverser(this.domainObject)\r\n            .buildObjectList()\r\n            .then(doExport);\r\n    };\r\n\r\n    return ExportTimelineAsCSVTask;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/actions/ExportTimelineAsCSVAction',[\"./ExportTimelineAsCSVTask\"], function (ExportTimelineAsCSVTask) {\r\n\r\n    /**\r\n     * Implements the \"Export Timeline as CSV\" action.\r\n     *\r\n     * @param exportService the service used to perform the CSV export\r\n     * @param notificationService the service used to show notifications\r\n     * @param {Array} resources an array of `resources` extensions\r\n     * @param context the Action's context\r\n     * @implements {Action}\r\n     * @constructor\r\n     * @memberof {platform/features/timeline}\r\n     */\r\n    function ExportTimelineAsCSVAction(\r\n        $log,\r\n        exportService,\r\n        notificationService,\r\n        resources,\r\n        context\r\n    ) {\r\n        this.$log = $log;\r\n        this.task = new ExportTimelineAsCSVTask(\r\n            exportService,\r\n            resources,\r\n            context.domainObject\r\n        );\r\n        this.notificationService = notificationService;\r\n    }\r\n\r\n    ExportTimelineAsCSVAction.prototype.perform = function () {\r\n        var notificationService = this.notificationService,\r\n            notification = notificationService.notify({\r\n                title: \"Exporting CSV\",\r\n                unknownProgress: true\r\n            }),\r\n            $log = this.$log;\r\n\r\n        return this.task.run()\r\n            .then(function () {\r\n                notification.dismiss();\r\n            })\r\n            .catch(function (err) {\r\n                $log.warn(err);\r\n                notification.dismiss();\r\n                notificationService.error(\"Error exporting CSV\");\r\n            });\r\n    };\r\n\r\n    ExportTimelineAsCSVAction.appliesTo = function (context) {\r\n        return context.domainObject &&\r\n            context.domainObject.hasCapability('type') &&\r\n                context.domainObject.getCapability('type')\r\n                    .instanceOf('timeline');\r\n    };\r\n\r\n    return ExportTimelineAsCSVAction;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/swimlane/TimelineSwimlane',[],\r\n    function () {\r\n\r\n        /**\r\n         * Describes a swimlane in a timeline view. This will be\r\n         * used directly from timeline view.\r\n         *\r\n         * Only general properties of swimlanes are included here.\r\n         * Since swimlanes are also directly selected and exposed to the\r\n         * toolbar, the TimelineSwimlaneDecorator should also be used\r\n         * to add additional properties to specific swimlanes.\r\n         *\r\n         * @constructor\r\n         * @param {DomainObject} domainObject the represented object\r\n         * @param {TimelineColorAssigner} assigner color assignment handler\r\n         * @param configuration the view's configuration object\r\n         * @param {TimelineSwimlane} parent the parent swim lane (if any)\r\n         */\r\n        function TimelineSwimlane(domainObject, assigner, configuration, parent, index) {\r\n            var id = domainObject.getId(),\r\n                highlight = false, // Drop highlight (middle)\r\n                highlightBottom = false, // Drop highlight (lower)\r\n                idPath = (parent ? parent.idPath : []).concat([domainObject.getId()]),\r\n                depth = parent ? (parent.depth + 1) : 0,\r\n                timespan,\r\n                path = (!parent || !parent.parent) ? \"\" : parent.path +\r\n                        parent.domainObject.getModel().name + \" > \";\r\n\r\n            // Look up timespan for this object\r\n            domainObject.useCapability('timespan').then(function (t) {\r\n                timespan = t;\r\n            });\r\n\r\n            return {\r\n                /**\r\n                 * Check if this swimlane is currently visible. (That is,\r\n                 * check to see if its parents are expanded.)\r\n                 * @returns {boolean} true if it is visible\r\n                 */\r\n                visible: function () {\r\n                    return !parent || (parent.expanded && parent.visible());\r\n                },\r\n                /**\r\n                 * Show the Edit Properties dialog.\r\n                 */\r\n                properties: function () {\r\n                    return domainObject.getCapability(\"action\").perform(\"properties\");\r\n                },\r\n                /**\r\n                 * Toggle inclusion of this swimlane's represented object in\r\n                 * the resource graph area.\r\n                 */\r\n                toggleGraph: function () {\r\n                    configuration.graph = configuration.graph || {};\r\n                    configuration.graph[id] = !configuration.graph[id];\r\n                    // Assign or release legend color\r\n                    assigner[configuration.graph[id] ? 'assign' : 'release'](id);\r\n                },\r\n                /**\r\n                 * Get (or set, if an argument is provided) the flag which\r\n                 * determines if the object in this swimlane is included in\r\n                 * the set of active resource graphs.\r\n                 * @param {boolean} [value] the state to set (if setting)\r\n                 * @returns {boolean} true if included; otherwise false\r\n                 */\r\n                graph: function (value) {\r\n                    // Set if an argument was provided\r\n                    if (arguments.length > 0) {\r\n                        configuration.graph = configuration.graph || {};\r\n                        configuration.graph[id] = !!value;\r\n                        // Assign or release the legend color\r\n                        assigner[value ? 'assign' : 'release'](id);\r\n                    }\r\n                    // Provide the current state\r\n                    return (configuration.graph || {})[id];\r\n                },\r\n                /**\r\n                 * Get (or set, if an argument is provided) the color\r\n                 * associated with this swimlane when its contents are\r\n                 * included in the set of active resource graphs.\r\n                 * @param {string} [value] the color to set (if setting)\r\n                 * @returns {string} the color for resource graphing\r\n                 */\r\n                color: function (value) {\r\n                    // Set if an argument was provided\r\n                    if (arguments.length > 0) {\r\n                        // Defer to the color assigner\r\n                        assigner.assign(id, value);\r\n                    }\r\n                    // Provide the current value\r\n                    return assigner.get(id);\r\n                },\r\n                /**\r\n                 * Get (or set, if an argument is provided) the drag\r\n                 * highlight state for this swimlane. True means the body\r\n                 * of the swimlane should be highlighted for drop into.\r\n                 */\r\n                highlight: function (value) {\r\n                    // Set if an argument was provided\r\n                    if (arguments.length > 0) {\r\n                        highlight = value;\r\n                    }\r\n                    // Provide current value\r\n                    return highlight;\r\n                },\r\n                /**\r\n                 * Get (or set, if an argument is provided) the drag\r\n                 * highlight state for this swimlane. True means the body\r\n                 * of the swimlane should be highlighted for drop after.\r\n                 */\r\n                highlightBottom: function (value) {\r\n                    // Set if an argument was provided\r\n                    if (arguments.length > 0) {\r\n                        highlightBottom = value;\r\n                    }\r\n                    // Provide current value\r\n                    return highlightBottom;\r\n                },\r\n                /**\r\n                 * Check if a swimlane exceeds the bounds of its parent.\r\n                 * @returns {boolean} true if there is a bounds violation\r\n                 */\r\n                exceeded: function () {\r\n                    var parentTimespan = parent && parent.timespan();\r\n                    return timespan && parentTimespan &&\r\n                            (timespan.getStart() < parentTimespan.getStart() ||\r\n                                timespan.getEnd() > parentTimespan.getEnd());\r\n                },\r\n                /**\r\n                 * Get the timespan associated with this swimlane\r\n                 */\r\n                timespan: function () {\r\n                    return timespan;\r\n                },\r\n                // Expose domain object, expansion state, indentation depth\r\n                domainObject: domainObject,\r\n                expanded: true,\r\n                depth: depth,\r\n                path: path,\r\n                id: id,\r\n                idPath: idPath,\r\n                parent: parent,\r\n                index: index,\r\n                children: [] // Populated by populator\r\n            };\r\n        }\r\n\r\n        return TimelineSwimlane;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/swimlane/TimelineSwimlaneDropHandler',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles drop (from drag-and-drop) initiated changes to a swimlane.\r\n         * @constructor\r\n         */\r\n        function TimelineSwimlaneDropHandler(swimlane) {\r\n            // Utility function; like $q.when, but synchronous (to reduce\r\n            // performance impact when wrapping synchronous values)\r\n            function asPromise(value) {\r\n                return (value && value.then) ? value : {\r\n                    then: function (callback) {\r\n                        return asPromise(callback(value));\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Check if we are in edit mode (also check parents)\r\n            function inEditMode() {\r\n                return swimlane.domainObject.hasCapability('editor') &&\r\n                    swimlane.domainObject.getCapability('editor').inEditContext();\r\n            }\r\n\r\n            // Boolean and (for reduce below)\r\n            function or(a, b) {\r\n                return a || b;\r\n            }\r\n\r\n            // Check if pathA entirely contains pathB\r\n            function pathContains(swimlaneToCheck, id) {\r\n                // Check if id at a specific index matches (for map below)\r\n                function matches(pathId) {\r\n                    return pathId === id;\r\n                }\r\n\r\n                // Path A contains Path B if it is longer, and all of\r\n                // B's ids match the ids in A.\r\n                return swimlaneToCheck.idPath.map(matches).reduce(or, false);\r\n            }\r\n\r\n            // Check if a swimlane contains a child with the specified id\r\n            function contains(swimlaneToCheck, id) {\r\n                // Check if a child swimlane has a matching domain object id\r\n                function matches(child) {\r\n                    return child.domainObject.getId() === id;\r\n                }\r\n\r\n                // Find any one child id that matches this id\r\n                return swimlaneToCheck.children.map(matches).reduce(or, false);\r\n            }\r\n\r\n            // Initiate mutation of a domain object\r\n            function doMutate(domainObject, mutator) {\r\n                return asPromise(\r\n                    domainObject.useCapability(\"mutation\", mutator)\r\n                ).then(function () {\r\n                    // Persist the results of mutation\r\n                    var persistence = domainObject.getCapability(\"persistence\");\r\n                    if (persistence) {\r\n                        // Persist the changes\r\n                        persistence.persist();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Check if this swimlane is in a state where a drop-after will\r\n            // act as a drop-into-at-first position (expanded and non-empty)\r\n            function expandedForDropInto() {\r\n                return swimlane.expanded && swimlane.children.length > 0;\r\n            }\r\n\r\n            // Check if the swimlane is ready to accept a drop-into\r\n            // (instead of drop-after)\r\n            function isDropInto() {\r\n                return swimlane.highlight() || expandedForDropInto();\r\n            }\r\n\r\n            function isReorder(targetObject, droppedObject) {\r\n                var droppedContext = droppedObject.getCapability('context'),\r\n                    droppedParent =\r\n                        droppedContext && droppedContext.getParent(),\r\n                    droppedParentId = droppedParent && droppedParent.getId();\r\n                return targetObject.getId() === droppedParentId;\r\n            }\r\n\r\n            // Choose an appropriate composition action for the drag-and-drop\r\n            function chooseAction(targetObject, droppedObject) {\r\n                var actionCapability =\r\n                        targetObject.getCapability('action'),\r\n                    actionKey = droppedObject.hasCapability('editor') ?\r\n                        'move' : 'link';\r\n\r\n                return actionCapability && actionCapability.getActions({\r\n                    key: actionKey,\r\n                    selectedObject: droppedObject\r\n                })[0];\r\n            }\r\n\r\n            // Choose an index for insertion in a domain object's composition\r\n            function chooseTargetIndex(id, offset, composition) {\r\n                return Math.max(\r\n                    Math.min(\r\n                        (composition || []).indexOf(id) + offset,\r\n                        (composition || []).length\r\n                    ),\r\n                    0\r\n                );\r\n            }\r\n\r\n            // Insert an id into target's composition\r\n            function insert(id, target, indexOffset) {\r\n                var myId = swimlane.domainObject.getId();\r\n                return doMutate(target, function (model) {\r\n                    model.composition =\r\n                        model.composition.filter(function (compId) {\r\n                            return compId !== id;\r\n                        });\r\n                    model.composition.splice(\r\n                        chooseTargetIndex(myId, indexOffset, model.composition),\r\n                        0,\r\n                        id\r\n                    );\r\n                });\r\n            }\r\n\r\n            function canDrop(targetObject, droppedObject) {\r\n\r\n                return isReorder(targetObject, droppedObject) ||\r\n                        !!chooseAction(targetObject, droppedObject);\r\n            }\r\n\r\n            function drop(domainObject, targetObject, indexOffset) {\r\n                function changeIndex() {\r\n                    var id = domainObject.getId();\r\n                    return insert(id, targetObject, indexOffset);\r\n                }\r\n\r\n                return isReorder(targetObject, domainObject) ?\r\n                    changeIndex() :\r\n                    chooseAction(targetObject, domainObject)\r\n                        .perform().then(changeIndex);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Check if a drop-into should be allowed for this swimlane,\r\n                 * for the provided domain object identifier.\r\n                 * @param {string} id identifier for the domain object to be\r\n                 *        dropped\r\n                 * @returns {boolean} true if this should be allowed\r\n                 */\r\n                allowDropIn: function (id, domainObject) {\r\n                    return inEditMode() &&\r\n                        !pathContains(swimlane, id) &&\r\n                        !contains(swimlane, id) &&\r\n                        canDrop(swimlane.domainObject, domainObject);\r\n                },\r\n                /**\r\n                 * Check if a drop-after should be allowed for this swimlane,\r\n                 * for the provided domain object identifier.\r\n                 * @param {string} id identifier for the domain object to be\r\n                 *        dropped\r\n                 * @returns {boolean} true if this should be allowed\r\n                 */\r\n                allowDropAfter: function (id, domainObject) {\r\n                    var target = expandedForDropInto() ?\r\n                            swimlane : swimlane.parent;\r\n                    return inEditMode() &&\r\n                        target &&\r\n                        !pathContains(target, id) &&\r\n                        canDrop(target.domainObject, domainObject);\r\n                },\r\n                /**\r\n                 * Drop the provided domain object into a timeline. This is\r\n                 * provided as a mandatory id, and an optional domain object\r\n                 * instance; if the latter is provided, it will be removed\r\n                 * from its parent before being added. (This is specifically\r\n                 * to support moving Activity objects around within a Timeline.)\r\n                 * @param {string} id the identifier for the domain object\r\n                 * @param {DomainObject} [domainObject] the object itself\r\n                 */\r\n                drop: function (id, domainObject) {\r\n                    // Get the desired drop object, and destination index\r\n                    var dropInto = isDropInto(),\r\n                        dropTarget = dropInto ?\r\n                                swimlane.domainObject :\r\n                                swimlane.parent.domainObject,\r\n                        dropIndexOffset = (!dropInto) ? 1 :\r\n                                (swimlane.expanded && swimlane.highlightBottom()) ?\r\n                                        Number.NEGATIVE_INFINITY :\r\n                                        Number.POSITIVE_INFINITY;\r\n\r\n                    if (swimlane.highlight() || swimlane.highlightBottom()) {\r\n                        return drop(domainObject, dropTarget, dropIndexOffset);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineSwimlaneDropHandler;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/swimlane/TimelineSwimlaneDecorator',['./TimelineSwimlaneDropHandler'],\r\n    function (TimelineSwimlaneDropHandler) {\r\n\r\n        var ACTIVITY_RELATIONSHIP = \"modes\";\r\n\r\n        /**\r\n         * Adds optional methods to TimelineSwimlanes, in order\r\n         * to conditionally make available options in the toolbar.\r\n         * @constructor\r\n         */\r\n        function TimelineSwimlaneDecorator(swimlane, selection) {\r\n            var domainObject = swimlane && swimlane.domainObject,\r\n                model = (domainObject && domainObject.getModel()) || {},\r\n                mutator = domainObject && domainObject.getCapability('mutation'),\r\n                persister = domainObject && domainObject.getCapability('persistence'),\r\n                type = domainObject && domainObject.getCapability('type'),\r\n                dropHandler = new TimelineSwimlaneDropHandler(swimlane);\r\n\r\n            // Activity Modes dialog\r\n            function modes(value) {\r\n                // Can be used as a setter...\r\n                if (arguments.length > 0 && Array.isArray(value)) {\r\n                    if ((model.relationships || {})[ACTIVITY_RELATIONSHIP] !== value) {\r\n                        // Update the relationships\r\n                        mutator.mutate(function (m) {\r\n                            m.relationships = m.relationships || {};\r\n                            m.relationships[ACTIVITY_RELATIONSHIP] = value;\r\n                        }).then(persister.persist);\r\n                    }\r\n                }\r\n                // ...otherwise, use as a getter\r\n                return (model.relationships || {})[ACTIVITY_RELATIONSHIP] || [];\r\n            }\r\n\r\n            // Activity Link dialog\r\n            function link(value) {\r\n                // Can be used as a setter...\r\n                if (arguments.length > 0 && (typeof value === 'string') &&\r\n                        value !== model.link) {\r\n                    // Update the link\r\n                    mutator.mutate(function (m) {\r\n                        m.link = value;\r\n                    }).then(persister.persist);\r\n                }\r\n                return model.link;\r\n            }\r\n\r\n            // Fire the Remove action\r\n            function remove() {\r\n                return domainObject.getCapability(\"action\").perform(\"remove\");\r\n            }\r\n\r\n            // Select the current swimlane\r\n            function select() {\r\n                selection.select(swimlane);\r\n            }\r\n\r\n            // Check if the swimlane is selected\r\n            function selected() {\r\n                return selection.get() === swimlane;\r\n            }\r\n\r\n            // Activities should have the Activity Modes and Activity Link dialog\r\n            if (type && type.instanceOf(\"activity\") && mutator && persister) {\r\n                swimlane.modes = modes;\r\n                swimlane.link = link;\r\n            }\r\n\r\n            // Everything but the top-level object should have Remove\r\n            if (swimlane.parent) {\r\n                swimlane.remove = remove;\r\n            }\r\n\r\n            // We're in edit mode, if a selection is available\r\n            if (selection) {\r\n                // Add shorthands to select, and check for selection\r\n                swimlane.select = select;\r\n                swimlane.selected = selected;\r\n            }\r\n\r\n            // Expose drop handlers (which needed a reference to the swimlane)\r\n            swimlane.allowDropIn = dropHandler.allowDropIn;\r\n            swimlane.allowDropAfter = dropHandler.allowDropAfter;\r\n            swimlane.drop = dropHandler.drop;\r\n\r\n            return swimlane;\r\n        }\r\n\r\n        return TimelineSwimlaneDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/timeline/src/controllers/swimlane/TimelineColorAssigner',[],\r\n    function () {\r\n\r\n        var COLOR_OPTIONS = [\r\n                \"#20b2aa\",\r\n                \"#9acd32\",\r\n                \"#ff8c00\",\r\n                \"#d2b48c\",\r\n                \"#40e0d0\",\r\n                \"#4169ff\",\r\n                \"#ffd700\",\r\n                \"#6a5acd\",\r\n                \"#ee82ee\",\r\n                \"#cc9966\",\r\n                \"#99cccc\",\r\n                \"#66cc33\",\r\n                \"#ffcc00\",\r\n                \"#ff6633\",\r\n                \"#cc66ff\",\r\n                \"#ff0066\",\r\n                \"#ffff00\",\r\n                \"#800080\",\r\n                \"#00868b\",\r\n                \"#008a00\",\r\n                \"#ff0000\",\r\n                \"#0000ff\",\r\n                \"#f5deb3\",\r\n                \"#bc8f8f\",\r\n                \"#4682b4\",\r\n                \"#ffafaf\",\r\n                \"#43cd80\",\r\n                \"#cdc1c5\",\r\n                \"#a0522d\",\r\n                \"#6495ed\"\r\n            ],\r\n            // Fall back to black, as \"no more colors available\"\r\n            FALLBACK_COLOR = \"#000000\";\r\n\r\n        /**\r\n         * Responsible for choosing unique colors for the resource\r\n         * graph listing of a timeline view. Supports TimelineController.\r\n         * @constructor\r\n         * @param colors an object to store color configuration into;\r\n         *        typically, this should be a property from the view's\r\n         *        configuration, but TimelineSwimlane manages this.\r\n         */\r\n        function TimelineColorAssigner(colors) {\r\n            // Find an unused color\r\n            function freeColor() {\r\n                // Set of used colors\r\n                var set = {}, found;\r\n\r\n                // Build up a set of used colors\r\n                Object.keys(colors).forEach(function (id) {\r\n                    set[colors[id]] = true;\r\n                });\r\n\r\n                // Find an unused color\r\n                COLOR_OPTIONS.forEach(function (c) {\r\n                    found = (!set[c] && !found) ? c : found;\r\n                });\r\n\r\n                // Provide the color\r\n                return found || FALLBACK_COLOR;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the current color assignment.\r\n                 * @param {string} id the id to which the color is assigned\r\n                 */\r\n                get: function (id) {\r\n                    return colors[id];\r\n                },\r\n                /**\r\n                 * Assign a new color to this id. If no color is specified,\r\n                 * an unused color will be chosen.\r\n                 * @param {string} id the id to which the color is assigned\r\n                 * @param {string} [color] the new color to assign\r\n                 */\r\n                assign: function (id, color) {\r\n                    colors[id] = typeof color === 'string' ? color : freeColor();\r\n                },\r\n                /**\r\n                 * Release the color assignment for this id. That id will\r\n                 * no longer have a color associated with it, and its color\r\n                 * will be free to use in subsequent calls.\r\n                 * @param {string} id the id whose color should be released\r\n                 */\r\n                release: function (id) {\r\n                    delete colors[id];\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineColorAssigner;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/swimlane/TimelineProxy',[],\r\n    function () {\r\n\r\n        /**\r\n         * Selection proxy for the Timeline view. Implements\r\n         * behavior associated with the Add button in the\r\n         * timeline's toolbar.\r\n         * @constructor\r\n         */\r\n        function TimelineProxy(domainObject, selection) {\r\n            var actionMap = {};\r\n\r\n            // Populate available Create actions for this domain object\r\n            function populateActionMap(object) {\r\n                var actionCapability = object.getCapability('action'),\r\n                    actions = actionCapability ?\r\n                            actionCapability.getActions('add') : [];\r\n                actions.forEach(function (action) {\r\n                    actionMap[action.getMetadata().type] = action;\r\n                });\r\n            }\r\n\r\n            // Populate available actions based on current selection\r\n            // (defaulting to object-in-view if there is none.)\r\n            function populateForSelection() {\r\n                var swimlane = selection && selection.get(),\r\n                    selectedObject = swimlane && swimlane.domainObject;\r\n                populateActionMap(selectedObject || domainObject);\r\n            }\r\n\r\n            populateActionMap(domainObject);\r\n\r\n            return {\r\n                /**\r\n                 * Add a domain object of the specified type.\r\n                 * @param {string} type the type of domain object to add\r\n                 */\r\n                add: function (type) {\r\n                    // Update list of create actions; this needs to reflect\r\n                    // the current selection so that Save in defaults\r\n                    // appropriately.\r\n                    populateForSelection();\r\n\r\n                    // Create an object of that type\r\n                    if (actionMap[type]) {\r\n                        return actionMap[type].perform();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineProxy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/swimlane/TimelineSwimlanePopulator',[\r\n        './TimelineSwimlane',\r\n        './TimelineSwimlaneDecorator',\r\n        './TimelineColorAssigner',\r\n        './TimelineProxy'\r\n    ],\r\n    function (\r\n        TimelineSwimlane,\r\n        TimelineSwimlaneDecorator,\r\n        TimelineColorAssigner,\r\n        TimelineProxy\r\n    ) {\r\n\r\n        /**\r\n         * Populates and maintains a list of swimlanes for a given\r\n         * timeline view.\r\n         * @constructor\r\n         */\r\n        function TimelineSwimlanePopulator(objectLoader, configuration, selection) {\r\n            var swimlanes = [],\r\n                start = Number.POSITIVE_INFINITY,\r\n                end = Number.NEGATIVE_INFINITY,\r\n                assigner,\r\n                lastDomainObject;\r\n\r\n            // Track extremes of start/end times\r\n            function trackStartEnd(timespan) {\r\n                if (timespan) {\r\n                    start = Math.min(start, timespan.getStart());\r\n                    end = Math.max(end, timespan.getEnd());\r\n                }\r\n            }\r\n\r\n            // Add domain object (and its subgraph) in as swimlanes\r\n            function populateSwimlanes(subgraph, parent, index) {\r\n                var domainObject = subgraph.domainObject,\r\n                    swimlane;\r\n\r\n                // For the recursive step\r\n                function populate(childSubgraph, nextIndex) {\r\n                    populateSwimlanes(childSubgraph, swimlane, nextIndex);\r\n                }\r\n\r\n                // Make sure we have a valid object instance...\r\n                if (domainObject) {\r\n                    // Create the new swimlane\r\n                    swimlane = new TimelineSwimlaneDecorator(new TimelineSwimlane(\r\n                        domainObject,\r\n                        assigner,\r\n                        configuration,\r\n                        parent,\r\n                        index || 0\r\n                    ), selection);\r\n                    // Track start & end times of this domain object\r\n                    domainObject.useCapability('timespan').then(trackStartEnd);\r\n                    // Add it to our list\r\n                    swimlanes.push(swimlane);\r\n                    // Fill in parent's children\r\n                    ((parent || {}).children || []).push(swimlane);\r\n                    // Add in children\r\n                    subgraph.composition.forEach(populate);\r\n                }\r\n            }\r\n\r\n            // Restore a selection\r\n            function reselect(path, candidates, depth) {\r\n                // Next ID on the path\r\n                var next = path[depth || 0];\r\n\r\n                // Ensure a default\r\n                depth = depth || 0;\r\n\r\n                // Search through this layer of candidates to see\r\n                // if they might contain our selection (based on id path)\r\n                candidates.forEach(function (swimlane) {\r\n                    // Check if we're on the right path...\r\n                    if (swimlane.id === next) {\r\n                        // Do we still have ids to check?\r\n                        if (depth < path.length - 1) {\r\n                            // Yes, so recursively explore that path\r\n                            reselect(path, swimlane.children, depth + 1);\r\n                        } else {\r\n                            // Nope, we found the object to select\r\n                            selection.select(swimlane);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Handle population of swimlanes\r\n            function recalculateSwimlanes(domainObject) {\r\n                function populate(subgraph) {\r\n                    // Cache current selection state during refresh\r\n                    var selected = selection && selection.get(),\r\n                        selectedIdPath = selected && selected.idPath;\r\n\r\n                    // Clear existing swimlanes\r\n                    swimlanes = [];\r\n\r\n                    // Build new set of swimlanes\r\n                    populateSwimlanes(subgraph);\r\n\r\n                    // Restore selection, if there was one\r\n                    if (selectedIdPath && swimlanes.length > 0) {\r\n                        reselect(selectedIdPath, [swimlanes[0]]);\r\n                    }\r\n                }\r\n\r\n                // Repopulate swimlanes for this object\r\n                if (!domainObject) {\r\n                    populate({});\r\n                } else {\r\n                    objectLoader.load(domainObject, 'timespan').then(populate);\r\n                }\r\n\r\n                // Set the selection proxy as well (for the Add button)\r\n                if (selection) {\r\n                    selection.proxy(\r\n                        domainObject && new TimelineProxy(domainObject, selection)\r\n                    );\r\n                }\r\n\r\n                lastDomainObject = domainObject;\r\n            }\r\n\r\n            function setSelectionObject(s) {\r\n                selection = s;\r\n                recalculateSwimlanes(lastDomainObject);\r\n            }\r\n\r\n            function initialize() {\r\n                var colors = (configuration.colors || {});\r\n                assigner = new TimelineColorAssigner(colors);\r\n                configuration.colors = colors;\r\n                recalculateSwimlanes(lastDomainObject);\r\n            }\r\n\r\n            // Ensure colors are exposed in configuration\r\n            initialize();\r\n\r\n            return {\r\n                /**\r\n                 * Set the selection object associated with this timeline view.\r\n                 * @param {Object} selection the selection object\r\n                 */\r\n                selection: setSelectionObject,\r\n\r\n                /**\r\n                 * Update list of swimlanes to match those reachable from this\r\n                 * object.\r\n                 * @param {DomainObject} the timeline being viewed\r\n                 */\r\n                populate: recalculateSwimlanes,\r\n                /**\r\n                 * Get a list of swimlanes for this timeline view.\r\n                 * @returns {TimelineSwimlane[]} current swimlanes\r\n                 */\r\n                get: function () {\r\n                    return swimlanes;\r\n                },\r\n                /**\r\n                 * Get the first timestamp in the set of swimlanes.\r\n                 * @returns {number} first timestamp\r\n                 */\r\n                start: function () {\r\n                    return start;\r\n                },\r\n                /**\r\n                 * Get the last timestamp in the set of swimlanes.\r\n                 * @returns {number} first timestamp\r\n                 */\r\n                end: function () {\r\n                    return end;\r\n                },\r\n                /**\r\n                 * Pass a new configuration object (to retrieve and store\r\n                 * swimlane configuration)\r\n                 * @param newConfig\r\n                 */\r\n                configure: function (newConfig) {\r\n                    configuration = newConfig;\r\n                    initialize();\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineSwimlanePopulator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/graph/TimelineGraph',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provides data to populate a graph in a timeline view.\r\n         * @constructor\r\n         * @param {string} key the resource's identifying key\r\n         * @param {Object.<string,DomainObject>} domainObjects and object\r\n         *        containing key-value pairs where keys are colors, and\r\n         *        values are DomainObject instances to be drawn in that\r\n         *        color\r\n         * @param {TimelineGraphRenderer} renderer a renderer which\r\n         *        can be used to prepare Float32Array instances\r\n         */\r\n        function TimelineGraph(key, domainObjects, renderer) {\r\n            var drawingObject = { origin: [0, 0], dimensions: [0, 0], modified: 0},\r\n                // lines for the drawing object, by swimlane index\r\n                lines = [],\r\n                // min/max seen for a given swimlane, by swimlane index\r\n                extrema = [],\r\n                // current minimum\r\n                min = 0,\r\n                // current maximum\r\n                max = 0,\r\n                // line colors to display\r\n                colors = Object.keys(domainObjects);\r\n\r\n            // Get minimum value, ensure there's some room\r\n            function minimum() {\r\n                return (min >= max) ? (max - 1) : min;\r\n            }\r\n\r\n            // Get maximum value, ensure there's some room\r\n            function maximum() {\r\n                return (min >= max) ? (min + 1) : max;\r\n            }\r\n\r\n            // Update minimum and maximum values\r\n            function updateMinMax() {\r\n                // Find the minimum among plot lines\r\n                min = extrema.map(function (ex) {\r\n                    return ex.min;\r\n                }).reduce(function (a, b) {\r\n                    return Math.min(a, b);\r\n                }, Number.POSITIVE_INFINITY);\r\n\r\n                // Do the same for the maximum\r\n                max = extrema.map(function (ex) {\r\n                    return ex.max;\r\n                }).reduce(function (a, b) {\r\n                    return Math.max(a, b);\r\n                }, Number.NEGATIVE_INFINITY);\r\n\r\n                // Ensure the infinities don't survive\r\n                min = min === Number.POSITIVE_INFINITY ? max : min;\r\n                min = min === Number.NEGATIVE_INFINITY ? 0 : min;\r\n                max = max === Number.NEGATIVE_INFINITY ? min : max;\r\n            }\r\n\r\n            // Change contents of the drawing object (to trigger redraw)\r\n            function updateDrawingObject() {\r\n                // Update drawing object to include non-empty lines\r\n                drawingObject.lines = lines.filter(function (line) {\r\n                    return line.points > 1;\r\n                });\r\n\r\n                // Update drawing bounds to fit data\r\n                drawingObject.origin[1] = minimum();\r\n                drawingObject.dimensions[1] = maximum() - minimum();\r\n            }\r\n\r\n            // Update a specific line, by index\r\n            function updateLine(graph, index) {\r\n                var buffer = renderer.render(graph),\r\n                    line = lines[index],\r\n                    ex = extrema[index],\r\n                    i;\r\n\r\n                // Track minimum/maximum; note we skip x values\r\n                for (i = 1; i < buffer.length; i += 2) {\r\n                    ex.min = Math.min(buffer[i], ex.min);\r\n                    ex.max = Math.max(buffer[i], ex.max);\r\n                }\r\n\r\n                // Update line in drawing object\r\n                line.buffer = buffer;\r\n                line.points = graph.getPointCount();\r\n                line.color = renderer.decode(colors[index]);\r\n\r\n                // Update the graph's total min/max\r\n                if (line.points > 0) {\r\n                    updateMinMax();\r\n                }\r\n\r\n                // Update the drawing object (used to draw the graph)\r\n                updateDrawingObject();\r\n            }\r\n\r\n            // Request initialization for a line's contents\r\n            function populateLine(color, index) {\r\n                var domainObject = domainObjects[color],\r\n                    graphPromise = domainObject.useCapability('graph');\r\n\r\n                if (graphPromise) {\r\n                    graphPromise.then(function (g) {\r\n                        if (g[key]) {\r\n                            updateLine(g[key], index);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Create empty lines\r\n            lines = colors.map(function () {\r\n                // Sentinel value to exclude these lines\r\n                return { points: 0 };\r\n            });\r\n\r\n            // Specify initial min/max state per-line\r\n            extrema = colors.map(function () {\r\n                return {\r\n                    min: Number.POSITIVE_INFINITY,\r\n                    max: Number.NEGATIVE_INFINITY\r\n                };\r\n            });\r\n\r\n            // Start creating lines for all swimlanes\r\n            colors.forEach(populateLine);\r\n\r\n            return {\r\n                /**\r\n                 * Get the minimum resource value that appears in this graph.\r\n                 * @returns {number} the minimum value\r\n                 */\r\n                minimum: minimum,\r\n                /**\r\n                 * Get the maximum resource value that appears in this graph.\r\n                 * @returns {number} the maximum value\r\n                 */\r\n                maximum: maximum,\r\n                /**\r\n                 * Set the displayed origin and duration, in milliseconds.\r\n                 * @param {number} [value] value to set, if setting\r\n                 */\r\n                setBounds: function (offset, duration) {\r\n                    // We don't update in-place, because we need the change\r\n                    // to trigger a watch in mct-chart.\r\n                    drawingObject.origin = [offset, drawingObject.origin[1]];\r\n                    drawingObject.dimensions = [duration, drawingObject.dimensions[1]];\r\n                },\r\n                /**\r\n                 * Redraw lines in this graph.\r\n                 */\r\n                refresh: function () {\r\n                    colors.forEach(populateLine);\r\n                },\r\n                // Expose key, drawing object directly for use in templates\r\n                key: key,\r\n                drawingObject: drawingObject\r\n            };\r\n\r\n        }\r\n\r\n        return TimelineGraph;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/graph/TimelineGraphRenderer',[],\r\n    function () {\r\n\r\n        /**\r\n         * Responsible for preparing data for display by\r\n         * `mct-chart` in a timeline's resource graph.\r\n         * @constructor\r\n         */\r\n        function TimelineGraphRenderer() {\r\n            return {\r\n                /**\r\n                 * Render a resource utilization to a Float32Array,\r\n                 * to be passed to WebGL for display.\r\n                 * @param {ResourceGraph} graph the resource utilization\r\n                 * @returns {Float32Array} the rendered buffer\r\n                 */\r\n                render: function (graph) {\r\n                    var count = graph.getPointCount(),\r\n                        buffer = new Float32Array(count * 2),\r\n                        i;\r\n\r\n                    // Populate the buffer\r\n                    for (i = 0; i < count; i += 1) {\r\n                        buffer[i * 2] = graph.getDomainValue(i);\r\n                        buffer[i * 2 + 1] = graph.getRangeValue(i);\r\n                    }\r\n\r\n                    return buffer;\r\n                },\r\n                /**\r\n                 * Convert an HTML color (in #-prefixed 6-digit hexadecimal)\r\n                 * to an array of floating point values in a range of 0.0-1.0.\r\n                 * An alpha element is included to facilitate display in an\r\n                 * `mct-chart` (which uses WebGL.)\r\n                 * @param {string} the color\r\n                 * @returns {number[]} the same color, in floating-point format\r\n                 */\r\n                decode: function (color) {\r\n                    // Check for bad input, default to black if needed\r\n                    color = /^#[A-Fa-f0-9]{6}$/.test(color) ? color : \"#000000\";\r\n\r\n                    // Pull out R, G, B hex values\r\n                    return [\r\n                        color.substring(1, 3),\r\n                        color.substring(3, 5),\r\n                        color.substring(5, 7)\r\n                    ].map(function (c) {\r\n                        // Hex -> number\r\n                        return parseInt(c, 16) / 255;\r\n                    }).concat([1]); // Add the alpha channel\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineGraphRenderer;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/timeline/src/controllers/graph/TimelineGraphPopulator',['./TimelineGraph', './TimelineGraphRenderer'],\r\n    function (TimelineGraph, TimelineGraphRenderer) {\r\n\r\n        /**\r\n         * Responsible for determining which resource graphs\r\n         * to display (based on capabilities exposed by included\r\n         * domain objects) and allocating data to those different\r\n         * graphs.\r\n         * @constructor\r\n         */\r\n        function TimelineGraphPopulator($q) {\r\n            var graphs =  [],\r\n                cachedAssignments = {},\r\n                renderer = new TimelineGraphRenderer();\r\n\r\n            // Compare two domain objects\r\n            function idsMatch(objA, objB) {\r\n                return (objA && objA.getId && objA.getId()) ===\r\n                        (objB && objB.getId && objB.getId());\r\n            }\r\n\r\n            // Compare two object sets for equality, to detect\r\n            // when graph updates are truly needed.\r\n            function deepEquals(objA, objB) {\r\n                var keysA, keysB;\r\n\r\n                // Check if all keys in both objects match\r\n                function keysMatch(keys) {\r\n                    return keys.map(function (k) {\r\n                        return deepEquals(objA[k], objB[k]);\r\n                    }).reduce(function (a, b) {\r\n                        return a && b;\r\n                    }, true);\r\n                }\r\n\r\n                // First, check if they're matching domain objects\r\n                if (typeof (objA && objA.getId) === 'function') {\r\n                    return idsMatch(objA, objB);\r\n                }\r\n\r\n                // Otherwise, assume key-value pairs\r\n                keysA = Object.keys(objA || {}).sort();\r\n                keysB = Object.keys(objB || {}).sort();\r\n\r\n                return (keysA.length === keysB.length) && keysMatch(keysA);\r\n            }\r\n\r\n            // Populate the graphs for these swimlanes\r\n            function populate(swimlanes) {\r\n                // Somewhere to store resource assignments\r\n                // (as key -> swimlane[])\r\n                var assignments = {};\r\n\r\n                // Look up resources for a domain object\r\n                function lookupResources(swimlane) {\r\n                    var graphPromise =\r\n                        swimlane.domainObject.useCapability('graph');\r\n                    function getKeys(obj) {\r\n                        return Object.keys(obj);\r\n                    }\r\n                    return $q.when(\r\n                        graphPromise ? (graphPromise.then(getKeys)) : []\r\n                    );\r\n                }\r\n\r\n                // Add all graph assignments appropriate for this swimlane\r\n                function buildAssignments(swimlane) {\r\n                    // Assign this swimlane to graphs for its resource keys\r\n                    return lookupResources(swimlane).then(function (resources) {\r\n                        resources.forEach(function (key) {\r\n                            assignments[key] = assignments[key] || {};\r\n                            assignments[key][swimlane.color()] =\r\n                                swimlane.domainObject;\r\n                        });\r\n                    });\r\n                }\r\n\r\n                // Make a graph for this resource (after assigning)\r\n                function makeGraph(key) {\r\n                    return new TimelineGraph(\r\n                        key,\r\n                        assignments[key],\r\n                        renderer\r\n                    );\r\n                }\r\n\r\n                // Used to filter down to swimlanes which need graphs\r\n                function needsGraph(swimlane) {\r\n                    // Only show swimlanes with graphs & resources to graph\r\n                    return swimlane.graph() &&\r\n                        swimlane.domainObject.hasCapability('graph');\r\n                }\r\n\r\n                // Create graphs according to assignments that have been built\r\n                function createGraphs() {\r\n                    // Only refresh graphs if our assignments actually changed\r\n                    if (!deepEquals(cachedAssignments, assignments)) {\r\n                        // Make new graphs\r\n                        graphs = Object.keys(assignments).sort().map(makeGraph);\r\n                        // Save resource->color->object assignments\r\n                        cachedAssignments = assignments;\r\n                    } else {\r\n                        // Just refresh the existing graphs\r\n                        graphs.forEach(function (graph) {\r\n                            graph.refresh();\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Build up list of assignments, then create graphs\r\n                $q.all(swimlanes.filter(needsGraph).map(buildAssignments))\r\n                    .then(createGraphs);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Populate (or re-populate) the list of available resource\r\n                 * graphs, based on the provided list of swimlanes (and their\r\n                 * current state.)\r\n                 * @param {TimelineSwimlane[]} swimlanes the swimlanes to use\r\n                 */\r\n                populate: populate,\r\n                /**\r\n                 * Get the current list of displayable resource graphs.\r\n                 * @returns {TimelineGraph[]} the resource graphs\r\n                 */\r\n                get: function () {\r\n                    return graphs;\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineGraphPopulator;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineDragHandler',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles business logic (mutation of objects, retrieval of start/end\r\n         * times) associated with drag gestures to manipulate start/end times\r\n         * of activities and timelines in a Timeline view.\r\n         * @constructor\r\n         * @param {DomainObject} domainObject the object being viewed\r\n         * @param {ObjectLoader} objectLoader service to assist in loading\r\n         *        subtrees\r\n         */\r\n        function TimelineDragHandler(domainObject, objectLoader) {\r\n            var timespans = {},\r\n                persists = {},\r\n                mutations = {},\r\n                compositions = {},\r\n                dirty = {};\r\n\r\n            // \"Cast\" a domainObject to an id, if necessary\r\n            function toId(value) {\r\n                return (typeof value !== 'string' && value.getId) ?\r\n                        value.getId() : value;\r\n            }\r\n\r\n            // Get the timespan associated with this domain object\r\n            function populateCapabilityMaps(object) {\r\n                var id = object.getId(),\r\n                    timespanPromise = object.useCapability('timespan');\r\n                if (timespanPromise) {\r\n                    timespanPromise.then(function (timespan) {\r\n                        // Cache that timespan\r\n                        timespans[id] = timespan;\r\n                        // And its mutation capability\r\n                        mutations[id] = object.getCapability('mutation');\r\n                        // Also cache the persistence capability for later\r\n                        persists[id] = object.getCapability('persistence');\r\n                        // And the composition, for bulk moves\r\n                        compositions[id] = object.getModel().composition || [];\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Populate the id->timespan map\r\n            function populateTimespans(subgraph) {\r\n                populateCapabilityMaps(subgraph.domainObject);\r\n                subgraph.composition.forEach(populateTimespans);\r\n            }\r\n\r\n            // Persist changes for objects by id (when dragging ends)\r\n            function doPersist(id) {\r\n                var persistence = persists[id],\r\n                    mutation = mutations[id];\r\n                if (mutation) {\r\n                    // Mutate just to update the timestamp (since we\r\n                    // explicitly don't do this during the drag to\r\n                    // avoid firing a ton of refreshes.)\r\n                    mutation.mutate(function () {});\r\n                }\r\n                if (persistence) {\r\n                    // Persist the changes\r\n                    persistence.persist();\r\n                }\r\n            }\r\n\r\n            // Use the object loader to get objects which have timespans\r\n            objectLoader.load(domainObject, 'timespan').then(populateTimespans);\r\n\r\n            return {\r\n                /**\r\n                 * Get a list of identifiers for domain objects which have\r\n                 * timespans that are managed here.\r\n                 * @returns {string[]} ids for all objects which have managed\r\n                 *          timespans here\r\n                 */\r\n                ids: function () {\r\n                    return Object.keys(timespans).sort();\r\n                },\r\n                /**\r\n                 * Persist any changes to timespans that have been made through\r\n                 * this handler.\r\n                 */\r\n                persist: function () {\r\n                    // Persist every dirty object...\r\n                    Object.keys(dirty).forEach(doPersist);\r\n                    // Clear out the dirty list\r\n                    dirty = {};\r\n                },\r\n                /**\r\n                 * Get the start time for a specific domain object. The domain\r\n                 * object may be specified by its identifier, or passed as a\r\n                 * domain object instance. If a second, numeric argument is\r\n                 * passed, this functions as a setter.\r\n                 * @returns {number} the start time\r\n                 * @param {string|DomainObject} id the domain object to modify\r\n                 * @param {number} [value] the new value\r\n                 */\r\n                start: function (id, value) {\r\n                    // Convert to domain object id, look up timespan\r\n                    var timespan = timespans[toId(id)];\r\n                    // Use as setter if argument is present\r\n                    if ((typeof value === 'number') && timespan) {\r\n                        // Set the start (ensuring that it's non-negative,\r\n                        // and not after the end time.)\r\n                        timespan.setStart(\r\n                            Math.min(Math.max(value, 0), timespan.getEnd())\r\n                        );\r\n                        // Mark as dirty for subsequent persistence\r\n                        dirty[toId(id)] = true;\r\n                    }\r\n                    // Return value from the timespan\r\n                    return timespan && timespan.getStart();\r\n                },\r\n                /**\r\n                 * Get the end time for a specific domain object. The domain\r\n                 * object may be specified by its identifier, or passed as a\r\n                 * domain object instance. If a second, numeric argument is\r\n                 * passed, this functions as a setter.\r\n                 * @returns {number} the end time\r\n                 * @param {string|DomainObject} id the domain object to modify\r\n                 * @param {number} [value] the new value\r\n                 */\r\n                end: function (id, value) {\r\n                    // Convert to domain object id, look up timespan\r\n                    var timespan = timespans[toId(id)];\r\n                    // Use as setter if argument is present\r\n                    if ((typeof value === 'number') && timespan) {\r\n                        // Set the end (ensuring it doesn't preceed start)\r\n                        timespan.setEnd(\r\n                            Math.max(value, timespan.getStart())\r\n                        );\r\n                        // Mark as dirty for subsequent persistence\r\n                        dirty[toId(id)] = true;\r\n                    }\r\n                    // Return value from the timespan\r\n                    return timespan && timespan.getEnd();\r\n                },\r\n                /**\r\n                 * Get the duration for a specific domain object. The domain\r\n                 * object may be specified by its identifier, or passed as a\r\n                 * domain object instance. If a second, numeric argument is\r\n                 * passed, this functions as a setter.\r\n                 * @returns {number} the duration\r\n                 * @param {string|DomainObject} id the domain object to modify\r\n                 * @param {number} [value] the new value\r\n                 */\r\n                duration: function (id, value) {\r\n                    // Convert to domain object id, look up timespan\r\n                    var timespan = timespans[toId(id)];\r\n                    // Use as setter if argument is present\r\n                    if ((typeof value === 'number') && timespan) {\r\n                        // Set duration (ensure that it's non-negative)\r\n                        timespan.setDuration(\r\n                            Math.max(value, 0)\r\n                        );\r\n                        // Mark as dirty for subsequent persistence\r\n                        dirty[toId(id)] = true;\r\n                    }\r\n                    // Return value from the timespan\r\n                    return timespan && timespan.getDuration();\r\n                },\r\n                /**\r\n                 * Move the start and end of this domain object by the\r\n                 * specified delta. Contained objects will move as well.\r\n                 * @param {string|DomainObject} id the domain object to modify\r\n                 * @param {number} delta the amount by which to change\r\n                 */\r\n                move: function (id, delta) {\r\n                    // Overview of algorithm used here:\r\n                    // - Build up list of ids to actually move\r\n                    // - Find the minimum start time\r\n                    // - Change delta so it cannot move minimum past 0\r\n                    // - Update start, then end time\r\n                    var ids = {},\r\n                        queue = [toId(id)],\r\n                        minStart;\r\n\r\n                    // Update start & end, in that order\r\n                    function updateStartEnd(spanId) {\r\n                        var timespan = timespans[spanId], start, end;\r\n                        if (timespan) {\r\n                            // Get start/end so we don't get fooled by our\r\n                            // own adjustments\r\n                            start = timespan.getStart();\r\n                            end = timespan.getEnd();\r\n                            // Update start, then end\r\n                            timespan.setStart(start + delta);\r\n                            timespan.setEnd(end + delta);\r\n                            // Mark as dirty for subsequent persistence\r\n                            dirty[toId(spanId)] = true;\r\n                        }\r\n                    }\r\n\r\n                    // Build up set of ids\r\n                    while (queue.length > 0) {\r\n                        // Get the next id to consider\r\n                        id = queue.shift();\r\n                        // If we haven't already considered this...\r\n                        if (!ids[id]) {\r\n                            // Add it to the set\r\n                            ids[id] = true;\r\n                            // And queue up its composition\r\n                            queue = queue.concat(compositions[id] || []);\r\n                        }\r\n                    }\r\n\r\n                    // Find the minimum start time\r\n                    minStart = Object.keys(ids).map(function (spanId) {\r\n                        // Get the start time; default to +Inf if not\r\n                        // found, since this will not survive a min\r\n                        // test if any real timespans are present\r\n                        return timespans[spanId] ?\r\n                                timespans[spanId].getStart() :\r\n                                Number.POSITIVE_INFINITY;\r\n                    }).reduce(function (a, b) {\r\n                        // Reduce with a minimum test\r\n                        return Math.min(a, b);\r\n                    }, Number.POSITIVE_INFINITY);\r\n\r\n                    // Ensure delta doesn't exceed bounds\r\n                    delta = Math.max(delta, -minStart);\r\n\r\n                    // Update start/end times\r\n                    if (delta !== 0) {\r\n                        Object.keys(ids).forEach(updateStartEnd);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineDragHandler;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineSnapHandler',[],\r\n    function () {\r\n\r\n        /**\r\n         * Snaps timestamps to match other timestamps within a\r\n         * certain tolerance, to support the snap-to-start-and-end\r\n         * behavior of drag interactions in a timeline view.\r\n         * @constructor\r\n         * @param {TimelineDragHandler} dragHandler the handler\r\n         *        for drag interactions, which maintains start/end\r\n         *        information for timelines in this view.\r\n         */\r\n        function TimelineSnapHandler(dragHandler) {\r\n            // Snap to other end points\r\n            function snap(timestamp, tolerance, exclude) {\r\n                var result = timestamp,\r\n                    closest = tolerance,\r\n                    ids,\r\n                    candidates;\r\n\r\n                // Filter an id for inclustion\r\n                function include(id) {\r\n                    return id !== exclude;\r\n                }\r\n\r\n                // Evaluate a candidate timestamp as a snap-to location\r\n                function evaluate(candidate) {\r\n                    var difference = Math.abs(candidate - timestamp);\r\n                    // Is this closer than anything else we've found?\r\n                    if (difference < closest) {\r\n                        // ...then this is our new result\r\n                        result = candidate;\r\n                        // Track how close it was, for subsequent comparison.\r\n                        closest = difference;\r\n                    }\r\n                }\r\n\r\n                // Look up start time; for mapping below\r\n                function getStart(id) {\r\n                    return dragHandler.start(id);\r\n                }\r\n\r\n                // Look up end time; for mapping below\r\n                function getEnd(id) {\r\n                    return dragHandler.end(id);\r\n                }\r\n\r\n                // Get list of candidate ids\r\n                ids = dragHandler.ids().filter(include);\r\n\r\n                // Get candidate timestamps\r\n                candidates = ids.map(getStart).concat(ids.map(getEnd));\r\n\r\n                // ...and find the best one\r\n                candidates.forEach(evaluate);\r\n\r\n                // Closest candidate (or original timestamp) is our result\r\n                // now, so return it.\r\n                return result;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get a timestamp location that is near this\r\n                 * timestamp (or simply return the provided\r\n                 * timestamp if none are near enough, according\r\n                 * to the specified tolerance.)\r\n                 * Start/end times associated with the domain object\r\n                 * with the specified identifier will be excluded\r\n                 * from consideration (to avoid an undesired snap-to-self\r\n                 * behavior.)\r\n                 * @param {number} timestamp the timestamp to snap\r\n                 * @param {number} tolerance the difference within which\r\n                 *        to snap\r\n                 * @param {string} id the identifier to exclude\r\n                 */\r\n                snap: snap\r\n            };\r\n        }\r\n\r\n        return TimelineSnapHandler;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Defines constant values for use in timeline view.\r\n */\r\ndefine('platform/features/timeline/src/TimelineConstants',{\r\n    // Pixel width of start/end handles\r\n    HANDLE_WIDTH: 32,\r\n    // Pixel tolerance for snapping behavior\r\n    SNAP_WIDTH: 16\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineStartHandle',['../../TimelineConstants'],\r\n    function (Constants) {\r\n\r\n        /**\r\n         * Handle for changing the start time of a timeline or\r\n         * activity in the Timeline view.\r\n         * @constructor\r\n         * @param {string} id identifier of the domain object\r\n         * @param {TimelineDragHandler} dragHandler the handler which\r\n         *        will update object state\r\n         * @param {TimelineSnapHandler} snapHandler the handler which\r\n         *        provides candidate snap-to locations.\r\n         */\r\n        function TimelineStartHandle(id, dragHandler, snapHandler) {\r\n            var initialStart;\r\n\r\n            // Get the snap-to location for a timestamp\r\n            function snap(timestamp, zoom) {\r\n                return snapHandler.snap(\r\n                    timestamp,\r\n                    zoom.toMillis(Constants.SNAP_WIDTH),\r\n                    id\r\n                );\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Start dragging this handle.\r\n                 */\r\n                begin: function () {\r\n                    // Cache the initial state\r\n                    initialStart = dragHandler.start(id);\r\n                },\r\n                /**\r\n                 * Drag this handle.\r\n                 * @param {number} delta pixel delta from start\r\n                 * @param {TimelineZoomController} zoom provider of zoom state\r\n                 */\r\n                drag: function (delta, zoom) {\r\n                    if (initialStart !== undefined) {\r\n                        // Update the state\r\n                        dragHandler.start(\r\n                            id,\r\n                            snap(initialStart + zoom.toMillis(delta), zoom)\r\n                        );\r\n                    }\r\n                },\r\n                /**\r\n                 * Finish dragging this handle.\r\n                 */\r\n                finish: function () {\r\n                    // Clear initial state\r\n                    initialStart = undefined;\r\n                    // Persist changes\r\n                    dragHandler.persist();\r\n                },\r\n                /**\r\n                 * Get a style object (suitable for passing into `ng-style`)\r\n                 * for this handle.\r\n                 * @param {TimelineZoomController} zoom provider of zoom state\r\n                 */\r\n                style: function (zoom) {\r\n                    return {\r\n                        left: zoom.toPixels(dragHandler.start(id)) + 'px',\r\n                        width: Constants.HANDLE_WIDTH + 'px'\r\n                    };\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineStartHandle;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineEndHandle',['../../TimelineConstants'],\r\n    function (Constants) {\r\n\r\n        /**\r\n         * Handle for changing the end time of a timeline or\r\n         * activity in the Timeline view.\r\n         * @constructor\r\n         * @param {string} id identifier of the domain object\r\n         * @param {TimelineDragHandler} dragHandler the handler which\r\n         *        will update object state\r\n         * @param {TimelineSnapHandler} snapHandler the handler which\r\n         *        provides candidate snap-to locations.\r\n         */\r\n        function TimelineEndHandle(id, dragHandler, snapHandler) {\r\n            var initialEnd;\r\n\r\n            // Get the snap-to location for a timestamp\r\n            function snap(timestamp, zoom) {\r\n                return snapHandler.snap(\r\n                    timestamp,\r\n                    zoom.toMillis(Constants.SNAP_WIDTH),\r\n                    id\r\n                );\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Start dragging this handle.\r\n                 */\r\n                begin: function () {\r\n                    // Cache the initial state\r\n                    initialEnd = dragHandler.end(id);\r\n                },\r\n                /**\r\n                 * Drag this handle.\r\n                 * @param {number} delta pixel delta from start\r\n                 * @param {TimelineZoomController} zoom provider of zoom state\r\n                 */\r\n                drag: function (delta, zoom) {\r\n                    if (initialEnd !== undefined) {\r\n                        // Update the state\r\n                        dragHandler.end(\r\n                            id,\r\n                            snap(initialEnd + zoom.toMillis(delta), zoom)\r\n                        );\r\n                    }\r\n                },\r\n                /**\r\n                 * Finish dragging this handle.\r\n                 */\r\n                finish: function () {\r\n                    // Clear initial state\r\n                    initialEnd = undefined;\r\n                    // Persist changes\r\n                    dragHandler.persist();\r\n                },\r\n                /**\r\n                 * Get a style object (suitable for passing into `ng-style`)\r\n                 * for this handle.\r\n                 * @param {TimelineZoomController} zoom provider of zoom state\r\n                 */\r\n                style: function (zoom) {\r\n                    return {\r\n                        left: zoom.toPixels(dragHandler.end(id)) - Constants.HANDLE_WIDTH + 'px',\r\n                        width: Constants.HANDLE_WIDTH + 'px'\r\n                    };\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineEndHandle;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineMoveHandle',['../../TimelineConstants'],\r\n    function (Constants) {\r\n\r\n        /**\r\n         * Handle for moving (by drag) a timeline or\r\n         * activity in the Timeline view.\r\n         * @constructor\r\n         * @param {string} id identifier of the domain object\r\n         * @param {TimelineDragHandler} dragHandler the handler which\r\n         *        will update object state\r\n         * @param {TimelineSnapHandler} snapHandler the handler which\r\n         *        provides candidate snap-to locations.\r\n         */\r\n        function TimelineMoveHandle(id, dragHandler, snapHandler) {\r\n            var initialStart,\r\n                initialEnd;\r\n\r\n            // Get the snap-to location for a timestamp\r\n            function snap(timestamp, zoom) {\r\n                return snapHandler.snap(\r\n                    timestamp,\r\n                    zoom.toMillis(Constants.SNAP_WIDTH),\r\n                    id\r\n                );\r\n            }\r\n\r\n            // Convert a pixel delta to a millisecond delta that will align\r\n            // with some useful snap location\r\n            function snapDelta(delta, zoom) {\r\n                var timeDelta = zoom.toMillis(delta),\r\n                    desiredStart = initialStart + timeDelta,\r\n                    desiredEnd = initialEnd + timeDelta,\r\n                    snappedStart = snap(desiredStart, zoom),\r\n                    snappedEnd = snap(desiredEnd, zoom),\r\n                    diffStart = Math.abs(snappedStart - desiredStart),\r\n                    diffEnd = Math.abs(snappedEnd - desiredEnd),\r\n                    chooseEnd = false;\r\n\r\n                // First, check for case where both changed...\r\n                if ((diffStart > 0) && (diffEnd > 0)) {\r\n                    // ...and choose the smallest change that snaps.\r\n                    chooseEnd = diffEnd < diffStart;\r\n                } else {\r\n                    // ...otherwise, snap toward the end if it changed.\r\n                    chooseEnd = diffEnd > 0;\r\n                }\r\n                // Start is chosen if diffEnd didn't snap, or nothing snapped\r\n\r\n                // Our delta is relative to our initial state, but\r\n                // dragHandler.move is relative to current state, so whichever\r\n                // end we're snapping to, we need to compute a delta\r\n                // relative to the current state to get the desired result.\r\n                return chooseEnd ?\r\n                        (snappedEnd - dragHandler.end(id)) :\r\n                        (snappedStart - dragHandler.start(id));\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Start dragging this handle.\r\n                 */\r\n                begin: function () {\r\n                    // Cache the initial state\r\n                    initialStart = dragHandler.start(id);\r\n                    initialEnd = dragHandler.end(id);\r\n                },\r\n                /**\r\n                 * Drag this handle.\r\n                 * @param {number} delta pixel delta from start\r\n                 * @param {TimelineZoomController} zoom provider of zoom state\r\n                 */\r\n                drag: function (delta, zoom) {\r\n                    if (initialStart !== undefined && initialEnd !== undefined) {\r\n                        if (delta !== 0) {\r\n                            dragHandler.move(id, snapDelta(delta, zoom));\r\n                        }\r\n                    }\r\n                },\r\n                /**\r\n                 * Finish dragging this handle.\r\n                 */\r\n                finish: function () {\r\n                    // Clear initial state\r\n                    initialStart = undefined;\r\n                    initialEnd = undefined;\r\n                    // Persist changes\r\n                    dragHandler.persist();\r\n                },\r\n                /**\r\n                 * Get a style object (suitable for passing into `ng-style`)\r\n                 * for this handle.\r\n                 * @param {TimelineZoomController} zoom provider of zoom state\r\n                 */\r\n\r\n                style: function (zoom) {\r\n                    return {\r\n                        left: (zoom.toPixels(dragHandler.start(id)) +\r\n                            Constants.HANDLE_WIDTH) + 'px',\r\n                        width: (zoom.toPixels(dragHandler.duration(id)) -\r\n                            Constants.HANDLE_WIDTH * 2) + 'px'\r\n                    };\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineMoveHandle;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineDragHandleFactory',['./TimelineStartHandle', './TimelineEndHandle', './TimelineMoveHandle'],\r\n    function (TimelineStartHandle, TimelineEndHandle, TimelineMoveHandle) {\r\n\r\n\r\n        var DEFAULT_HANDLES = [\r\n                TimelineStartHandle,\r\n                TimelineMoveHandle,\r\n                TimelineEndHandle\r\n            ],\r\n            TIMELINE_HANDLES = [\r\n                TimelineStartHandle,\r\n                TimelineMoveHandle\r\n            ];\r\n\r\n        /**\r\n         * Create a factory for drag handles for timelines/activities\r\n         * in a timeline view.\r\n         * @constructor\r\n         */\r\n        function TimelineDragHandleFactory(dragHandler, snapHandler) {\r\n            return {\r\n                /**\r\n                 * Create drag handles for this domain object.\r\n                 * @param {DomainObject} domainObject the object to be\r\n                 *        manipulated by these gestures\r\n                 * @returns {Array} array of drag handles\r\n                 */\r\n                handles: function (domainObject) {\r\n                    var type = domainObject.getCapability('type'),\r\n                        id = domainObject.getId();\r\n\r\n                    // Instantiate a handle\r\n                    function instantiate(Handle) {\r\n                        return new Handle(\r\n                            id,\r\n                            dragHandler,\r\n                            snapHandler\r\n                        );\r\n                    }\r\n\r\n                    // Instantiate smaller set of handles for timelines\r\n                    return (type && type.instanceOf('timeline') ?\r\n                            TIMELINE_HANDLES : DEFAULT_HANDLES)\r\n                                    .map(instantiate);\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineDragHandleFactory;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/drag/TimelineDragPopulator',['./TimelineDragHandler', './TimelineSnapHandler', './TimelineDragHandleFactory'],\r\n    function (TimelineDragHandler, TimelineSnapHandler, TimelineDragHandleFactory) {\r\n\r\n        /**\r\n         * Provides drag handles for the active selection in a timeline view.\r\n         * @constructor\r\n         */\r\n        function TimelineDragPopulator(objectLoader) {\r\n            var handles = [],\r\n                factory,\r\n                selectedObject;\r\n\r\n            // Refresh active set of drag handles\r\n            function refreshHandles() {\r\n                handles = (factory && selectedObject) ?\r\n                        factory.handles(selectedObject) :\r\n                        [];\r\n            }\r\n\r\n            // Create a new factory for handles, based on root object in view\r\n            function populateForObject(domainObject) {\r\n                var dragHandler = domainObject && new TimelineDragHandler(\r\n                        domainObject,\r\n                        objectLoader\r\n                    );\r\n\r\n                // Reinstantiate the factory\r\n                factory = dragHandler && new TimelineDragHandleFactory(\r\n                    dragHandler,\r\n                    new TimelineSnapHandler(dragHandler)\r\n                );\r\n\r\n                // If there's a selected object, restore the handles\r\n                refreshHandles();\r\n            }\r\n\r\n            // Change the current selection\r\n            function select(swimlane) {\r\n                // Cache selection to restore handles if other changes occur\r\n                selectedObject = swimlane && swimlane.domainObject;\r\n\r\n                // Provide handles for this selection, if it's defined\r\n                refreshHandles();\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the currently-applicable set of drag handles.\r\n                 * @returns {Array} drag handles\r\n                 */\r\n                get: function () {\r\n                    return handles;\r\n                },\r\n                /**\r\n                 * Set the root object in view. Drag interactions consider\r\n                 * the full graph for snapping behavior, so this is needed.\r\n                 * @param {DomainObject} domainObject the timeline object\r\n                 *        being viewed\r\n                 */\r\n                populate: populateForObject,\r\n                /**\r\n                 * Update selection state. Passing undefined means there\r\n                 * is no selection.\r\n                 * @param {TimelineSwimlane} swimlane the selected swimlane\r\n                 */\r\n                select: select\r\n            };\r\n        }\r\n\r\n        return TimelineDragPopulator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineController',[\r\n        './swimlane/TimelineSwimlanePopulator',\r\n        './graph/TimelineGraphPopulator',\r\n        './drag/TimelineDragPopulator'\r\n    ],\r\n    function (\r\n        TimelineSwimlanePopulator,\r\n        TimelineGraphPopulator,\r\n        TimelineDragPopulator\r\n    ) {\r\n\r\n        /**\r\n         * Controller for the Timeline view.\r\n         * @constructor\r\n         */\r\n        function TimelineController($scope, $q, objectLoader, MINIMUM_DURATION) {\r\n            var swimlanePopulator = new TimelineSwimlanePopulator(\r\n                    objectLoader,\r\n                    $scope.configuration || {},\r\n                    $scope.selection\r\n                ),\r\n                graphPopulator = new TimelineGraphPopulator($q),\r\n                dragPopulator = new TimelineDragPopulator(objectLoader);\r\n\r\n            // Hash together all modification times. A sum is sufficient here,\r\n            // since modified timestamps should be non-decreasing.\r\n            function modificationSum() {\r\n                var sum = 0;\r\n                swimlanePopulator.get().forEach(function (swimlane) {\r\n                    sum += swimlane.domainObject.getModel().modified || 0;\r\n                });\r\n                return sum;\r\n            }\r\n\r\n            // Reduce graph states to a watch-able number. A bitmask is\r\n            // sufficient here, since only ~30 graphed elements make sense\r\n            // (due to limits on recognizably unique line colors)\r\n            function graphMask() {\r\n                var mask = 0, bit = 1;\r\n                swimlanePopulator.get().forEach(function (swimlane) {\r\n                    mask += swimlane.graph() ? 0 : bit;\r\n                    bit *= 2;\r\n                });\r\n                return mask;\r\n            }\r\n\r\n            // Repopulate based on detected modification to in-view objects\r\n            function repopulateSwimlanes() {\r\n                swimlanePopulator.populate($scope.domainObject);\r\n                dragPopulator.populate($scope.domainObject);\r\n                graphPopulator.populate(swimlanePopulator.get());\r\n            }\r\n\r\n            // Repopulate graphs based on modification to swimlane graph state\r\n            function repopulateGraphs() {\r\n                graphPopulator.populate(swimlanePopulator.get());\r\n            }\r\n\r\n            // Refresh resource graphs\r\n            function refresh() {\r\n                if (graphPopulator) {\r\n                    graphPopulator.get().forEach(function (graph) {\r\n                        graph.refresh();\r\n                    });\r\n                }\r\n            }\r\n\r\n            $scope.$watch(\"configuration\", swimlanePopulator.configure);\r\n\r\n            // Recalculate swimlane state on changes\r\n            $scope.$watch(\"domainObject\", swimlanePopulator.populate);\r\n\r\n            // Also recalculate whenever anything in view is modified\r\n            $scope.$watch(modificationSum, repopulateSwimlanes);\r\n\r\n            // Carry over changes in swimlane set to changes in graphs\r\n            $scope.$watch(graphMask, repopulateGraphs);\r\n\r\n            // Pass selection object into swimlane populator\r\n            $scope.$watch(\"selection\", swimlanePopulator.selection);\r\n\r\n            // Convey current selection to drag handle populator\r\n            $scope.$watch(\"selection.get()\", dragPopulator.select);\r\n\r\n            // Provide initial scroll bar state, container for pane positions\r\n            $scope.scroll = { x: 0, y: 0 };\r\n            $scope.panes = {};\r\n\r\n            // Expose active set of swimlanes\r\n            return {\r\n                /**\r\n                 * Get the end of the displayed timeline, in milliseconds.\r\n                 * @returns {number} the end of the displayed timeline\r\n                 */\r\n                end: swimlanePopulator.end.bind(swimlanePopulator),\r\n                /**\r\n                 * Get the swimlanes which should currently be displayed.\r\n                 * @returns {TimelineSwimlane[]} the swimlanes\r\n                 */\r\n                swimlanes: swimlanePopulator.get,\r\n                /**\r\n                 * Get the resource graphs which should currently be displayed.\r\n                 * @returns {TimelineGraph[]} the graphs\r\n                 */\r\n                graphs: graphPopulator.get,\r\n                /**\r\n                 * Get drag handles for the current selection.\r\n                 * @returns {TimelineDragHandle[]} the drag handles\r\n                 */\r\n                handles: dragPopulator.get,\r\n                /**\r\n                 * Refresh resource graphs (during drag.)\r\n                 */\r\n                refresh: refresh\r\n            };\r\n        }\r\n\r\n        return TimelineController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineGraphController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the graph area of a timeline view.\r\n         * The set of graphs to show is provided by the timeline\r\n         * controller and communicated into the template via \"parameters\"\r\n         * in scope.\r\n         * @constructor\r\n         */\r\n        function TimelineGraphController($scope, resources) {\r\n            var resourceMap = {},\r\n                labelCache = {};\r\n\r\n            // Add an element to the resource map\r\n            function addToResourceMap(resource) {\r\n                var key = resource.key;\r\n                if (key && !resourceMap[key]) {\r\n                    resourceMap[key] = resource;\r\n                }\r\n            }\r\n\r\n            // Update the display bounds for all graphs to match\r\n            // scroll and/or width.\r\n            function updateGraphs(parameters) {\r\n                (parameters.graphs || []).forEach(function (graph) {\r\n                    graph.setBounds(parameters.origin, parameters.duration);\r\n                });\r\n            }\r\n\r\n            // Add all resources to map for simpler lookup\r\n            resources.forEach(addToResourceMap);\r\n\r\n            // Update graphs as parameters change\r\n            $scope.$watchCollection(\"parameters\", updateGraphs);\r\n\r\n            return {\r\n                /**\r\n                 * Get a label object (suitable to pass into the\r\n                 * `timeline-resource-graph-labels` template) for\r\n                 * the specified graph.\r\n                 * @param {TimelineGraph} the graph to label\r\n                 * @returns {object} an object containing labels\r\n                 */\r\n                label: function (graph) {\r\n                    var key = graph.key,\r\n                        resource = resourceMap[key] || {},\r\n                        name = resource.name || \"\",\r\n                        units = resource.units,\r\n                        min = graph.minimum() || 0,\r\n                        max = graph.maximum() || 0,\r\n                        label = labelCache[key] || {};\r\n\r\n                    // Cache the label (this is passed into a template,\r\n                    // so avoid excessive digest cycles)\r\n                    labelCache[key] = label;\r\n\r\n                    // Include units in title\r\n                    label.title = name + (units ? (\" (\" + units + \")\") : \"\");\r\n\r\n                    // Provide low, middle, high data values\r\n                    label.low = min.toFixed(3);\r\n                    label.middle = ((min + max) / 2).toFixed(3);\r\n                    label.high = max.toFixed(3);\r\n\r\n                    return label;\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineGraphController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineDateTimeController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the `datetime` form control.\r\n         * This is a composite control; it includes multiple\r\n         * input fields but outputs a single timestamp (in\r\n         * milliseconds since start of 1970) to the ngModel.\r\n         *\r\n         * @constructor\r\n         */\r\n        function DateTimeController($scope) {\r\n\r\n            // Update the data model\r\n            function updateModel(datetime) {\r\n                var days = parseInt(datetime.days, 10) || 0,\r\n                    hour = parseInt(datetime.hours, 10) || 0,\r\n                    min = parseInt(datetime.minutes, 10) || 0,\r\n                    sec = parseInt(datetime.seconds, 10) || 0,\r\n                    epoch = \"SET\", // Only permit SET, for now\r\n                    timestamp;\r\n\r\n                // Build up timestamp\r\n                timestamp = days * 24;\r\n                timestamp = (hour + timestamp) * 60;\r\n                timestamp = (min + timestamp) * 60;\r\n                timestamp = (sec + timestamp) * 1000;\r\n\r\n                // Set in the model\r\n                $scope.ngModel[$scope.field] = {\r\n                    timestamp: timestamp,\r\n                    epoch: epoch\r\n                };\r\n            }\r\n\r\n            // Update the displayed state\r\n            function updateForm(modelState) {\r\n                var timestamp = (modelState || {}).timestamp || 0,\r\n                    datetime = $scope.datetime;\r\n\r\n                timestamp = Math.floor(timestamp / 1000);\r\n                datetime.seconds = timestamp % 60;\r\n                timestamp = Math.floor(timestamp / 60);\r\n                datetime.minutes = timestamp % 60;\r\n                timestamp = Math.floor(timestamp / 60);\r\n                datetime.hours = timestamp % 24;\r\n                timestamp = Math.floor(timestamp / 24);\r\n                datetime.days = timestamp;\r\n            }\r\n\r\n            // Retrieve state from field, for watch\r\n            function getModelState() {\r\n                return $scope.ngModel[$scope.field];\r\n            }\r\n\r\n            // Update value whenever any field changes.\r\n            $scope.$watchCollection(\"datetime\", updateModel);\r\n            $scope.$watchCollection(getModelState, updateForm);\r\n\r\n            // Initialize the scope\r\n            $scope.datetime = {};\r\n            updateForm(getModelState());\r\n        }\r\n\r\n        return DateTimeController;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineZoomController',[],\r\n    function () {\r\n        var PADDING = 0.25;\r\n\r\n        /**\r\n         * Controls the pan-zoom state of a timeline view.\r\n         * @constructor\r\n         */\r\n        function TimelineZoomController($scope, $window, ZOOM_CONFIGURATION) {\r\n            // Prefer to start with the middle index\r\n            var zoomLevels = ZOOM_CONFIGURATION.levels || [1000],\r\n                zoomIndex = Math.floor(zoomLevels.length / 2),\r\n                tickWidth = ZOOM_CONFIGURATION.width || 200;\r\n\r\n            function toMillis(pixels) {\r\n                return (pixels / tickWidth) * zoomLevels[zoomIndex];\r\n            }\r\n\r\n            function toPixels(millis) {\r\n                return tickWidth * millis / zoomLevels[zoomIndex];\r\n            }\r\n\r\n            // Get/set zoom level\r\n            function setZoomLevel(level) {\r\n                if (!isNaN(level)) {\r\n                    // Modify zoom level, keeping it in range\r\n                    zoomIndex = Math.min(\r\n                        Math.max(level, 0),\r\n                        zoomLevels.length - 1\r\n                    );\r\n                }\r\n            }\r\n\r\n            function setScroll(x) {\r\n                $window.requestAnimationFrame(function () {\r\n                    $scope.scroll.x = x;\r\n                    $scope.$apply();\r\n                });\r\n            }\r\n\r\n            function initializeZoomFromTimespan(timespan) {\r\n                var timelineDuration = timespan.getDuration();\r\n                zoomIndex = 0;\r\n                while (toMillis($scope.scroll.width) < timelineDuration &&\r\n                        zoomIndex < zoomLevels.length - 1) {\r\n                    zoomIndex += 1;\r\n                }\r\n                setScroll(toPixels(timespan.getStart()));\r\n            }\r\n\r\n            function initializeZoom() {\r\n                if ($scope.domainObject) {\r\n                    $scope.domainObject.useCapability('timespan')\r\n                        .then(initializeZoomFromTimespan);\r\n                }\r\n            }\r\n\r\n            $scope.$watch(\"domainObject\", initializeZoom);\r\n\r\n            return {\r\n                /**\r\n                 * Increase or decrease the current zoom level by a given\r\n                 * number of steps. Positive steps zoom in, negative steps\r\n                 * zoom out.\r\n                 * If called with no arguments, this returns the current\r\n                 * zoom level, expressed as the number of milliseconds\r\n                 * associated with a given tick mark.\r\n                 * @param {number} steps how many steps to zoom in\r\n                 * @returns {number} current zoom level (as the size of a\r\n                 *          major tick mark, in pixels)\r\n                 */\r\n                zoom: function (amount) {\r\n                    // Update the zoom level if called with an argument\r\n                    if (arguments.length > 0 && !isNaN(amount)) {\r\n                        var bounds = $scope.scroll;\r\n                        var center = this.toMillis(bounds.x + bounds.width / 2);\r\n                        setZoomLevel(zoomIndex + amount);\r\n                        setScroll(this.toPixels(center) - bounds.width / 2);\r\n                    }\r\n                    return zoomLevels[zoomIndex];\r\n                },\r\n                /**\r\n                 * Set the zoom level to fit the bounds of the timeline\r\n                 * being viewed.\r\n                 */\r\n                fit: initializeZoom,\r\n                /**\r\n                 * Get the width, in pixels, of a specific time duration at\r\n                 * the current zoom level.\r\n                 * @returns {number} the number of pixels\r\n                 */\r\n                toPixels: toPixels,\r\n                /**\r\n                 * Get the time duration, in milliseconds, occupied by the\r\n                 * width (specified in pixels) at the current zoom level.\r\n                 * @returns {number} the number of pixels\r\n                 */\r\n                toMillis: toMillis,\r\n                /**\r\n                 * Get the pixel width necessary to fit the specified\r\n                 * timestamp, expressed as an offset in milliseconds from\r\n                 * the start of the timeline.\r\n                 * @param {number} timestamp the time to display\r\n                 */\r\n                width: function (timestamp) {\r\n                    var pixels = Math.ceil(toPixels(timestamp * (1 + PADDING)));\r\n                    return Math.max($scope.scroll.width, pixels);\r\n                }\r\n            };\r\n        }\r\n\r\n        return TimelineZoomController;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineTickController',[\"../TimelineFormatter\"],\r\n    function (TimelineFormatter) {\r\n\r\n        var FORMATTER = new TimelineFormatter();\r\n\r\n        /**\r\n         * Provides labels for the tick mark area of a timeline view.\r\n         * Since the tick mark regin is potentially extremeley large,\r\n         * only the subset of ticks which will actually be shown in\r\n         * view are provided.\r\n         * @constructor\r\n         */\r\n        function TimelineTickController() {\r\n            var labels = [],\r\n                lastFirst,\r\n                lastStep,\r\n                lastCount,\r\n                lastStartMillis,\r\n                lastEndMillis;\r\n\r\n            // Actually recalculate the labels from scratch\r\n            function calculateLabels(first, count, step, toMillis) {\r\n                var result = [],\r\n                    current;\r\n\r\n                // Create enough labels to fill the visible area\r\n                while (result.length < count) {\r\n                    current = first + step * result.length;\r\n                    result.push({\r\n                        // Horizontal pixel position of this label\r\n                        left: current,\r\n                        // Text to display in this label\r\n                        text: FORMATTER.format(toMillis(current))\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            // Get tick labels for this pixel span (recalculating if needed)\r\n            function getLabels(start, width, step, toMillis) {\r\n                // Calculate parameters for labels (first pixel position, last\r\n                // pixel position.) These are checked to detect changes.\r\n                var first = Math.floor(start / step) * step,\r\n                    last = Math.ceil((start + width) / step) * step,\r\n                    count = ((last - first) / step) + 1,\r\n                    startMillis = toMillis(first),\r\n                    endMillis = toMillis(last),\r\n                    changed = (lastFirst !== first) ||\r\n                            (lastCount !== count) ||\r\n                            (lastStep !== step) ||\r\n                            (lastStartMillis !== startMillis) ||\r\n                            (lastEndMillis !== endMillis);\r\n\r\n                // This will be used in a template, so only recalculate on\r\n                // change.\r\n                if (changed) {\r\n                    labels = calculateLabels(first, count, step, toMillis);\r\n                    // Cache to avoid recomputing later\r\n                    lastFirst = first;\r\n                    lastCount = count;\r\n                    lastStep = step;\r\n                    lastStartMillis = startMillis;\r\n                    lastEndMillis = endMillis;\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n\r\n            return {\r\n                /**\r\n                 * Get labels for use in the visible region of a timeline's\r\n                 * tick mark area. This will return the same array instance\r\n                 * (without recalculating its contents) if called with the\r\n                 * same parameters (and same apparent zoom state, as determined\r\n                 * via `toMillis`), so it is safe to use in a template.\r\n                 *\r\n                 * @param {number} start left-most pixel position in view\r\n                 * @param {number} width pixel width in view\r\n                 * @param {number} step size, in pixels, of each major tick\r\n                 * @param {Function} toMillis function to convert from pixel\r\n                 *        positions to milliseconds\r\n                 * @returns {Array} an array of tick mark labels, suitable\r\n                 *          for use in the `timeline-ticks` template\r\n                 */\r\n                labels: getLabels\r\n            };\r\n        }\r\n\r\n        return TimelineTickController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineTableController',[\"../TimelineFormatter\"],\r\n    function (TimelineFormatter) {\r\n\r\n        var FORMATTER = new TimelineFormatter();\r\n\r\n        /**\r\n         * Provides tabular data for the Timeline's tabular view area.\r\n         */\r\n        function TimelineTableController() {\r\n\r\n            function getNiceTime(millis) {\r\n                return FORMATTER.format(millis);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Return human-readable time in the expected format,\r\n                 * currently SET.\r\n                 * @param {number} millis duration, in millisecond\r\n                 * @return {string} human-readable duration\r\n                 */\r\n                niceTime: getNiceTime\r\n            };\r\n        }\r\n\r\n        return TimelineTableController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/TimelineGanttController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Control for Gantt bars in a timeline view.\r\n         * Primarily reesponsible for supporting the positioning of Gantt\r\n         * bars; particularly, this ensures that the left and right edges\r\n         * never go to far off screen, because in some environments this\r\n         * will effect rendering performance without visible results.\r\n         * @constructor\r\n         * @param {number} MAXIMUM_OFFSCREEN the maximum number of pixels\r\n         *        allowed to go off-screen (to either the left or the right)\r\n         */\r\n        function TimelineGanttController(MAXIMUM_OFFSCREEN) {\r\n            // Pixel position for the CSS left property\r\n            function left(timespan, scroll, toPixels) {\r\n                return Math.max(\r\n                    toPixels(timespan.getStart()),\r\n                    scroll.x - MAXIMUM_OFFSCREEN\r\n                );\r\n            }\r\n\r\n            // Pixel value for the CSS width property\r\n            function width(timespan, scroll, toPixels) {\r\n                var x = left(timespan, scroll, toPixels),\r\n                    right = Math.min(\r\n                        toPixels(timespan.getEnd()),\r\n                        scroll.x + scroll.width + MAXIMUM_OFFSCREEN\r\n                    );\r\n                return right - x;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the pixel position for the `left` style property\r\n                 * of a Gantt bar for the specified timespan.\r\n                 * @param {Timespan} timespan the timespan to be represented\r\n                 * @param scroll an object containing an `x` and `width`\r\n                 *        property, representing the scroll position and\r\n                 *        visible width, respectively.\r\n                 * @param {Function} toPixels a function to convert\r\n                 *        a timestamp to a pixel position\r\n                 * @returns {number} the pixel position of the left edge\r\n                 */\r\n                left: left,\r\n                /**\r\n                 * Get the pixel value for the `width` style property\r\n                 * of a Gantt bar for the specified timespan.\r\n                 * @param {Timespan} timespan the timespan to be represented\r\n                 * @param scroll an object containing an `x` and `width`\r\n                 *        property, representing the scroll position and\r\n                 *        visible width, respectively.\r\n                 * @param {Function} toPixels a function to convert\r\n                 *        a timestamp to a pixel position\r\n                 * @returns {number} the pixel width of this Gantt bar\r\n                 */\r\n                width: width\r\n            };\r\n        }\r\n\r\n        return TimelineGanttController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/controllers/ActivityModeValuesController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller which support the Values view of Activity Modes.\r\n         * @constructor\r\n         * @param {Array} resources definitions for extensions of\r\n         *        category `resources`\r\n         */\r\n        function ActivityModeValuesController(resources) {\r\n            var metadata = {};\r\n\r\n            // Store metadata for a specific resource type\r\n            function storeMetadata(resource) {\r\n                var key = (resource || {}).key;\r\n                if (key) {\r\n                    metadata[key] = resource;\r\n                }\r\n            }\r\n\r\n            // Populate the lookup table to resource metadata\r\n            resources.forEach(storeMetadata);\r\n\r\n            return {\r\n                /**\r\n                 * Look up metadata associated with the specified\r\n                 * resource type.\r\n                 */\r\n                metadata: function (key) {\r\n                    return metadata[key];\r\n                }\r\n            };\r\n        }\r\n\r\n        return ActivityModeValuesController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/ActivityTimespan',[],\r\n    function () {\r\n\r\n        /**\r\n         * Describes the time span of an activity object.\r\n         * @param model the activity's object model\r\n         */\r\n        function ActivityTimespan(model, mutation) {\r\n            // Get the start time for this timeline\r\n            function getStart() {\r\n                return model.start.timestamp;\r\n            }\r\n\r\n            // Get the end time for this timeline\r\n            function getEnd() {\r\n                return model.start.timestamp + model.duration.timestamp;\r\n            }\r\n\r\n            // Get the duration of this timeline\r\n            function getDuration() {\r\n                return model.duration.timestamp;\r\n            }\r\n\r\n            // Get the epoch used by this timeline\r\n            function getEpoch() {\r\n                return model.start.epoch; // Surface elapsed time\r\n            }\r\n\r\n            // Set the start time associated with this object\r\n            function setStart(value) {\r\n                var end = getEnd();\r\n                mutation.mutate(function (m) {\r\n                    m.start.timestamp = Math.max(value, 0);\r\n                    // Update duration to keep end time\r\n                    m.duration.timestamp = Math.max(end - value, 0);\r\n                }, model.modified);\r\n            }\r\n\r\n            // Set the duration associated with this object\r\n            function setDuration(value) {\r\n                mutation.mutate(function (m) {\r\n                    m.duration.timestamp = Math.max(value, 0);\r\n                }, model.modified);\r\n            }\r\n\r\n            // Set the end time associated with this object\r\n            function setEnd(value) {\r\n                var start = getStart();\r\n                mutation.mutate(function (m) {\r\n                    m.duration.timestamp = Math.max(value - start, 0);\r\n                }, model.modified);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the start time, in milliseconds relative to the epoch.\r\n                 * @returns {number} the start time\r\n                 */\r\n                getStart: getStart,\r\n                /**\r\n                 * Get the duration, in milliseconds.\r\n                 * @returns {number} the duration\r\n                 */\r\n                getDuration: getDuration,\r\n                /**\r\n                 * Get the end time, in milliseconds relative to the epoch.\r\n                 * @returns {number} the end time\r\n                 */\r\n                getEnd: getEnd,\r\n                /**\r\n                 * Set the start time, in milliseconds relative to the epoch.\r\n                 * @param {number} the new value\r\n                 */\r\n                setStart: setStart,\r\n                /**\r\n                 * Set the duration, in milliseconds.\r\n                 * @param {number} the new value\r\n                 */\r\n                setDuration: setDuration,\r\n                /**\r\n                 * Set the end time, in milliseconds relative to the epoch.\r\n                 * @param {number} the new value\r\n                 */\r\n                setEnd: setEnd,\r\n                /**\r\n                 * Get a string identifying the reference epoch used for\r\n                 * start and end times.\r\n                 * @returns {string} the epoch\r\n                 */\r\n                getEpoch: getEpoch\r\n            };\r\n        }\r\n\r\n        return ActivityTimespan;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/ActivityTimespanCapability',['./ActivityTimespan'],\r\n    function (ActivityTimespan) {\r\n\r\n        /**\r\n         * Implements the `timespan` capability for Activity objects.\r\n         *\r\n         * @constructor\r\n         * @param $q Angular's $q, for promise-handling\r\n         * @param {DomainObject} domainObject the Activity\r\n         */\r\n        function ActivityTimespanCapability($q, domainObject) {\r\n            // Promise time span\r\n            function promiseTimeSpan() {\r\n                return $q.when(new ActivityTimespan(\r\n                    domainObject.getModel(),\r\n                    domainObject.getCapability('mutation')\r\n                ));\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the time span (start, end, duration) of this activity.\r\n                 * @returns {Promise.<ActivityTimespan>} the time span of\r\n                 *          this activity\r\n                 */\r\n                invoke: promiseTimeSpan\r\n            };\r\n        }\r\n\r\n        // Only applies to timeline objects\r\n        ActivityTimespanCapability.appliesTo = function (model) {\r\n            return model && (model.type === 'activity');\r\n        };\r\n\r\n        return ActivityTimespanCapability;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/TimelineTimespan',[],\r\n    function () {\r\n\r\n        /**\r\n         * Describes the time span of a timeline object.\r\n         * @param model the timeline's object model\r\n         * @param {Timespan[]} time spans of contained activities\r\n         */\r\n        function TimelineTimespan(model, mutation, timespans) {\r\n            // Get the start time for this timeline\r\n            function getStart() {\r\n                return model.start.timestamp;\r\n            }\r\n\r\n            // Get the end time for another time span\r\n            function getTimespanEnd(timespan) {\r\n                return timespan.getEnd();\r\n            }\r\n\r\n            // Wrapper for Math.max; used for max-finding of end time\r\n            function max(a, b) {\r\n                return Math.max(a, b);\r\n            }\r\n\r\n            // Get the end time for this timeline\r\n            function getEnd() {\r\n                return timespans.map(getTimespanEnd).reduce(max, getStart());\r\n            }\r\n\r\n            // Get the duration of this timeline\r\n            function getDuration() {\r\n                return getEnd() - getStart();\r\n            }\r\n\r\n            // Set the start time associated with this object\r\n            function setStart(value) {\r\n                mutation.mutate(function (m) {\r\n                    m.start.timestamp = Math.max(value, 0);\r\n                }, model.modified);\r\n            }\r\n\r\n            // Set the duration associated with this object\r\n            function setDuration() {\r\n                // No-op; duration is implicit\r\n            }\r\n\r\n            // Set the end time associated with this object\r\n            function setEnd() {\r\n                // No-op; end time is implicit\r\n            }\r\n\r\n            // Get the epoch used by this timeline\r\n            function getEpoch() {\r\n                return model.start.epoch;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the start time, in milliseconds relative to the epoch.\r\n                 * @returns {number} the start time\r\n                 */\r\n                getStart: getStart,\r\n                /**\r\n                 * Get the duration, in milliseconds.\r\n                 * @returns {number} the duration\r\n                 */\r\n                getDuration: getDuration,\r\n                /**\r\n                 * Get the end time, in milliseconds relative to the epoch.\r\n                 * @returns {number} the end time\r\n                 */\r\n                getEnd: getEnd,\r\n                /**\r\n                 * Set the start time, in milliseconds relative to the epoch.\r\n                 * @param {number} the new value\r\n                 */\r\n                setStart: setStart,\r\n                /**\r\n                 * Set the duration, in milliseconds. Timeline durations are\r\n                 * implicit, so this is actually a no-op\r\n                 * @param {number} the new value\r\n                 */\r\n                setDuration: setDuration,\r\n                /**\r\n                 * Set the end time, in milliseconds. Timeline end times are\r\n                 * implicit, so this is actually a no-op.\r\n                 * @param {number} the new value\r\n                 */\r\n                setEnd: setEnd,\r\n                /**\r\n                 * Get a string identifying the reference epoch used for\r\n                 * start and end times.\r\n                 * @returns {string} the epoch\r\n                 */\r\n                getEpoch: getEpoch\r\n            };\r\n        }\r\n\r\n        return TimelineTimespan;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/TimelineTimespanCapability',['./TimelineTimespan'],\r\n    function (TimelineTimespan) {\r\n\r\n        /**\r\n         * Implements the `timespan` capability for Timeline objects.\r\n         *\r\n         * @constructor\r\n         * @param $q Angular's $q, for promise-handling\r\n         * @param {DomainObject} domainObject the Timeline\r\n         */\r\n        function TimelineTimespanCapability($q, domainObject) {\r\n            // Check if a capability is defin\r\n\r\n            // Look up a child object's time span\r\n            function lookupTimeSpan(childObject) {\r\n                return childObject.useCapability('timespan');\r\n            }\r\n\r\n            // Check if a child object exposes a time span\r\n            function hasTimeSpan(childObject) {\r\n                return childObject.hasCapability('timespan');\r\n            }\r\n\r\n            // Instantiate a time span bounding other time spans\r\n            function giveTimeSpan(timespans) {\r\n                return new TimelineTimespan(\r\n                    domainObject.getModel(),\r\n                    domainObject.getCapability('mutation'),\r\n                    timespans\r\n                );\r\n            }\r\n\r\n            // Build a time span object that fits all children\r\n            function buildTimeSpan(childObjects) {\r\n                return $q.all(\r\n                    childObjects.filter(hasTimeSpan).map(lookupTimeSpan)\r\n                ).then(giveTimeSpan);\r\n            }\r\n\r\n            // Promise\r\n            function promiseTimeSpan() {\r\n                return domainObject.useCapability('composition')\r\n                    .then(buildTimeSpan);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the time span (start, end, duration) of this timeline.\r\n                 * @returns {Promise.<TimelineTimespan>} the time span of\r\n                 *          this timeline\r\n                 */\r\n                invoke: promiseTimeSpan\r\n            };\r\n        }\r\n\r\n        // Only applies to timeline objects\r\n        TimelineTimespanCapability.appliesTo = function (model) {\r\n            return model && (model.type === 'timeline');\r\n        };\r\n\r\n        return TimelineTimespanCapability;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/UtilizationCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provide the resource utilization over time for a timeline\r\n         * or activity object. A utilization is presented as an object\r\n         * with four properties:\r\n         * * `key`: The resource being utilized.\r\n         * * `value`: The numeric utilization of that resource.\r\n         * * `start`: The start time of the resource's utilization.\r\n         * * `end`: The duration of this resource's utilization.\r\n         * * `epoch`: The epoch to which `start` is relative.\r\n         * @constructor\r\n         */\r\n        function UtilizationCapability($q, domainObject) {\r\n\r\n            // Utility function for array reduction\r\n            function concatenate(a, b) {\r\n                return (a || []).concat(b || []);\r\n            }\r\n\r\n            // Check whether an element in an array looks unique (for below)\r\n            function unique(element, index, array) {\r\n                return (index === 0) || (array[index - 1] !== element);\r\n            }\r\n\r\n            // Utility function to ensure sorted array is all unique\r\n            function uniquify(array) {\r\n                return array.filter(unique);\r\n            }\r\n\r\n            // Utility function for sorting strings arrays\r\n            function sort(array) {\r\n                return array.sort();\r\n            }\r\n\r\n            // Combine into one big array\r\n            function flatten(arrayOfArrays) {\r\n                return arrayOfArrays.reduce(concatenate, []);\r\n            }\r\n\r\n            // Promise the objects contained by this timeline/activity\r\n            function promiseComposition() {\r\n                return $q.when(domainObject.useCapability('composition') || []);\r\n            }\r\n\r\n            // Promise all subsystem modes associated with this object\r\n            function promiseModes() {\r\n                var relationship = domainObject.getCapability('relationship'),\r\n                    modes = relationship && relationship.getRelatedObjects('modes');\r\n                return $q.when(modes || []);\r\n            }\r\n\r\n            // Promise the utilization which results directly from this object\r\n            function promiseInternalUtilization() {\r\n                var utilizations = {};\r\n\r\n                // Record the cost of a given activity mode\r\n                function addUtilization(mode) {\r\n                    var cost = mode.getCapability('cost');\r\n                    if (cost) {\r\n                        cost.resources().forEach(function (k) {\r\n                            utilizations[k] = utilizations[k] || 0;\r\n                            utilizations[k] += cost.cost(k);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Record costs for these modes\r\n                function addUtilizations(modes) {\r\n                    modes.forEach(addUtilization);\r\n                }\r\n\r\n                // Look up start/end times for this object\r\n                function lookupTimespan() {\r\n                    return domainObject.useCapability('timespan');\r\n                }\r\n\r\n                // Provide the result\r\n                function giveResult(timespan) {\r\n                    // Convert to utilization objects\r\n                    return Object.keys(utilizations).sort().map(function (k) {\r\n                        return {\r\n                            key: k,\r\n                            value: utilizations[k],\r\n                            start: timespan.getStart(),\r\n                            end: timespan.getEnd(),\r\n                            epoch: timespan.getEpoch()\r\n                        };\r\n                    });\r\n                }\r\n\r\n                return promiseModes()\r\n                    .then(addUtilizations)\r\n                    .then(lookupTimespan)\r\n                    .then(giveResult);\r\n            }\r\n\r\n            // Look up a specific object's resource utilization\r\n            function lookupUtilization(object) {\r\n                return object.useCapability('utilization');\r\n            }\r\n\r\n            // Look up a specific object's resource utilization keys\r\n            function lookupUtilizationResources(object) {\r\n                var utilization = object.getCapability('utilization');\r\n                return utilization && utilization.resources();\r\n            }\r\n\r\n            // Promise a consolidated list of resource utilizations\r\n            function mapUtilization(objects) {\r\n                return $q.all(objects.map(lookupUtilization))\r\n                    .then(flatten);\r\n            }\r\n\r\n            // Promise a consolidated list of resource utilization keys\r\n            function mapUtilizationResources(objects) {\r\n                return $q.all(objects.map(lookupUtilizationResources))\r\n                    .then(flatten);\r\n            }\r\n\r\n            // Promise utilization associated with contained objects\r\n            function promiseExternalUtilization() {\r\n                // Get the composition, then consolidate their utilizations\r\n                return promiseComposition().then(mapUtilization);\r\n            }\r\n\r\n            // Get resource keys for this mode\r\n            function getModeKeys(mode) {\r\n                var cost = mode.getCapability('cost');\r\n                return cost ? cost.resources() : [];\r\n            }\r\n\r\n            // Map the above (for use in below)\r\n            function mapModeKeys(modes) {\r\n                return modes.map(getModeKeys);\r\n            }\r\n\r\n            // Promise identifiers for resources associated with modes\r\n            function promiseInternalKeys() {\r\n                return promiseModes().then(mapModeKeys).then(flatten);\r\n            }\r\n\r\n            // Promise identifiers for resources associated with modes\r\n            function promiseExternalKeys() {\r\n                return promiseComposition().then(mapUtilizationResources);\r\n            }\r\n\r\n            // Promise identifiers for resources used\r\n            function promiseResourceKeys() {\r\n                return $q.all([\r\n                    promiseInternalKeys(),\r\n                    promiseExternalKeys()\r\n                ]).then(flatten).then(sort).then(uniquify);\r\n            }\r\n\r\n            // Promise all utilization\r\n            function promiseAllUtilization() {\r\n                // Concatenate internal utilization (from activity modes)\r\n                // with external utilization (from subactivities)\r\n                return $q.all([\r\n                    promiseInternalUtilization(),\r\n                    promiseExternalUtilization()\r\n                ]).then(flatten);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get the keys for resources associated with this object.\r\n                 * @returns {Promise.<string[]>} a promise for resource identifiers\r\n                 */\r\n                resources: promiseResourceKeys,\r\n                /**\r\n                 * Get the resource utilization associated with this object\r\n                 * directly, not including any resource utilization associated\r\n                 * with contained objects.\r\n                 * @returns {Promise.<Array>}\r\n                 */\r\n                internal: promiseInternalUtilization,\r\n                /**\r\n                 * Get the resource utilization associated with this\r\n                 * object. Results are not sorted. This requires looking\r\n                 * at contained objects, which in turn must happen\r\n                 * asynchronously, so this returns a promise.\r\n                 * @returns {Promise.<Array>} a promise for all resource\r\n                 *          utilizations\r\n                 */\r\n                invoke: promiseAllUtilization\r\n            };\r\n        }\r\n\r\n        // Only applies to timelines and activities\r\n        UtilizationCapability.appliesTo = function (model) {\r\n            return model &&\r\n                ((model.type === 'timeline') ||\r\n                        (model.type === 'activity'));\r\n        };\r\n\r\n        return UtilizationCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/ResourceGraph',[],\r\n    function () {\r\n\r\n        // Utility function to copy an array, sorted by a specific field\r\n        function sort(array, field) {\r\n            return array.slice().sort(function (a, b) {\r\n                return a[field] - b[field];\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Provides data to populate resource graphs associated\r\n         * with timelines and activities.\r\n         * @param {Array} utilizations resource utilizations\r\n         * @constructor\r\n         */\r\n        function ResourceGraph(utilizations) {\r\n            // Overview of algorithm here:\r\n            // * Goal: Have a list of time/value pairs which represents\r\n            //   points along a stepped chart of resource utilization.\r\n            //   Each change (stepping up or down) should have two points,\r\n            //   at the bottom and top of the step respectively.\r\n            // * Step 1: Prepare two lists of utilizations sorted by start\r\n            //   and end times. The \"starts\" will become step-ups, the\r\n            //   \"ends\" will become step-downs.\r\n            // * Step 2: Initialize empty arrays for results, and a variable\r\n            //   for the current utilization level.\r\n            // * Step 3: While there are still start or end times to add...\r\n            //   * Step 3a: Determine whether the next change should be a\r\n            //     step-up (start) or step-down (end) based on which of the\r\n            //     next start/end times comes next (note that starts and ends\r\n            //     are both sorted, so we look at the head of the array.)\r\n            //   * Step 3b: Pull the next start or end (per previous decision)\r\n            //     and convert it to a time-delta pair, negating if it's an\r\n            //     end time (to step down or \"un-step\")\r\n            //   * Step 3c: Add a point at the new time and the current\r\n            //     running total (first point in the step, before the change)\r\n            //     then increment the running total and add a new point\r\n            //     (second point in the step, after the change)\r\n            // * Step 4: Filter out unnecessary points (if two activities\r\n            //   run up against each other, there will be a zero-duration\r\n            //   spike if we don't filter out the extra points from their\r\n            //   start/end times.)\r\n            //\r\n            var starts = sort(utilizations, \"start\"),\r\n                ends = sort(utilizations, \"end\"),\r\n                values = [],\r\n                running = 0;\r\n\r\n            // If there are sequences of points with the same timestamp,\r\n            // allow only the first and last.\r\n            function filterPoint(value, index, vals) {\r\n                // Allow the first or last point as a base case; aside from\r\n                // that, allow only points that have different timestamps\r\n                // from their predecessor or successor.\r\n                return (index === 0) || (index === vals.length - 1) ||\r\n                    (value.domain !== vals[index - 1].domain) ||\r\n                    (value.domain !== vals[index + 1].domain);\r\n            }\r\n\r\n            // Add a step up or down (Step 3c above)\r\n            function addDelta(time, delta) {\r\n                values.push({ domain: time, range: running });\r\n                running += delta;\r\n                values.push({ domain: time, range: running });\r\n            }\r\n\r\n            // Add a start time (Step 3b above)\r\n            function addStart() {\r\n                var next = starts.shift();\r\n                addDelta(next.start, next.value);\r\n            }\r\n\r\n            // Add an end time (Step 3b above)\r\n            function addEnd() {\r\n                var next = ends.shift();\r\n                addDelta(next.end, -next.value);\r\n            }\r\n\r\n            // Decide whether next step should correspond to a start or\r\n            // an end. (Step 3c above)\r\n            function pickStart() {\r\n                return ends.length < 1 ||\r\n                    (starts.length > 0 && starts[0].start <= ends[0].end);\r\n            }\r\n\r\n            // Build up start/end arrays (step 3 above)\r\n            while (starts.length > 0 || ends.length > 0) {\r\n                (pickStart() ? addStart : addEnd)();\r\n            }\r\n\r\n            // Filter out excess points\r\n            values = values.filter(filterPoint);\r\n\r\n            return {\r\n                /**\r\n                 * Get the total number of points in this graph.\r\n                 * @returns {number} the total number of points\r\n                 */\r\n                getPointCount: function () {\r\n                    return values.length;\r\n                },\r\n                /**\r\n                 * Get the domain value (timestamp) for a point in this graph.\r\n                 * @returns {number} the domain value\r\n                 */\r\n                getDomainValue: function (index) {\r\n                    return values[index].domain;\r\n                },\r\n                /**\r\n                 * Get the range value (utilization level) for a point in\r\n                 * this graph.\r\n                 * @returns {number} the range value\r\n                 */\r\n                getRangeValue: function (index) {\r\n                    return values[index].range;\r\n                }\r\n            };\r\n        }\r\n\r\n        return ResourceGraph;\r\n    }\r\n\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/CumulativeGraph',[],\r\n    function () {\r\n\r\n        /**\r\n         * Provide points for a cumulative resource summary graph, using\r\n         * a provided instantaneous resource summary graph.\r\n         *\r\n         * @param {ResourceGraph} graph the resource graph\r\n         * @param {number} minimum the minimum allowable level\r\n         * @param {number} maximum the maximum allowable level\r\n         * @param {number} initial the initial state of the resource\r\n         * @param {number} rate the rate at which one unit of instantaneous\r\n         *        utilization changes the available level in one unit\r\n         *        of domain values (that is, per millisecond)\r\n         * @constructor\r\n         */\r\n        function CumulativeGraph(graph, minimum, maximum, initial, rate) {\r\n            var values;\r\n\r\n            // Calculate the domain value at which a line starting at\r\n            // (domain, range) and proceeding with the specified slope\r\n            // will have the specified range value.\r\n            function intercept(domain, range, slope, value) {\r\n                // value = slope * (intercept - domain) + range\r\n                // value - range = slope * ...\r\n                // intercept - domain = (value - range) / slope\r\n                // intercept = domain + (value - range) / slope\r\n                return domain + (value - range) / slope;\r\n            }\r\n\r\n            // Initialize the data values\r\n            function initializeValues() {\r\n                var vals = [],\r\n                    slope = 0,\r\n                    i;\r\n\r\n                // Add a point (or points, if needed) reaching to the provided\r\n                // domain and/or range value\r\n                function addPoint(domain, range) {\r\n                    var previous = vals[vals.length - 1],\r\n                        delta = domain - previous.domain, // time delta\r\n                        change = delta * slope * rate, // change\r\n                        next = previous.range + change;\r\n\r\n                    // Crop to minimum boundary...\r\n                    if (next < minimum) {\r\n                        vals.push({\r\n                            domain: intercept(\r\n                                previous.domain,\r\n                                previous.range,\r\n                                slope * rate,\r\n                                minimum\r\n                            ),\r\n                            range: minimum\r\n                        });\r\n                        next = minimum;\r\n                    }\r\n\r\n                    // ...and maximum boundary\r\n                    if (next > maximum) {\r\n                        vals.push({\r\n                            domain: intercept(\r\n                                previous.domain,\r\n                                previous.range,\r\n                                slope * rate,\r\n                                maximum\r\n                            ),\r\n                            range: maximum\r\n                        });\r\n                        next = maximum;\r\n                    }\r\n\r\n                    // Add the new data value\r\n                    if (delta > 0) {\r\n                        vals.push({ domain: domain, range: next });\r\n                    }\r\n\r\n                    slope = range;\r\n                }\r\n\r\n                vals.push({ domain: 0, range: initial });\r\n\r\n                for (i = 0; i < graph.getPointCount(); i += 1) {\r\n                    addPoint(graph.getDomainValue(i), graph.getRangeValue(i));\r\n                }\r\n\r\n                return vals;\r\n            }\r\n\r\n            function convertToPercent(point) {\r\n                point.range = 100 *\r\n                    (point.range - minimum) / (maximum - minimum);\r\n            }\r\n\r\n            // Calculate cumulative values...\r\n            values = initializeValues();\r\n\r\n            // ...and convert to percentages.\r\n            values.forEach(convertToPercent);\r\n\r\n            return {\r\n                /**\r\n                 * Get the total number of points in this graph.\r\n                 * @returns {number} the total number of points\r\n                 */\r\n                getPointCount: function () {\r\n                    return values.length;\r\n                },\r\n                /**\r\n                 * Get the domain value (timestamp) for a point in this graph.\r\n                 * @returns {number} the domain value\r\n                 */\r\n                getDomainValue: function (index) {\r\n                    return values[index].domain;\r\n                },\r\n                /**\r\n                 * Get the range value (utilization level) for a point in\r\n                 * this graph.\r\n                 * @returns {number} the range value\r\n                 */\r\n                getRangeValue: function (index) {\r\n                    return values[index].range;\r\n                }\r\n            };\r\n        }\r\n\r\n        return CumulativeGraph;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/GraphCapability',['./ResourceGraph', './CumulativeGraph'],\r\n    function (ResourceGraph, CumulativeGraph) {\r\n\r\n        /**\r\n         * Implements the `graph` capability for Timeline and\r\n         * Activity objects.\r\n         *\r\n         * @constructor\r\n         * @param {DomainObject} domainObject the Timeline or Activity\r\n         */\r\n        function GraphCapability($q, domainObject) {\r\n\r\n\r\n            // Build graphs for this group of utilizations\r\n            function buildGraphs(utilizations) {\r\n                var utilizationMap = {},\r\n                    result = {};\r\n\r\n                // Bucket utilizations by type\r\n                utilizations.forEach(function (u) {\r\n                    var k = u.key;\r\n                    utilizationMap[k] = utilizationMap[k] || [];\r\n                    utilizationMap[k].push(u);\r\n                });\r\n\r\n                // ...then convert to graphs\r\n                Object.keys(utilizationMap).forEach(function (k) {\r\n                    result[k] = new ResourceGraph(utilizationMap[k]);\r\n                });\r\n\r\n                // Add battery state of charge\r\n                if (domainObject.getModel().type === 'timeline' &&\r\n                        result.power &&\r\n                            domainObject.getModel().capacity > 0) {\r\n\r\n                    result.battery = new CumulativeGraph(\r\n                        result.power,\r\n                        0,\r\n                        domainObject.getModel().capacity, // Watts\r\n                        domainObject.getModel().capacity,\r\n                        1 / 3600000 // millis-to-hour (since units are watt-hours)\r\n                    );\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Get resource graphs associated with this object.\r\n                 * This is given as a promise for key-value pairs,\r\n                 * where keys are resource types and values are graph\r\n                 * objects.\r\n                 * @returns {Promise} a promise for resource graphs\r\n                 */\r\n                invoke: function () {\r\n                    return $q.when(\r\n                        domainObject.useCapability('utilization') || []\r\n                    ).then(buildGraphs);\r\n                }\r\n            };\r\n        }\r\n\r\n        // Only applies to timeline objects\r\n        GraphCapability.appliesTo = function (model) {\r\n            return model &&\r\n                ((model.type === 'timeline') ||\r\n                        (model.type === 'activity'));\r\n        };\r\n\r\n        return GraphCapability;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/capabilities/CostCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * Exposes costs associated with a subsystem mode.\r\n         * @constructor\r\n         */\r\n        function CostCapability(domainObject) {\r\n            var model = domainObject.getModel();\r\n\r\n            return {\r\n                /**\r\n                 * Get a list of resource types which have associated\r\n                 * costs for this object. Returned values are machine-readable\r\n                 * keys, and should be paired with external metadata for\r\n                 * presentation (see category of extension `resources`).\r\n                 * @returns {string[]} resource types\r\n                 */\r\n                resources: function () {\r\n                    return Object.keys(model.resources || {}).sort();\r\n                },\r\n                /**\r\n                 * Get the cost associated with a resource of an identified\r\n                 * type (typically, one of the types reported from a\r\n                 * `resources` call.)\r\n                 * @param {string} key the resource type\r\n                 * @returns {number} the associated cost\r\n                 */\r\n                cost: function (key) {\r\n                    return (model.resources || {})[key] || 0;\r\n                },\r\n                /**\r\n                 * Get an object containing key-value pairs describing\r\n                 * resource utilization as described by this object.\r\n                 * Keys are resource types; values are levels of associated\r\n                 * resource utilization.\r\n                 * @returns {object} resource utilizations\r\n                 */\r\n                invoke: function () {\r\n                    return model.resources || {};\r\n                }\r\n            };\r\n        }\r\n\r\n        // Only applies to subsystem modes.\r\n        CostCapability.appliesTo = function (model) {\r\n            return (model || {}).type === 'mode';\r\n        };\r\n\r\n        return CostCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/src/directives/SwimlaneDragConstants',{\r\n    /**\r\n     * The string identifier for the data type used for drag-and-drop\r\n     * composition of domain objects. (e.g. in event.dataTransfer.setData\r\n     * calls.)\r\n     */\r\n    MCT_DRAG_TYPE: 'mct-domain-object-id',\r\n    /**\r\n     * The string identifier for the data type used for drag-and-drop\r\n     * composition of domain objects, by object instance (passed through\r\n     * the dndService)\r\n     */\r\n    MCT_EXTENDED_DRAG_TYPE: 'mct-domain-object',\r\n    /**\r\n     * String identifier for swimlanes being dragged.\r\n     */\r\n    TIMELINE_SWIMLANE_DRAG_TYPE: 'timeline-swimlane'\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/directives/MCTSwimlaneDrop',['./SwimlaneDragConstants'],\r\n    function (SwimlaneDragConstants) {\r\n\r\n        /**\r\n         * Defines the `mct-swimlane-drop` directive. When a drop occurs\r\n         * on an element with this attribute, the swimlane targeted by the drop\r\n         * (identified by the value of this attribute, as an Angular expression)\r\n         * will receive the dropped domain object (at which point it can handle\r\n         * the drop, typically by inserting/reordering.)\r\n         * @param {DndService} dndService drag-and-drop service\r\n         */\r\n        function MCTSwimlaneDrop(dndService) {\r\n\r\n            // Handle dragover events\r\n            function dragOver(e, element, swimlane) {\r\n                var event = (e || {}).originalEvent || e,\r\n                    height = element[0].offsetHeight,\r\n                    rect = element[0].getBoundingClientRect(),\r\n                    offset = event.pageY - rect.top,\r\n                    id = dndService.getData(\r\n                        SwimlaneDragConstants.MCT_DRAG_TYPE\r\n                    ),\r\n                    draggedObject = dndService.getData(\r\n                        SwimlaneDragConstants.MCT_EXTENDED_DRAG_TYPE\r\n                    );\r\n\r\n                if (id) {\r\n                    // TODO: Vary this based on modifier keys\r\n                    event.dataTransfer.dropEffect = 'move';\r\n\r\n                    // Set the swimlane's drop highlight state; top 75% is\r\n                    // for drop-into, bottom 25% is for drop-after.\r\n                    swimlane.highlight(\r\n                        offset < (height * 0.75) &&\r\n                                swimlane.allowDropIn(id, draggedObject)\r\n                    );\r\n                    swimlane.highlightBottom(\r\n                        offset >= (height * 0.75) &&\r\n                                swimlane.allowDropAfter(id, draggedObject)\r\n                    );\r\n\r\n                    // Indicate that we will accept the drag\r\n                    if (swimlane.highlight() || swimlane.highlightBottom()) {\r\n                        event.preventDefault(); // Required in Chrome?\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle drop events\r\n            function drop(e, element, swimlane) {\r\n                var event = (e || {}).originalEvent || e,\r\n                    dataTransfer = event.dataTransfer,\r\n                    id = dataTransfer.getData(\r\n                        SwimlaneDragConstants.MCT_DRAG_TYPE\r\n                    ),\r\n                    draggedSwimlane = dndService.getData(\r\n                        SwimlaneDragConstants.TIMELINE_SWIMLANE_DRAG_TYPE\r\n                    ),\r\n                    droppedObject = draggedSwimlane ?\r\n                        draggedSwimlane.domainObject :\r\n                        dndService.getData(\r\n                            SwimlaneDragConstants.MCT_EXTENDED_DRAG_TYPE\r\n                        );\r\n\r\n                if (id) {\r\n                    event.stopPropagation();\r\n                    e.preventDefault();\r\n                    // Delegate the drop to the swimlane itself\r\n                    swimlane.drop(id, droppedObject);\r\n                }\r\n\r\n                // Clear the swimlane highlights\r\n                swimlane.highlight(false);\r\n                swimlane.highlightBottom(false);\r\n            }\r\n\r\n            function link(scope, element, attrs) {\r\n                // Lookup swimlane by evaluating this attribute\r\n                function lookupSwimlane() {\r\n                    return scope.$eval(attrs.mctSwimlaneDrop);\r\n                }\r\n                // Handle dragover\r\n                element.on('dragover', function (e) {\r\n                    var swimlane = lookupSwimlane(),\r\n                        highlight = swimlane.highlight(),\r\n                        highlightBottom = swimlane.highlightBottom();\r\n\r\n                    dragOver(e, element, swimlane);\r\n\r\n                    if (highlightBottom !== swimlane.highlightBottom() ||\r\n                            highlight !== swimlane.highlight()) {\r\n                        scope.$apply();\r\n                    }\r\n                });\r\n                // Handle drops\r\n                element.on('drop', function (e) {\r\n                    drop(e, element, lookupSwimlane());\r\n                    scope.$apply();\r\n                });\r\n                // Clear highlights when drag leaves this swimlane\r\n                element.on('dragleave', function () {\r\n                    var swimlane = lookupSwimlane(),\r\n                        wasHighlighted = swimlane.highlight() ||\r\n                                swimlane.highlightBottom();\r\n                    swimlane.highlight(false);\r\n                    swimlane.highlightBottom(false);\r\n                    if (wasHighlighted) {\r\n                        scope.$apply();\r\n                    }\r\n                });\r\n            }\r\n\r\n            return {\r\n                // Applies to attributes\r\n                restrict: \"A\",\r\n                // Link using above function\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTSwimlaneDrop;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/directives/MCTSwimlaneDrag',['./SwimlaneDragConstants'],\r\n    function (SwimlaneDragConstants) {\r\n\r\n        /**\r\n         * Defines the `mct-swimlane-drag` directive. When a drag is initiated\r\n         * form an element with this attribute, the swimlane being dragged\r\n         * (identified by the value of this attribute, as an Angular expression)\r\n         * will be exported to the `dndService` as part of the active drag-drop\r\n         * state.\r\n         * @param {DndService} dndService drag-and-drop service\r\n         */\r\n        function MCTSwimlaneDrag(dndService) {\r\n            function link(scope, element, attrs) {\r\n                // Look up the swimlane from the provided expression\r\n                function swimlane() {\r\n                    return scope.$eval(attrs.mctSwimlaneDrag);\r\n                }\r\n                // When drag starts, publish via dndService\r\n                element.on('dragstart', function () {\r\n                    dndService.setData(\r\n                        SwimlaneDragConstants.TIMELINE_SWIMLANE_DRAG_TYPE,\r\n                        swimlane()\r\n                    );\r\n                });\r\n                // When drag ends, clear via dndService\r\n                element.on('dragend', function () {\r\n                    dndService.removeData(\r\n                        SwimlaneDragConstants.TIMELINE_SWIMLANE_DRAG_TYPE\r\n                    );\r\n                });\r\n            }\r\n\r\n            return {\r\n                // Applies to attributes\r\n                restrict: \"A\",\r\n                // Link using above function\r\n                link: link\r\n            };\r\n        }\r\n\r\n        return MCTSwimlaneDrag;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2009-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/timeline/src/services/ObjectLoader',[],\r\n    function () {\r\n\r\n        /**\r\n         * The ObjectLoader is a utility service for loading subgraphs\r\n         * of the composition hierarchy, starting at a provided object,\r\n         * and optionally filtering out objects which fail to meet certain\r\n         * criteria.\r\n         * @constructor\r\n         */\r\n        function ObjectLoader($q) {\r\n\r\n            // Build up an object containing id->object pairs\r\n            // for the subset of the graph that is relevant.\r\n            function loadSubGraph(domainObject, criterion) {\r\n                var result = { domainObject: domainObject, composition: [] },\r\n                    visiting = {},\r\n                    filter;\r\n\r\n                // Check object existence (for criterion-less filtering)\r\n                function exists(object) {\r\n                    return !!object;\r\n                }\r\n\r\n                // Check for capability matching criterion\r\n                function hasCapability(object) {\r\n                    return object && object.hasCapability(criterion);\r\n                }\r\n\r\n                // For the recursive step...\r\n                function loadSubGraphFor(childObject) {\r\n                    return loadSubGraph(childObject, filter);\r\n                }\r\n\r\n                // Store loaded subgraphs into the result\r\n                function storeSubgraphs(subgraphs) {\r\n                    result.composition = subgraphs;\r\n                }\r\n\r\n                // Avoid infinite recursion\r\n                function notVisiting(object) {\r\n                    return !visiting[object.getId()];\r\n                }\r\n\r\n                // Put the composition of this domain object into the result\r\n                function mapIntoResult(composition) {\r\n                    return $q.all(\r\n                        composition.filter(filter).filter(notVisiting)\r\n                            .map(loadSubGraphFor)\r\n                    ).then(storeSubgraphs);\r\n                }\r\n\r\n                // Used to give the final result after promise chaining\r\n                function giveResult() {\r\n                    // Stop suppressing recursive visitation\r\n                    visiting[domainObject.getId()] = true;\r\n                    // And return the expecting result value\r\n                    return result;\r\n                }\r\n\r\n                // Load composition for\r\n                function loadComposition() {\r\n                    // First, record that we're looking at this domain\r\n                    // object to detect cycles and avoid an infinite loop\r\n                    visiting[domainObject.getId()] = true;\r\n                    // Look up the composition, store it to the graph structure\r\n                    return domainObject.useCapability('composition')\r\n                        .then(mapIntoResult)\r\n                        .then(giveResult);\r\n                }\r\n\r\n                // Choose the filter function to use\r\n                filter = typeof criterion === 'function' ? criterion :\r\n                        (typeof criterion === 'string' ? hasCapability :\r\n                                exists);\r\n\r\n                // Load child hierarchy, then provide the flat list\r\n                return domainObject.hasCapability('composition') ?\r\n                        loadComposition() : $q.when(result);\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Load domain objects contained in the subgraph of the\r\n                 * composition hierarchy which starts at the specified\r\n                 * domain object, optionally pruning out objects (and their\r\n                 * subgraphs) which match a certain criterion.\r\n                 * The result is given as a promise for an object containing\r\n                 * key-value pairs, where keys are domain object identifiers\r\n                 * and values are domain objects in the subgraph.\r\n                 * The criterion may be omitted (in which case no pruning is\r\n                 * done) or specified as a string, in which case it will be\r\n                 * treated as the name of a required capability, or specified\r\n                 * as a function, which should return a truthy/falsy value\r\n                 * when called with a domain object to indicate whether or\r\n                 * not it should be included in the result set.\r\n                 *\r\n                 * @param {DomainObject} domainObject the domain object to\r\n                 *        start from\r\n                 * @param {string|Function} [criterion] the criterion used\r\n                 *        to prune domain objects\r\n                 * @returns {Promise} a promise for loaded domain objects\r\n                 */\r\n                load: loadSubGraph\r\n            };\r\n        }\r\n\r\n        return ObjectLoader;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/features/timeline/res/templates/values.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<ul ng-controller=\"ActivityModeValuesController as controller\" class=\"cols cols-2-ff properties\">\\r\\n    <li ng-repeat=\"(key, value) in cost\" class=\"l-row s-row\">\\r\\n        <span class=\"col col-100px s-title\">{{controller.metadata(key).name}}</span>\\r\\n        <span class=\"col s-value\">{{value}} {{controller.metadata(key).units}}</span>\\r\\n    </li>\\r\\n</ul>';});\n\n","\ndefine('text!platform/features/timeline/res/templates/timeline.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"s-timeline l-timeline-holder split-layout vertical splitter-sm\"\\r\\n     ng-controller=\"TimelineController as timelineController\">\\r\\n\\r\\n<mct-split-pane anchor=\"left\" class=\"abs\" position=\"pane.x\">\\r\\n    <!-- LEFT PANE: TABULAR AND RESOURCE LEGEND AREAS -->\\r\\n    <mct-split-pane anchor=\"bottom\"\\r\\n                    position=\"pane.y\"\\r\\n                    class=\"abs horizontal split-pane-component l-timeline-pane l-pane-l t-pane-v\">\\r\\n        <!-- TOP PANE TABULAR AREA -->\\r\\n        <div class=\"split-pane-component s-timeline-tabular l-timeline-pane t-pane-h l-pane-top\">\\r\\n            <!-- TABULAR LEFT FIXED AREA -->\\r\\n            <div class=\"t-pane-v l-pane-l l-tabular-l\"\\r\\n                ng-if=\"true\">\\r\\n\\r\\n                    <div class=\"t-header l-header s-header\">\\r\\n                        <div class=\"l-cols\">\\r\\n                            <span title=\"Resource Graphing: click a row to toggle\" class=\"l-col l-col-icon l-plot-resource icon-plot-resource\"></span>\\r\\n                            <span title=\"Activity Links\" class=\"l-col  l-col-icon l-col-link icon-chain-links\"></span>\\r\\n                            <span class=\"l-col l-title\">Title</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"t-swimlanes-holder l-swimlanes-holder\"\\r\\n                         mct-scroll-y=\"scroll.y\">\\r\\n                        <mct-include key=\"\\'timeline-tabular-swimlane-cols-tree\\'\"\\r\\n                                     parameters=\"{ commit: commit }\"\\r\\n                                     ng-repeat=\"swimlane in timelineController.swimlanes()\"\\r\\n                                     ng-model=\"swimlane\">\\r\\n                        </mct-include>\\r\\n                    </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <!-- TABULAR RIGHT HORZ SCROLLING AREA -->\\r\\n            <div class=\"t-pane-v l-pane-r l-tabular-r\">\\r\\n                <div class=\"l-width\">\\r\\n                    <div class=\"t-header l-header s-header\">\\r\\n                        <div class=\"l-cols\">\\r\\n                            <span class=\"l-col l-start\">Start</span>\\r\\n                            <span class=\"l-col l-end\">End</span>\\r\\n                            <span class=\"l-col l-duration\">Duration</span>\\r\\n                            <span class=\"l-col l-activity-modes\">Activity Modes</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"t-swimlanes-holder l-swimlanes-holder\"\\r\\n                         mct-scroll-y=\"scroll.y\">\\r\\n                        <mct-include key=\"\\'timeline-tabular-swimlane-cols-data\\'\"\\r\\n                                     ng-repeat=\"swimlane in timelineController.swimlanes()\"\\r\\n                                     ng-model=\"swimlane\">\\r\\n                        </mct-include>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- HORZ SPLITTER -->\\r\\n        <mct-splitter></mct-splitter>\\r\\n\\r\\n        <!-- BOTTOM PANE RESOURCE LEGEND -->\\r\\n        <div class=\"split-pane-component abs l-timeline-pane t-pane-h l-pane-btm s-timeline-resource-legend l-timeline-resource-legend\">\\r\\n            <div class=\"l-title s-title\">{{ngModel.title}}Resource Graph Legend</div>\\r\\n            <div class=\"l-legend-items legend\">\\r\\n                <mct-include key=\"\\'timeline-legend-item\\'\"\\r\\n                             ng-repeat=\"swimlane in timelineController.swimlanes()\"\\r\\n                             ng-model=\"swimlane\"\\r\\n                             ng-show=\"swimlane.graph()\">\\r\\n                </mct-include>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mct-split-pane>\\r\\n\\r\\n\\r\\n    <!-- MAIN VERTICAL SPLITTER -->\\r\\n    <mct-splitter></mct-splitter>\\r\\n\\r\\n\\r\\n    <!-- RIGHT PANE: GANTT AND RESOURCE PLOTS -->\\r\\n    <span ng-controller=\"TimelineZoomController as zoomController\" class=\"abs\">\\r\\n    <mct-split-pane anchor=\"bottom\"\\r\\n                    position=\"pane.y\"\\r\\n                    class=\"abs split-pane-component l-timeline-pane l-pane-r t-pane-v\">\\r\\n\\r\\n        <!-- TOP PANE GANTT BARS -->\\r\\n        <div class=\"split-pane-component l-timeline-pane t-pane-h l-pane-top t-timeline-gantt l-timeline-gantt s-timeline-gantt\">\\r\\n            <div class=\"l-hover-btns-holder s-hover-btns-holder\">\\r\\n                <a class=\"s-button icon-arrows-out\"\\r\\n                   ng-click=\"zoomController.fit()\"\\r\\n                   ng-show=\"true\"\\r\\n                   title=\"Zoom to fit\">\\r\\n                </a>\\r\\n\\r\\n                <a class=\"s-button icon-magnify-in\"\\r\\n                   ng-click=\"zoomController.zoom(-1)\"\\r\\n                   ng-show=\"true\"\\r\\n                   title=\"Zoom in\">\\r\\n                </a>\\r\\n\\r\\n                <a class=\"s-button icon-magnify-out\"\\r\\n                   ng-click=\"zoomController.zoom(1)\"\\r\\n                   ng-show=\"true\"\\r\\n                   title=\"Zoom out\">\\r\\n                </a>\\r\\n            </div>\\r\\n\\r\\n            <div style=\"overflow: hidden; position: absolute; left: 0; top: 0; right: 0; height: 30px;\" mct-scroll-x=\"scroll.x\">\\r\\n                <mct-include key=\"\\'timeline-ticks\\'\"\\r\\n                             parameters=\"{\\r\\n                                         fullWidth: zoomController.width(timelineController.end()),\\r\\n                                         start: scroll.x,\\r\\n                                         width: scroll.width,\\r\\n                                         step: zoomController.toPixels(zoomController.zoom()),\\r\\n                                         toMillis: zoomController.toMillis\\r\\n                                         }\">\\r\\n                </mct-include>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"t-swimlanes-holder l-swimlanes-holder\"\\r\\n                 mct-scroll-x=\"scroll.x\"\\r\\n                 mct-scroll-y=\"scroll.y\">\\r\\n                <div class=\"l-width-control\"\\r\\n                     ng-style=\"{ width: zoomController.width(timelineController.end()) + \\'px\\' }\">\\r\\n                    <div class=\"t-swimlane s-swimlane l-swimlane\"\\r\\n                         ng-repeat=\"swimlane in timelineController.swimlanes()\"\\r\\n                         ng-class=\"{\\r\\n                                   exceeded: swimlane.exceeded(),\\r\\n                                   selected: selection.selected(swimlane),\\r\\n                                   \\'drop-into\\': swimlane.highlight(),\\r\\n                                   \\'drop-after\\': swimlane.highlightBottom()\\r\\n                                   }\"\\r\\n                         ng-click=\"selection.select(swimlane)\"\\r\\n                         mct-swimlane-drop=\"swimlane\">\\r\\n\\r\\n                        <mct-representation key=\"\\'gantt\\'\"\\r\\n                                            mct-object=\"swimlane.domainObject\"\\r\\n                                            parameters=\"{\\r\\n                                                        scroll: scroll,\\r\\n                                                        toPixels: zoomController.toPixels\\r\\n                                                        }\">\\r\\n                        </mct-representation>\\r\\n\\r\\n                        <span ng-if=\"selection.selected(swimlane)\">\\r\\n                            <span ng-repeat=\"handle in timelineController.handles()\"\\r\\n                                  ng-style=\"handle.style(zoomController)\"\\r\\n                                  style=\"position: absolute; top: 0px; bottom: 0px;\"\\r\\n                                  class=\"handle\"\\r\\n                                  ng-class=\"{ start: $index === 0, mid: $index === 1, end: $index > 1 }\"\\r\\n                                  mct-drag-down=\"handle.begin()\"\\r\\n                                  mct-drag=\"handle.drag(delta[0], zoomController); timelineController.refresh()\"\\r\\n                                  mct-drag-up=\"handle.finish()\">\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- HORZ SPLITTER -->\\r\\n        <mct-splitter></mct-splitter>\\r\\n\\r\\n        <!-- BOTTOM PANE RESOURCE GRAPHS AND RIGHT PANE HORIZONTAL SCROLL CONTROL -->\\r\\n        <div class=\"split-pane-component l-timeline-resource-graph l-timeline-pane t-pane-h l-pane-btm\">\\r\\n            <div class=\"l-graphs-holder\"\\r\\n                 mct-resize=\"scroll.width = bounds.width\">\\r\\n                <div class=\"t-graphs l-graphs\">\\r\\n                    <mct-include key=\"\\'timeline-resource-graphs\\'\"\\r\\n                                 parameters=\"{\\r\\n                                             origin: zoomController.toMillis(scroll.x),\\r\\n                                             duration: zoomController.toMillis(scroll.width),\\r\\n                                             graphs: timelineController.graphs()\\r\\n                                             }\">\\r\\n                    </mct-include>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div mct-scroll-x=\"scroll.x\"\\r\\n                 class=\"t-pane-r-scroll-h-control l-scroll-control s-scroll-control\">\\r\\n                <div class=\"l-width-control\"\\r\\n                     ng-style=\"{ width: zoomController.width(timelineController.end()) + \\'px\\' }\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mct-split-pane>\\r\\n    </span>\\r\\n</mct-split-pane>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/features/timeline/res/templates/activity-gantt.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"t-timeline-gantt l-timeline-gantt s-timeline-gantt\"\\r\\n     ng-class=\"timespan ? { sm: gantt.width(timespan, parameters.scroll, parameters.toPixels) < 25 } : {}\"\\r\\n     title=\"{{model.name}}\"\\r\\n     ng-controller=\"TimelineGanttController as gantt\"\\r\\n     ng-style=\"timespan ? {\\r\\n               left: gantt.left(timespan, parameters.scroll, parameters.toPixels) + \\'px\\',\\r\\n               width: gantt.width(timespan, parameters.scroll, parameters.toPixels) + \\'px\\'\\r\\n               } : {}\">\\r\\n\\r\\n    <div class=\"bar\">\\r\\n\\t\\t<span class=\"s-activity-type {{type.getCssClass()}}\"></span>\\r\\n\\t\\t<span class=\"s-title\">\\r\\n            {{model.name}}\\r\\n        </span>\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/features/timeline/res/templates/tabular-swimlane-cols-tree.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"t-swimlane s-swimlane l-swimlane {{ngModel.activitystate}} {{ngModel.swimlanestate}}\"\\r\\n     mct-swimlane-drop=\"ngModel\"\\r\\n     ng-class=\"{\\r\\n               exceeded: ngModel.exceeded(),\\r\\n               selected: ngModel.selected(swimlane),\\r\\n               \\'drop-into\\': ngModel.highlight(),\\r\\n               \\'drop-after\\': ngModel.highlightBottom()\\r\\n               }\">\\r\\n    <div class=\"l-cols\">\\r\\n        <span class=\"l-col l-col-icon l-plot-resource\"\\r\\n              ng-click=\"ngModel.toggleGraph(); parameters.commit()\"\\r\\n              title=\"Click to enable or disable inclusion in Resource Graphing\">\\r\\n            <span class=\"icon-plot-resource s-toggle-icon\"\\r\\n                  ng-class=\"{ active: ngModel.graph() }\">\\r\\n            </span>\\r\\n        </span>\\r\\n        <span class=\"l-col l-col-icon l-link\">\\r\\n            <a class=\"icon-chain-links\"\\r\\n               target=\"_blank\"\\r\\n               ng-href=\"{{ngModel.link()}}\"\\r\\n               ng-if=\"ngModel.link().length > 0\"\\r\\n               title=\"{{ngModel.link()}}\"\\r\\n               >\\r\\n            </a>\\r\\n        </span>\\r\\n        <span class=\"l-col l-title\"\\r\\n              ng-click=\"ngModel.select()\"\\r\\n              ng-style=\"{ \\'margin-left\\': 15 * ngModel.depth + \\'px\\' }\">\\r\\n            <mct-representation key=\"\\'label\\'\"\\r\\n                                mct-object=\"ngModel.domainObject\"\\r\\n                                class=\"rep-object-label\"\\r\\n                                mct-swimlane-drag=\"ngModel\">\\r\\n            </mct-representation>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/features/timeline/res/templates/tabular-swimlane-cols-data.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"t-swimlane s-swimlane l-swimlane {{ngModel.activitystate}} {{ngModel.swimlanestate}}\"\\r\\n     ng-class=\"{\\r\\n               exceeded: ngModel.exceeded(),\\r\\n               selected: ngModel.selected(swimlane),\\r\\n               \\'drop-into\\': ngModel.highlight(),\\r\\n               \\'drop-after\\': ngModel.highlightBottom()\\r\\n               }\">\\r\\n\\t<div\\r\\n\\t\\tclass=\"l-cols\"\\r\\n\\t\\tng-controller=\"TimelineTableController as tabularVal\">\\r\\n\\t\\t<span class=\"align-right l-col l-start\">{{tabularVal.niceTime(ngModel.timespan().getStart())}}</span>\\r\\n\\t\\t<span class=\"align-right l-col l-end\">{{tabularVal.niceTime(ngModel.timespan().getEnd())}}</span>\\r\\n\\t\\t<span class=\"align-right l-col l-duration\">{{tabularVal.niceTime(ngModel.timespan().getDuration())}}</span>\\r\\n\\t\\t<span class=\"l-col l-activity-modes\"></span>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!platform/features/timeline/res/templates/resource-graphs.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"TimelineGraphController as graphController\">\\r\\n    <div class=\"t-graph l-graph\" ng-repeat=\"graph in parameters.graphs\">\\r\\n        <div class=\"l-graph-area l-canvas-holder\">\\r\\n            <mct-chart draw=\"graph.drawingObject\"></mct-chart>\\r\\n        </div>\\r\\n        <div class=\"t-graph-labels l-graph-labels\">\\r\\n            <mct-include key=\"\\'timeline-resource-graph-labels\\'\"\\r\\n                         parameters=\"graphController.label(graph)\"\\r\\n                         ng-model=\"graph\">\\r\\n            </mct-include>\\r\\n        </div>\\r\\n    </div>\\r\\n</span>';});\n\n","\ndefine('text!platform/features/timeline/res/templates/resource-graph-labels.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"l-title s-title\">\\r\\n    {{parameters.title}}\\r\\n</div>\\r\\n<div class=\"l-graph-area\">\\r\\n\\t<div class=\"l-labels-holder l-flex-col\">\\r\\n\\t\\t<div class=\"t-resource-graph-tick-label tick-label-y flex-elem\">\\r\\n            {{parameters.high}}\\r\\n        </div>\\r\\n\\t\\t<div class=\"t-resource-graph-tick-label tick-label-y flex-elem\">\\r\\n            {{parameters.middle}}\\r\\n        </div>\\r\\n\\t\\t<div class=\"t-resource-graph-tick-label tick-label-y flex-elem\">\\r\\n            {{parameters.low}}\\r\\n        </div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!platform/features/timeline/res/templates/legend-item.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<!-- TO-DO: make legend item color-swatch dynamic -->\\r\\n<span\\r\\n\\tclass=\"legend-item s-legend-item\"\\r\\n\\ttitle=\"{{ngModel.path}}{{ngModel.domainObject.getModel().name}}\"\\r\\n\\t>\\r\\n\\t<span class=\"color-swatch\"\\r\\n          ng-style=\"{ \\'background-color\\': ngModel.color() }\">\\r\\n    </span>\\r\\n\\t<span class=\"title-label\">\\r\\n        <span class=\"l-parent-path\">{{ngModel.path}}</span>\\r\\n        <span class=\"l-leaf-title\">{{ngModel.domainObject.getModel().name}}</span>\\r\\n    </span>\\r\\n</span>';});\n\n","\ndefine('text!platform/features/timeline/res/templates/ticks.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"t-header l-header s-header\"\\r\\n     ng-controller=\"TimelineTickController as tick\"\\r\\n     ng-style=\"{ width: parameters.fullWidth + \\'px\\' }\">\\r\\n\\r\\n    <div class=\"l-header-elem t-labels l-labels\">\\r\\n        <div class=\"t-label l-label s-label\"\\r\\n             ng-repeat=\"label in tick.labels(parameters.start, parameters.width, parameters.step, parameters.toMillis)\"\\r\\n             ng-style=\"{ left: label.left + \\'px\\' }\">\\r\\n            {{label.text}}\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"t-ticks l-ticks s-ticks\"\\r\\n         ng-style=\"{ \\'background-size\\': parameters.step + \\'px 100%\\' }\">\\r\\n    </div>\\r\\n    <div class=\"t-ticks s-ticks l-subticks\"\\r\\n         ng-style=\"{ \\'background-size\\': (parameters.step / 40) + \\'px 100%\\' }\">\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/features/timeline/res/templates/controls/datetime.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2009-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'form-control complex datetime\\'>\\r\\n\\r\\n    <div class=\\'field-hints\\'>\\r\\n        <span class=\\'hint time sm\\'>Days</span>\\r\\n        <span class=\\'hint time sm\\'>Hours</span>\\r\\n        <span class=\\'hint time sm\\'>Minutes</span>\\r\\n        <span class=\\'hint time sm\\'>Seconds</span>\\r\\n        <span class=\\'hint\\' ng-if=\"structure.options.length > 0\">Time System</span>\\r\\n    </div>\\r\\n\\r\\n    <ng-form name=\"mctControl\">\\r\\n        <div class=\\'fields\\' ng-controller=\"TimelineDateTimeController\">\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'days\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'9999\\'\\r\\n                       integer\\r\\n                       ng-pattern=\"/\\\\d+/\"\\r\\n                       ng-model=\\'datetime.days\\'/>\\r\\n            </span>\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'hour\\'\\r\\n                       maxlength=\\'2\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'23\\'\\r\\n                       integer\\r\\n                       ng-pattern=\\'/\\\\d+/\\'\\r\\n                       ng-model=\"datetime.hours\"/>\\r\\n            </span>\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'min\\'\\r\\n                       maxlength=\\'2\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'59\\'\\r\\n                       integer\\r\\n                       ng-pattern=\\'/\\\\d+/\\'\\r\\n                       ng-model=\"datetime.minutes\"\\r\\n                       ng-required=\\'true\\'/>\\r\\n            </span>\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'sec\\'\\r\\n                       maxlength=\\'2\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'59\\'\\r\\n                       integer\\r\\n                       ng-pattern=\\'/\\\\d+/\\'\\r\\n                       ng-model=\"datetime.seconds\"\\r\\n                       ng-required=\\'true\\'/>\\r\\n            </span>\\r\\n            <span ng-if=\"structure.options.length > 0\"\\r\\n                  class=\\'field control\\'>\\r\\n                SET\\r\\n            </span>\\r\\n        </div>\\r\\n    </ng-form>\\r\\n\\r\\n\\r\\n</div>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/timeline/bundle',[\r\n    \"./src/actions/ExportTimelineAsCSVAction\",\r\n    \"./src/controllers/TimelineController\",\r\n    \"./src/controllers/TimelineGraphController\",\r\n    \"./src/controllers/TimelineDateTimeController\",\r\n    \"./src/controllers/TimelineZoomController\",\r\n    \"./src/controllers/TimelineTickController\",\r\n    \"./src/controllers/TimelineTableController\",\r\n    \"./src/controllers/TimelineGanttController\",\r\n    \"./src/controllers/ActivityModeValuesController\",\r\n    \"./src/capabilities/ActivityTimespanCapability\",\r\n    \"./src/capabilities/TimelineTimespanCapability\",\r\n    \"./src/capabilities/UtilizationCapability\",\r\n    \"./src/capabilities/GraphCapability\",\r\n    \"./src/capabilities/CostCapability\",\r\n    \"./src/directives/MCTSwimlaneDrop\",\r\n    \"./src/directives/MCTSwimlaneDrag\",\r\n    \"./src/services/ObjectLoader\",\r\n    \"text!./res/templates/values.html\",\r\n    \"text!./res/templates/timeline.html\",\r\n    \"text!./res/templates/activity-gantt.html\",\r\n    \"text!./res/templates/tabular-swimlane-cols-tree.html\",\r\n    \"text!./res/templates/tabular-swimlane-cols-data.html\",\r\n    \"text!./res/templates/resource-graphs.html\",\r\n    \"text!./res/templates/resource-graph-labels.html\",\r\n    \"text!./res/templates/legend-item.html\",\r\n    \"text!./res/templates/ticks.html\",\r\n    \"text!./res/templates/controls/datetime.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    ExportTimelineAsCSVAction,\r\n    TimelineController,\r\n    TimelineGraphController,\r\n    TimelineDateTimeController,\r\n    TimelineZoomController,\r\n    TimelineTickController,\r\n    TimelineTableController,\r\n    TimelineGanttController,\r\n    ActivityModeValuesController,\r\n    ActivityTimespanCapability,\r\n    TimelineTimespanCapability,\r\n    UtilizationCapability,\r\n    GraphCapability,\r\n    CostCapability,\r\n    MCTSwimlaneDrop,\r\n    MCTSwimlaneDrag,\r\n    ObjectLoader,\r\n    valuesTemplate,\r\n    timelineTemplate,\r\n    activityGanttTemplate,\r\n    tabularSwimlaneColsTreeTemplate,\r\n    tabularSwimlaneColsDataTemplate,\r\n    resourceGraphsTemplate,\r\n    resourceGraphLabelsTemplate,\r\n    legendItemTemplate,\r\n    ticksTemplate,\r\n    datetimeTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/features/timeline\", {\r\n        \"name\": \"Timelines\",\r\n        \"description\": \"Resources, templates, CSS, and code for Timelines.\",\r\n        \"resources\": \"res\",\r\n        \"extensions\": {\r\n            \"actions\": [\r\n                {\r\n                    \"key\": \"timeline.export\",\r\n                    \"name\": \"Export Timeline as CSV\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": ExportTimelineAsCSVAction,\r\n                    \"depends\": [\r\n                        \"$log\",\r\n                        \"exportService\",\r\n                        \"notificationService\",\r\n                        \"resources[]\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"TIMELINE_MINIMUM_DURATION\",\r\n                    \"description\": \"The minimum duration to display in a timeline view (one hour.)\",\r\n                    \"value\": 3600000\r\n                },\r\n                {\r\n                    \"key\": \"TIMELINE_MAXIMUM_OFFSCREEN\",\r\n                    \"description\": \"Maximum amount, in pixels, of a Gantt bar which may go off screen.\",\r\n                    \"value\": 1000\r\n                },\r\n                {\r\n                    \"key\": \"TIMELINE_ZOOM_CONFIGURATION\",\r\n                    \"description\": \"Describes major tick sizes in milliseconds, and width in pixels.\",\r\n                    \"value\": {\r\n                        \"levels\": [\r\n                            1000,\r\n                            2000,\r\n                            5000,\r\n                            10000,\r\n                            20000,\r\n                            30000,\r\n                            60000,\r\n                            120000,\r\n                            300000,\r\n                            600000,\r\n                            1200000,\r\n                            1800000,\r\n                            3600000,\r\n                            7200000,\r\n                            14400000,\r\n                            28800000,\r\n                            43200000,\r\n                            86400000,\r\n                            86400000 * 2,\r\n                            86400000 * 5,\r\n                            86400000 * 10,\r\n                            86400000 * 20,\r\n                            86400000 * 30,\r\n                            86400000 * 60,\r\n                            86400000 * 120,\r\n                            86400000 * 240,\r\n                            86400000 * 365\r\n                        ],\r\n                        \"width\": 200\r\n                    }\r\n                }\r\n            ],\r\n            \"types\": [\r\n                {\r\n                    \"key\": \"timeline\",\r\n                    \"name\": \"Timeline\",\r\n                    \"cssclass\": \"icon-timeline\",\r\n                    \"description\": \"A time-oriented container that lets you enclose and organize other Timelines and Activities. The Timeline view provides both tabular and Gantt views as well as resource utilization graphing of Activities.\",\r\n                    \"priority\": 502,\r\n                    \"features\": [\r\n                        \"creation\"\r\n                    ],\r\n                    \"contains\": [\r\n                        \"timeline\",\r\n                        \"activity\"\r\n                    ],\r\n                    \"properties\": [\r\n                        {\r\n                            \"name\": \"Start date/time\",\r\n                            \"control\": \"timeline-datetime\",\r\n                            \"required\": true,\r\n                            \"property\": [\r\n                                \"start\"\r\n                            ],\r\n                            \"options\": [\r\n                                \"SET\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"name\": \"Battery capacity (Watt-hours)\",\r\n                            \"control\": \"textfield\",\r\n                            \"required\": false,\r\n                            \"conversion\": \"number\",\r\n                            \"property\": [\r\n                                \"capacity\"\r\n                            ],\r\n                            \"pattern\": \"^-?\\\\d+(\\\\.\\\\d*)?$\"\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"composition\": [],\r\n                        \"start\": {\r\n                            \"timestamp\": 0\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"key\": \"activity\",\r\n                    \"name\": \"Activity\",\r\n                    \"cssclass\": \"icon-activity\",\r\n                    \"features\": [\r\n                        \"creation\"\r\n                    ],\r\n                    \"contains\": [\r\n                        \"activity\"\r\n                    ],\r\n                    \"description\": \"An event or process that starts and ends at a discrete datetime. Activities can be nested in other Activities, and can be added to Timelines. Activity Modes can be added to an Activity to define its resource utilization over time.\",\r\n                    \"priority\": 501,\r\n                    \"properties\": [\r\n                        {\r\n                            \"name\": \"Start date/time\",\r\n                            \"control\": \"timeline-datetime\",\r\n                            \"required\": true,\r\n                            \"property\": [\r\n                                \"start\"\r\n                            ],\r\n                            \"options\": [\r\n                                \"SET\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"name\": \"Duration\",\r\n                            \"control\": \"duration\",\r\n                            \"required\": true,\r\n                            \"property\": [\r\n                                \"duration\"\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"composition\": [],\r\n                        \"relationships\": {\r\n                            \"modes\": []\r\n                        },\r\n                        \"start\": {\r\n                            \"timestamp\": 0\r\n                        },\r\n                        \"duration\": {\r\n                            \"timestamp\": 0\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"key\": \"mode\",\r\n                    \"name\": \"Activity Mode\",\r\n                    \"cssclass\": \"icon-activity-mode\",\r\n                    \"features\": [\r\n                        \"creation\"\r\n                    ],\r\n                    \"description\": \"When a sub-system utilizes Power or Communications resources over time, you can define those values in an Activity Mode. Activity Modes can then be linked to Activities to allow resource utilization graphing and estimating in a Timeline.\",\r\n                    \"priority\": 500,\r\n                    \"model\": {\r\n                        \"resources\": {\r\n                            \"comms\": 0,\r\n                            \"power\": 0\r\n                        }\r\n                    },\r\n                    \"properties\": [\r\n                        {\r\n                            \"name\": \"Comms (Kbps)\",\r\n                            \"control\": \"textfield\",\r\n                            \"conversion\": \"number\",\r\n                            \"pattern\": \"^-?\\\\d+(\\\\.\\\\d*)?$\",\r\n                            \"property\": [\r\n                                \"resources\",\r\n                                \"comms\"\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"name\": \"Power (watts)\",\r\n                            \"control\": \"textfield\",\r\n                            \"conversion\": \"number\",\r\n                            \"pattern\": \"^-?\\\\d+(\\\\.\\\\d*)?$\",\r\n                            \"property\": [\r\n                                \"resources\",\r\n                                \"power\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"views\": [\r\n                {\r\n                    \"key\": \"values\",\r\n                    \"name\": \"Values\",\r\n                    \"cssclass\": \"icon-activity-mode\",\r\n                    \"template\": valuesTemplate,\r\n                    \"type\": \"mode\",\r\n                    \"uses\": [\r\n                        \"cost\"\r\n                    ],\r\n                    \"editable\": false\r\n                },\r\n                {\r\n                    \"key\": \"timeline\",\r\n                    \"name\": \"Timeline\",\r\n                    \"cssclass\": \"icon-timeline\",\r\n                    \"type\": \"timeline\",\r\n                    \"description\": \"A time-oriented container that lets you enclose and organize other Timelines and Activities. The Timeline view provides both tabular and Gantt views as well as resource utilization graphing of Activities.\",\r\n                    \"template\": timelineTemplate,\r\n                    \"editable\": true,\r\n                    \"toolbar\": {\r\n                        \"sections\": [\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"add\",\r\n                                        \"control\": \"menu-button\",\r\n                                        \"text\": \"Add\",\r\n                                        \"options\": [\r\n                                            {\r\n                                                \"name\": \"Timeline\",\r\n                                                \"cssclass\": \"icon-timeline\",\r\n                                                \"key\": \"timeline\"\r\n                                            },\r\n                                            {\r\n                                                \"name\": \"Activity\",\r\n                                                \"cssclass\": \"icon-activity\",\r\n                                                \"key\": \"activity\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"cssclass\": \"icon-plot-resource\",\r\n                                        \"description\": \"Graph Resource Utilization\",\r\n                                        \"control\": \"button\",\r\n                                        \"method\": \"toggleGraph\"\r\n                                    },\r\n                                    {\r\n                                        \"cssclass\": \"icon-activity-mode\",\r\n                                        \"control\": \"dialog-button\",\r\n                                        \"description\": \"Apply Activity Modes...\",\r\n                                        \"title\": \"Apply Activity Modes\",\r\n                                        \"dialog\": {\r\n                                            \"control\": \"selector\",\r\n                                            \"name\": \"Modes\",\r\n                                            \"type\": \"mode\",\r\n                                            \"layout\": \"controls-under\"\r\n                                        },\r\n                                        \"property\": \"modes\"\r\n                                    },\r\n                                    {\r\n                                        \"cssclass\": \"icon-chain-links\",\r\n                                        \"description\": \"Edit Activity Link\",\r\n                                        \"title\": \"Activity Link\",\r\n                                        \"control\": \"dialog-button\",\r\n                                        \"dialog\": {\r\n                                            \"control\": \"textfield\",\r\n                                            \"name\": \"Link\",\r\n                                            \"pattern\": \"^(ftp|https?)\\\\:\\\\/\\\\/\\\\w+(\\\\.\\\\w+)*(\\\\:\\\\d+)?(\\\\/\\\\S*)*$\",\r\n                                            \"cssclass\": \"l-input-lg\"\r\n                                        },\r\n                                        \"property\": \"link\"\r\n                                    },\r\n                                    {\r\n                                        \"cssclass\": \"icon-gear\",\r\n                                        \"description\": \"Edit Properties...\",\r\n                                        \"control\": \"button\",\r\n                                        \"method\": \"properties\"\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"items\": [\r\n                                    {\r\n                                        \"method\": \"remove\",\r\n                                        \"description\": \"Remove Item\",\r\n                                        \"control\": \"button\",\r\n                                        \"cssclass\": \"icon-trash\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ],\r\n            \"stylesheets\": [\r\n                {\r\n                    \"stylesheetUrl\": \"css/timeline.css\"\r\n                },\r\n                {\r\n                    \"stylesheetUrl\": \"css/timeline-espresso.css\",\r\n                    \"theme\": \"espresso\"\r\n                },\r\n                {\r\n                    \"stylesheetUrl\": \"css/timeline-snow.css\",\r\n                    \"theme\": \"snow\"\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"gantt\",\r\n                    \"template\": activityGanttTemplate,\r\n                    \"uses\": [\r\n                        \"timespan\",\r\n                        \"type\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"timeline-tabular-swimlane-cols-tree\",\r\n                    \"priority\": \"mandatory\",\r\n                    \"template\": tabularSwimlaneColsTreeTemplate\r\n                },\r\n                {\r\n                    \"key\": \"timeline-tabular-swimlane-cols-data\",\r\n                    \"priority\": \"mandatory\",\r\n                    \"template\": tabularSwimlaneColsDataTemplate\r\n                },\r\n                {\r\n                    \"key\": \"timeline-resource-graphs\",\r\n                    \"priority\": \"mandatory\",\r\n                    \"template\": resourceGraphsTemplate\r\n                },\r\n                {\r\n                    \"key\": \"timeline-resource-graph-labels\",\r\n                    \"priority\": \"mandatory\",\r\n                    \"template\": resourceGraphLabelsTemplate\r\n                },\r\n                {\r\n                    \"key\": \"timeline-legend-item\",\r\n                    \"priority\": \"mandatory\",\r\n                    \"template\": legendItemTemplate\r\n                },\r\n                {\r\n                    \"key\": \"timeline-ticks\",\r\n                    \"priority\": \"mandatory\",\r\n                    \"template\": ticksTemplate\r\n                }\r\n            ],\r\n            \"controls\": [\r\n                {\r\n                    \"key\": \"timeline-datetime\",\r\n                    \"template\": datetimeTemplate\r\n                },\r\n                {\r\n                    \"key\": \"duration\",\r\n                    \"template\": datetimeTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"TimelineController\",\r\n                    \"implementation\": TimelineController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$q\",\r\n                        \"objectLoader\",\r\n                        \"TIMELINE_MINIMUM_DURATION\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"TimelineGraphController\",\r\n                    \"implementation\": TimelineGraphController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"resources[]\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"TimelineDateTimeController\",\r\n                    \"implementation\": TimelineDateTimeController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"TimelineZoomController\",\r\n                    \"implementation\": TimelineZoomController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"$window\",\r\n                        \"TIMELINE_ZOOM_CONFIGURATION\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"TimelineTickController\",\r\n                    \"implementation\": TimelineTickController\r\n                },\r\n                {\r\n                    \"key\": \"TimelineTableController\",\r\n                    \"implementation\": TimelineTableController\r\n                },\r\n                {\r\n                    \"key\": \"TimelineGanttController\",\r\n                    \"implementation\": TimelineGanttController,\r\n                    \"depends\": [\r\n                        \"TIMELINE_MAXIMUM_OFFSCREEN\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"ActivityModeValuesController\",\r\n                    \"implementation\": ActivityModeValuesController,\r\n                    \"depends\": [\r\n                        \"resources[]\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"capabilities\": [\r\n                {\r\n                    \"key\": \"timespan\",\r\n                    \"implementation\": ActivityTimespanCapability,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"timespan\",\r\n                    \"implementation\": TimelineTimespanCapability,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"utilization\",\r\n                    \"implementation\": UtilizationCapability,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"graph\",\r\n                    \"implementation\": GraphCapability,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"cost\",\r\n                    \"implementation\": CostCapability\r\n                }\r\n            ],\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctSwimlaneDrop\",\r\n                    \"implementation\": MCTSwimlaneDrop,\r\n                    \"depends\": [\r\n                        \"dndService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"mctSwimlaneDrag\",\r\n                    \"implementation\": MCTSwimlaneDrag,\r\n                    \"depends\": [\r\n                        \"dndService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"objectLoader\",\r\n                    \"implementation\": ObjectLoader,\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"resources\": [\r\n                {\r\n                    \"key\": \"power\",\r\n                    \"name\": \"Power\",\r\n                    \"units\": \"watts\"\r\n                },\r\n                {\r\n                    \"key\": \"comms\",\r\n                    \"name\": \"Comms\",\r\n                    \"units\": \"Kbps\"\r\n                },\r\n                {\r\n                    \"key\": \"battery\",\r\n                    \"name\": \"Battery State-of-Charge\",\r\n                    \"units\": \"%\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","\r\ndefine(\r\n    'platform/features/table/src/controllers/MCTTableController',[],\r\n    function () {\r\n\r\n        /**\r\n         * A controller for the MCTTable directive. Populates scope with\r\n         * data used for populating, sorting, and filtering\r\n         * tables.\r\n         * @param $scope\r\n         * @param $timeout\r\n         * @param element\r\n         * @constructor\r\n         */\r\n        function MCTTableController($scope, $timeout, element, exportService) {\r\n            var self = this;\r\n\r\n            this.$scope = $scope;\r\n            this.element = element;\r\n            this.$timeout = $timeout;\r\n            this.maxDisplayRows = 50;\r\n\r\n            this.scrollable = element.find('div');\r\n            this.thead = element.find('thead');\r\n            this.tbody = element.find('tbody');\r\n            this.$scope.sizingRow = {};\r\n\r\n            this.scrollable.on('scroll', this.onScroll.bind(this));\r\n\r\n            $scope.visibleRows = [];\r\n\r\n            /**\r\n             * Set default values for optional parameters on a given scope\r\n             */\r\n            function setDefaults(scope) {\r\n                if (typeof scope.enableFilter === 'undefined') {\r\n                    scope.enableFilter = true;\r\n                    scope.filters = {};\r\n                }\r\n                if (typeof scope.enableSort === 'undefined') {\r\n                    scope.enableSort = true;\r\n                    scope.sortColumn = undefined;\r\n                    scope.sortDirection = undefined;\r\n                }\r\n            }\r\n\r\n            setDefaults($scope);\r\n\r\n            $scope.exportAsCSV = function () {\r\n                var headers = $scope.displayHeaders;\r\n                exportService.exportCSV($scope.displayRows.map(function (row) {\r\n                    return headers.reduce(function (r, header) {\r\n                        r[header] = row[header].text;\r\n                        return r;\r\n                    }, {});\r\n                }), { headers: headers });\r\n            };\r\n\r\n            $scope.toggleSort = function (key) {\r\n                if (!$scope.enableSort) {\r\n                    return;\r\n                }\r\n                if ($scope.sortColumn !== key) {\r\n                    $scope.sortColumn = key;\r\n                    $scope.sortDirection = 'asc';\r\n                } else if ($scope.sortDirection === 'asc') {\r\n                    $scope.sortDirection = 'desc';\r\n                } else if ($scope.sortDirection === 'desc') {\r\n                    $scope.sortColumn = undefined;\r\n                    $scope.sortDirection = undefined;\r\n                }\r\n                self.setRows($scope.rows);\r\n            };\r\n\r\n            /*\r\n             * Define watches to listen for changes to headers and rows.\r\n             */\r\n            $scope.$watchCollection('filters', function () {\r\n                self.setRows($scope.rows);\r\n            });\r\n            $scope.$watch('headers', this.setHeaders.bind(this));\r\n            $scope.$watch('rows', this.setRows.bind(this));\r\n\r\n            /*\r\n             * Listen for rows added individually (eg. for real-time tables)\r\n             */\r\n            $scope.$on('add:row', this.addRow.bind(this));\r\n            $scope.$on('remove:row', this.removeRow.bind(this));\r\n\r\n            /*\r\n             * Listen for resize events to trigger recalculation of table width\r\n             */\r\n            $scope.resize = this.setElementSizes.bind(this);\r\n\r\n        }\r\n\r\n        /**\r\n         * If auto-scroll is enabled, this function will scroll to the\r\n         * bottom of the page\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.scrollToBottom = function () {\r\n            var self = this;\r\n\r\n            //Use timeout to defer execution until next digest when any\r\n            // pending UI changes have completed, eg. a new row in the table.\r\n            if (this.$scope.autoScroll) {\r\n                this.$timeout(function () {\r\n                    self.scrollable[0].scrollTop = self.scrollable[0].scrollHeight;\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Handles a row add event. Rows can be added as needed using the\r\n         * `add:row` broadcast event.\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.addRow = function (event, rowIndex) {\r\n            var row = this.$scope.rows[rowIndex];\r\n\r\n            //Does the row pass the current filter?\r\n            if (this.filterRows([row]).length === 1) {\r\n                //Insert the row into the correct position in the array\r\n                this.insertSorted(this.$scope.displayRows, row);\r\n\r\n                //Resize the columns , then update the rows visible in the table\r\n                this.resize([this.$scope.sizingRow, row])\r\n                    .then(this.setVisibleRows.bind(this))\r\n                    .then(this.scrollToBottom.bind(this));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Handles a row remove event. Rows can be removed as needed using the\r\n         * `remove:row` broadcast event.\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.removeRow = function (event, rowIndex) {\r\n            var row = this.$scope.rows[rowIndex],\r\n                // Do a sequential search here. Only way of finding row is by\r\n                // object equality, so array is in effect unsorted.\r\n                indexInDisplayRows = this.$scope.displayRows.indexOf(row);\r\n            if (indexInDisplayRows !== -1) {\r\n                this.$scope.displayRows.splice(indexInDisplayRows, 1);\r\n                this.setVisibleRows();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.onScroll = function (event) {\r\n            //If user scrolls away from bottom, disable auto-scroll.\r\n            // Auto-scroll will be re-enabled if user scrolls to bottom again.\r\n            if (this.scrollable[0].scrollTop <\r\n                (this.scrollable[0].scrollHeight - this.scrollable[0].offsetHeight)) {\r\n                this.$scope.autoScroll = false;\r\n            } else {\r\n                this.$scope.autoScroll = true;\r\n            }\r\n            this.setVisibleRows();\r\n            this.$scope.$digest();\r\n        };\r\n\r\n        /**\r\n         * Sets visible rows based on array\r\n         * content and current scroll state.\r\n         */\r\n        MCTTableController.prototype.setVisibleRows = function () {\r\n            var self = this,\r\n                target = this.scrollable[0],\r\n                topScroll = target.scrollTop,\r\n                bottomScroll = topScroll + target.offsetHeight,\r\n                firstVisible,\r\n                lastVisible,\r\n                totalVisible,\r\n                numberOffscreen,\r\n                start,\r\n                end;\r\n\r\n            //No need to scroll\r\n            if (this.$scope.displayRows.length < this.maxDisplayRows) {\r\n                start = 0;\r\n                end = this.$scope.displayRows.length;\r\n            } else {\r\n                //rows has exceeded display maximum, so may be necessary to\r\n                // scroll\r\n                if (topScroll < this.$scope.headerHeight) {\r\n                    firstVisible = 0;\r\n                } else {\r\n                    firstVisible = Math.floor(\r\n                        (topScroll - this.$scope.headerHeight) /\r\n                        this.$scope.rowHeight\r\n                    );\r\n                }\r\n                lastVisible = Math.ceil(\r\n                    (bottomScroll - this.$scope.headerHeight) /\r\n                    this.$scope.rowHeight\r\n                );\r\n\r\n                totalVisible = lastVisible - firstVisible;\r\n                numberOffscreen = this.maxDisplayRows - totalVisible;\r\n                start = firstVisible - Math.floor(numberOffscreen / 2);\r\n                end = lastVisible + Math.ceil(numberOffscreen / 2);\r\n\r\n                if (start < 0) {\r\n                    start = 0;\r\n                    end = Math.min(this.maxDisplayRows,\r\n                        this.$scope.displayRows.length);\r\n                } else if (end >= this.$scope.displayRows.length) {\r\n                    end = this.$scope.displayRows.length;\r\n                    start = end - this.maxDisplayRows + 1;\r\n                }\r\n                if (this.$scope.visibleRows[0] &&\r\n                    this.$scope.visibleRows[0].rowIndex === start &&\r\n                    this.$scope.visibleRows[this.$scope.visibleRows.length - 1]\r\n                        .rowIndex === end) {\r\n\r\n                    return; // don't update if no changes are required.\r\n                }\r\n            }\r\n            //Set visible rows from display rows, based on calculated offset.\r\n            this.$scope.visibleRows = this.$scope.displayRows.slice(start, end)\r\n                .map(function (row, i) {\r\n                    return {\r\n                        rowIndex: start + i,\r\n                        offsetY: ((start + i) * self.$scope.rowHeight) +\r\n                        self.$scope.headerHeight,\r\n                        contents: row\r\n                    };\r\n                });\r\n        };\r\n\r\n        /**\r\n         * Update table headers with new headers.  If filtering is\r\n         * enabled, reset filters.  If sorting is enabled, reset\r\n         * sorting.\r\n         */\r\n        MCTTableController.prototype.setHeaders = function (newHeaders) {\r\n            if (!newHeaders) {\r\n                return;\r\n            }\r\n\r\n            this.$scope.displayHeaders = newHeaders;\r\n            if (this.$scope.enableFilter) {\r\n                this.$scope.filters = {};\r\n            }\r\n            // Reset column sort information unless the new headers\r\n            // contain the column currently sorted on.\r\n            if (this.$scope.enableSort &&\r\n                newHeaders.indexOf(this.$scope.sortColumn) === -1) {\r\n                this.$scope.sortColumn = undefined;\r\n                this.$scope.sortDirection = undefined;\r\n            }\r\n            this.setRows(this.$scope.rows);\r\n        };\r\n\r\n        /**\r\n         * Read styles from the DOM and use them to calculate offsets\r\n         * for individual rows.\r\n         */\r\n        MCTTableController.prototype.setElementSizes = function () {\r\n            var thead = this.thead,\r\n                tbody = this.tbody,\r\n                firstRow = tbody.find('tr'),\r\n                column = firstRow.find('td'),\r\n                headerHeight = thead.prop('offsetHeight'),\r\n                rowHeight = firstRow.prop('offsetHeight'),\r\n                columnWidth,\r\n                tableWidth = 0,\r\n                overallHeight = headerHeight + (rowHeight *\r\n                    (this.$scope.displayRows ? this.$scope.displayRows.length - 1  : 0));\r\n\r\n            this.$scope.columnWidths = [];\r\n\r\n            while (column.length) {\r\n                columnWidth = column.prop('offsetWidth');\r\n                this.$scope.columnWidths.push(column.prop('offsetWidth'));\r\n                tableWidth += columnWidth;\r\n                column = column.next();\r\n            }\r\n            this.$scope.headerHeight = headerHeight;\r\n            this.$scope.rowHeight = rowHeight;\r\n            this.$scope.totalHeight = overallHeight;\r\n\r\n            if (tableWidth > 0) {\r\n                this.$scope.totalWidth = tableWidth + 'px';\r\n            } else {\r\n                this.$scope.totalWidth = 'none';\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.insertSorted = function (array, element) {\r\n            var index = -1,\r\n                self = this,\r\n                sortKey = this.$scope.sortColumn;\r\n\r\n            function binarySearch(searchArray, searchElement, min, max) {\r\n                var sampleAt = Math.floor((max - min) / 2) + min;\r\n\r\n                if (max < min) {\r\n                    return min; // Element is not in array, min gives direction\r\n                }\r\n\r\n                switch (self.sortComparator(searchElement[sortKey].text,\r\n                    searchArray[sampleAt][sortKey].text)) {\r\n                    case -1:\r\n                        return binarySearch(searchArray, searchElement, min,\r\n                            sampleAt - 1);\r\n                    case 0 :\r\n                        return sampleAt;\r\n                    case 1 :\r\n                        return binarySearch(searchArray, searchElement,\r\n                            sampleAt + 1, max);\r\n                }\r\n            }\r\n\r\n            if (!this.$scope.sortColumn || !this.$scope.sortDirection) {\r\n                //No sorting applied, push it on the end.\r\n                index = array.length;\r\n            } else {\r\n                //Sort is enabled, perform binary search to find insertion point\r\n                index = binarySearch(array, element, 0, array.length - 1);\r\n            }\r\n            if (index === -1) {\r\n                array.unshift(element);\r\n            } else if (index === array.length) {\r\n                array.push(element);\r\n            } else {\r\n                array.splice(index, 0, element);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Compare two variables, returning a number that represents\r\n         * which is larger.  Similar to the default array sort\r\n         * comparator, but does not coerce all values to string before\r\n         * conversion.  Strings are lowercased before comparison.\r\n         *\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.sortComparator = function (a, b) {\r\n            var result = 0,\r\n                sortDirectionMultiplier,\r\n                numberA,\r\n                numberB;\r\n            /**\r\n             * Given a value, if it is a number, or a string representation of a\r\n             * number, then return a number representation. Otherwise, return\r\n             * the original value. It's a little more robust than using just\r\n             * Number() or parseFloat, or isNaN in isolation, all of which are\r\n             * fairly inconsistent in their results.\r\n             * @param value The value to return as a number.\r\n             * @returns {*} The value cast to a Number, or the original value if\r\n             * a Number representation is not possible.\r\n             */\r\n            function toNumber(value) {\r\n                var val = !isNaN(Number(value)) && !isNaN(parseFloat(value)) ? Number(value) : value;\r\n                return val;\r\n            }\r\n\r\n            numberA = toNumber(a);\r\n            numberB = toNumber(b);\r\n\r\n            //If they're both numbers, then compare them as numbers\r\n            if (typeof numberA === \"number\" && typeof numberB === \"number\") {\r\n                a = numberA;\r\n                b = numberB;\r\n            }\r\n\r\n            //If they're both strings, then ignore case\r\n            if (typeof a === \"string\" && typeof b === \"string\") {\r\n                a = a.toLowerCase();\r\n                b = b.toLowerCase();\r\n            }\r\n\r\n            if (a < b) {\r\n                result = -1;\r\n            }\r\n            if (a > b) {\r\n                result = 1;\r\n            }\r\n\r\n            if (this.$scope.sortDirection === 'asc') {\r\n                sortDirectionMultiplier = 1;\r\n            } else if (this.$scope.sortDirection === 'desc') {\r\n                sortDirectionMultiplier = -1;\r\n            }\r\n\r\n            return result * sortDirectionMultiplier;\r\n        };\r\n\r\n        /**\r\n         * Returns a new array which is a result of applying the sort\r\n         * criteria defined in $scope.\r\n         *\r\n         * Does not modify the array that was passed in.\r\n         */\r\n        MCTTableController.prototype.sortRows = function (rowsToSort) {\r\n            var self = this,\r\n                sortKey = this.$scope.sortColumn;\r\n\r\n            if (!this.$scope.sortColumn || !this.$scope.sortDirection) {\r\n                return rowsToSort;\r\n            }\r\n\r\n            return rowsToSort.sort(function (a, b) {\r\n                return self.sortComparator(a[sortKey].text, b[sortKey].text);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Returns an object which contains the largest values\r\n         * for each key in the given set of rows.  This is used to\r\n         * pre-calculate optimal column sizes without having to render\r\n         * every row.\r\n         */\r\n        MCTTableController.prototype.buildLargestRow = function (rows) {\r\n            var largestRow = rows.reduce(function (prevLargest, row) {\r\n                Object.keys(row).forEach(function (key) {\r\n                    var currentColumn,\r\n                        currentColumnLength,\r\n                        largestColumn,\r\n                        largestColumnLength;\r\n                    if (row[key]) {\r\n                        currentColumn = (row[key]).text;\r\n                        currentColumnLength =\r\n                            (currentColumn && currentColumn.length) ?\r\n                                currentColumn.length :\r\n                                currentColumn;\r\n                        largestColumn = prevLargest[key] ? prevLargest[key].text : \"\";\r\n                        largestColumnLength = largestColumn.length;\r\n\r\n                        if (currentColumnLength > largestColumnLength) {\r\n                            prevLargest[key] = JSON.parse(JSON.stringify(row[key]));\r\n                        }\r\n                    }\r\n                });\r\n                return prevLargest;\r\n            }, JSON.parse(JSON.stringify(rows[0] || {})));\r\n            return largestRow;\r\n        };\r\n\r\n        /**\r\n         * Calculates the widest row in the table, and if necessary, resizes\r\n         * the table accordingly\r\n         *\r\n         * @param rows the rows on which to resize\r\n         * @returns {Promise} a promise that will resolve when resizing has\r\n         * occurred.\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.resize = function (rows) {\r\n            this.$scope.sizingRow = this.buildLargestRow(rows);\r\n            return this.$timeout(this.setElementSizes.bind(this));\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        MCTTableController.prototype.filterAndSort = function (rows) {\r\n            var displayRows = rows;\r\n            if (this.$scope.enableFilter) {\r\n                displayRows = this.filterRows(displayRows);\r\n            }\r\n\r\n            if (this.$scope.enableSort) {\r\n                displayRows = this.sortRows(displayRows.slice(0));\r\n            }\r\n            return displayRows;\r\n        };\r\n\r\n        /**\r\n         * Update rows with new data.  If filtering is enabled, rows\r\n         * will be sorted before display.\r\n         */\r\n        MCTTableController.prototype.setRows = function (newRows) {\r\n            //Nothing to show because no columns visible\r\n            if (!this.$scope.displayHeaders || !newRows) {\r\n                return;\r\n            }\r\n\r\n            this.$scope.displayRows = this.filterAndSort(newRows || []);\r\n            this.resize(newRows).then(this.setVisibleRows.bind(this));\r\n        };\r\n\r\n        /**\r\n         * Applies user defined filters to rows. These filters are based on\r\n         * the text entered in the search areas in each column.\r\n         * @param rowsToFilter {Object[]} The rows to apply filters to\r\n         * @returns {Object[]} A filtered copy of the supplied rows\r\n         */\r\n        MCTTableController.prototype.filterRows = function (rowsToFilter) {\r\n            var filters = {},\r\n                self = this;\r\n\r\n            /**\r\n             * Returns true if row matches all filters.\r\n             */\r\n            function matchRow(filterMap, row) {\r\n                return Object.keys(filterMap).every(function (key) {\r\n                    if (!row[key]) {\r\n                        return false;\r\n                    }\r\n                    var testVal = String(row[key].text).toLowerCase();\r\n                    return testVal.indexOf(filterMap[key]) !== -1;\r\n                });\r\n            }\r\n\r\n            if (!Object.keys(this.$scope.filters).length) {\r\n                return rowsToFilter;\r\n            }\r\n\r\n            Object.keys(this.$scope.filters).forEach(function (key) {\r\n                if (!self.$scope.filters[key]) {\r\n                    return;\r\n                }\r\n                filters[key] = self.$scope.filters[key].toLowerCase();\r\n            });\r\n\r\n            return rowsToFilter.filter(matchRow.bind(null, filters));\r\n        };\r\n\r\n\r\n        return MCTTableController;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/features/table/res/templates/mct-table.html',[],function () { return '<a class=\"s-button t-export icon-download labeled\"\\r\\n   ng-click=\"exportAsCSV()\"\\r\\n   title=\"Export This View\\'s Data\">\\r\\n    Export\\r\\n</a>\\r\\n<div class=\"l-view-section scrolling\" style=\"overflow: auto;\" mct-resize=\"resize()\">\\r\\n    <table class=\"sizing-table\">\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td ng-repeat=\"header in displayHeaders\">{{header}}</td>\\r\\n            </tr>\\r\\n            <tr><td ng-repeat=\"header in displayHeaders\" >\\r\\n                {{sizingRow[header].text}}\\r\\n            </td></tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <table class=\"filterable mct-table\"\\r\\n           ng-style=\"{\\r\\n            height: totalHeight + \\'px\\',\\r\\n            \\'max-width\\': totalWidth\\r\\n            }\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th ng-repeat=\"header in displayHeaders\"\\r\\n                    ng-style=\"{\\r\\n                        width: columnWidths[$index] + \\'px\\',\\r\\n                        \\'max-width\\': columnWidths[$index] + \\'px\\',\\r\\n                    }\"\\r\\n                    ng-class=\"[\\r\\n                        enableSort ? \\'sortable\\' : \\'\\',\\r\\n                        sortColumn === header ? \\'sort\\' : \\'\\',\\r\\n                        sortDirection || \\'\\'\\r\\n                    ].join(\\' \\')\"\\r\\n                    ng-click=\"toggleSort(header)\">\\r\\n                    {{ header }}\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr ng-if=\"enableFilter\" class=\"s-filters\">\\r\\n                <th ng-repeat=\"header in displayHeaders\"\\r\\n                    ng-style=\"{\\r\\n                        width: columnWidths[$index] + \\'px\\',\\r\\n                        \\'max-width\\': columnWidths[$index] + \\'px\\',\\r\\n                    }\">\\r\\n                    <input type=\"text\"\\r\\n                           ng-model=\"filters[header]\"/>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n            <tr ng-repeat=\"visibleRow in visibleRows track by visibleRow.rowIndex\"\\r\\n                ng-style=\"{\\r\\n                    top: visibleRow.offsetY + \\'px\\',\\r\\n                }\">\\r\\n                <td ng-repeat=\"header in displayHeaders\"\\r\\n                    ng-style=\" {\\r\\n                        width: columnWidths[$index] + \\'px\\',\\r\\n                        \\'max-width\\': columnWidths[$index] + \\'px\\',\\r\\n                    }\"\\r\\n                    class=\"{{visibleRow.contents[header].cssClass}}\">\\r\\n                    {{ visibleRow.contents[header].text }}\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/table/src/directives/MCTTable',[\r\n        \"../controllers/MCTTableController\",\r\n        \"text!../../res/templates/mct-table.html\"\r\n    ],\r\n    function (MCTTableController, TableTemplate) {\r\n        /**\r\n         * Defines a generic 'Table' component. The table can be populated\r\n         * en-masse by setting the rows attribute, or rows can be added as\r\n         * needed via a broadcast 'addRow' event.\r\n         *\r\n         * This directive accepts parameters specifying header and row\r\n         * content, as well as some additional options.\r\n         *\r\n         * Two broadcast events for notifying the table that the rows have\r\n         * changed. For performance reasons, the table does not monitor the\r\n         * content of `rows` constantly.\r\n         * - 'add:row': A $broadcast event that will notify the table that\r\n         * a new row has been added to the table.\r\n         * eg.\r\n         * <pre><code>\r\n         * $scope.rows.push(newRow);\r\n         * $scope.$broadcast('add:row', $scope.rows.length-1);\r\n         * </code></pre>\r\n         * The code above adds a new row, and alerts the table using the\r\n         * add:row event. Sorting and filtering will be applied\r\n         * automatically by the table component.\r\n         *\r\n         * - 'remove:row': A $broadcast event that will notify the table that a\r\n         * row should be removed from the table.\r\n         * eg.\r\n         * <pre><code>\r\n         * $scope.rows.slice(5, 1);\r\n         * $scope.$broadcast('remove:row', 5);\r\n         * </code></pre>\r\n         * The code above removes a row from the rows array, and then alerts\r\n         * the table to its removal.\r\n         *\r\n         * @memberof platform/features/table\r\n         * @param {string[]} headers The column titles to appear at the top\r\n         * of the table. Corresponding values are specified in the rows\r\n         * using the header title provided here.\r\n         * @param {Object[]} rows The row content. Each row is an object\r\n         * with key-value pairs where the key corresponds to a header\r\n         * specified in the headers parameter.\r\n         * @param {boolean} enableFilter If true, values will be searchable\r\n         * and results filtered\r\n         * @param {boolean} enableSort If true, sorting will be enabled\r\n         * allowing sorting by clicking on column headers\r\n         * @param {boolean} autoScroll If true, table will automatically\r\n         * scroll to the bottom as new data arrives. Auto-scroll can be\r\n         * disengaged manually by scrolling away from the bottom of the\r\n         * table, and can also be enabled manually by scrolling to the bottom of\r\n         * the table rows.\r\n         *\r\n         * @constructor\r\n         */\r\n        function MCTTable($timeout) {\r\n            return {\r\n                restrict: \"E\",\r\n                template: TableTemplate,\r\n                controller: [\r\n                    '$scope',\r\n                    '$timeout',\r\n                    '$element',\r\n                    'exportService',\r\n                    MCTTableController\r\n                ],\r\n                scope: {\r\n                    headers: \"=\",\r\n                    rows: \"=\",\r\n                    enableFilter: \"=?\",\r\n                    enableSort: \"=?\",\r\n                    autoScroll: \"=?\"\r\n                }\r\n            };\r\n        }\r\n\r\n        return MCTTable;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining DomainColumn.\r\n */\r\ndefine(\r\n    'platform/features/table/src/DomainColumn',[],\r\n    function () {\r\n\r\n        /**\r\n         * A column which will report telemetry domain values\r\n         * (typically, timestamps.) Used by the ScrollingListController.\r\n         *\r\n         * @memberof platform/features/table\r\n         * @constructor\r\n         * @param domainMetadata an object with the machine- and human-\r\n         *        readable names for this domain (in `key` and `name`\r\n         *        fields, respectively.)\r\n         * @param {TelemetryFormatter} telemetryFormatter the telemetry\r\n         *        formatting service, for making values human-readable.\r\n         */\r\n        function DomainColumn(domainMetadata, telemetryFormatter) {\r\n            this.domainMetadata = domainMetadata;\r\n            this.telemetryFormatter = telemetryFormatter;\r\n        }\r\n\r\n        DomainColumn.prototype.getTitle = function () {\r\n            return this.domainMetadata.name;\r\n        };\r\n\r\n        DomainColumn.prototype.getValue = function (domainObject, datum) {\r\n            return {\r\n                text: this.telemetryFormatter.formatDomainValue(\r\n                    datum[this.domainMetadata.key],\r\n                    this.domainMetadata.format\r\n                )\r\n            };\r\n        };\r\n\r\n        return DomainColumn;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining DomainColumn. Created by vwoeltje on 11/18/14.\r\n */\r\ndefine(\r\n    'platform/features/table/src/RangeColumn',[],\r\n    function () {\r\n\r\n        /**\r\n         * A column which will report telemetry range values\r\n         * (typically, measurements.) Used by the ScrollingListController.\r\n         *\r\n         * @memberof platform/features/table\r\n         * @constructor\r\n         * @param rangeMetadata an object with the machine- and human-\r\n         *        readable names for this range (in `key` and `name`\r\n         *        fields, respectively.)\r\n         * @param {TelemetryFormatter} telemetryFormatter the telemetry\r\n         *        formatting service, for making values human-readable.\r\n         */\r\n        function RangeColumn(rangeMetadata, telemetryFormatter) {\r\n            this.rangeMetadata = rangeMetadata;\r\n            this.telemetryFormatter = telemetryFormatter;\r\n        }\r\n\r\n        RangeColumn.prototype.getTitle = function () {\r\n            return this.rangeMetadata.name;\r\n        };\r\n\r\n        RangeColumn.prototype.getValue = function (domainObject, datum) {\r\n            var range = this.rangeMetadata.key,\r\n                limit = domainObject.getCapability('limit'),\r\n                value = isNaN(datum[range]) ? datum[range] : parseFloat(datum[range]),\r\n                alarm = limit && limit.evaluate(datum, range);\r\n\r\n            return {\r\n                cssClass: alarm && alarm.cssClass,\r\n                text: typeof (value) === 'undefined' ? undefined : this.telemetryFormatter.formatRangeValue(value)\r\n            };\r\n        };\r\n\r\n        return RangeColumn;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining NameColumn. Created by vwoeltje on 11/18/14.\r\n */\r\ndefine(\r\n    'platform/features/table/src/NameColumn',[],\r\n    function () {\r\n\r\n        /**\r\n         * A column which will report the name of the domain object\r\n         * which exposed specific telemetry values.\r\n         *\r\n         * @memberof platform/features/table\r\n         * @constructor\r\n         */\r\n        function NameColumn() {\r\n        }\r\n\r\n        NameColumn.prototype.getTitle = function () {\r\n            return \"Name\";\r\n        };\r\n\r\n        NameColumn.prototype.getValue = function (domainObject) {\r\n            return {\r\n                text: domainObject.getModel().name\r\n            };\r\n        };\r\n\r\n        return NameColumn;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/table/src/TableConfiguration',[\r\n        './DomainColumn',\r\n        './RangeColumn',\r\n        './NameColumn'\r\n    ],\r\n    function (DomainColumn, RangeColumn, NameColumn) {\r\n\r\n        /**\r\n         * Class that manages table metadata, state, and contents.\r\n         * @memberof platform/features/table\r\n         * @param domainObject\r\n         * @constructor\r\n         */\r\n        function TableConfiguration(domainObject, telemetryFormatter) {\r\n            this.domainObject = domainObject;\r\n            this.columns = [];\r\n            this.telemetryFormatter = telemetryFormatter;\r\n        }\r\n\r\n        /**\r\n         * Build column definitions based on supplied telemetry metadata\r\n         * @param metadata Metadata describing the domains and ranges available\r\n         * @returns {TableConfiguration} This object\r\n         */\r\n        TableConfiguration.prototype.populateColumns = function (metadata) {\r\n            var self = this;\r\n\r\n            this.columns = [];\r\n\r\n            if (metadata) {\r\n\r\n                metadata.forEach(function (metadatum) {\r\n                    //Push domains first\r\n                    (metadatum.domains || []).forEach(function (domainMetadata) {\r\n                        self.addColumn(new DomainColumn(domainMetadata,\r\n                            self.telemetryFormatter));\r\n                    });\r\n                    (metadatum.ranges || []).forEach(function (rangeMetadata) {\r\n                        self.addColumn(new RangeColumn(rangeMetadata,\r\n                            self.telemetryFormatter));\r\n                    });\r\n                });\r\n\r\n                if (this.columns.length > 0) {\r\n                    self.addColumn(new NameColumn(), 0);\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Add a column definition to this Table\r\n         * @param {RangeColumn | DomainColumn | NameColumn} column\r\n         * @param {Number} [index] Where the column should appear (will be\r\n         * affected by column filtering)\r\n         */\r\n        TableConfiguration.prototype.addColumn = function (column, index) {\r\n            if (typeof index === 'undefined') {\r\n                this.columns.push(column);\r\n            } else {\r\n                this.columns.splice(index, 0, column);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         * @param column\r\n         * @returns {*|string}\r\n         */\r\n        TableConfiguration.prototype.getColumnTitle = function (column) {\r\n            return column.getTitle();\r\n        };\r\n\r\n        /**\r\n         * Get a simple list of column titles\r\n         * @returns {Array} The titles of the columns\r\n         */\r\n        TableConfiguration.prototype.getHeaders = function () {\r\n            var self = this;\r\n            return this.columns.map(function (column, i) {\r\n                return self.getColumnTitle(column) || 'Column ' + (i + 1);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Retrieve and format values for a given telemetry datum.\r\n         * @param telemetryObject The object that the telemetry data is\r\n         * associated with\r\n         * @param datum The telemetry datum to retrieve values from\r\n         * @returns {Object} Key value pairs where the key is the column\r\n         * title, and the value is the formatted value from the provided datum.\r\n         */\r\n        TableConfiguration.prototype.getRowValues = function (telemetryObject, datum) {\r\n            var self = this;\r\n            return this.columns.reduce(function (rowObject, column, i) {\r\n                var columnTitle = self.getColumnTitle(column) || 'Column ' + (i + 1),\r\n                    columnValue = column.getValue(telemetryObject, datum);\r\n\r\n                if (columnValue !== undefined && columnValue.text === undefined) {\r\n                    columnValue.text = '';\r\n                }\r\n                // Don't replace something with nothing.\r\n                // This occurs when there are multiple columns with the\r\n                // column title\r\n                if (rowObject[columnTitle] === undefined ||\r\n                    rowObject[columnTitle].text === undefined ||\r\n                    rowObject[columnTitle].text.length === 0) {\r\n                    rowObject[columnTitle] = columnValue;\r\n                }\r\n                return rowObject;\r\n            }, {});\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        TableConfiguration.prototype.defaultColumnConfiguration = function () {\r\n            return ((this.domainObject.getModel().configuration || {}).table || {}).columns || {};\r\n        };\r\n\r\n        /**\r\n         * Set the established configuration on the domain object\r\n         * @private\r\n         */\r\n        TableConfiguration.prototype.saveColumnConfiguration = function (columnConfig) {\r\n            this.domainObject.useCapability('mutation', function (model) {\r\n                model.configuration = model.configuration || {};\r\n                model.configuration.table = model.configuration.table || {};\r\n                model.configuration.table.columns = columnConfig;\r\n            });\r\n        };\r\n\r\n        function configChanged(config1, config2) {\r\n            var config1Keys = Object.keys(config1),\r\n                config2Keys = Object.keys(config2);\r\n\r\n            return (config1Keys.length !== config2Keys.length) ||\r\n                config1Keys.some(function (key) {\r\n                    return config1[key] !== config2[key];\r\n                });\r\n        }\r\n\r\n        /**\r\n         * As part of the process of building the table definition, extract\r\n         * configuration from column definitions.\r\n         * @returns {Object} A configuration object consisting of key-value\r\n         * pairs where the key is the column title, and the value is a\r\n         * boolean indicating whether the column should be shown.\r\n         */\r\n        TableConfiguration.prototype.buildColumnConfiguration = function () {\r\n            var configuration = {},\r\n                //Use existing persisted config, or default it\r\n                defaultConfig = this.defaultColumnConfiguration();\r\n\r\n            /**\r\n             * For each column header, define a configuration value\r\n             * specifying whether the column is visible or not. Default to\r\n             * existing (persisted) configuration if available\r\n             */\r\n            this.getHeaders().forEach(function (columnTitle) {\r\n                configuration[columnTitle] =\r\n                    typeof defaultConfig[columnTitle] === 'undefined' ? true :\r\n                        defaultConfig[columnTitle];\r\n            });\r\n\r\n            //Synchronize column configuration with model\r\n            if (configChanged(configuration, defaultConfig)) {\r\n                this.saveColumnConfiguration(configuration);\r\n            }\r\n\r\n            return configuration;\r\n        };\r\n\r\n        return TableConfiguration;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle adds a table view for displaying telemetry data.\r\n * @namespace platform/features/table\r\n */\r\ndefine(\r\n    'platform/features/table/src/controllers/TelemetryTableController',[\r\n        '../TableConfiguration'\r\n    ],\r\n    function (TableConfiguration) {\r\n\r\n        /**\r\n         * The TableController is responsible for getting data onto the page\r\n         * in the table widget. This includes handling composition,\r\n         * configuration, and telemetry subscriptions.\r\n         * @memberof platform/features/table\r\n         * @param $scope\r\n         * @param telemetryHandler\r\n         * @param telemetryFormatter\r\n         * @constructor\r\n         */\r\n        function TelemetryTableController(\r\n            $scope,\r\n            telemetryHandler,\r\n            telemetryFormatter\r\n        ) {\r\n            var self = this;\r\n\r\n            this.$scope = $scope;\r\n            this.columns = {}; //Range and Domain columns\r\n            this.handle = undefined;\r\n            this.telemetryHandler = telemetryHandler;\r\n            this.table = new TableConfiguration($scope.domainObject,\r\n                telemetryFormatter);\r\n            this.changeListeners = [];\r\n\r\n            $scope.rows = [];\r\n\r\n            // Subscribe to telemetry when a domain object becomes available\r\n            this.$scope.$watch('domainObject', function () {\r\n                self.subscribe();\r\n                self.registerChangeListeners();\r\n            });\r\n\r\n            // Unsubscribe when the plot is destroyed\r\n            this.$scope.$on(\"$destroy\", this.destroy.bind(this));\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        TelemetryTableController.prototype.unregisterChangeListeners = function () {\r\n            this.changeListeners.forEach(function (listener) {\r\n                return listener && listener();\r\n            });\r\n            this.changeListeners = [];\r\n        };\r\n\r\n        /**\r\n         * Defer registration of change listeners until domain object is\r\n         * available in order to avoid race conditions\r\n         * @private\r\n         */\r\n        TelemetryTableController.prototype.registerChangeListeners = function () {\r\n            var self = this;\r\n            this.unregisterChangeListeners();\r\n\r\n            // When composition changes, re-subscribe to the various\r\n            // telemetry subscriptions\r\n            this.changeListeners.push(this.$scope.$watchCollection(\r\n                'domainObject.getModel().composition',\r\n                function (newVal, oldVal) {\r\n                    if (newVal !== oldVal) {\r\n                        self.subscribe();\r\n                    }\r\n                })\r\n            );\r\n\r\n            //Change of bounds in time conductor\r\n            this.changeListeners.push(this.$scope.$on('telemetry:display:bounds',\r\n                this.subscribe.bind(this))\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Release the current subscription (called when scope is destroyed)\r\n         */\r\n        TelemetryTableController.prototype.destroy = function () {\r\n            if (this.handle) {\r\n                this.handle.unsubscribe();\r\n                this.handle = undefined;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Function for handling realtime data when it is available. This\r\n         * will be called by the telemetry framework when new data is\r\n         * available.\r\n         *\r\n         * Method should be overridden by specializing class.\r\n         */\r\n        TelemetryTableController.prototype.addRealtimeData = function () {\r\n        };\r\n\r\n        /**\r\n         * Function for handling historical data. Will be called by\r\n         * telemetry framework when requested historical data is available.\r\n         * Should be overridden by specializing class.\r\n         */\r\n        TelemetryTableController.prototype.addHistoricalData = function () {\r\n        };\r\n\r\n        /**\r\n         Create a new subscription. This can be overridden by children to\r\n         change default behaviour (which is to retrieve historical telemetry\r\n         only).\r\n         */\r\n        TelemetryTableController.prototype.subscribe = function () {\r\n            if (this.handle) {\r\n                this.handle.unsubscribe();\r\n            }\r\n            this.$scope.loading = true;\r\n\r\n            this.handle = this.$scope.domainObject && this.telemetryHandler.handle(\r\n                    this.$scope.domainObject,\r\n                    this.addRealtimeData.bind(this),\r\n                    true // Lossless\r\n                );\r\n\r\n            this.handle.request({}).then(this.addHistoricalData.bind(this));\r\n\r\n            this.setup();\r\n        };\r\n\r\n        /**\r\n         * Setup table columns based on domain object metadata\r\n         */\r\n        TelemetryTableController.prototype.setup = function () {\r\n            var handle = this.handle,\r\n                table = this.table,\r\n                self = this;\r\n\r\n            if (handle) {\r\n                handle.promiseTelemetryObjects().then(function () {\r\n                    self.$scope.headers = [];\r\n                    self.$scope.rows = [];\r\n                    table.populateColumns(handle.getMetadata());\r\n\r\n                    self.filterColumns();\r\n\r\n                    // When table column configuration changes, (due to being\r\n                    // selected or deselected), filter columns appropriately.\r\n                    self.changeListeners.push(self.$scope.$watchCollection(\r\n                        'domainObject.getModel().configuration.table.columns',\r\n                        self.filterColumns.bind(self)\r\n                    ));\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * When column configuration changes, update the visible headers\r\n         * accordingly.\r\n         * @private\r\n         */\r\n        TelemetryTableController.prototype.filterColumns = function () {\r\n            var columnConfig = this.table.buildColumnConfiguration();\r\n\r\n            //Populate headers with visible columns (determined by configuration)\r\n            this.$scope.headers = Object.keys(columnConfig).filter(function (column) {\r\n                return columnConfig[column];\r\n            });\r\n        };\r\n\r\n        return TelemetryTableController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/table/src/controllers/RealtimeTableController',[\r\n        './TelemetryTableController'\r\n    ],\r\n    function (TableController) {\r\n\r\n        /**\r\n         * Extends TelemetryTableController and adds real-time streaming\r\n         * support.\r\n         * @memberof platform/features/table\r\n         * @param $scope\r\n         * @param telemetryHandler\r\n         * @param telemetryFormatter\r\n         * @constructor\r\n         */\r\n        function RealtimeTableController($scope, telemetryHandler, telemetryFormatter) {\r\n            TableController.call(this, $scope, telemetryHandler, telemetryFormatter);\r\n\r\n            this.maxRows = 100000;\r\n        }\r\n\r\n        RealtimeTableController.prototype = Object.create(TableController.prototype);\r\n\r\n        /**\r\n         * Overrides method on TelemetryTableController providing handling\r\n         * for realtime data.\r\n         */\r\n        RealtimeTableController.prototype.addRealtimeData = function () {\r\n            var self = this,\r\n                datum,\r\n                row;\r\n            this.handle.getTelemetryObjects().forEach(function (telemetryObject) {\r\n                datum = self.handle.getDatum(telemetryObject);\r\n                if (datum) {\r\n                    //Populate row values from telemetry datum\r\n                    row = self.table.getRowValues(telemetryObject, datum);\r\n                    self.$scope.rows.push(row);\r\n\r\n                    //Inform table that a new row has been added\r\n                    if (self.$scope.rows.length > self.maxRows) {\r\n                        self.$scope.$broadcast('remove:row', 0);\r\n                        self.$scope.rows.shift();\r\n                    }\r\n\r\n                    self.$scope.$broadcast('add:row',\r\n                        self.$scope.rows.length - 1);\r\n                }\r\n            });\r\n            this.$scope.loading = false;\r\n        };\r\n\r\n        return RealtimeTableController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/table/src/controllers/HistoricalTableController',[\r\n        './TelemetryTableController'\r\n    ],\r\n    function (TableController) {\r\n        var BATCH_SIZE = 1000;\r\n\r\n        /**\r\n         * Extends TelemetryTableController and adds real-time streaming\r\n         * support.\r\n         * @memberof platform/features/table\r\n         * @param $scope\r\n         * @param telemetryHandler\r\n         * @param telemetryFormatter\r\n         * @constructor\r\n         */\r\n        function HistoricalTableController($scope, telemetryHandler, telemetryFormatter, $timeout) {\r\n            var self = this;\r\n\r\n            this.$timeout = $timeout;\r\n            this.timeoutHandle = undefined;\r\n            this.batchSize = BATCH_SIZE;\r\n\r\n            $scope.$on(\"$destroy\", function () {\r\n                if (self.timeoutHandle) {\r\n                    self.$timeout.cancel(self.timeoutHandle);\r\n                }\r\n            });\r\n\r\n            TableController.call(this, $scope, telemetryHandler, telemetryFormatter);\r\n        }\r\n\r\n        HistoricalTableController.prototype = Object.create(TableController.prototype);\r\n\r\n        /**\r\n         * Set provided row data on scope, and cancel loading spinner\r\n         * @private\r\n         */\r\n        HistoricalTableController.prototype.doneProcessing = function (rowData) {\r\n            this.$scope.rows = rowData;\r\n            this.$scope.loading = false;\r\n        };\r\n\r\n        /**\r\n         * Processes an array of objects, formatting the telemetry available\r\n         * for them and setting it on scope when done\r\n         * @private\r\n         */\r\n        HistoricalTableController.prototype.processTelemetryObjects = function (objects, offset, start, rowData) {\r\n            var telemetryObject = objects[offset],\r\n                series,\r\n                i = start,\r\n                pointCount,\r\n                end;\r\n\r\n            //No more objects to process\r\n            if (!telemetryObject) {\r\n                return this.doneProcessing(rowData);\r\n            }\r\n\r\n            series = this.handle.getSeries(telemetryObject);\r\n\r\n            pointCount = series.getPointCount();\r\n            end = Math.min(start + this.batchSize, pointCount);\r\n\r\n            //Process rows in a batch with size not exceeding a maximum length\r\n            for (; i < end; i++) {\r\n                rowData.push(this.table.getRowValues(telemetryObject,\r\n                    this.handle.makeDatum(telemetryObject, series, i)));\r\n            }\r\n\r\n            //Done processing all rows for this object.\r\n            if (end >= pointCount) {\r\n                offset++;\r\n                end = 0;\r\n            }\r\n\r\n            // Done processing either a batch or an object, yield process\r\n            // before continuing processing\r\n            this.timeoutHandle = this.$timeout(this.processTelemetryObjects.bind(this, objects, offset, end, rowData));\r\n        };\r\n\r\n        /**\r\n        * Populates historical data on scope when it becomes available from\r\n        * the telemetry API\r\n        */\r\n        HistoricalTableController.prototype.addHistoricalData = function () {\r\n            if (this.timeoutHandle) {\r\n                this.$timeout.cancel(this.timeoutHandle);\r\n            }\r\n\r\n            this.timeoutHandle = this.$timeout(this.processTelemetryObjects.bind(this, this.handle.getTelemetryObjects(), 0, 0, []));\r\n        };\r\n\r\n        return HistoricalTableController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/features/table/src/controllers/TableOptionsController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Notes on implementation of plot options\r\n         *\r\n         * Multiple y-axes will have to be handled with multiple forms as\r\n         * they will need to be stored on distinct model object\r\n         *\r\n         * Likewise plot series options per-child will need to be separate\r\n         * forms.\r\n         */\r\n\r\n        /**\r\n         * The LayoutController is responsible for supporting the\r\n         * Layout view. It arranges frames according to saved configuration\r\n         * and provides methods for updating these based on mouse\r\n         * movement.\r\n         * @memberof platform/features/plot\r\n         * @constructor\r\n         * @param {Scope} $scope the controller's Angular scope\r\n         */\r\n        function TableOptionsController($scope) {\r\n\r\n            var self = this;\r\n\r\n            this.$scope = $scope;\r\n            this.domainObject = $scope.domainObject;\r\n            this.listeners = [];\r\n\r\n            $scope.columnsForm = {};\r\n\r\n            function unlisten() {\r\n                self.listeners.forEach(function (listener) {\r\n                    listener();\r\n                });\r\n            }\r\n\r\n            $scope.$watch('domainObject', function (domainObject) {\r\n                unlisten();\r\n                self.populateForm(domainObject.getModel());\r\n\r\n                self.listeners.push(self.domainObject.getCapability('mutation').listen(function (model) {\r\n                    self.populateForm(model);\r\n                }));\r\n            });\r\n\r\n            /**\r\n             * Maintain a configuration object on scope that stores column\r\n             * configuration. On change, synchronize with object model.\r\n             */\r\n            $scope.$watchCollection('configuration.table.columns', function (newColumns, oldColumns) {\r\n                if (newColumns !== oldColumns) {\r\n                    self.domainObject.useCapability('mutation', function (model) {\r\n                        model.configuration.table.columns = newColumns;\r\n                    });\r\n                    self.domainObject.getCapability('persistence').persist();\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Destroy all mutation listeners\r\n             */\r\n            $scope.$on('$destroy', unlisten);\r\n\r\n        }\r\n\r\n        TableOptionsController.prototype.populateForm = function (model) {\r\n            var columnsDefinition = (((model.configuration || {}).table || {}).columns || {}),\r\n                rows = [];\r\n            this.$scope.columnsForm = {\r\n                'name': 'Columns',\r\n                'sections': [{\r\n                    'name': 'Columns',\r\n                    'rows': rows\r\n                }]};\r\n\r\n            Object.keys(columnsDefinition).forEach(function (key) {\r\n                rows.push({\r\n                    'name': key,\r\n                    'control': 'checkbox',\r\n                    'key': key\r\n                });\r\n            });\r\n            this.$scope.configuration = JSON.parse(JSON.stringify(model.configuration || {}));\r\n        };\r\n\r\n        return TableOptionsController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/regions/src/Region',[],\r\n    function () {\r\n\r\n        /**\r\n         * @typeDef {object} PartContents\r\n         * @property {string} key If the part is defined as a\r\n         * representation, the key corresponding to the representation.\r\n         * @memberOf platform/commonUI/regions\r\n         */\r\n\r\n        /**\r\n         * @typeDef {object} RegionConfiguration\r\n         * @property {string} name A unique name for this region part\r\n         * @property {PartContents} [content] the details of the region being\r\n         * defined\r\n         * @property {Array<string>} [modes] the modes that this region\r\n         * should be included in. Options are 'edit' and 'browse'. By\r\n         * default, will be included in both. Inclusion of regions is\r\n         * determined by policies of category 'region'. By default, the\r\n         * {EditableRegionPolicy} will be applied.\r\n         * @memberOf platform/commonUI/regions\r\n         */\r\n\r\n        /**\r\n         * Defines the interface for a screen region. A screen region is a\r\n         * section of the browse an edit screens for an object. Regions are\r\n         * declared in object type definitions.\r\n         * @memberOf platform/commonUI/regions\r\n         * @abstract\r\n         * @constructor\r\n         */\r\n        function Region(configuration) {\r\n            configuration = configuration || {};\r\n            this.name = configuration.name;\r\n            this.content = configuration.content;\r\n            this.modes = configuration.modes;\r\n\r\n            this.regions = [];\r\n        }\r\n\r\n        /**\r\n         * Adds a sub-region to this region.\r\n         * @param {Region} region the part to add\r\n         * @param {number} [index] the position to insert the region. By default\r\n         * will add to the end\r\n         */\r\n        Region.prototype.addRegion = function (region, index) {\r\n            if (index) {\r\n                this.regions.splice(index, 0, region);\r\n            } else {\r\n                this.regions.push(region);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Removes a sub-region from this region.\r\n         * @param {Region | number | strnig} region The region to\r\n         * remove. If a number, will remove the region at that index. If a\r\n         * string, will remove the region with the matching name. If an\r\n         * object, will attempt to remove that object from the Region\r\n         */\r\n        Region.prototype.removeRegion = function (region) {\r\n            if (typeof region === 'number') {\r\n                this.regions.splice(region, 1);\r\n            } else if (typeof region === 'string') {\r\n                this.regions = this.regions.filter(function (thisRegion) {\r\n                    return thisRegion.name !== region;\r\n                });\r\n            } else {\r\n                this.regions.splice(this.regions.indexOf(region), 1);\r\n            }\r\n        };\r\n\r\n        return Region;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/browse/src/InspectorRegion',[\r\n        '../../regions/src/Region'\r\n    ],\r\n    function (Region) {\r\n\r\n        /**\r\n         * Defines the a default Inspector region. Captured in a class to\r\n         * allow for modular extension and customization of regions based on\r\n         * the typical case.\r\n         * @memberOf platform/commonUI/regions\r\n         * @constructor\r\n         */\r\n        function InspectorRegion() {\r\n            Region.call(this, {'name': 'Inspector'});\r\n\r\n            this.buildRegion();\r\n        }\r\n\r\n        InspectorRegion.prototype = Object.create(Region.prototype);\r\n        InspectorRegion.prototype.constructor = Region;\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        InspectorRegion.prototype.buildRegion = function () {\r\n            var metadataRegion = {\r\n                name: 'metadata',\r\n                title: 'Metadata Region',\r\n                // Which modes should the region part be visible in? If\r\n                // nothing provided here, then assumed that part is visible\r\n                // in both. The visibility or otherwise of a region part\r\n                // should be decided by a policy. In this case, 'modes' is a\r\n                // shortcut that is used by the EditableRegionPolicy.\r\n                modes: ['browse', 'edit'],\r\n                content: {\r\n                    key: 'object-properties'\r\n                }\r\n            };\r\n            this.addRegion(new Region(metadataRegion), 0);\r\n        };\r\n\r\n        return InspectorRegion;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/features/table/bundle',[\r\n    \"./src/directives/MCTTable\",\r\n    \"./src/controllers/RealtimeTableController\",\r\n    \"./src/controllers/HistoricalTableController\",\r\n    \"./src/controllers/TableOptionsController\",\r\n    '../../commonUI/regions/src/Region',\r\n    '../../commonUI/browse/src/InspectorRegion',\r\n    \"legacyRegistry\"\r\n], function (\r\n    MCTTable,\r\n    RealtimeTableController,\r\n    HistoricalTableController,\r\n    TableOptionsController,\r\n    Region,\r\n    InspectorRegion,\r\n    legacyRegistry\r\n) {\r\n    /**\r\n     * Two region parts are defined here. One that appears only in browse\r\n     * mode, and one that appears only in edit mode. For not they both point\r\n     * to the same representation, but a different key could be used here to\r\n     * include a customized representation for edit mode.\r\n     */\r\n    var tableInspector = new InspectorRegion(),\r\n        tableOptionsEditRegion = new Region({\r\n            name: \"table-options\",\r\n            title: \"Table Options\",\r\n            modes: ['edit'],\r\n            content: {\r\n                key: \"table-options-edit\"\r\n            }\r\n        });\r\n    tableInspector.addRegion(tableOptionsEditRegion);\r\n\r\n    legacyRegistry.register(\"platform/features/table\", {\r\n        \"extensions\": {\r\n            \"types\": [\r\n                {\r\n                    \"key\": \"table\",\r\n                    \"name\": \"Historical Telemetry Table\",\r\n                    \"cssclass\": \"icon-tabular\",\r\n                    \"description\": \"A static table of all values over time for all included telemetry elements. Rows are timestamped data values for each telemetry element; columns are data fields. The number of rows is based on the range of your query. New incoming data must be manually re-queried for.\",\r\n                    \"priority\": 861,\r\n                    \"features\": \"creation\",\r\n                    \"delegates\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"inspector\": tableInspector,\r\n                    \"contains\": [\r\n                        {\r\n                            \"has\": \"telemetry\"\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"composition\": []\r\n                    },\r\n                    \"views\": [\r\n                        \"table\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"rttable\",\r\n                    \"name\": \"Real-time Telemetry Table\",\r\n                    \"cssclass\": \"icon-tabular-realtime\",\r\n                    \"description\": \"A scrolling table of latest values for all included telemetry elements. Rows are timestamped data values for each telemetry element; columns are data fields. New incoming data is automatically added to the view.\",\r\n                    \"priority\": 860,\r\n                    \"features\": \"creation\",\r\n                    \"delegates\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"inspector\": tableInspector,\r\n                    \"contains\": [\r\n                        {\r\n                            \"has\": \"telemetry\"\r\n                        }\r\n                    ],\r\n                    \"model\": {\r\n                        \"composition\": []\r\n                    },\r\n                    \"views\": [\r\n                        \"rt-table\",\r\n                        \"scrolling-table\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"HistoricalTableController\",\r\n                    \"implementation\": HistoricalTableController,\r\n                    \"depends\": [\"$scope\", \"telemetryHandler\", \"telemetryFormatter\", \"$timeout\"]\r\n                },\r\n                {\r\n                    \"key\": \"RealtimeTableController\",\r\n                    \"implementation\": RealtimeTableController,\r\n                    \"depends\": [\"$scope\", \"telemetryHandler\", \"telemetryFormatter\"]\r\n                },\r\n                {\r\n                    \"key\": \"TableOptionsController\",\r\n                    \"implementation\": TableOptionsController,\r\n                    \"depends\": [\"$scope\"]\r\n                }\r\n\r\n            ],\r\n            \"views\": [\r\n                {\r\n                    \"name\": \"Historical Table\",\r\n                    \"key\": \"table\",\r\n                    \"cssclass\": \"icon-tabular\",\r\n                    \"templateUrl\": \"templates/historical-table.html\",\r\n                    \"needs\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"delegation\": true,\r\n                    \"editable\": false\r\n                },\r\n                {\r\n                    \"name\": \"Real-time Table\",\r\n                    \"key\": \"rt-table\",\r\n                    \"cssclass\": \"icon-tabular-realtime\",\r\n                    \"templateUrl\": \"templates/rt-table.html\",\r\n                    \"needs\": [\r\n                        \"telemetry\"\r\n                    ],\r\n                    \"delegation\": true,\r\n                    \"editable\": false\r\n                }\r\n            ],\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctTable\",\r\n                    \"implementation\": MCTTable,\r\n                    \"depends\": [\"$timeout\"]\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"table-options-edit\",\r\n                    \"templateUrl\": \"templates/table-options-edit.html\"\r\n                }\r\n            ],\r\n            \"stylesheets\": [\r\n                {\r\n                    \"stylesheetUrl\": \"css/table.css\",\r\n                    \"priority\": \"mandatory\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/forms/src/controllers/FormController',[],\r\n    function () {\r\n\r\n        // Default ng-pattern; any non whitespace\r\n        var NON_WHITESPACE = /\\S/;\r\n\r\n        /**\r\n         * Controller for mct-form and mct-toolbar directives.\r\n         * @memberof platform/forms\r\n         * @constructor\r\n         */\r\n        function FormController($scope) {\r\n            var regexps = [];\r\n\r\n            // ng-pattern seems to want a RegExp, and not a\r\n            // string (despite what documentation says) but\r\n            // we want form structure to be JSON-expressible,\r\n            // so we make RegExp's from strings as-needed\r\n            function getRegExp(pattern) {\r\n                // If undefined, don't apply a pattern\r\n                if (!pattern) {\r\n                    return NON_WHITESPACE;\r\n                }\r\n\r\n                // Just echo if it's already a regexp\r\n                if (pattern instanceof RegExp) {\r\n                    return pattern;\r\n                }\r\n\r\n                // Otherwise, assume a string\r\n                // Cache for easy lookup later (so we don't\r\n                // creat a new RegExp every digest cycle)\r\n                if (!regexps[pattern]) {\r\n                    regexps[pattern] = new RegExp(pattern);\r\n                }\r\n\r\n                return regexps[pattern];\r\n            }\r\n\r\n            // Publish the form state under the requested\r\n            // name in the parent scope\r\n            $scope.$watch(\"mctForm\", function (mctForm) {\r\n                if ($scope.name) {\r\n                    $scope.$parent[$scope.name] = mctForm;\r\n                }\r\n            });\r\n\r\n            // Expose the regexp lookup\r\n            $scope.getRegExp = getRegExp;\r\n        }\r\n\r\n        return FormController;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/forms/res/templates/form.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<form name=\"mctForm\" novalidate class=\"form\">\\r\\n    <span ng-repeat=\"section in structure.sections\">\\r\\n        <div class=\"section-header\" ng-if=\"section.name\">\\r\\n            {{section.name}}\\r\\n        </div>\\r\\n        <div class=\"form-section\" ng-class=\"{ first:$index < 1 }\">\\r\\n            <ng-form name=\"mctFormInner\" ng-repeat=\"row in section.rows\">\\r\\n                <div class=\"form-row validates l-flex-row\"\\r\\n                     ng-class=\"{\\r\\n                               req: row.required,\\r\\n                               valid: mctFormInner.$dirty && mctFormInner.$valid,\\r\\n                               invalid: mctFormInner.$dirty && !mctFormInner.$valid,\\r\\n                               first: $index < 1,\\r\\n                               \\'l-controls-first\\': row.layout === \\'control-first\\',\\r\\n                               \\'l-controls-under\\': row.layout === \\'controls-under\\'\\r\\n                               }\">\\r\\n                    <div class=\\'label flex-elem\\' title=\"{{row.description}}\">\\r\\n                        {{row.name}}\\r\\n                    </div>\\r\\n                    <div class=\\'controls flex-elem\\'>\\r\\n                        <div class=\"wrapper\" ng-if=\"row.control\">\\r\\n                            <mct-control key=\"row.control\"\\r\\n                                         ng-model=\"ngModel\"\\r\\n                                         ng-required=\"row.required\"\\r\\n                                         ng-pattern=\"getRegExp(row.pattern)\"\\r\\n                                         options=\"row.options\"\\r\\n                                         structure=\"row\"\\r\\n                                         field=\"row.key\">\\r\\n                            </mct-control>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ng-form>\\r\\n        </div>\\r\\n    </span>\\r\\n</form>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements directives for displaying and handling forms for\r\n * user input.\r\n * @namespace platform/forms\r\n */\r\ndefine(\r\n    'platform/forms/src/MCTForm',[\"./controllers/FormController\", \"text!../res/templates/form.html\"],\r\n    function (FormController, formTemplate) {\r\n\r\n        /**\r\n         * The mct-form directive allows generation of displayable\r\n         * forms based on a declarative description of the form's\r\n         * structure.\r\n         *\r\n         * This directive accepts three attributes:\r\n         *\r\n         * * `ng-model`: The model for the form; where user input\r\n         *   where be stored.\r\n         * * `structure`: The declarative structure of the form.\r\n         *   Describes what controls should be shown and where\r\n         *   their values should be read/written in the model.\r\n         * * `name`: The name under which to expose the form's\r\n         *   dirty/valid state. This is similar to ng-form's use\r\n         *   of name, except this will be made available in the\r\n         *   parent scope.\r\n         *\r\n         * @memberof platform/forms\r\n         * @constructor\r\n         */\r\n        function MCTForm() {\r\n            return {\r\n                // Only show at the element level\r\n                restrict: \"E\",\r\n\r\n                // Load the forms template\r\n                template: formTemplate,\r\n\r\n                // Use FormController to populate/respond to changes in scope\r\n                controller: ['$scope', FormController],\r\n\r\n                // Initial an isolate scope\r\n                scope: {\r\n\r\n                    // The model: Where form input will actually go\r\n                    ngModel: \"=\",\r\n\r\n                    // Form structure; what sections/rows to show\r\n                    structure: \"=\",\r\n\r\n                    // Name under which to publish the form\r\n                    name: \"@\"\r\n                }\r\n            };\r\n        }\r\n\r\n        return MCTForm;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/forms/res/templates/toolbar.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<form novalidate>\\r\\n\\t<div class=\"tool-bar btn-bar contents abs\">\\r\\n\\t    <span ng-repeat=\"section in structure.sections\"\\r\\n\\t          class=\"l-control-group\"\\r\\n\\t          ng-if=\"!section.hidden\"\\r\\n\\t          title=\"{{section.description}}\">\\r\\n\\t        <ng-form ng-repeat=\"item in section.items\"\\r\\n\\t                 ng-class=\"{ \\'input-labeled\\': item.name }\"\\r\\n\\t                 ng-hide=\"item.hidden\"\\r\\n\\t                 class=\"inline\"\\r\\n\\t                 title=\"{{item.description}}\"\\r\\n\\t                 name=\"mctFormInner\">\\r\\n\\r\\n\\t            <label ng-if=\"item.name\">\\r\\n\\t                {{item.name}}:\\r\\n\\t            </label>\\r\\n\\t            <mct-control key=\"item.control\"\\r\\n\\t                         ng-class=\"{ disabled: item.disabled }\"\\r\\n\\t                         ng-model=\"ngModel\"\\r\\n\\t                         ng-required=\"item.required\"\\r\\n\\t                         ng-pattern=\"getRegExp(item.pattern)\"\\r\\n\\t                         options=\"item.options\"\\r\\n\\t                         structure=\"item\"\\r\\n\\t                         field=\"item.key\">\\r\\n\\t            </mct-control>\\r\\n\\t        </ng-form>\\r\\n\\t    </span>\\r\\n\\t</div>\\r\\n</form>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining MCTForm. Created by vwoeltje on 11/10/14.\r\n */\r\ndefine(\r\n    'platform/forms/src/MCTToolbar',[\"./MCTForm\", \"text!../res/templates/toolbar.html\"],\r\n    function (MCTForm, toolbarTemplate) {\r\n\r\n        /**\r\n         * The mct-toolbar directive allows generation of displayable\r\n         * forms based on a declarative description of the form's\r\n         * structure.\r\n         *\r\n         * This directive accepts three attributes:\r\n         *\r\n         * * `ng-model`: The model for the form; where user input\r\n         *   where be stored.\r\n         * * `structure`: The declarative structure of the toolbar.\r\n         *   Describes what controls should be shown and where\r\n         *   their values should be read/written in the model.\r\n         * * `name`: The name under which to expose the form's\r\n         *   dirty/valid state. This is similar to ng-form's use\r\n         *   of name, except this will be made available in the\r\n         *   parent scope.\r\n         *\r\n         * @memberof platform/forms\r\n         * @constructor\r\n         */\r\n        function MCTToolbar() {\r\n            // Use Directive Definition Object from mct-form,\r\n            // but use the toolbar's template instead.\r\n            var ddo = new MCTForm();\r\n            ddo.template = toolbarTemplate;\r\n            return ddo;\r\n        }\r\n\r\n        return MCTToolbar;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/forms/src/MCTControl',[],\r\n    function () {\r\n\r\n        /**\r\n         * The mct-control will dynamically include the control\r\n         * for a form element based on a symbolic key. Individual\r\n         * controls are defined under the extension category\r\n         * `controls`; this allows plug-ins to introduce new form\r\n         * control types while still making use of the form\r\n         * generator to ensure an overall consistent form style.\r\n         * @constructor\r\n         * @memberof platform/forms\r\n         */\r\n        function MCTControl(templateLinker, controls) {\r\n            var controlMap = {};\r\n\r\n            // Prepopulate controlMap for easy look up by key\r\n            controls.forEach(function (control) {\r\n                controlMap[control.key] = control;\r\n            });\r\n\r\n            function link(scope, element, attrs, ngModelController) {\r\n                var changeTemplate = templateLinker.link(scope, element);\r\n                scope.$watch(\"key\", function (key) {\r\n                    changeTemplate(controlMap[key]);\r\n                });\r\n                scope.ngModelController = ngModelController;\r\n            }\r\n\r\n            return {\r\n                // Only show at the element level\r\n                restrict: \"E\",\r\n\r\n                // ngOptions is terminal, so we need to be higher priority\r\n                priority: 1000,\r\n\r\n                // Get the ngModelController, so that controls can set validity\r\n                require: '?ngModel',\r\n\r\n                // Link function\r\n                link: link,\r\n\r\n                // Pass through Angular's normal input field attributes\r\n                scope: {\r\n                    // Used to choose which form control to use\r\n                    key: \"=\",\r\n\r\n                    // Allow controls to trigger blur-like events\r\n                    ngBlur: \"&\",\r\n\r\n                    // The state of the form value itself\r\n                    ngModel: \"=\",\r\n\r\n                    // Enabled/disabled state\r\n                    ngDisabled: \"=\",\r\n\r\n                    // Whether or not input is required\r\n                    ngRequired: \"=\",\r\n\r\n                    // Pattern (for input fields)\r\n                    ngPattern: \"=\",\r\n\r\n                    // Set of choices (if any)\r\n                    options: \"=\",\r\n\r\n                    // Structure (subtree of Form Structure)\r\n                    structure: \"=\",\r\n\r\n                    // Name, as in \"<input name=\"...\r\n                    field: \"=\"\r\n                }\r\n            };\r\n        }\r\n\r\n        return MCTControl;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/forms/src/controllers/DateTimeController',[\"moment\"],\r\n    function (moment) {\r\n\r\n        var DATE_FORMAT = \"YYYY-MM-DD\";\r\n\r\n        /**\r\n         * Controller for the `datetime` form control.\r\n         * This is a composite control; it includes multiple\r\n         * input fields but outputs a single timestamp (in\r\n         * milliseconds since start of 1970) to the ngModel.\r\n         *\r\n         * @memberof platform/forms\r\n         * @constructor\r\n         */\r\n        function DateTimeController($scope) {\r\n\r\n            // Update the\r\n            function update() {\r\n                var date = $scope.datetime.date,\r\n                    hour = $scope.datetime.hour,\r\n                    min = $scope.datetime.min,\r\n                    sec = $scope.datetime.sec,\r\n                    fullDateTime = moment.utc(date, DATE_FORMAT)\r\n                            .hour(hour || 0)\r\n                            .minute(min || 0)\r\n                            .second(sec || 0);\r\n\r\n                if (fullDateTime.isValid()) {\r\n                    $scope.ngModel[$scope.field] = fullDateTime.valueOf();\r\n                }\r\n\r\n                // If anything is complete, say so in scope; there are\r\n                // ng-required usages that will update off of this (to\r\n                // allow datetime to be optional while still permitting\r\n                // incomplete input)\r\n                $scope.partiallyComplete =\r\n                    Object.keys($scope.datetime).some(function (key) {\r\n                        return $scope.datetime[key];\r\n                    });\r\n\r\n                // Treat empty input as an undefined value\r\n                if (!$scope.partiallyComplete) {\r\n                    $scope.ngModel[$scope.field] = undefined;\r\n                }\r\n            }\r\n\r\n            function updateDateTime(value) {\r\n                var m;\r\n                if (value !== undefined) {\r\n                    m = moment.utc(value);\r\n                    $scope.datetime = {\r\n                        date: m.format(DATE_FORMAT),\r\n                        hour: m.format(\"H\"),\r\n                        min: m.format(\"m\"),\r\n                        sec: m.format(\"s\")\r\n                    };\r\n                } else {\r\n                    $scope.datetime = {};\r\n                }\r\n            }\r\n\r\n            // ...and update form values when actual field in model changes\r\n            $scope.$watch(\"ngModel[field]\", updateDateTime);\r\n\r\n            // Update value whenever any field changes.\r\n            $scope.$watch(\"datetime.date\", update);\r\n            $scope.$watch(\"datetime.hour\", update);\r\n            $scope.$watch(\"datetime.min\", update);\r\n            $scope.$watch(\"datetime.sec\", update);\r\n\r\n            // Expose format string for placeholder\r\n            $scope.format = DATE_FORMAT;\r\n\r\n            // Initialize forms values\r\n            updateDateTime(\r\n                ($scope.ngModel && $scope.field) ?\r\n                        $scope.ngModel[$scope.field] : undefined\r\n            );\r\n        }\r\n\r\n        return DateTimeController;\r\n\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/forms/src/controllers/CompositeController',[],\r\n    function () {\r\n\r\n        /**\r\n         * The CompositeController supports the \"composite\" control type,\r\n         * which provides an array of other controls. It is used specifically\r\n         * to support validation when a particular row is not marked as\r\n         * required; in this case, empty input should be allowed, but partial\r\n         * input (where some but not all of the composite controls have been\r\n         * filled in) should be disallowed. This is enforced in the template\r\n         * by an ng-required directive, but that is supported by the\r\n         * isNonEmpty check that this controller provides.\r\n         * @memberof platform/forms\r\n         * @constructor\r\n         */\r\n        function CompositeController() {\r\n        }\r\n\r\n        // Check if an element is defined; the map step of isNonEmpty\r\n        function isDefined(element) {\r\n            return typeof element !== 'undefined';\r\n        }\r\n\r\n        /**\r\n         * Check if an array contains anything other than\r\n         * undefined elements.\r\n         * @param {Array} value the array to check\r\n         * @returns {boolean} true if any non-undefined\r\n         *          element is in the array\r\n         * @memberof platform/forms.CompositeController#\r\n         */\r\n        CompositeController.prototype.isNonEmpty = function (value) {\r\n            return Array.isArray(value) && value.some(isDefined);\r\n        };\r\n\r\n        return CompositeController;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/forms/src/controllers/ColorController',[],\r\n    function () {\r\n\r\n        var BASE_COLORS = [\r\n                [136, 32, 32],\r\n                [224, 64, 64],\r\n                [240, 160, 72],\r\n                [255, 248, 96],\r\n                [128, 240, 72],\r\n                [128, 248, 248],\r\n                [88, 144, 224],\r\n                [0, 72, 240],\r\n                [136, 80, 240],\r\n                [224, 96, 248]\r\n            ],\r\n            GRADIENTS = [0.75, 0.50, 0.25, -0.25, -0.50, -0.75],\r\n            GROUPS = [];\r\n\r\n        function toWebColor(triplet) {\r\n            return '#' + triplet.map(function (v) {\r\n                return (v < 16 ? '0' : '') + v.toString(16);\r\n            }).join('');\r\n        }\r\n\r\n        function toGradient(triplet, value) {\r\n            return triplet.map(function (v) {\r\n                return Math.round(value > 0 ?\r\n                        (v + (255 - v) * value) :\r\n                        (v * (1 + value))\r\n                    );\r\n            });\r\n        }\r\n\r\n        function initializeGroups() {\r\n            var group;\r\n\r\n            // Ten grayscale colors\r\n            group = [];\r\n            while (group.length < 10) {\r\n                group.push(toWebColor([\r\n                    Math.round(28.3333 * group.length),\r\n                    Math.round(28.3333 * group.length),\r\n                    Math.round(28.3333 * group.length)\r\n                ]));\r\n            }\r\n            GROUPS.push(group);\r\n\r\n            // Ten basic colors\r\n            GROUPS.push(BASE_COLORS.map(toWebColor));\r\n\r\n            // ...and some gradients of those colors\r\n            group = [];\r\n            GRADIENTS.forEach(function (v) {\r\n                group = group.concat(BASE_COLORS.map(function (c) {\r\n                    return toWebColor(toGradient(c, v));\r\n                }));\r\n            });\r\n            GROUPS.push(group);\r\n        }\r\n\r\n        function ColorController() {\r\n            if (GROUPS.length === 0) {\r\n                initializeGroups();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get groups of colors to display in a color picker. These are\r\n         * given as #-prefixed color strings, in a two-dimensional array.\r\n         * Each element of the array is a group of related colors (e.g.\r\n         * grayscale colors, web colors, gradients...)\r\n         * @returns {string[][]} groups of colors\r\n         */\r\n        ColorController.prototype.groups = function () {\r\n            return GROUPS;\r\n        };\r\n\r\n        return ColorController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine(\r\n    'platform/forms/src/controllers/DialogButtonController',[],\r\n    function () {\r\n\r\n        /**\r\n         * Controller for the `dialog-button` control type. Provides\r\n         * structure for a button (embedded via the template) which\r\n         * will show a dialog for editing a single property when clicked.\r\n         * @memberof platform/forms\r\n         * @constructor\r\n         * @param $scope the control's Angular scope\r\n         * @param {DialogService} dialogService service to use to prompt\r\n         *        for user input\r\n         */\r\n        function DialogButtonController($scope, dialogService) {\r\n            var self = this,\r\n                buttonForm;\r\n\r\n            // Store the result of user input to the model\r\n            function storeResult(result) {\r\n                $scope.ngModel[$scope.field] = result[$scope.field];\r\n            }\r\n\r\n            // Prompt for user input\r\n            function showDialog() {\r\n                // Prepare initial state\r\n                var state = {};\r\n                state[$scope.field] = $scope.ngModel[$scope.field];\r\n\r\n                // Show dialog, then store user input (if any)\r\n                dialogService.getUserInput(buttonForm, state).then(storeResult);\r\n            }\r\n\r\n            // Refresh state based on structure for this control\r\n            function refreshStructure(structure) {\r\n                var row = Object.create(structure.dialog || {});\r\n\r\n                structure = structure || {};\r\n\r\n                // Add the key, to read back from that row\r\n                row.key = $scope.field;\r\n\r\n                // Prepare the structure for the button itself\r\n                self.buttonStructure = {};\r\n                self.buttonStructure.cssclass = structure.cssclass;\r\n                self.buttonStructure.name = structure.name;\r\n                self.buttonStructure.description = structure.description;\r\n                self.buttonStructure.click = showDialog;\r\n\r\n                // Prepare the form; a single row\r\n                buttonForm = {\r\n                    name: structure.title,\r\n                    sections: [{ rows: [row] }]\r\n                };\r\n            }\r\n\r\n            $scope.$watch('structure', refreshStructure);\r\n        }\r\n\r\n        /**\r\n         * Get the structure for an `mct-control` of type\r\n         * `button`; a dialog will be launched when this button\r\n         * is clicked.\r\n         * @returns dialog structure\r\n         */\r\n        DialogButtonController.prototype.getButtonStructure = function () {\r\n            return this.buttonStructure;\r\n        };\r\n\r\n        return DialogButtonController;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/forms/res/templates/controls/checkbox.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<label class=\"checkbox custom no-text\">\\r\\n    <input type=\"checkbox\"\\r\\n           name=\"mctControl\"\\r\\n           ng-model=\"ngModel[field]\"\\r\\n           ng-disabled=\"ngDisabled\">\\r\\n    <em></em>\\r\\n</label>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/datetime.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'form-control complex datetime\\'>\\r\\n\\r\\n    <div class=\\'field-hints\\'>\\r\\n        <span class=\\'hint date\\'>Date</span>\\r\\n        <span class=\\'hint time sm\\'>Hour</span>\\r\\n        <span class=\\'hint time sm\\'>Min</span>\\r\\n        <span class=\\'hint time sm\\'>Sec</span>\\r\\n        <span class=\\'hint timezone\\'>Timezone</span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <ng-form name=\"mctControl\">\\r\\n        <div class=\\'fields\\' ng-controller=\"DateTimeController\">\\r\\n            <span class=\\'field control date\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'date\\'\\r\\n                       placeholder=\"{{format}}\"\\r\\n                       ng-pattern=\"/\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d/\"\\r\\n                       ng-model=\\'datetime.date\\'\\r\\n                       ng-required=\\'ngRequired || partiallyComplete\\'/>\\r\\n            </span>\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'hour\\'\\r\\n                       maxlength=\\'2\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'23\\'\\r\\n                       integer\\r\\n                       ng-pattern=\\'/\\\\d+/\\'\\r\\n                       ng-model=\"datetime.hour\"\\r\\n                       ng-required=\\'ngRequired || partiallyComplete\\'/>\\r\\n            </span>\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'min\\'\\r\\n                       maxlength=\\'2\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'59\\'\\r\\n                       integer\\r\\n                       ng-pattern=\\'/\\\\d+/\\'\\r\\n                       ng-model=\"datetime.min\"\\r\\n                       ng-required=\\'ngRequired || partiallyComplete\\'/>\\r\\n            </span>\\r\\n            <span class=\\'field control time sm\\'>\\r\\n                <input type=\\'text\\'\\r\\n                       name=\\'sec\\'\\r\\n                       maxlength=\\'2\\'\\r\\n                       min=\\'0\\'\\r\\n                       max=\\'59\\'\\r\\n                       integer\\r\\n                       ng-pattern=\\'/\\\\d+/\\'\\r\\n                       ng-model=\"datetime.sec\"\\r\\n                       ng-required=\\'ngRequired || partiallyComplete\\'/>\\r\\n            </span>\\r\\n            <span class=\\'field control timezone\\'>\\r\\n                UTC\\r\\n            </span>\\r\\n        </div>\\r\\n    </ng-form>\\r\\n\\r\\n\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/select.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\\'form-control select\\'>\\r\\n    <select\\r\\n            ng-model=\"ngModel[field]\"\\r\\n            ng-options=\"opt.value as opt.name for opt in options\"\\r\\n            ng-required=\"ngRequired\"\\r\\n            name=\"mctControl\">\\r\\n        <option value=\"\" ng-show=\"!ngModel[field]\">- Select One -</option>\\r\\n    </select>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/textfield.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span class=\\'form-control shell\\'>\\r\\n    <span class=\\'field control {{structure.cssclass}}\\'>\\r\\n        <input type=\"text\"\\r\\n               ng-required=\"ngRequired\"\\r\\n               ng-model=\"ngModel[field]\"\\r\\n               ng-pattern=\"ngPattern\"\\r\\n               size=\"{{structure.size}}\"\\r\\n               name=\"mctControl\">\\r\\n    </span>\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/button.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<a class=\"s-button {{structure.cssclass}}\"\\r\\n   ng-class=\"{ labeled: structure.text }\"\\r\\n   ng-click=\"structure.click()\">\\r\\n    <span class=\"title-label\" ng-if=\"structure.text\">\\r\\n        {{structure.text}}\\r\\n    </span>\\r\\n</a>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/color.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"s-button s-menu-button menu-element t-color-palette {{structure.cssclass}}\"\\r\\n    ng-controller=\"ClickAwayController as toggle\">\\r\\n\\r\\n    <span class=\"l-click-area\" ng-click=\"toggle.toggle()\"></span>\\r\\n    <span class=\"color-swatch\"\\r\\n          ng-style=\"{\\r\\n             background: ngModel[field]\\r\\n         }\">\\r\\n    </span>\\r\\n    <span class=\"title-label\" ng-if=\"structure.text\">\\r\\n        {{structure.text}}\\r\\n    </span>\\r\\n\\r\\n    <div class=\"menu l-color-palette\"\\r\\n        ng-controller=\"ColorController as colors\"\\r\\n        ng-show=\"toggle.isActive()\">\\r\\n        <div\\r\\n\\t        class=\"l-palette-row l-option-row\"\\r\\n\\t        ng-if=\"!structure.mandatory\">\\r\\n            <div class=\"l-palette-item s-palette-item {{ngModel[field] === \\'transparent\\' ? \\'icon-check\\' : \\'\\' }}\"\\r\\n                ng-click=\"ngModel[field] = \\'transparent\\'\">\\r\\n            </div>\\r\\n            <span class=\"l-palette-item-label\">None</span>\\r\\n        </div>\\r\\n        <div\\r\\n\\t        class=\"l-palette-row\"\\r\\n            ng-repeat=\"group in colors.groups()\">\\r\\n            <div class=\"l-palette-item s-palette-item {{ngModel[field] === color ? \\'icon-check\\' : \\'\\' }}\"\\r\\n\\t            ng-repeat=\"color in group\"\\r\\n                ng-style=\"{ background: color }\"\\r\\n                ng-click=\"ngModel[field] = color\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/composite.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"CompositeController as compositeCtrl\">\\r\\n    <ng-form name=\"mctFormItem\" ng-repeat=\"item in structure.items\">\\r\\n\\t    <div class=\"l-composite-control l-{{item.control}} {{item.cssclass}}\">\\r\\n\\t        <mct-control key=\"item.control\"\\r\\n\\t                     ng-model=\"ngModel[field]\"\\r\\n\\t                     ng-required=\"ngRequired || compositeCtrl.isNonEmpty(ngModel[field])\"\\r\\n\\t                     ng-pattern=\"ngPattern\"\\r\\n\\t                     options=\"item.options\"\\r\\n\\t                     structure=\"row\"\\r\\n\\t                     field=\"$index\">\\r\\n\\t        </mct-control>\\r\\n\\t        <span class=\"composite-control-label\">\\r\\n\\t            {{item.name}}\\r\\n\\t        </span>\\r\\n\\t    </div>\\r\\n    </ng-form>\\r\\n</span>\\r\\n';});\n\n","\ndefine('text!platform/forms/res/templates/controls/menu-button.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"s-menu-button menu-element {{ structure.cssclass }}\"\\r\\n     ng-controller=\"ClickAwayController as toggle\">\\r\\n\\r\\n    <span class=\"l-click-area\" ng-click=\"toggle.toggle()\"></span>\\r\\n    <span class=\"title-label\" ng-if=\"structure.text\">\\r\\n        {{structure.text}}\\r\\n    </span>\\r\\n\\r\\n    <div class=\"menu\" ng-show=\"toggle.isActive()\">\\r\\n        <ul>\\r\\n            <li ng-click=\"structure.click(option.key); toggle.setState(false)\"\\r\\n                ng-repeat=\"option in structure.options\"\\r\\n                class=\"{{ option.cssclass }}\">\\r\\n                    {{option.name}}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/forms/res/templates/controls/dialog.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"DialogButtonController as dialog\">\\r\\n    <mct-control key=\"\\'button\\'\"\\r\\n                 structure=\"dialog.getButtonStructure()\">\\r\\n    </mct-control>\\r\\n</span>';});\n\n","\ndefine('text!platform/forms/res/templates/controls/radio.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<label class=\"radio custom no-text\">\\r\\n    <input type=\"radio\"\\r\\n           name=\"mctControl\"\\r\\n           ng-model=\"ngModel[field]\"\\r\\n           ng-disabled=\"ngDisabled\"\\r\\n           ng-value=\"structure.value\">\\r\\n    <em></em>\\r\\n</label>\\r\\n';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/forms/bundle',[\r\n    \"./src/MCTForm\",\r\n    \"./src/MCTToolbar\",\r\n    \"./src/MCTControl\",\r\n    \"./src/controllers/DateTimeController\",\r\n    \"./src/controllers/CompositeController\",\r\n    \"./src/controllers/ColorController\",\r\n    \"./src/controllers/DialogButtonController\",\r\n    \"text!./res/templates/controls/checkbox.html\",\r\n    \"text!./res/templates/controls/datetime.html\",\r\n    \"text!./res/templates/controls/select.html\",\r\n    \"text!./res/templates/controls/textfield.html\",\r\n    \"text!./res/templates/controls/button.html\",\r\n    \"text!./res/templates/controls/color.html\",\r\n    \"text!./res/templates/controls/composite.html\",\r\n    \"text!./res/templates/controls/menu-button.html\",\r\n    \"text!./res/templates/controls/dialog.html\",\r\n    \"text!./res/templates/controls/radio.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    MCTForm,\r\n    MCTToolbar,\r\n    MCTControl,\r\n    DateTimeController,\r\n    CompositeController,\r\n    ColorController,\r\n    DialogButtonController,\r\n    checkboxTemplate,\r\n    datetimeTemplate,\r\n    selectTemplate,\r\n    textfieldTemplate,\r\n    buttonTemplate,\r\n    colorTemplate,\r\n    compositeTemplate,\r\n    menuButtonTemplate,\r\n    dialogTemplate,\r\n    radioTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/forms\", {\r\n        \"name\": \"MCT Forms\",\r\n        \"description\": \"Form generator; includes directive and some controls.\",\r\n        \"extensions\": {\r\n            \"directives\": [\r\n                {\r\n                    \"key\": \"mctForm\",\r\n                    \"implementation\": MCTForm\r\n                },\r\n                {\r\n                    \"key\": \"mctToolbar\",\r\n                    \"implementation\": MCTToolbar\r\n                },\r\n                {\r\n                    \"key\": \"mctControl\",\r\n                    \"implementation\": MCTControl,\r\n                    \"depends\": [\r\n                        \"templateLinker\",\r\n                        \"controls[]\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"controls\": [\r\n                {\r\n                    \"key\": \"checkbox\",\r\n                    \"template\": checkboxTemplate\r\n                },\r\n                {\r\n                    \"key\": \"radio\",\r\n                    \"template\": radioTemplate\r\n                },\r\n                {\r\n                    \"key\": \"datetime\",\r\n                    \"template\": datetimeTemplate\r\n                },\r\n                {\r\n                    \"key\": \"select\",\r\n                    \"template\": selectTemplate\r\n                },\r\n                {\r\n                    \"key\": \"textfield\",\r\n                    \"template\": textfieldTemplate\r\n                },\r\n                {\r\n                    \"key\": \"button\",\r\n                    \"template\": buttonTemplate\r\n                },\r\n                {\r\n                    \"key\": \"color\",\r\n                    \"template\": colorTemplate\r\n                },\r\n                {\r\n                    \"key\": \"composite\",\r\n                    \"template\": compositeTemplate\r\n                },\r\n                {\r\n                    \"key\": \"menu-button\",\r\n                    \"template\": menuButtonTemplate\r\n                },\r\n                {\r\n                    \"key\": \"dialog-button\",\r\n                    \"template\": dialogTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"DateTimeController\",\r\n                    \"implementation\": DateTimeController,\r\n                    \"depends\": [\r\n                        \"$scope\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"CompositeController\",\r\n                    \"implementation\": CompositeController\r\n                },\r\n                {\r\n                    \"key\": \"ColorController\",\r\n                    \"implementation\": ColorController\r\n                },\r\n                {\r\n                    \"key\": \"DialogButtonController\",\r\n                    \"implementation\": DialogButtonController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"dialogService\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Defines interfaces and common infrastructure for establishing\r\n * a user's identity.\r\n * @namespace platform/identity\r\n */\r\ndefine(\r\n    'platform/identity/src/IdentityAggregator',[],function () {\r\n\r\n        /**\r\n         * Provides information about the currently logged-in\r\n         * user, if available.\r\n         *\r\n         * @interface IdentityService\r\n         */\r\n\r\n        /**\r\n         * Get information about the current user. This returns a promise\r\n         * which will resolve to metadata about the user, or undefined if\r\n         * no information about the user is available.\r\n         *\r\n         * @method IdentityService#getUser\r\n         * @returns {Promise.<IdentityMetadata>} a promise for metadata about\r\n         *         the current user\r\n         */\r\n\r\n        /**\r\n         * Metadata about a user.\r\n         *\r\n         * @typedef IdentityMetadata\r\n         * @property {string} name the user's human-readable name\r\n         * @property {string} key the user's machine-readable name\r\n         */\r\n\r\n        /**\r\n         * Aggregator for multiple identity services. Exposes the first\r\n         * defined identity provided by any provider, according to\r\n         * priority order.\r\n         *\r\n         * @constructor\r\n         * @implements {IdentityService}\r\n         * @memberof platform/identity\r\n         */\r\n        function IdentityAggregator($q, providers) {\r\n            this.providers = providers;\r\n            this.$q = $q;\r\n        }\r\n\r\n        function delegateGetUser(provider) {\r\n            return provider.getUser();\r\n        }\r\n\r\n        function identity(value) {\r\n            return value;\r\n        }\r\n\r\n        function giveFirst(results) {\r\n            return results.filter(identity)[0];\r\n        }\r\n\r\n        IdentityAggregator.prototype.getUser = function () {\r\n            var $q = this.$q,\r\n                promises = this.providers.map(delegateGetUser);\r\n\r\n            return $q.all(promises).then(giveFirst);\r\n        };\r\n\r\n        return IdentityAggregator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Defines interfaces and common infrastructure for establishing\r\n * a user's identity.\r\n * @namespace platform/identity\r\n */\r\ndefine(\r\n    'platform/identity/src/IdentityProvider',[],function () {\r\n\r\n        /**\r\n         * Default implementation of an identity service. Provides an\r\n         * unknown user as an `undefined` value; this is present simply\r\n         * to ensure that there is always an `identityService` available\r\n         * for platform components to use.\r\n         *\r\n         * @constructor\r\n         * @implements {IdentityService}\r\n         * @memberof platform/identity\r\n         */\r\n        function IdentityProvider($q) {\r\n            this.userPromise = $q.when(undefined);\r\n        }\r\n\r\n        IdentityProvider.prototype.getUser = function () {\r\n            return this.userPromise;\r\n        };\r\n\r\n        return IdentityProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/identity/src/IdentityCreationDecorator',[],function () {\r\n\r\n        /**\r\n         * Adds a `creator` property to newly-created domain objects.\r\n         * @constructor\r\n         * @augments {platform/commonUI/browse.CreationService}\r\n         * @memberof platform/entanglement\r\n         */\r\n        function IdentityCreationDecorator(identityService, creationService) {\r\n            this.identityService = identityService;\r\n            this.creationService = creationService;\r\n        }\r\n\r\n        IdentityCreationDecorator.prototype.createObject = function (model, parent) {\r\n            var creationService = this.creationService,\r\n                identityService = this.identityService;\r\n\r\n            return identityService.getUser().then(function (user) {\r\n                if (user && user.key) {\r\n                    model.creator = user.key;\r\n                }\r\n                return creationService.createObject(model, parent);\r\n            });\r\n        };\r\n\r\n        return IdentityCreationDecorator;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/identity/src/IdentityIndicator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Indicator showing the currently logged-in user.\r\n         * @constructor\r\n         * @memberof platform/identity\r\n         * @implements {Indicator}\r\n         * @param {IdentityService} identityService the identity service\r\n         */\r\n        function IdentityIndicator(identityService) {\r\n            // Track the current connection state\r\n            var self = this;\r\n\r\n            identityService.getUser().then(function (user) {\r\n                if (user && user.key) {\r\n                    self.text = user.name || user.key;\r\n                    self.description = \"Logged in as \" + user.key;\r\n                }\r\n            });\r\n        }\r\n\r\n        IdentityIndicator.prototype.getCssClass = function () {\r\n            return this.text && \"icon-person\";\r\n        };\r\n        IdentityIndicator.prototype.getText = function () {\r\n            return this.text;\r\n        };\r\n        IdentityIndicator.prototype.getDescription = function () {\r\n            return this.description;\r\n        };\r\n\r\n        return IdentityIndicator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/identity/bundle',[\r\n    \"./src/IdentityAggregator\",\r\n    \"./src/IdentityProvider\",\r\n    \"./src/IdentityCreationDecorator\",\r\n    \"./src/IdentityIndicator\",\r\n    'legacyRegistry'\r\n], function (\r\n    IdentityAggregator,\r\n    IdentityProvider,\r\n    IdentityCreationDecorator,\r\n    IdentityIndicator,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/identity\", {\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"implementation\": IdentityAggregator,\r\n                    \"type\": \"aggregator\",\r\n                    \"provides\": \"identityService\",\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"implementation\": IdentityProvider,\r\n                    \"type\": \"provider\",\r\n                    \"provides\": \"identityService\",\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ],\r\n                    \"priority\": \"fallback\"\r\n                },\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"creationService\",\r\n                    \"implementation\": IdentityCreationDecorator,\r\n                    \"depends\": [\r\n                        \"identityService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"indicators\": [\r\n                {\r\n                    \"implementation\": IdentityIndicator,\r\n                    \"depends\": [\r\n                        \"identityService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"types\": [\r\n                {\r\n                    \"properties\": [\r\n                        {\r\n                            \"key\": \"creator\",\r\n                            \"name\": \"Creator\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/persistence/aggregator/src/PersistenceAggregator',[],\r\n    function () {\r\n\r\n        // Return values to use when a persistence space is unknown,\r\n        // and there is no appropriate provider to route to.\r\n        var METHOD_DEFAULTS = {\r\n            createObject: false,\r\n            readObject: undefined,\r\n            listObjects: [],\r\n            updateObject: false,\r\n            deleteObject: false\r\n        };\r\n\r\n        /**\r\n         * Aggregates multiple persistence providers, such that they can be\r\n         * utilized as if they were a single object. This is achieved by\r\n         * routing persistence calls to an appropriate provider; the space\r\n         * specified at call time is matched with the first provider (per\r\n         * priority order) which reports that it provides persistence for\r\n         * this space.\r\n         *\r\n         * @memberof platform/persistence/aggregator\r\n         * @constructor\r\n         * @implements {PersistenceService}\r\n         * @param $q Angular's $q, for promises\r\n         * @param {PersistenceService[]} providers the providers to aggregate\r\n         */\r\n        function PersistenceAggregator($q, providers) {\r\n            var providerMap = {};\r\n\r\n            function addToMap(provider) {\r\n                return provider.listSpaces().then(function (spaces) {\r\n                    spaces.forEach(function (space) {\r\n                        providerMap[space] = providerMap[space] || provider;\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.providerMapPromise = $q.all(providers.map(addToMap))\r\n                .then(function () {\r\n                    return providerMap;\r\n                });\r\n        }\r\n\r\n        PersistenceAggregator.prototype.listSpaces = function () {\r\n            return this.providerMapPromise.then(function (map) {\r\n                return Object.keys(map);\r\n            });\r\n        };\r\n\r\n        Object.keys(METHOD_DEFAULTS).forEach(function (method) {\r\n            PersistenceAggregator.prototype[method] = function (space) {\r\n                var delegateArgs = Array.prototype.slice.apply(arguments, []);\r\n                return this.providerMapPromise.then(function (map) {\r\n                    var provider = map[space];\r\n                    return provider ?\r\n                            provider[method].apply(provider, delegateArgs) :\r\n                            METHOD_DEFAULTS[method];\r\n                });\r\n            };\r\n        });\r\n\r\n        return PersistenceAggregator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/persistence/aggregator/bundle',[\r\n    \"./src/PersistenceAggregator\",\r\n    'legacyRegistry'\r\n], function (\r\n    PersistenceAggregator,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/persistence/aggregator\", {\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"persistenceService\",\r\n                    \"type\": \"aggregator\",\r\n                    \"depends\": [\r\n                        \"$q\"\r\n                    ],\r\n                    \"implementation\": PersistenceAggregator\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/local/src/LocalStoragePersistenceProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * The LocalStoragePersistenceProvider reads and writes JSON documents\r\n         * (more specifically, domain object models) to/from the browser's\r\n         * local storage.\r\n         * @memberof platform/persistence/local\r\n         * @constructor\r\n         * @implements {PersistenceService}\r\n         * @param q Angular's $q, for promises\r\n         * @param $interval Angular's $interval service\r\n         * @param {string} space the name of the persistence space being served\r\n         */\r\n        function LocalStoragePersistenceProvider($window, $q, space) {\r\n            this.$q = $q;\r\n            this.space = space;\r\n            this.spaces = space ? [space] : [];\r\n            this.localStorage = $window.localStorage;\r\n        }\r\n\r\n        /**\r\n         * Set a value in local storage.\r\n         * @private\r\n         */\r\n        LocalStoragePersistenceProvider.prototype.setValue = function (key, value) {\r\n            this.localStorage[key] = JSON.stringify(value);\r\n        };\r\n\r\n        /**\r\n         * Get a value from local storage.\r\n         * @private\r\n         */\r\n        LocalStoragePersistenceProvider.prototype.getValue = function (key) {\r\n            return this.localStorage[key] ?\r\n                    JSON.parse(this.localStorage[key]) : {};\r\n        };\r\n\r\n        LocalStoragePersistenceProvider.prototype.listSpaces = function () {\r\n            return this.$q.when(this.spaces);\r\n        };\r\n\r\n        LocalStoragePersistenceProvider.prototype.listObjects = function (space) {\r\n            return this.$q.when(Object.keys(this.getValue(space)));\r\n        };\r\n\r\n        LocalStoragePersistenceProvider.prototype.createObject = function (space, key, value) {\r\n            var spaceObj = this.getValue(space);\r\n            spaceObj[key] = value;\r\n            this.setValue(space, spaceObj);\r\n            return this.$q.when(true);\r\n        };\r\n\r\n        LocalStoragePersistenceProvider.prototype.readObject = function (space, key) {\r\n            var spaceObj = this.getValue(space);\r\n            return this.$q.when(spaceObj[key]);\r\n        };\r\n\r\n        LocalStoragePersistenceProvider.prototype.deleteObject = function (space, key) {\r\n            var spaceObj = this.getValue(space);\r\n            delete spaceObj[key];\r\n            this.setValue(space, spaceObj);\r\n            return this.$q.when(true);\r\n        };\r\n\r\n        LocalStoragePersistenceProvider.prototype.updateObject =\r\n            LocalStoragePersistenceProvider.prototype.createObject;\r\n\r\n        return LocalStoragePersistenceProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/local/src/LocalStorageIndicator',[],\r\n    function () {\r\n\r\n        var LOCAL_STORAGE_WARNING = [\r\n            \"Using browser local storage for persistence.\",\r\n            \"Anything you create or change will be visible only\",\r\n            \"in this browser on this machine.\"\r\n        ].join(' ');\r\n\r\n        /**\r\n         * Indicator for local storage persistence. Provides a minimum\r\n         * level of feedback indicating that local storage is in use.\r\n         * @constructor\r\n         * @memberof platform/persistence/local\r\n         * @implements {Indicator}\r\n         */\r\n        function LocalStorageIndicator() {\r\n        }\r\n\r\n        LocalStorageIndicator.prototype.getCssClass = function () {\r\n            return \"icon-database\";\r\n        };\r\n        LocalStorageIndicator.prototype.getGlyphClass = function () {\r\n            return 'caution';\r\n        };\r\n        LocalStorageIndicator.prototype.getText = function () {\r\n            return \"Off-line storage\";\r\n        };\r\n        LocalStorageIndicator.prototype.getDescription = function () {\r\n            return LOCAL_STORAGE_WARNING;\r\n        };\r\n\r\n        return LocalStorageIndicator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/persistence/local/bundle',[\r\n    \"./src/LocalStoragePersistenceProvider\",\r\n    \"./src/LocalStorageIndicator\",\r\n    'legacyRegistry'\r\n], function (\r\n    LocalStoragePersistenceProvider,\r\n    LocalStorageIndicator,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/persistence/local\", {\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"persistenceService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": LocalStoragePersistenceProvider,\r\n                    \"depends\": [\r\n                        \"$window\",\r\n                        \"$q\",\r\n                        \"PERSISTENCE_SPACE\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"PERSISTENCE_SPACE\",\r\n                    \"value\": \"mct\"\r\n                }\r\n            ],\r\n            \"indicators\": [\r\n                {\r\n                    \"implementation\": LocalStorageIndicator\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/QueuingPersistenceCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * The QueuingPersistenceCapability places `persist` calls in a queue\r\n         * to be handled in batches.\r\n         * @param {PersistenceQueue} queue of persistence calls\r\n         * @param {PersistenceCapability} persistence the wrapped persistence\r\n         *        capability\r\n         * @param {DomainObject} domainObject the domain object which exposes\r\n         *        the capability\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function QueuingPersistenceCapability(queue, persistence, domainObject) {\r\n            var queuingPersistence = Object.create(persistence);\r\n\r\n            // Override persist calls to queue them instead\r\n            queuingPersistence.persist = function () {\r\n                return queue.put(domainObject, persistence);\r\n            };\r\n\r\n            return queuingPersistence;\r\n        }\r\n\r\n        return QueuingPersistenceCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle decorates the persistence service to handle persistence\r\n * in batches, and to provide notification of persistence errors in batches\r\n * as well.\r\n * @namespace platform/persistence/queue\r\n */\r\ndefine(\r\n    'platform/persistence/queue/src/QueuingPersistenceCapabilityDecorator',['./QueuingPersistenceCapability'],\r\n    function (QueuingPersistenceCapability) {\r\n\r\n        /**\r\n         * Capability decorator. Adds queueing support to persistence\r\n         * capabilities for domain objects, such that persistence attempts\r\n         * will be handled in batches (allowing failure notification to\r\n         * also be presented in batches.)\r\n         *\r\n         * @memberof platform/persistence/queue\r\n         * @constructor\r\n         * @implements {CapabilityService}\r\n         * @param {platform/persistence/queue.PersistenceQueue} persistenceQueue\r\n         * @param {CapabilityService} the decorated capability service\r\n         */\r\n        function QueuingPersistenceCapabilityDecorator(\r\n            persistenceQueue,\r\n            capabilityService\r\n        ) {\r\n            this.persistenceQueue = persistenceQueue;\r\n            this.capabilityService = capabilityService;\r\n        }\r\n\r\n        QueuingPersistenceCapabilityDecorator.prototype.getCapabilities = function (model) {\r\n            var capabilityService = this.capabilityService,\r\n                persistenceQueue = this.persistenceQueue;\r\n\r\n            function decoratePersistence(capabilities) {\r\n                var originalPersistence = capabilities.persistence;\r\n                if (originalPersistence) {\r\n                    capabilities.persistence = function (domainObject) {\r\n                        // Get/instantiate the original\r\n                        var original =\r\n                            (typeof originalPersistence === 'function') ?\r\n                                originalPersistence(domainObject) :\r\n                                originalPersistence;\r\n\r\n                        // Provide a decorated version\r\n                        return new QueuingPersistenceCapability(\r\n                            persistenceQueue,\r\n                            original,\r\n                            domainObject\r\n                        );\r\n                    };\r\n                }\r\n                return capabilities;\r\n            }\r\n\r\n            return decoratePersistence(\r\n                capabilityService.getCapabilities(model)\r\n            );\r\n        };\r\n\r\n        return QueuingPersistenceCapabilityDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/PersistenceQueueImpl',[],\r\n    function () {\r\n\r\n        /**\r\n         * The PersistenceQueue is used by the QueuingPersistenceCapability\r\n         * to aggregrate calls for object persistence. These are then issued\r\n         * in a group, such that if some or all are rejected, this result can\r\n         * be shown to the user (again, in a group.)\r\n         *\r\n         * This implementation is separate out from PersistenceQueue, which\r\n         * handles the wiring of injected dependencies into an instance of\r\n         * this class.\r\n         *\r\n         * @param $timeout Angular's $timeout\r\n         * @param {PersistenceQueueHandler} handler handles actual\r\n         *        persistence when the queue is flushed\r\n         * @param {number} [DELAY] optional; delay in milliseconds between\r\n         *        attempts to flush the queue\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function PersistenceQueueImpl($q, $timeout, handler, delay) {\r\n\r\n            this.persistences = {};\r\n            this.objects = {};\r\n            this.lastObservedSize = 0;\r\n            this.activeDefer = $q.defer();\r\n\r\n            // If no delay is provided, use a default\r\n            this.delay = delay || 0;\r\n            this.handler = handler;\r\n            this.$timeout = $timeout;\r\n            this.$q = $q;\r\n        }\r\n\r\n        // Schedule a flushing of the queue (that is, plan to flush\r\n        // all objects in the queue)\r\n        PersistenceQueueImpl.prototype.scheduleFlush = function () {\r\n            var self = this,\r\n                $timeout = this.$timeout,\r\n                $q = this.$q,\r\n                handler = this.handler;\r\n\r\n            // Check if the queue's size has stopped increasing)\r\n            function quiescent() {\r\n                return Object.keys(self.persistences).length ===\r\n                    self.lastObservedSize;\r\n            }\r\n\r\n            // Persist all queued objects\r\n            function flush() {\r\n                // Get a local reference to the active promise;\r\n                // this will be replaced with a promise for the next round\r\n                // of persistence calls, so we want to make sure we clear\r\n                // the correct one when this flush completes.\r\n                var flushingDefer = self.activeDefer;\r\n\r\n                // Clear the active promise for a queue flush\r\n                function clearFlushPromise(value) {\r\n                    self.flushPromise = undefined;\r\n                    flushingDefer.resolve(value);\r\n                    return value;\r\n                }\r\n\r\n                // Persist all queued objects\r\n                self.flushPromise = handler.persist(\r\n                    self.persistences,\r\n                    self.objects,\r\n                    self\r\n                ).then(clearFlushPromise, clearFlushPromise);\r\n\r\n                // Reset queue, etc.\r\n                self.persistences = {};\r\n                self.objects = {};\r\n                self.lastObservedSize = 0;\r\n                self.pendingTimeout = undefined;\r\n                self.activeDefer = $q.defer();\r\n            }\r\n\r\n            function maybeFlush() {\r\n                // Timeout fired, so clear it\r\n                self.pendingTimeout = undefined;\r\n                // Only flush when we've stopped receiving updates\r\n                if (quiescent()) {\r\n                    flush();\r\n                } else {\r\n                    self.scheduleFlush();\r\n                }\r\n                // Update lastObservedSize to detect quiescence\r\n                self.lastObservedSize = Object.keys(self.persistences).length;\r\n            }\r\n\r\n            // If we are already flushing the queue...\r\n            if (self.flushPromise) {\r\n                // Wait until that's over before considering a flush\r\n                self.flushPromise.then(maybeFlush);\r\n            } else {\r\n                // Otherwise, schedule a flush on a timeout (to give\r\n                // a window for other updates to get aggregated)\r\n                self.pendingTimeout = self.pendingTimeout ||\r\n                        $timeout(maybeFlush, self.delay, false);\r\n            }\r\n\r\n            return self.activeDefer.promise;\r\n        };\r\n\r\n\r\n        /**\r\n         * Queue persistence of a domain object.\r\n         * @param {DomainObject} domainObject the domain object\r\n         * @param {PersistenceCapability} persistence the object's\r\n         *        undecorated persistence capability\r\n         * @returns {Promise} a promise which will resolve upon persistence\r\n         */\r\n        PersistenceQueueImpl.prototype.put = function (domainObject, persistence) {\r\n            var id = domainObject.getId();\r\n            this.persistences[id] = persistence;\r\n            this.objects[id] = domainObject;\r\n            return this.scheduleFlush();\r\n        };\r\n\r\n        return PersistenceQueueImpl;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/PersistenceQueueHandler',[],\r\n    function () {\r\n\r\n        /**\r\n         * Handles actual persistence invocations for queeud persistence\r\n         * attempts, in a group. Handling in a group in this manner\r\n         * also allows failure to be handled in a group (e.g. in a single\r\n         * summary dialog.)\r\n         * @param $q Angular's $q, for promises\r\n         * @param {PersistenceFailureHandler} handler to invoke in the event\r\n         *        that a persistence attempt fails.\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function PersistenceQueueHandler($q, failureHandler) {\r\n            this.$q = $q;\r\n            this.failureHandler = failureHandler;\r\n        }\r\n\r\n        /**\r\n         * Invoke the persist method on the provided persistence\r\n         * capabilities.\r\n         * @param {Object.<string,PersistenceCapability>} persistences\r\n         *        capabilities to invoke, in id->capability pairs.\r\n         * @param {Object.<string,DomainObject>} domainObjects\r\n         *        associated domain objects, in id->object pairs.\r\n         * @param {PersistenceQueue} queue the persistence queue,\r\n         *        to requeue as necessary\r\n         * @memberof platform/persistence/queue.PersistenceQueueHandler#\r\n         */\r\n        PersistenceQueueHandler.prototype.persist = function (persistences, domainObjects, queue) {\r\n            var ids = Object.keys(persistences),\r\n                $q = this.$q,\r\n                failureHandler = this.failureHandler;\r\n\r\n            // Handle a group of persistence invocations\r\n            function persistGroup(groupIds, persistenceCaps, domainObjs, pQueue) {\r\n                var failures = [];\r\n\r\n                // Try to persist a specific domain object\r\n                function tryPersist(id) {\r\n                    // Look up its persistence capability from the provided\r\n                    // id->persistence object.\r\n                    var persistence = persistenceCaps[id],\r\n                        domainObject = domainObjs[id];\r\n\r\n                    // Put a domain object back in the queue\r\n                    // (e.g. after Overwrite)\r\n                    function requeue() {\r\n                        return pQueue.put(domainObject, persistence);\r\n                    }\r\n\r\n                    // Handle success\r\n                    function succeed(value) {\r\n                        return value;\r\n                    }\r\n\r\n                    // Handle failure (build up a list of failures)\r\n                    function fail(error) {\r\n                        failures.push({\r\n                            id: id,\r\n                            persistence: persistence,\r\n                            domainObject: domainObject,\r\n                            requeue: requeue,\r\n                            error: error\r\n                        });\r\n                        return false;\r\n                    }\r\n\r\n                    // Invoke the actual persistence capability, then\r\n                    // note success or failures\r\n                    return persistence.persist().then(succeed, fail);\r\n                }\r\n\r\n                // Handle any failures from the full operation\r\n                function handleFailure(value) {\r\n                    return failures.length > 0 ?\r\n                        failureHandler.handle(failures) :\r\n                        value;\r\n                }\r\n\r\n                // Try to persist everything, then handle any failures\r\n                return $q.all(groupIds.map(tryPersist)).then(handleFailure);\r\n            }\r\n\r\n            return persistGroup(ids, persistences, domainObjects, queue);\r\n        };\r\n\r\n        return PersistenceQueueHandler;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/persistence/queue/src/PersistenceFailureConstants',{\r\n    REVISION_ERROR_KEY: \"revision\",\r\n    OVERWRITE_KEY: \"overwrite\",\r\n    TIMESTAMP_FORMAT: \"YYYY-MM-DD HH:mm:ss\\\\Z\",\r\n    UNKNOWN_USER: \"unknown user\"\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/PersistenceFailureDialog',['./PersistenceFailureConstants'],\r\n    function (PersistenceFailureConstants) {\r\n\r\n        var OVERWRITE_CANCEL_OPTIONS = [\r\n                {\r\n                    name: \"Overwrite\",\r\n                    key: PersistenceFailureConstants.OVERWRITE_KEY\r\n                },\r\n                {\r\n                    name: \"Discard\",\r\n                    key: \"cancel\"\r\n                }\r\n            ],\r\n            OK_OPTIONS = [{ name: \"OK\", key: \"ok\" }];\r\n\r\n        /**\r\n         * Populates a `dialogModel` to pass to `dialogService.getUserChoise`\r\n         * in order to choose between Overwrite and Cancel.\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function PersistenceFailureDialog(failures) {\r\n            var revisionErrors = [],\r\n                otherErrors = [];\r\n\r\n            // Place this failure into an appropriate group\r\n            function categorizeFailure(failure) {\r\n                // Check if the error is due to object revision\r\n                var isRevisionError = ((failure || {}).error || {}).key ===\r\n                    PersistenceFailureConstants.REVISION_ERROR_KEY;\r\n                // Push the failure into the appropriate group\r\n                (isRevisionError ? revisionErrors : otherErrors).push(failure);\r\n            }\r\n\r\n            // Separate into revision errors, and other errors\r\n            failures.forEach(categorizeFailure);\r\n\r\n            return {\r\n                title: \"Save Error\",\r\n                template: \"persistence-failure-dialog\",\r\n                model: {\r\n                    revised: revisionErrors,\r\n                    unrecoverable: otherErrors\r\n                },\r\n                options: revisionErrors.length > 0 ?\r\n                        OVERWRITE_CANCEL_OPTIONS : OK_OPTIONS\r\n            };\r\n        }\r\n\r\n        return PersistenceFailureDialog;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/PersistenceFailureHandler',['./PersistenceFailureDialog', './PersistenceFailureConstants'],\r\n    function (PersistenceFailureDialog, PersistenceFailureConstants) {\r\n\r\n        /**\r\n         * Handle failures to persist domain object models.\r\n         * @param $q Angular's `$q`\r\n         * @param {DialogService} dialogService the dialog service\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function PersistenceFailureHandler($q, dialogService) {\r\n            this.$q = $q;\r\n            this.dialogService = dialogService;\r\n        }\r\n\r\n        /**\r\n         * Handle persistence failures by providing the user with a\r\n         * dialog summarizing these failures, and giving the option\r\n         * to overwrite/cancel as appropriate.\r\n         * @param {Array} failures persistence failures, as prepared\r\n         *        by PersistenceQueueHandler\r\n         * @memberof platform/persistence/queue.PersistenceFailureHandler#\r\n         */\r\n        PersistenceFailureHandler.prototype.handle = function handleFailures(failures) {\r\n            // Prepare dialog for display\r\n            var dialogModel = new PersistenceFailureDialog(failures),\r\n                revisionErrors = dialogModel.model.revised,\r\n                $q = this.$q;\r\n\r\n            // Refresh revision information for the domain object associated\r\n            // with this persistence failure\r\n            function refresh(failure) {\r\n                // Refresh the domain object to the latest from persistence\r\n                return failure.persistence.refresh();\r\n            }\r\n\r\n            // Issue a new persist call for the domain object associated with\r\n            // this failure.\r\n            function persist(failure) {\r\n                // Note that we reissue the persist request here, but don't\r\n                // return it, to avoid a circular wait. We trust that the\r\n                // PersistenceQueue will behave correctly on the next round\r\n                // of flushing.\r\n                failure.requeue();\r\n            }\r\n\r\n            // Retry persistence (overwrite) for this set of failed attempts\r\n            function retry(failuresToRetry) {\r\n                var models = {};\r\n\r\n                // Cache a copy of the model\r\n                function cacheModel(failure) {\r\n                    // Clone...\r\n                    models[failure.id] = JSON.parse(JSON.stringify(\r\n                        failure.domainObject.getModel()\r\n                    ));\r\n                }\r\n\r\n                // Mutate a domain object to restore its model\r\n                function remutate(failure) {\r\n                    var model = models[failure.id];\r\n                    return failure.domainObject.useCapability(\r\n                        \"mutation\",\r\n                        function () {\r\n                            return model;\r\n                        },\r\n                                               model.modified\r\n                                           );\r\n                }\r\n\r\n                // Cache the object models we might want to save\r\n                failuresToRetry.forEach(cacheModel);\r\n\r\n                // Strategy here:\r\n                // * Cache all of the models we might want to save (above)\r\n                // * Refresh all domain objects (so they are latest versions)\r\n                // * Re-insert the cached domain object models\r\n                // * Invoke persistence again\r\n                return $q.all(failuresToRetry.map(refresh)).then(function () {\r\n                    return $q.all(failuresToRetry.map(remutate));\r\n                }).then(function () {\r\n                    return $q.all(failuresToRetry.map(persist));\r\n                });\r\n            }\r\n\r\n            // Discard changes for a failed refresh\r\n            function discard(failure) {\r\n                var persistence =\r\n                    failure.domainObject.getCapability('persistence');\r\n                return persistence.refresh();\r\n            }\r\n\r\n            // Discard changes associated with a failed save\r\n            function discardAll(failuresToDiscard) {\r\n                return $q.all(failuresToDiscard.map(discard));\r\n            }\r\n\r\n            // Handle user input (did they choose to overwrite?)\r\n            function handleChoice(key) {\r\n                // If so, try again\r\n                if (key === PersistenceFailureConstants.OVERWRITE_KEY) {\r\n                    return retry(revisionErrors);\r\n                } else {\r\n                    return discardAll(revisionErrors);\r\n                }\r\n            }\r\n\r\n            // Prompt for user input, the overwrite if they said so.\r\n            return this.dialogService.getUserChoice(dialogModel)\r\n                .then(handleChoice, handleChoice);\r\n        };\r\n\r\n        return PersistenceFailureHandler;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/PersistenceQueue',[\r\n        './PersistenceQueueImpl',\r\n        './PersistenceQueueHandler',\r\n        './PersistenceFailureHandler'\r\n    ],\r\n    function (\r\n        PersistenceQueueImpl,\r\n        PersistenceQueueHandler,\r\n        PersistenceFailureHandler\r\n    ) {\r\n\r\n\r\n        /**\r\n         * The PersistenceQueue is used by the QueuingPersistenceCapability\r\n         * to aggregrate calls for object persistence. These are then issued\r\n         * in a group, such that if some or all are rejected, this result can\r\n         * be shown to the user (again, in a group.)\r\n         *\r\n         * This constructor is exposed as a service, but handles only the\r\n         * wiring of injected dependencies; behavior is implemented in the\r\n         * various component parts.\r\n         *\r\n         * @param $timeout Angular's $timeout\r\n         * @param {PersistenceQueueHandler} handler handles actual\r\n         *        persistence when the queue is flushed\r\n         * @param {number} [DELAY] optional; delay in milliseconds between\r\n         *        attempts to flush the queue\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function PersistenceQueue(\r\n            $q,\r\n            $timeout,\r\n            dialogService,\r\n            PERSISTENCE_QUEUE_DELAY\r\n        ) {\r\n            // Wire up injected dependencies\r\n            return new PersistenceQueueImpl(\r\n                $q,\r\n                $timeout,\r\n                new PersistenceQueueHandler(\r\n                    $q,\r\n                    new PersistenceFailureHandler(\r\n                        $q,\r\n                        dialogService\r\n                    )\r\n                ),\r\n                PERSISTENCE_QUEUE_DELAY\r\n            );\r\n        }\r\n\r\n        return PersistenceQueue;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/persistence/queue/src/PersistenceFailureController',['moment', './PersistenceFailureConstants'],\r\n    function (moment, Constants) {\r\n\r\n        /**\r\n         * Controller to support the template to be shown in the\r\n         * dialog shown for persistence failures.\r\n         * @constructor\r\n         * @memberof platform/persistence/queue\r\n         */\r\n        function PersistenceFailureController() {\r\n        }\r\n\r\n        /**\r\n         * Format a timestamp for display in the dialog.\r\n         * @memberof platform/persistence/queue.PersistenceFailureController#\r\n         */\r\n        PersistenceFailureController.prototype.formatTimestamp = function (timestamp) {\r\n            return moment.utc(timestamp)\r\n                .format(Constants.TIMESTAMP_FORMAT);\r\n        };\r\n\r\n        /**\r\n         * Format a user name for display in the dialog.\r\n         * @memberof platform/persistence/queue.PersistenceFailureController#\r\n         */\r\n        PersistenceFailureController.prototype.formatUsername = function (username) {\r\n            return username || Constants.UNKNOWN_USER;\r\n        };\r\n\r\n        return PersistenceFailureController;\r\n    }\r\n);\r\n\n","\ndefine('text!platform/persistence/queue/res/templates/persistence-failure-dialog.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<span ng-controller=\"PersistenceFailureController as controller\">\\r\\n\\r\\n<div ng-if=\"ngModel.revised.length > 0\">\\r\\n    External changes have been made to the following objects:\\r\\n    <ul>\\r\\n        <li ng-repeat=\"failure in ngModel.revised\">\\r\\n            <mct-representation key=\"\\'label\\'\"\\r\\n                                mct-object=\"failure.domainObject\">\\r\\n            </mct-representation>\\r\\n            was modified at\\r\\n            <b>{{controller.formatTimestamp(failure.error.model.modified)}}</b>\\r\\n            by\\r\\n            <i>{{controller.formatUsername(failure.error.model.modifier)}}</i>\\r\\n        </li>\\r\\n    </ul>\\r\\n    You may overwrite these objects, or discard your changes to keep\\r\\n    the updates that were made externally.\\r\\n</div>\\r\\n\\r\\n<div ng-if=\"ngModel.unrecoverable.length > 0\">\\r\\n    Changes to these objects could not be saved for unknown reasons:\\r\\n    <ul>\\r\\n        <li ng-repeat=\"failure in ngModel.unrecoverable\">\\r\\n            <mct-representation key=\"\\'label\\'\"\\r\\n                                mct-object=\"failure.domainObject\">\\r\\n            </mct-representation>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n</span>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/persistence/queue/bundle',[\r\n    \"./src/QueuingPersistenceCapabilityDecorator\",\r\n    \"./src/PersistenceQueue\",\r\n    \"./src/PersistenceFailureController\",\r\n    \"text!./res/templates/persistence-failure-dialog.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    QueuingPersistenceCapabilityDecorator,\r\n    PersistenceQueue,\r\n    PersistenceFailureController,\r\n    persistenceFailureDialogTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/persistence/queue\", {\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"capabilityService\",\r\n                    \"implementation\": QueuingPersistenceCapabilityDecorator,\r\n                    \"depends\": [\r\n                        \"persistenceQueue\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"persistenceQueue\",\r\n                    \"implementation\": PersistenceQueue,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$timeout\",\r\n                        \"dialogService\",\r\n                        \"PERSISTENCE_QUEUE_DELAY\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"PERSISTENCE_QUEUE_DELAY\",\r\n                    \"value\": 5\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"persistence-failure-dialog\",\r\n                    \"template\": persistenceFailureDialogTemplate\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"PersistenceFailureController\",\r\n                    \"implementation\": PersistenceFailureController\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/policy/src/PolicyActionDecorator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Filters out actions based on policy.\r\n         * @param {PolicyService} policyService the service which provides\r\n         *        policy decisions\r\n         * @param {ActionService} actionService the service to decorate\r\n         * @constructor\r\n         * @memberof platform/policy\r\n         * @implements {ActionService}\r\n         */\r\n        function PolicyActionDecorator(policyService, actionService) {\r\n            this.policyService = policyService;\r\n            this.actionService = actionService;\r\n        }\r\n\r\n        PolicyActionDecorator.prototype.getActions = function (context) {\r\n            var policyService = this.policyService;\r\n\r\n            // Check if an action is allowed by policy.\r\n            function allow(action) {\r\n                return policyService.allow('action', action, context);\r\n            }\r\n\r\n            // Look up actions, filter out the disallowed ones.\r\n            return this.actionService.getActions(context).filter(allow);\r\n        };\r\n\r\n        return PolicyActionDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/policy/src/PolicyViewDecorator',[],\r\n    function () {\r\n\r\n        /**\r\n         * Filters out views based on policy.\r\n         * @param {PolicyService} policyService the service which provides\r\n         *        policy decisions\r\n         * @param {ViewService} viewService the service to decorate\r\n         * @constructor\r\n         * @memberof platform/policy\r\n         * @implements {ViewService}\r\n         */\r\n        function PolicyViewDecorator(policyService, viewService) {\r\n            this.policyService = policyService;\r\n            this.viewService = viewService;\r\n        }\r\n\r\n        PolicyViewDecorator.prototype.getViews = function (domainObject) {\r\n            var policyService = this.policyService;\r\n\r\n            // Check if an action is allowed by policy.\r\n            function allow(view) {\r\n                return policyService.allow('view', view, domainObject);\r\n            }\r\n\r\n            // Look up actions, filter out the disallowed ones.\r\n            return this.viewService.getViews(domainObject).filter(allow);\r\n        };\r\n\r\n        return PolicyViewDecorator;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * This bundle implements the policy service.\r\n * @namespace platform/policy\r\n */\r\ndefine(\r\n    'platform/policy/src/PolicyProvider',[],\r\n    function () {\r\n\r\n        /**\r\n         * A policy is a participant in decision-making policies. Policies\r\n         * are divided into categories (identified symbolically by strings);\r\n         * within a given category, every given policy-driven decision will\r\n         * occur by consulting all available policies and requiring their\r\n         * collective consent (that is, every individual policy has the\r\n         * power to reject the decision entirely.)\r\n         *\r\n         * @interface Policy\r\n         * @template C, X\r\n         */\r\n\r\n        /**\r\n         * Check if this policy allows the described decision. The types\r\n         * of the arguments expected here vary depending on policy category.\r\n         *\r\n         * @method Policy#allow\r\n         * @template C, X\r\n         * @param {C} candidate the thing to allow or disallow\r\n         * @param {X} context the context in which the decision occurs\r\n         * @returns {boolean} false if disallowed; otherwise, true\r\n         */\r\n\r\n\r\n        /**\r\n         * The `policyService` handles decisions about what things\r\n         * are and are not allowed in certain contexts.\r\n         * @interface PolicyService\r\n         */\r\n\r\n        /**\r\n         * Check whether or not a certain decision is allowed by\r\n         * policy.\r\n         * @param {string} category a machine-readable identifier\r\n         *        for the kind of decision being made\r\n         * @param candidate the object about which the decision is\r\n         *        being made\r\n         * @param context the context in which the decision occurs\r\n         * @param {Function} [callback] callback to invoke with a\r\n         *        string message describing the reason a decision\r\n         *        was disallowed (if its disallowed)\r\n         * @returns {boolean} true if the decision is allowed,\r\n         *          otherwise false.\r\n         * @method PolicyService#allow\r\n         */\r\n\r\n        /**\r\n         * Provides an implementation of `policyService` which consults\r\n         * various policy extensions to determine whether or not a specific\r\n         * decision should be allowed.\r\n         * @memberof platform/policy\r\n         * @constructor\r\n         * @implements {PolicyService}\r\n         * @param {Policy[]} policies the policies to enforce\r\n         */\r\n        function PolicyProvider(policies) {\r\n            var policyMap = {};\r\n\r\n            // Instantiate a policy. Mostly just a constructor call, but\r\n            // we also track the message (which was provided as metadata\r\n            // along with the constructor) so that we can expose this later.\r\n            function instantiate(Policy) {\r\n                var policy = Object.create(new Policy());\r\n                policy.message = Policy.message;\r\n                return policy;\r\n            }\r\n\r\n            // Add a specific policy to the map for later lookup,\r\n            // according to its category. Note that policy extensions are\r\n            // provided as constructors, so they are instantiated here.\r\n            function addToMap(Policy) {\r\n                var category = (Policy || {}).category;\r\n                if (category) {\r\n                    // Create a new list for that category if needed...\r\n                    policyMap[category] = policyMap[category] || [];\r\n                    // ...and put an instance of this policy in that list.\r\n                    policyMap[category].push(instantiate(Policy));\r\n                }\r\n            }\r\n\r\n            // Populate the map for subsequent lookup\r\n            policies.forEach(addToMap);\r\n            this.policyMap = policyMap;\r\n        }\r\n\r\n        PolicyProvider.prototype.allow = function (category, candidate, context, callback) {\r\n            var policyList = this.policyMap[category] || [],\r\n                i;\r\n\r\n            // Iterate through policies. We do this instead of map or\r\n            // forEach so that we can return immediately if a policy\r\n            // chooses to disallow this decision.\r\n            for (i = 0; i < policyList.length; i += 1) {\r\n                // Consult the policy...\r\n                if (!policyList[i].allow(candidate, context)) {\r\n                    // ...it disallowed, so pass its message to\r\n                    // the callback (if any)\r\n                    if (callback) {\r\n                        callback(policyList[i].message);\r\n                    }\r\n                    // And return the failed result.\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // No policy disallowed this decision.\r\n            return true;\r\n        };\r\n\r\n        return PolicyProvider;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/policy/bundle',[\r\n    \"./src/PolicyActionDecorator\",\r\n    \"./src/PolicyViewDecorator\",\r\n    \"./src/PolicyProvider\",\r\n    'legacyRegistry'\r\n], function (\r\n    PolicyActionDecorator,\r\n    PolicyViewDecorator,\r\n    PolicyProvider,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/policy\", {\r\n        \"name\": \"Policy Service\",\r\n        \"description\": \"Provides support for extension-driven decisions.\",\r\n        \"sources\": \"src\",\r\n        \"extensions\": {\r\n            \"components\": [\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"actionService\",\r\n                    \"implementation\": PolicyActionDecorator,\r\n                    \"depends\": [\r\n                        \"policyService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"viewService\",\r\n                    \"implementation\": PolicyViewDecorator,\r\n                    \"depends\": [\r\n                        \"policyService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"type\": \"provider\",\r\n                    \"provides\": \"policyService\",\r\n                    \"implementation\": PolicyProvider,\r\n                    \"depends\": [\r\n                        \"policies[]\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/actions/AbstractComposeAction',[],function () {\r\n\r\n        /**\r\n         * Common interface exposed by services which support move, copy,\r\n         * and link actions.\r\n         * @interface platform/entanglement.AbstractComposeService\r\n         * @private\r\n         */\r\n        /**\r\n         * Change the composition of the specified objects. Note that this\r\n         * should only be invoked after successfully validating.\r\n         *\r\n         * @param {DomainObject} domainObject  the domain object to\r\n         *    move, copy, or link.\r\n         * @param {DomainObject} parent  the domain object whose composition\r\n         *    will be changed to contain the domainObject (or its duplicate)\r\n         * @returns {Promise} A promise that is fulfilled when the\r\n         *    duplicate operation has completed.\r\n         * @method platform/entanglement.AbstractComposeService#perform\r\n         */\r\n        /**\r\n         * Check if this composition change is valid for these objects.\r\n         *\r\n         * @param {DomainObject} domainObject  the domain object to\r\n         *    move, copy, or link.\r\n         * @param {DomainObject} parent  the domain object whose composition\r\n         *    will be changed to contain the domainObject (or its duplicate)\r\n         * @returns {boolean} true if this composition change is allowed\r\n         * @method platform/entanglement.AbstractComposeService#validate\r\n         */\r\n\r\n\r\n        /**\r\n         * Template class for Move, Copy, and Link actions.\r\n         *\r\n         * @implements {Action}\r\n         * @constructor\r\n         * @private\r\n         * @memberof platform/entanglement\r\n         * @param {PolicyService} policyService the policy service to use to\r\n         *        verify that variants of this action are allowed\r\n         * @param {platform/entanglement.LocationService} locationService a\r\n         *        service to request destinations from the user\r\n         * @param {platform/entanglement.AbstractComposeService} composeService\r\n         *        a service which will handle actual changes to composition\r\n         * @param {ActionContext} the context in which the action will be performed\r\n         * @param {string} verb the verb to display for the action (e.g. \"Move\")\r\n         * @param {string} [suffix] a string to display in the dialog title;\r\n         *        default is \"to a new location\"\r\n         */\r\n        function AbstractComposeAction(\r\n            policyService,\r\n            locationService,\r\n            composeService,\r\n            context,\r\n            verb,\r\n            suffix\r\n        ) {\r\n            if (context.selectedObject) {\r\n                this.newParent = context.domainObject;\r\n                this.object = context.selectedObject;\r\n            } else {\r\n                this.object = context.domainObject;\r\n            }\r\n\r\n            this.currentParent = this.object\r\n                .getCapability('context')\r\n                .getParent();\r\n\r\n            this.context = context;\r\n            this.policyService = policyService;\r\n            this.locationService = locationService;\r\n            this.composeService = composeService;\r\n            this.verb = verb || \"Compose\";\r\n            this.suffix = suffix || \"to a new location\";\r\n        }\r\n\r\n        AbstractComposeAction.prototype.cloneContext = function () {\r\n            var clone = {}, original = this.context;\r\n            Object.keys(original).forEach(function (k) {\r\n                clone[k] = original[k];\r\n            });\r\n            return clone;\r\n        };\r\n\r\n        AbstractComposeAction.prototype.perform = function () {\r\n            var dialogTitle,\r\n                label,\r\n                validateLocation,\r\n                self = this,\r\n                locationService = this.locationService,\r\n                composeService = this.composeService,\r\n                currentParent = this.currentParent,\r\n                newParent = this.newParent,\r\n                object = this.object;\r\n\r\n            if (newParent) {\r\n                return composeService.perform(object, newParent);\r\n            }\r\n\r\n            dialogTitle = [this.verb, object.getModel().name, this.suffix]\r\n                .join(\" \");\r\n\r\n            label = this.verb + \" To\";\r\n\r\n            validateLocation = function (newParentObj) {\r\n                var newContext = self.cloneContext();\r\n                newContext.selectedObject =  object;\r\n                newContext.domainObject = newParentObj;\r\n                return composeService.validate(object, newParentObj) &&\r\n                    self.policyService.allow(\"action\", self, newContext);\r\n            };\r\n\r\n            return locationService.getLocationFromUser(\r\n                dialogTitle,\r\n                label,\r\n                validateLocation,\r\n                currentParent\r\n            ).then(function (newParentObj) {\r\n                return composeService.perform(object, newParentObj);\r\n            });\r\n        };\r\n\r\n        AbstractComposeAction.appliesTo = function (context) {\r\n            var applicableObject =\r\n                context.selectedObject || context.domainObject;\r\n\r\n            return !!(applicableObject &&\r\n                applicableObject.hasCapability('context'));\r\n        };\r\n\r\n        return AbstractComposeAction;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/actions/MoveAction',['./AbstractComposeAction'],\r\n    function (AbstractComposeAction) {\r\n\r\n        /**\r\n         * The MoveAction is available from context menus and allows a user to\r\n         * move an object to another location of their choosing.\r\n         *\r\n         * @implements {Action}\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         */\r\n        function MoveAction(policyService, locationService, moveService, context) {\r\n            AbstractComposeAction.apply(\r\n                this,\r\n                [policyService, locationService, moveService, context, \"Move\"]\r\n            );\r\n        }\r\n\r\n        MoveAction.prototype = Object.create(AbstractComposeAction.prototype);\r\n        MoveAction.appliesTo = AbstractComposeAction.appliesTo;\r\n\r\n        return MoveAction;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/actions/CopyAction',['./AbstractComposeAction'],\r\n    function (AbstractComposeAction) {\r\n\r\n        /**\r\n         * The CopyAction is available from context menus and allows a user to\r\n         * deep copy an object to another location of their choosing.\r\n         *\r\n         * @implements {Action}\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         */\r\n        function CopyAction(\r\n            $log,\r\n            policyService,\r\n            locationService,\r\n            copyService,\r\n            dialogService,\r\n            notificationService,\r\n            context\r\n        ) {\r\n            this.dialog = undefined;\r\n            this.notification = undefined;\r\n            this.dialogService = dialogService;\r\n            this.notificationService = notificationService;\r\n            this.$log = $log;\r\n            //Extend the behaviour of the Abstract Compose Action\r\n            AbstractComposeAction.call(\r\n                this,\r\n                policyService,\r\n                locationService,\r\n                copyService,\r\n                context,\r\n                \"Duplicate\",\r\n                \"to a location\"\r\n            );\r\n        }\r\n\r\n        CopyAction.prototype = Object.create(AbstractComposeAction.prototype);\r\n\r\n        /**\r\n         * Updates user about progress of copy. Should not be invoked by\r\n         * client code under any circumstances.\r\n         *\r\n         * @private\r\n         * @param phase\r\n         * @param totalObjects\r\n         * @param processed\r\n         */\r\n        CopyAction.prototype.progress = function (phase, totalObjects, processed) {\r\n            /*\r\n             Copy has two distinct phases. In the first phase a copy plan is\r\n             made in memory. During this phase of execution, the user is\r\n             shown a blocking 'modal' dialog.\r\n\r\n             In the second phase, the copying is taking place, and the user\r\n             is shown non-invasive banner notifications at the bottom of the screen.\r\n             */\r\n            if (phase.toLowerCase() === 'preparing' && !this.dialog) {\r\n                this.dialog = this.dialogService.showBlockingMessage({\r\n                    title: \"Preparing to copy objects\",\r\n                    hint: \"Do not navigate away from this page or close this browser tab while this message is displayed.\",\r\n                    unknownProgress: true,\r\n                    severity: \"info\"\r\n                });\r\n            } else if (phase.toLowerCase() === \"copying\") {\r\n                if (this.dialog) {\r\n                    this.dialog.dismiss();\r\n                }\r\n                if (!this.notification) {\r\n                    this.notification = this.notificationService\r\n                        .notify({\r\n                            title: \"Copying objects\",\r\n                            unknownProgress: false,\r\n                            severity: \"info\"\r\n                        });\r\n                }\r\n                this.notification.model.progress = (processed / totalObjects) * 100;\r\n                this.notification.model.title = [\"Copied \", processed, \"of \",\r\n                    totalObjects, \"objects\"].join(\" \");\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Executes the CopyAction. The CopyAction uses the default behaviour of\r\n         * the AbstractComposeAction, but extends it to support notification\r\n         * updates of progress on copy.\r\n         */\r\n        CopyAction.prototype.perform = function () {\r\n            var self = this;\r\n\r\n            function success() {\r\n                self.notification.dismiss();\r\n                self.notificationService.info(\"Copying complete.\");\r\n            }\r\n\r\n            function error(errorDetails) {\r\n                var errorDialog,\r\n                    errorMessage = {\r\n                    title: \"Error copying objects.\",\r\n                    severity: \"error\",\r\n                    hint: errorDetails.message,\r\n                    minimized: true, // want the notification to be minimized initially (don't show banner)\r\n                    options: [{\r\n                        label: \"OK\",\r\n                        callback: function () {\r\n                            errorDialog.dismiss();\r\n                        }\r\n                    }]\r\n                };\r\n\r\n                self.dialog.dismiss();\r\n                if (self.notification) {\r\n                    self.notification.dismiss(); // Clear the progress notification\r\n                }\r\n                self.$log.error(\"Error copying objects. \", errorDetails);\r\n                //Show a minimized notification of error for posterity\r\n                self.notificationService.notify(errorMessage);\r\n                //Display a blocking message\r\n                errorDialog = self.dialogService.showBlockingMessage(errorMessage);\r\n\r\n            }\r\n            function notification(details) {\r\n                self.progress(details.phase, details.totalObjects, details.processed);\r\n            }\r\n\r\n            return AbstractComposeAction.prototype.perform.call(this)\r\n                .then(success, error, notification);\r\n        };\r\n\r\n        CopyAction.appliesTo = AbstractComposeAction.appliesTo;\r\n\r\n        return CopyAction;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/actions/LinkAction',['./AbstractComposeAction'],\r\n    function (AbstractComposeAction) {\r\n\r\n        /**\r\n         * The LinkAction is available from context menus and allows a user to\r\n         * link an object to another location of their choosing.\r\n         *\r\n         * @implements {Action}\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         */\r\n        function LinkAction(policyService, locationService, linkService, context) {\r\n            AbstractComposeAction.apply(\r\n                this,\r\n                [policyService, locationService, linkService, context, \"Link\"]\r\n            );\r\n        }\r\n\r\n        LinkAction.prototype = Object.create(AbstractComposeAction.prototype);\r\n        LinkAction.appliesTo = AbstractComposeAction.appliesTo;\r\n\r\n        return LinkAction;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/actions/GoToOriginalAction',[],function () {\r\n\r\n        /**\r\n         * Implements the \"Go To Original\" action, which follows a link back\r\n         * to an original instance of an object.\r\n         *\r\n         * @implements {Action}\r\n         * @constructor\r\n         * @private\r\n         * @memberof platform/entanglement\r\n         * @param {ActionContext} context the context in which the action\r\n         *        will be performed\r\n         */\r\n        function GoToOriginalAction(context) {\r\n            this.domainObject = context.domainObject;\r\n        }\r\n\r\n        GoToOriginalAction.prototype.perform = function () {\r\n            return this.domainObject.getCapability(\"location\").getOriginal()\r\n                .then(function (originalObject) {\r\n                    var actionCapability =\r\n                        originalObject.getCapability(\"action\");\r\n                    return actionCapability &&\r\n                            actionCapability.perform(\"navigate\");\r\n                });\r\n        };\r\n\r\n        GoToOriginalAction.appliesTo = function (context) {\r\n            var domainObject = context.domainObject;\r\n            return domainObject && domainObject.hasCapability(\"location\") &&\r\n                domainObject.getCapability(\"location\").isLink();\r\n        };\r\n\r\n        return GoToOriginalAction;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/actions/SetPrimaryLocationAction',[],function () {\r\n\r\n        /**\r\n         * Implements the \"Set Primary Location\" action, which sets a\r\n         * location property for objects to match their contextual\r\n         * location.\r\n         *\r\n         * @implements {Action}\r\n         * @constructor\r\n         * @private\r\n         * @memberof platform/entanglement\r\n         * @param {ActionContext} context the context in which the action\r\n         *        will be performed\r\n         */\r\n        function SetPrimaryLocationAction(context) {\r\n            this.domainObject = context.domainObject;\r\n        }\r\n\r\n        SetPrimaryLocationAction.prototype.perform = function () {\r\n            var location = this.domainObject.getCapability('location');\r\n            return location.setPrimaryLocation(\r\n                location.getContextualLocation()\r\n            );\r\n        };\r\n\r\n        SetPrimaryLocationAction.appliesTo = function (context) {\r\n            var domainObject = context.domainObject;\r\n            return domainObject && domainObject.hasCapability(\"location\") &&\r\n                (domainObject.getModel().location === undefined);\r\n        };\r\n\r\n        return SetPrimaryLocationAction;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/services/LocatingCreationDecorator',[],function () {\r\n\r\n        /**\r\n         * Adds a `location` property to newly-created domain objects.\r\n         * @constructor\r\n         * @augments {platform/commonUI/browse.CreationService}\r\n         * @memberof platform/entanglement\r\n         */\r\n        function LocatingCreationDecorator(creationService) {\r\n            this.creationService = creationService;\r\n        }\r\n\r\n        LocatingCreationDecorator.prototype.createObject = function (model, parent) {\r\n            if (parent && parent.getId) {\r\n                model.location = parent.getId();\r\n            }\r\n            return this.creationService.createObject(model, parent);\r\n        };\r\n\r\n        return LocatingCreationDecorator;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/services/LocatingObjectDecorator',[],function () {\r\n\r\n        /**\r\n         * Ensures that domain objects are loaded with a context capability\r\n         * that reflects their location.\r\n         * @constructor\r\n         * @implements {ObjectService}\r\n         * @memberof platform/entanglement\r\n         */\r\n        function LocatingObjectDecorator(contextualize, $q, $log, objectService) {\r\n            this.contextualize = contextualize;\r\n            this.$log = $log;\r\n            this.objectService = objectService;\r\n            this.$q = $q;\r\n        }\r\n\r\n        LocatingObjectDecorator.prototype.getObjects = function (ids) {\r\n            var $q = this.$q,\r\n                $log = this.$log,\r\n                contextualize = this.contextualize,\r\n                objectService = this.objectService,\r\n                result = {};\r\n\r\n            // Load a single object using location to establish a context\r\n            function loadObjectInContext(id, exclude) {\r\n                function attachContext(objects) {\r\n                    var domainObject = (objects || {})[id],\r\n                        model = domainObject && domainObject.getModel(),\r\n                        location = (model || {}).location;\r\n\r\n                    // If no location is defined, we can't look up a context.\r\n                    if (!location) {\r\n                        return domainObject;\r\n                    }\r\n\r\n                    // Avoid looping indefinitely on cyclical locations\r\n                    if (exclude[id]) {\r\n                        $log.warn([\r\n                            \"LocatingObjectDecorator detected a cycle\",\r\n                            \"while attempted to define a context for\",\r\n                            id + \";\",\r\n                            \"no context will be added and unexpected behavior\",\r\n                            \"may follow.\"\r\n                        ].join(\" \"));\r\n                        return domainObject;\r\n                    }\r\n\r\n                    // Record that we've visited this ID to detect cycles.\r\n                    exclude[id] = true;\r\n\r\n                    // Do the recursive step to get the parent...\r\n                    return loadObjectInContext(location, exclude)\r\n                        .then(function (parent) {\r\n                            // ...and then contextualize with it!\r\n                            return contextualize(domainObject, parent);\r\n                        });\r\n                }\r\n\r\n                return objectService.getObjects([id]).then(attachContext);\r\n            }\r\n\r\n            ids.forEach(function (id) {\r\n                result[id] = loadObjectInContext(id, {});\r\n            });\r\n\r\n            return $q.all(result);\r\n        };\r\n\r\n        return LocatingObjectDecorator;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/entanglement/src/policies/CopyPolicy',[], function () {\r\n\r\n    /**\r\n     * Disallow duplication when the object to be duplicated is not\r\n     * creatable.\r\n     * @constructor\r\n     * @implements {Policy}\r\n     * @memberof platform/entanglement\r\n     */\r\n    function CopyPolicy() {\r\n    }\r\n\r\n    function allowCreation(domainObject) {\r\n        var type = domainObject && domainObject.getCapability('type');\r\n        return !!(type && type.hasFeature('creation'));\r\n    }\r\n\r\n    function selectedObject(context) {\r\n        return context.selectedObject || context.domainObject;\r\n    }\r\n\r\n    CopyPolicy.prototype.allow = function (action, context) {\r\n        var key = action.getMetadata().key;\r\n\r\n        if (key === 'copy') {\r\n            return allowCreation(selectedObject(context));\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    return CopyPolicy;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/entanglement/src/policies/CrossSpacePolicy',[],\r\n    function () {\r\n\r\n        var DISALLOWED_ACTIONS = [\"move\"];\r\n\r\n        /**\r\n         * This policy prevents performing move/copy/link actions across\r\n         * different persistence spaces (e.g. linking to an object in\r\n         * a private space from an object in a public space.)\r\n         * @memberof {platform/entanglement}\r\n         * @constructor\r\n         * @implements {Policy}\r\n         */\r\n        function CrossSpacePolicy() {\r\n        }\r\n\r\n        function lookupSpace(domainObject) {\r\n            var persistence = domainObject &&\r\n                domainObject.getCapability(\"persistence\");\r\n            return persistence && persistence.getSpace();\r\n        }\r\n\r\n        function isCrossSpace(context) {\r\n            var domainObject = context.domainObject,\r\n                selectedObject = context.selectedObject;\r\n            return selectedObject !== undefined &&\r\n                domainObject !== undefined &&\r\n                lookupSpace(domainObject) !== lookupSpace(selectedObject);\r\n        }\r\n\r\n        CrossSpacePolicy.prototype.allow = function (action, context) {\r\n            var key = action.getMetadata().key;\r\n\r\n            if (DISALLOWED_ACTIONS.indexOf(key) !== -1) {\r\n                return !isCrossSpace(context);\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        return CrossSpacePolicy;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/entanglement/src/policies/MovePolicy',[], function () {\r\n\r\n    /**\r\n     * Disallow moves when either the parent or the child are not\r\n     * modifiable by users.\r\n     * @constructor\r\n     * @implements {Policy}\r\n     * @memberof platform/entanglement\r\n     */\r\n    function MovePolicy() {\r\n    }\r\n\r\n    function parentOf(domainObject) {\r\n        var context = domainObject.getCapability('context');\r\n        return context && context.getParent();\r\n    }\r\n\r\n    function allowMutation(domainObject) {\r\n        var type = domainObject && domainObject.getCapability('type');\r\n        return !!(type && type.hasFeature('creation'));\r\n    }\r\n\r\n    function selectedObject(context) {\r\n        return context.selectedObject || context.domainObject;\r\n    }\r\n\r\n    MovePolicy.prototype.allow = function (action, context) {\r\n        var key = action.getMetadata().key;\r\n\r\n        if (key === 'move') {\r\n            return allowMutation(selectedObject(context)) &&\r\n                allowMutation(parentOf(selectedObject(context)));\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    return MovePolicy;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/capabilities/LocationCapability',[],function () {\r\n\r\n        /**\r\n         * The location capability allows a domain object to know its current\r\n         * parent, and also know its original parent.  When a domain object's\r\n         * current parent is its original parent, the object is considered an\r\n         * original, otherwise it's a link.\r\n         *\r\n         * @constructor\r\n         */\r\n        function LocationCapability($q, $injector, domainObject) {\r\n            this.domainObject = domainObject;\r\n            this.$q = $q;\r\n            this.$injector = $injector;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Get an instance of this domain object in its original location.\r\n         *\r\n         * @returns {Promise.<DomainObject>} a promise for the original\r\n         *          instance of this domain object\r\n         */\r\n        LocationCapability.prototype.getOriginal = function () {\r\n            var id;\r\n\r\n            if (this.isOriginal()) {\r\n                return this.$q.when(this.domainObject);\r\n            }\r\n\r\n            id = this.domainObject.getId();\r\n\r\n            this.objectService =\r\n                this.objectService || this.$injector.get(\"objectService\");\r\n\r\n            // Assume that an object will be correctly contextualized when\r\n            // loaded directly from the object service; this is true\r\n            // so long as LocatingObjectDecorator is present, and that\r\n            // decorator is also contained in this bundle.\r\n            return this.objectService.getObjects([id])\r\n                .then(function (objects) {\r\n                    return objects[id];\r\n                });\r\n        };\r\n\r\n        /**\r\n         * Set the primary location (the parent id) of the current domain\r\n         * object.\r\n         *\r\n         * @param {String} location the primary location to persist.\r\n         * @returns {Promise} a promise that is resolved when the operation\r\n         * completes.\r\n         */\r\n        LocationCapability.prototype.setPrimaryLocation = function (location) {\r\n            var capability = this;\r\n            return this.domainObject.useCapability(\r\n                'mutation',\r\n                function (model) {\r\n                    model.location = location;\r\n                }\r\n            ).then(function () {\r\n                return capability.domainObject\r\n                    .getCapability('persistence')\r\n                    .persist();\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Returns the contextual location of the current domain object.  Only\r\n         * valid for domain objects that have a context capability.\r\n         *\r\n         * @returns {String} the contextual location of the object; the id of\r\n         * its parent.\r\n         */\r\n        LocationCapability.prototype.getContextualLocation = function () {\r\n            var context = this.domainObject.getCapability(\"context\");\r\n\r\n            if (!context) {\r\n                return;\r\n            }\r\n\r\n            return context.getParent().getId();\r\n        };\r\n\r\n        /**\r\n         * Returns true if the domainObject is a link, false if it's an\r\n         * original.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        LocationCapability.prototype.isLink = function () {\r\n            var model = this.domainObject.getModel();\r\n\r\n            return model.location !== this.getContextualLocation();\r\n        };\r\n\r\n        /**\r\n         * Returns true if the domainObject is an original, false if it's a\r\n         * link.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        LocationCapability.prototype.isOriginal = function () {\r\n            return !this.isLink();\r\n        };\r\n\r\n        return LocationCapability;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/services/MoveService',[],function () {\r\n        /**\r\n         * MoveService provides an interface for moving objects from one\r\n         * location to another.  It also provides a method for determining if\r\n         * an object can be copied to a specific location.\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         * @implements {platform/entanglement.AbstractComposeService}\r\n         */\r\n        function MoveService(policyService, linkService) {\r\n            this.policyService = policyService;\r\n            this.linkService = linkService;\r\n        }\r\n\r\n        MoveService.prototype.validate = function (object, parentCandidate) {\r\n            var currentParent = object\r\n                .getCapability('context')\r\n                .getParent();\r\n\r\n            if (!parentCandidate || !parentCandidate.getId) {\r\n                return false;\r\n            }\r\n            if (parentCandidate.getId() === currentParent.getId()) {\r\n                return false;\r\n            }\r\n            if (parentCandidate.getId() === object.getId()) {\r\n                return false;\r\n            }\r\n            if (parentCandidate.getModel().composition.indexOf(object.getId()) !== -1) {\r\n                return false;\r\n            }\r\n            return this.policyService.allow(\r\n                \"composition\",\r\n                parentCandidate.getCapability('type'),\r\n                object.getCapability('type')\r\n            );\r\n        };\r\n\r\n        MoveService.prototype.perform = function (object, parentObject) {\r\n            function relocate(objectInNewContext) {\r\n                var newLocationCapability = objectInNewContext\r\n                        .getCapability('location'),\r\n                    oldLocationCapability = object\r\n                        .getCapability('location');\r\n\r\n                if (!newLocationCapability ||\r\n                        !oldLocationCapability) {\r\n                    return;\r\n                }\r\n\r\n                if (oldLocationCapability.isOriginal()) {\r\n                    return newLocationCapability.setPrimaryLocation(\r\n                        newLocationCapability\r\n                            .getContextualLocation()\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (!this.validate(object, parentObject)) {\r\n                throw new Error(\r\n                    \"Tried to move objects without validating first.\"\r\n                );\r\n            }\r\n\r\n            return this.linkService\r\n                .perform(object, parentObject)\r\n                .then(relocate)\r\n                .then(function () {\r\n                    return object\r\n                        .getCapability('action')\r\n                        .perform('remove');\r\n                });\r\n        };\r\n\r\n        return MoveService;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/services/LinkService',[],function () {\r\n\r\n        /**\r\n         * LinkService provides an interface for linking objects to additional\r\n         * locations.  It also provides a method for determining if an object\r\n         * can be copied to a specific location.\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         * @implements {platform/entanglement.AbstractComposeService}\r\n         */\r\n        function LinkService(policyService) {\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        LinkService.prototype.validate = function (object, parentCandidate) {\r\n            if (!parentCandidate || !parentCandidate.getId) {\r\n                return false;\r\n            }\r\n            if (parentCandidate.getId() === object.getId()) {\r\n                return false;\r\n            }\r\n            if (!parentCandidate.hasCapability('composition')) {\r\n                return false;\r\n            }\r\n            if (parentCandidate.getModel().composition.indexOf(object.getId()) !== -1) {\r\n                return false;\r\n            }\r\n            return this.policyService.allow(\r\n                \"composition\",\r\n                parentCandidate.getCapability('type'),\r\n                object.getCapability('type')\r\n            );\r\n        };\r\n\r\n        LinkService.prototype.perform = function (object, parentObject) {\r\n            if (!this.validate(object, parentObject)) {\r\n                throw new Error(\r\n                    \"Tried to link objects without validating first.\"\r\n                );\r\n            }\r\n\r\n            return parentObject.getCapability('composition').add(object)\r\n                .then(function (objectInNewContext) {\r\n                    return parentObject.getCapability('persistence')\r\n                        .persist()\r\n                        .then(function () {\r\n                            return objectInNewContext;\r\n                        });\r\n                });\r\n        };\r\n\r\n        return LinkService;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/services/CopyTask',[],\r\n    function () {\r\n\r\n        /**\r\n         * This class encapsulates the process of copying a domain object\r\n         * and all of its children.\r\n         *\r\n         * @param {DomainObject} domainObject The object to copy\r\n         * @param {DomainObject} parent The new location of the cloned object tree\r\n         * @param {platform/entanglement.CopyService~filter} filter\r\n         *        a function used to filter out objects from\r\n         *        the cloning process\r\n         * @param $q Angular's $q, for promises\r\n         * @constructor\r\n         */\r\n        function CopyTask(domainObject, parent, filter, $q) {\r\n            this.domainObject = domainObject;\r\n            this.parent = parent;\r\n            this.firstClone = undefined;\r\n            this.$q = $q;\r\n            this.deferred = undefined;\r\n            this.filter = filter;\r\n            this.persisted = 0;\r\n            this.clones = [];\r\n            this.idMap = {};\r\n        }\r\n\r\n        function composeChild(child, parent, setLocation) {\r\n            //Once copied, associate each cloned\r\n            // composee with its parent clone\r\n\r\n            parent.getModel().composition.push(child.getId());\r\n\r\n            //If a location is not specified, set it.\r\n            if (setLocation && child.getModel().location === undefined) {\r\n                child.getModel().location = parent.getId();\r\n            }\r\n\r\n            return child;\r\n        }\r\n\r\n        function cloneObjectModel(objectModel) {\r\n            var clone = JSON.parse(JSON.stringify(objectModel));\r\n\r\n            /**\r\n             * Reset certain fields.\r\n             */\r\n            //If has a composition, set it to an empty array. Will be\r\n            // recomposed later with the ids of its cloned children.\r\n            if (clone.composition) {\r\n                //Important to set it to an empty array here, otherwise\r\n                // hasCapability(\"composition\") returns false;\r\n                clone.composition = [];\r\n            }\r\n            delete clone.persisted;\r\n            delete clone.modified;\r\n            delete clone.location;\r\n\r\n            return clone;\r\n        }\r\n\r\n        /**\r\n         * Will persist a list of {@link objectClones}. It will persist all\r\n         * simultaneously, irrespective of order in the list. This may\r\n         * result in automatic request batching by the browser.\r\n         */\r\n        function persistObjects(self) {\r\n            return self.$q.all(self.clones.map(function (clone) {\r\n                return clone.getCapability(\"persistence\").persist().then(function () {\r\n                    self.deferred.notify({phase: \"copying\", totalObjects: self.clones.length, processed: ++self.persisted});\r\n                });\r\n            })).then(function () {\r\n                return self;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Will add a list of clones to the specified parent's composition\r\n         */\r\n        function addClonesToParent(self) {\r\n            return self.parent.getCapability(\"composition\")\r\n                .add(self.firstClone)\r\n                .then(function (addedClone) {\r\n                    return self.parent.getCapability(\"persistence\").persist()\r\n                        .then(function () {\r\n                            return addedClone;\r\n                        });\r\n                });\r\n        }\r\n\r\n        /**\r\n         * Update identifiers in a cloned object model (or part of\r\n         * a cloned object model) to reflect new identifiers after\r\n         * copying.\r\n         * @private\r\n         */\r\n        CopyTask.prototype.rewriteIdentifiers = function (obj, idMap) {\r\n            function lookupValue(value) {\r\n                return (typeof value === 'string' && idMap[value]) || value;\r\n            }\r\n\r\n            if (Array.isArray(obj)) {\r\n                obj.forEach(function (value, index) {\r\n                    obj[index] = lookupValue(value);\r\n                    this.rewriteIdentifiers(obj[index], idMap);\r\n                }, this);\r\n            } else if (obj && typeof obj === 'object') {\r\n                Object.keys(obj).forEach(function (key) {\r\n                    var value = obj[key];\r\n                    obj[key] = lookupValue(value);\r\n                    if (idMap[key]) {\r\n                        delete obj[key];\r\n                        obj[idMap[key]] = value;\r\n                    }\r\n                    this.rewriteIdentifiers(value, idMap);\r\n                }, this);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Given an array of objects composed by a parent, clone them, then\r\n         * add them to the parent.\r\n         * @private\r\n         * @returns {*}\r\n         */\r\n        CopyTask.prototype.copyComposees = function (composees, clonedParent, originalParent) {\r\n            var self = this,\r\n                idMap = {};\r\n\r\n            return (composees || []).reduce(function (promise, originalComposee) {\r\n                //If the composee is composed of other\r\n                // objects, chain a promise..\r\n                return promise.then(function () {\r\n                    // ...to recursively copy it (and its children)\r\n                    return self.copy(originalComposee, originalParent).then(function (clonedComposee) {\r\n                        //Map the original composee's ID to that of its\r\n                        // clone so that we can replace any references to it\r\n                        // in the parent\r\n                        idMap[originalComposee.getId()] = clonedComposee.getId();\r\n\r\n                        //Compose the child within its parent. Cloned\r\n                        // objects will need to also have their location\r\n                        // set, however linked objects will not.\r\n                        return composeChild(clonedComposee, clonedParent, clonedComposee !== originalComposee);\r\n                    });\r\n                });\r\n            }, self.$q.when(undefined)\r\n            ).then(function () {\r\n                //Replace any references in the cloned parent to\r\n                // contained objects that have been composed with the\r\n                // Ids of the clones\r\n                self.rewriteIdentifiers(clonedParent.getModel(), idMap);\r\n\r\n                //Add the clone to the list of clones that will\r\n                //be returned by this function\r\n                self.clones.push(clonedParent);\r\n                return clonedParent;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * A recursive function that will perform a bottom-up copy of\r\n         * the object tree with originalObject at the root. Recurses to\r\n         * the farthest leaf, then works its way back up again,\r\n         * cloning objects, and composing them with their child clones\r\n         * as it goes\r\n         * @private\r\n         * @returns {DomainObject} If the type of the original object allows for\r\n         * duplication, then a duplicate of the object, otherwise the object\r\n         * itself (to allow linking to non duplicatable objects).\r\n         */\r\n        CopyTask.prototype.copy = function (originalObject) {\r\n            var self = this,\r\n                clone;\r\n\r\n            //Check if the type of the object being copied allows for\r\n            // creation of new instances. If it does not, then a link to the\r\n            // original will be created instead.\r\n            if (this.filter(originalObject)) {\r\n                //create a new clone of the original object. Use the\r\n                // creation capability of the targetParent to create the\r\n                // new clone. This will ensure that the correct persistence\r\n                // space is used.\r\n                clone = this.parent.useCapability(\"instantiation\", cloneObjectModel(originalObject.getModel()));\r\n\r\n                //Iterate through child tree\r\n                return this.$q.when(originalObject.useCapability('composition')).then(function (composees) {\r\n                    self.deferred.notify({phase: \"preparing\"});\r\n                    //Duplicate the object's children, and their children, and\r\n                    // so on down to the leaf nodes of the tree.\r\n                    //If it is a link, don't both with children\r\n                    return self.copyComposees(composees, clone, originalObject);\r\n                });\r\n            } else {\r\n                //Creating a link, no need to iterate children\r\n                return self.$q.when(originalObject);\r\n            }\r\n\r\n\r\n        };\r\n\r\n        /**\r\n         * Will build a graph of an object and all of its child objects in\r\n         * memory\r\n         * @private\r\n         * @param domainObject The original object to be copied\r\n         * @param parent The parent of the original object to be copied\r\n         * @returns {Promise} resolved with an array of clones of the models\r\n         * of the object tree being copied. Copying is done in a bottom-up\r\n         * fashion, so that the last member in the array is a clone of the model\r\n         * object being copied. The clones are all full composed with\r\n         * references to their own children.\r\n         */\r\n        CopyTask.prototype.buildCopyPlan = function () {\r\n            var self = this;\r\n\r\n            return this.copy(self.domainObject, self.parent).then(function (domainObjectClone) {\r\n                if (domainObjectClone !== self.domainObject) {\r\n                    domainObjectClone.getModel().location = self.parent.getId();\r\n                }\r\n                self.firstClone = domainObjectClone;\r\n                return self;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Execute the copy task with the objects provided in the constructor.\r\n         * @returns {promise} Which will resolve with a clone of the object\r\n         * once complete.\r\n         */\r\n        CopyTask.prototype.perform = function () {\r\n            this.deferred = this.$q.defer();\r\n\r\n            this.buildCopyPlan()\r\n                .then(persistObjects)\r\n                .then(addClonesToParent)\r\n                .then(this.deferred.resolve, this.deferred.reject);\r\n\r\n            return this.deferred.promise;\r\n        };\r\n\r\n        return CopyTask;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\ndefine(\r\n    'platform/entanglement/src/services/CopyService',[\"./CopyTask\"],\r\n    function (CopyTask) {\r\n\r\n        /**\r\n         * CopyService provides an interface for deep copying objects from one\r\n         * location to another.  It also provides a method for determining if\r\n         * an object can be copied to a specific location.\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         * @implements {platform/entanglement.AbstractComposeService}\r\n         */\r\n        function CopyService($q, policyService) {\r\n            this.$q = $q;\r\n            this.policyService = policyService;\r\n        }\r\n\r\n        CopyService.prototype.validate = function (object, parentCandidate) {\r\n            if (!parentCandidate || !parentCandidate.getId) {\r\n                return false;\r\n            }\r\n            if (parentCandidate.getId() === object.getId()) {\r\n                return false;\r\n            }\r\n            return this.policyService.allow(\r\n                \"composition\",\r\n                parentCandidate.getCapability('type'),\r\n                object.getCapability('type')\r\n            );\r\n        };\r\n\r\n        /**\r\n         * A function used to check if a domain object should be cloned\r\n         * or not.\r\n         * @callback platform/entanglement.CopyService~filter\r\n         * @param {DomainObject} domainObject the object to be cloned\r\n         * @returns {boolean} true if the object should be cloned; false\r\n         *          if it should be linked\r\n         */\r\n\r\n        /**\r\n         * Creates a duplicate of the object tree starting at domainObject to\r\n         * the new parent specified.\r\n         *\r\n         * Any domain objects which cannot be created will not be cloned;\r\n         * instead, these will appear as links. If a filtering function\r\n         * is provided, any objects which fail that check will also be\r\n         * linked instead of cloned\r\n         *\r\n         * @param {DomainObject} domainObject the object to duplicate\r\n         * @param {DomainObject} parent the destination for the clone\r\n         * @param {platform/entanglement.CopyService~filter} [filter]\r\n         *        an optional function used to filter out objects from\r\n         *        the cloning process\r\n         * @returns a promise that will be completed with the clone of\r\n         * domainObject when the duplication is successful.\r\n         */\r\n        CopyService.prototype.perform = function (domainObject, parent, filter) {\r\n            var policyService = this.policyService;\r\n\r\n            // Combines caller-provided filter (if any) with the\r\n            // baseline behavior of respecting creation policy.\r\n            function filterWithPolicy(domainObj) {\r\n                return (!filter || filter(domainObj)) &&\r\n                    policyService.allow(\r\n                        \"creation\",\r\n                        domainObj.getCapability(\"type\")\r\n                    );\r\n            }\r\n\r\n            if (this.validate(domainObject, parent)) {\r\n                return new CopyTask(\r\n                    domainObject,\r\n                    parent,\r\n                    filterWithPolicy,\r\n                    this.$q\r\n                ).perform();\r\n            } else {\r\n                throw new Error(\r\n                    \"Tried to copy objects without validating first.\"\r\n                );\r\n            }\r\n        };\r\n\r\n        return CopyService;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n\r\n/**\r\n * This bundle implements actions which control the location of objects\r\n * (move, copy, link.)\r\n * @namespace platform/entanglement\r\n */\r\ndefine(\r\n    'platform/entanglement/src/services/LocationService',[],function () {\r\n\r\n        /**\r\n         * The LocationService allows for easily prompting the user for a\r\n         * location in the root tree.\r\n         * @constructor\r\n         * @memberof platform/entanglement\r\n         */\r\n        function LocationService(dialogService) {\r\n            return {\r\n                /** Prompt the user to select a location.  Returns a promise\r\n                 * that is resolved with a domainObject representing the\r\n                 * location selected by the user.\r\n                 *\r\n                 * @param {string} title - title of location dialog\r\n                 * @param {string} label - label for location input field\r\n                 * @param {function} validate - function that validates\r\n                 *     selections.\r\n                 * @param {domainObject} initialLocation - tree location to\r\n                 *     display at start\r\n                 * @returns {Promise} promise for a domain object.\r\n                 * @memberof platform/entanglement.LocationService#\r\n                 */\r\n                getLocationFromUser: function (title, label, validate, initialLocation) {\r\n                    var formStructure,\r\n                        formState;\r\n\r\n                    formStructure = {\r\n                        sections: [\r\n                            {\r\n                                name: 'Location',\r\n                                rows: [\r\n                                    {\r\n                                        name: label,\r\n                                        control: \"locator\",\r\n                                        validate: validate,\r\n                                        key: 'location'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        name: title\r\n                    };\r\n\r\n                    formState = {\r\n                        location: initialLocation\r\n                    };\r\n\r\n                    return dialogService\r\n                        .getUserInput(formStructure, formState)\r\n                        .then(function (userFormState) {\r\n                            return userFormState.location;\r\n                        });\r\n                }\r\n            };\r\n        }\r\n\r\n        return LocationService;\r\n    }\r\n);\r\n\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/entanglement/bundle',[\r\n    \"./src/actions/MoveAction\",\r\n    \"./src/actions/CopyAction\",\r\n    \"./src/actions/LinkAction\",\r\n    \"./src/actions/GoToOriginalAction\",\r\n    \"./src/actions/SetPrimaryLocationAction\",\r\n    \"./src/services/LocatingCreationDecorator\",\r\n    \"./src/services/LocatingObjectDecorator\",\r\n    \"./src/policies/CopyPolicy\",\r\n    \"./src/policies/CrossSpacePolicy\",\r\n    \"./src/policies/MovePolicy\",\r\n    \"./src/capabilities/LocationCapability\",\r\n    \"./src/services/MoveService\",\r\n    \"./src/services/LinkService\",\r\n    \"./src/services/CopyService\",\r\n    \"./src/services/LocationService\",\r\n    'legacyRegistry'\r\n], function (\r\n    MoveAction,\r\n    CopyAction,\r\n    LinkAction,\r\n    GoToOriginalAction,\r\n    SetPrimaryLocationAction,\r\n    LocatingCreationDecorator,\r\n    LocatingObjectDecorator,\r\n    CopyPolicy,\r\n    CrossSpacePolicy,\r\n    MovePolicy,\r\n    LocationCapability,\r\n    MoveService,\r\n    LinkService,\r\n    CopyService,\r\n    LocationService,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/entanglement\", {\r\n        \"name\": \"Entanglement\",\r\n        \"description\": \"Tools to assist you in entangling the world of WARP.\",\r\n        \"configuration\": {},\r\n        \"extensions\": {\r\n            \"actions\": [\r\n                {\r\n                    \"key\": \"move\",\r\n                    \"name\": \"Move\",\r\n                    \"description\": \"Move object to another location.\",\r\n                    \"cssclass\": \"icon-move\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": MoveAction,\r\n                    \"depends\": [\r\n                        \"policyService\",\r\n                        \"locationService\",\r\n                        \"moveService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"copy\",\r\n                    \"name\": \"Duplicate\",\r\n                    \"description\": \"Duplicate object to another location.\",\r\n                    \"cssclass\": \"icon-duplicate\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": CopyAction,\r\n                    \"depends\": [\r\n                        \"$log\",\r\n                        \"policyService\",\r\n                        \"locationService\",\r\n                        \"copyService\",\r\n                        \"dialogService\",\r\n                        \"notificationService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"link\",\r\n                    \"name\": \"Create Link\",\r\n                    \"description\": \"Create Link to object in another location.\",\r\n                    \"cssclass\": \"icon-link\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": LinkAction,\r\n                    \"depends\": [\r\n                        \"policyService\",\r\n                        \"locationService\",\r\n                        \"linkService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"follow\",\r\n                    \"name\": \"Go To Original\",\r\n                    \"description\": \"Go to the original, un-linked instance of this object.\",\r\n                    \"cssclass\": \"\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": GoToOriginalAction\r\n                },\r\n                {\r\n                    \"key\": \"locate\",\r\n                    \"name\": \"Set Primary Location\",\r\n                    \"description\": \"Set a domain object's primary location.\",\r\n                    \"cssclass\": \"\",\r\n                    \"category\": \"contextual\",\r\n                    \"implementation\": SetPrimaryLocationAction\r\n                }\r\n            ],\r\n            \"components\": [\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"creationService\",\r\n                    \"implementation\": LocatingCreationDecorator\r\n                },\r\n                {\r\n                    \"type\": \"decorator\",\r\n                    \"provides\": \"objectService\",\r\n                    \"implementation\": LocatingObjectDecorator,\r\n                    \"depends\": [\r\n                        \"contextualize\",\r\n                        \"$q\",\r\n                        \"$log\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": CrossSpacePolicy\r\n                },\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": CopyPolicy\r\n                },\r\n                {\r\n                    \"category\": \"action\",\r\n                    \"implementation\": MovePolicy\r\n                }\r\n            ],\r\n            \"capabilities\": [\r\n                {\r\n                    \"key\": \"location\",\r\n                    \"name\": \"Location Capability\",\r\n                    \"description\": \"Provides a capability for retrieving the location of an object based upon it's context.\",\r\n                    \"implementation\": LocationCapability,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$injector\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"moveService\",\r\n                    \"name\": \"Move Service\",\r\n                    \"description\": \"Provides a service for moving objects\",\r\n                    \"implementation\": MoveService,\r\n                    \"depends\": [\r\n                        \"policyService\",\r\n                        \"linkService\",\r\n                        \"$q\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"linkService\",\r\n                    \"name\": \"Link Service\",\r\n                    \"description\": \"Provides a service for linking objects\",\r\n                    \"implementation\": LinkService,\r\n                    \"depends\": [\r\n                        \"policyService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"copyService\",\r\n                    \"name\": \"Copy Service\",\r\n                    \"description\": \"Provides a service for copying objects\",\r\n                    \"implementation\": CopyService,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"policyService\",\r\n                        \"now\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"locationService\",\r\n                    \"name\": \"Location Service\",\r\n                    \"description\": \"Provides a service for prompting a user for locations.\",\r\n                    \"implementation\": LocationService,\r\n                    \"depends\": [\r\n                        \"dialogService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"licenses\": []\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining SearchController. Created by shale on 07/15/2015.\r\n */\r\ndefine('platform/search/src/controllers/SearchController',[],function () {\r\n\r\n    /**\r\n     * Controller for search in Tree View.\r\n     *\r\n     * Filtering is currently buggy; it filters after receiving results from\r\n     * search providers, the downside of this is that it requires search\r\n     * providers to provide objects for all possible results, which is\r\n     * potentially a hit to persistence, thus can be very very slow.\r\n     *\r\n     * Ideally, filtering should be handled before loading objects from the persistence\r\n     * store, the downside to this is that filters must be applied to object\r\n     * models, not object instances.\r\n     *\r\n     * @constructor\r\n     * @param $scope\r\n     * @param searchService\r\n     */\r\n    function SearchController($scope, searchService) {\r\n        var controller = this;\r\n        this.$scope = $scope;\r\n        this.searchService = searchService;\r\n        this.numberToDisplay = this.RESULTS_PER_PAGE;\r\n        this.availabileResults = 0;\r\n        this.$scope.results = [];\r\n        this.$scope.loading = false;\r\n        this.pendingQuery = undefined;\r\n        this.$scope.ngModel.filter = function () {\r\n            return controller.onFilterChange.apply(controller, arguments);\r\n        };\r\n    }\r\n\r\n    SearchController.prototype.RESULTS_PER_PAGE = 20;\r\n\r\n    /**\r\n     * Returns true if there are more results than currently displayed for the\r\n     * for the current query and filters.\r\n     */\r\n    SearchController.prototype.areMore = function () {\r\n        return this.$scope.results.length < this.availableResults;\r\n    };\r\n\r\n    /**\r\n     * Display more results for the currently displayed query and filters.\r\n     */\r\n    SearchController.prototype.loadMore = function () {\r\n        this.numberToDisplay += this.RESULTS_PER_PAGE;\r\n        this.dispatchSearch();\r\n    };\r\n\r\n    /**\r\n     * Reset search results, then search for the query string specified in\r\n     * scope.\r\n     */\r\n    SearchController.prototype.search = function () {\r\n        var inputText = this.$scope.ngModel.input;\r\n\r\n        this.clearResults();\r\n\r\n        if (inputText) {\r\n            this.$scope.loading = true;\r\n            this.$scope.ngModel.search = true;\r\n        } else {\r\n            this.pendingQuery = undefined;\r\n            this.$scope.ngModel.search = false;\r\n            this.$scope.loading = false;\r\n            return;\r\n        }\r\n\r\n        this.dispatchSearch();\r\n    };\r\n\r\n    /**\r\n     * Dispatch a search to the search service if it hasn't already been\r\n     * dispatched.\r\n     *\r\n     * @private\r\n     */\r\n    SearchController.prototype.dispatchSearch = function () {\r\n        var inputText = this.$scope.ngModel.input,\r\n            controller = this,\r\n            queryId = inputText + this.numberToDisplay;\r\n\r\n        if (this.pendingQuery === queryId) {\r\n            return; // don't issue multiple queries for the same term.\r\n        }\r\n\r\n        this.pendingQuery = queryId;\r\n\r\n        this\r\n            .searchService\r\n            .query(inputText, this.numberToDisplay, this.filterPredicate())\r\n            .then(function (results) {\r\n                if (controller.pendingQuery !== queryId) {\r\n                    return; // another query in progress, so skip this one.\r\n                }\r\n                controller.onSearchComplete(results);\r\n            });\r\n    };\r\n\r\n    SearchController.prototype.filter = SearchController.prototype.onFilterChange;\r\n\r\n    /**\r\n     * Refilter results and update visible results when filters have changed.\r\n     */\r\n    SearchController.prototype.onFilterChange = function () {\r\n        this.pendingQuery = undefined;\r\n        this.search();\r\n    };\r\n\r\n    /**\r\n     * Returns a predicate function that can be used to filter object models.\r\n     *\r\n     * @private\r\n     */\r\n    SearchController.prototype.filterPredicate = function () {\r\n        if (this.$scope.ngModel.checkAll) {\r\n            return function () {\r\n                return true;\r\n            };\r\n        }\r\n        var includeTypes = this.$scope.ngModel.checked;\r\n        return function (model) {\r\n            return !!includeTypes[model.type];\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Clear the search results.\r\n     *\r\n     * @private\r\n     */\r\n    SearchController.prototype.clearResults = function () {\r\n        this.$scope.results = [];\r\n        this.availableResults = 0;\r\n        this.numberToDisplay = this.RESULTS_PER_PAGE;\r\n    };\r\n\r\n\r\n    /**\r\n     * Update search results from given `results`.\r\n     *\r\n     * @private\r\n     */\r\n    SearchController.prototype.onSearchComplete = function (results) {\r\n        this.availableResults = results.total;\r\n        this.$scope.results = results.hits;\r\n        this.$scope.loading = false;\r\n        this.pendingQuery = undefined;\r\n    };\r\n\r\n    return SearchController;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining SearchMenuController. Created by shale on 08/17/2015.\r\n */\r\ndefine('platform/search/src/controllers/SearchMenuController',[],function () {\r\n\r\n    function SearchMenuController($scope, types) {\r\n\r\n        // Model variables are:\r\n        //   ngModel.filter, the function filter defined in SearchController\r\n        //   ngModel.types, an array of type objects\r\n        //   ngModel.checked, a dictionary of which type filter options are checked\r\n        //   ngModel.checkAll, a boolean of whether all of the types in ngModel.checked are checked\r\n        //   ngModel.filtersString, a string list of what filters on the results are active\r\n        $scope.ngModel.types = [];\r\n        $scope.ngModel.checked = {};\r\n        $scope.ngModel.checkAll = true;\r\n        $scope.ngModel.filtersString = '';\r\n\r\n        // On initialization, fill the model's types with type keys\r\n        types.forEach(function (type) {\r\n            // We only want some types, the ones that are probably human readable\r\n            // Manually remove 'root', but not 'unknown'\r\n            if (type.key && type.name && type.key !== 'root') {\r\n                $scope.ngModel.types.push(type);\r\n                $scope.ngModel.checked[type.key] = false;\r\n            }\r\n        });\r\n\r\n\r\n        // For documentation, see updateOptions below\r\n        function updateOptions() {\r\n            var type,\r\n                i;\r\n\r\n            // Update all-checked status\r\n            if ($scope.ngModel.checkAll) {\r\n                for (type in $scope.ngModel.checked) {\r\n                    if ($scope.ngModel.checked[type]) {\r\n                        $scope.ngModel.checkAll = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update the current filters string\r\n            $scope.ngModel.filtersString = '';\r\n            if (!$scope.ngModel.checkAll) {\r\n                for (i = 0; i < $scope.ngModel.types.length; i += 1) {\r\n                    // If the type key corresponds to a checked option...\r\n                    if ($scope.ngModel.checked[$scope.ngModel.types[i].key]) {\r\n                        // ... add it to the string list of current filter options\r\n                        if ($scope.ngModel.filtersString === '') {\r\n                            $scope.ngModel.filtersString += $scope.ngModel.types[i].name;\r\n                        } else {\r\n                            $scope.ngModel.filtersString += ', ' + $scope.ngModel.types[i].name;\r\n                        }\r\n                    }\r\n                }\r\n                // If there's still nothing in the filters string, there are no\r\n                //   filters selected\r\n                if ($scope.ngModel.filtersString === '') {\r\n                    $scope.ngModel.filtersString = 'NONE';\r\n                }\r\n            }\r\n\r\n            // Re-filter results\r\n            $scope.ngModel.filter();\r\n        }\r\n\r\n        // For documentation, see checkAll below\r\n        function checkAll() {\r\n            // Reset all the other options to original/default position\r\n            Object.keys($scope.ngModel.checked).forEach(function (type) {\r\n                $scope.ngModel.checked[type] = false;\r\n            });\r\n\r\n            // Change the filters string depending on checkAll status\r\n            if ($scope.ngModel.checkAll) {\r\n                // This setting will make the filters display hidden\r\n                $scope.ngModel.filtersString = '';\r\n            } else {\r\n                $scope.ngModel.filtersString = 'NONE';\r\n            }\r\n\r\n            // Re-filter results\r\n            $scope.ngModel.filter();\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Updates the status of the checked options. Updates the filtersString\r\n             *   with which options are checked. Re-filters the search results after.\r\n             *   Not intended to be called by checkAll when it is toggled.\r\n             */\r\n            updateOptions: updateOptions,\r\n\r\n            /**\r\n             * Handles the search and filter options for when checkAll has been\r\n             *   toggled. This is a special case, compared to the other search\r\n             *   menu options, so is intended to be called instead of updateOptions.\r\n             */\r\n            checkAll: checkAll\r\n        };\r\n    }\r\n    return SearchMenuController;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n/*global setTimeout*/\r\n\r\n/**\r\n * Module defining GenericSearchProvider. Created by shale on 07/16/2015.\r\n */\r\ndefine('platform/search/src/services/GenericSearchProvider',[\r\n\r\n], function (\r\n\r\n) {\r\n\r\n    /**\r\n     * A search service which searches through domain objects in\r\n     * the filetree without using external search implementations.\r\n     *\r\n     * @constructor\r\n     * @param $q Angular's $q, for promise consolidation.\r\n     * @param $log Anglar's $log, for logging.\r\n     * @param {ModelService} modelService the model service.\r\n     * @param {WorkerService} workerService the workerService.\r\n     * @param {TopicService} topic the topic service.\r\n     * @param {Array} ROOTS An array of object Ids to begin indexing.\r\n     */\r\n    function GenericSearchProvider($q, $log, modelService, workerService, topic, ROOTS) {\r\n        var provider = this;\r\n        this.$q = $q;\r\n        this.$log = $log;\r\n        this.modelService = modelService;\r\n\r\n        this.indexedIds = {};\r\n        this.idsToIndex = [];\r\n        this.pendingIndex = {};\r\n        this.pendingRequests = 0;\r\n\r\n        this.pendingQueries = {};\r\n\r\n        this.worker = this.startWorker(workerService);\r\n        this.indexOnMutation(topic);\r\n\r\n        ROOTS.forEach(function indexRoot(rootId) {\r\n            provider.scheduleForIndexing(rootId);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Maximum number of concurrent index requests to allow.\r\n     */\r\n    GenericSearchProvider.prototype.MAX_CONCURRENT_REQUESTS = 100;\r\n\r\n    /**\r\n     * Query the search provider for results.\r\n     *\r\n     * @param {String} input the string to search by.\r\n     * @param {Number} maxResults max number of results to return.\r\n     * @returns {Promise} a promise for a modelResults object.\r\n     */\r\n    GenericSearchProvider.prototype.query = function (\r\n        input,\r\n        maxResults\r\n    ) {\r\n\r\n        var queryId = this.dispatchSearch(input, maxResults),\r\n            pendingQuery = this.$q.defer();\r\n\r\n        this.pendingQueries[queryId] = pendingQuery;\r\n\r\n        return pendingQuery.promise;\r\n    };\r\n\r\n    /**\r\n     * Creates a search worker and attaches handlers.\r\n     *\r\n     * @private\r\n     * @param workerService\r\n     * @returns worker the created search worker.\r\n     */\r\n    GenericSearchProvider.prototype.startWorker = function (workerService) {\r\n        var worker = workerService.run('genericSearchWorker'),\r\n            provider = this;\r\n\r\n        worker.addEventListener('message', function (messageEvent) {\r\n            provider.onWorkerMessage(messageEvent);\r\n        });\r\n\r\n        return worker;\r\n    };\r\n\r\n    /**\r\n     * Listen to the mutation topic and re-index objects when they are\r\n     * mutated.\r\n     *\r\n     * @private\r\n     * @param topic the topicService.\r\n     */\r\n    GenericSearchProvider.prototype.indexOnMutation = function (topic) {\r\n        var mutationTopic = topic('mutation'),\r\n            provider = this;\r\n\r\n        mutationTopic.listen(function (mutatedObject) {\r\n            var editor = mutatedObject.getCapability('editor');\r\n            if (!editor || !editor.inEditContext()) {\r\n                provider.index(\r\n                    mutatedObject.getId(),\r\n                    mutatedObject.getModel()\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Schedule an id to be indexed at a later date.  If there are less\r\n     * pending requests then allowed, will kick off an indexing request.\r\n     *\r\n     * @private\r\n     * @param {String} id to be indexed.\r\n     */\r\n    GenericSearchProvider.prototype.scheduleForIndexing = function (id) {\r\n        if (!this.indexedIds[id] && !this.pendingIndex[id]) {\r\n            this.indexedIds[id] = true;\r\n            this.pendingIndex[id] = true;\r\n            this.idsToIndex.push(id);\r\n        }\r\n        this.keepIndexing();\r\n    };\r\n\r\n    /**\r\n     * If there are less pending requests than concurrent requests, keep\r\n     * firing requests.\r\n     *\r\n     * @private\r\n     */\r\n    GenericSearchProvider.prototype.keepIndexing = function () {\r\n        while (this.pendingRequests < this.MAX_CONCURRENT_REQUESTS &&\r\n            this.idsToIndex.length\r\n            ) {\r\n            this.beginIndexRequest();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pass an id and model to the worker to be indexed.  If the model has\r\n     * composition, schedule those ids for later indexing.\r\n     *\r\n     * @private\r\n     * @param id a model id\r\n     * @param model a model\r\n     */\r\n    GenericSearchProvider.prototype.index = function (id, model) {\r\n        var provider = this;\r\n\r\n        this.worker.postMessage({\r\n            request: 'index',\r\n            model: model,\r\n            id: id\r\n        });\r\n\r\n        if (Array.isArray(model.composition)) {\r\n            model.composition.forEach(function (idToIndex) {\r\n                provider.scheduleForIndexing(idToIndex);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pulls an id from the indexing queue, loads it from the model service,\r\n     * and indexes it.  Upon completion, tells the provider to keep\r\n     * indexing.\r\n     *\r\n     * @private\r\n     */\r\n    GenericSearchProvider.prototype.beginIndexRequest = function () {\r\n        var idToIndex = this.idsToIndex.shift(),\r\n            provider = this;\r\n\r\n        this.pendingRequests += 1;\r\n        this.modelService\r\n            .getModels([idToIndex])\r\n            .then(function (models) {\r\n                delete provider.pendingIndex[idToIndex];\r\n                if (models[idToIndex]) {\r\n                    provider.index(idToIndex, models[idToIndex]);\r\n                }\r\n            }, function () {\r\n                provider\r\n                    .$log\r\n                    .warn('Failed to index domain object ' + idToIndex);\r\n            })\r\n            .then(function () {\r\n                setTimeout(function () {\r\n                    provider.pendingRequests -= 1;\r\n                    provider.keepIndexing();\r\n                }, 0);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Handle messages from the worker.  Only really knows how to handle search\r\n     * results, which are parsed, transformed into a modelResult object, which\r\n     * is used to resolve the corresponding promise.\r\n     * @private\r\n     */\r\n    GenericSearchProvider.prototype.onWorkerMessage = function (event) {\r\n        if (event.data.request !== 'search') {\r\n            return;\r\n        }\r\n\r\n        var pendingQuery = this.pendingQueries[event.data.queryId],\r\n            modelResults = {\r\n                total: event.data.total\r\n            };\r\n\r\n        modelResults.hits = event.data.results.map(function (hit) {\r\n            return {\r\n                id: hit.item.id,\r\n                model: hit.item.model,\r\n                score: hit.matchCount\r\n            };\r\n        });\r\n\r\n        pendingQuery.resolve(modelResults);\r\n        delete this.pendingQueries[event.data.queryId];\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @returns {Number} a unique, unusued query Id.\r\n     */\r\n    GenericSearchProvider.prototype.makeQueryId = function () {\r\n        var queryId = Math.ceil(Math.random() * 100000);\r\n        while (this.pendingQueries[queryId]) {\r\n            queryId = Math.ceil(Math.random() * 100000);\r\n        }\r\n        return queryId;\r\n    };\r\n\r\n    /**\r\n     * Dispatch a search query to the worker and return a queryId.\r\n     *\r\n     * @private\r\n     * @returns {Number} a unique query Id for the query.\r\n     */\r\n    GenericSearchProvider.prototype.dispatchSearch = function (\r\n        searchInput,\r\n        maxResults\r\n    ) {\r\n        var queryId = this.makeQueryId();\r\n\r\n        this.worker.postMessage({\r\n            request: 'search',\r\n            input: searchInput,\r\n            maxResults: maxResults,\r\n            queryId: queryId\r\n        });\r\n\r\n        return queryId;\r\n    };\r\n\r\n\r\n    return GenericSearchProvider;\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/**\r\n * Module defining SearchAggregator. Created by shale on 07/16/2015.\r\n */\r\ndefine('platform/search/src/services/SearchAggregator',[\r\n\r\n], function (\r\n\r\n) {\r\n\r\n    /**\r\n     * Aggregates multiple search providers as a singular search provider.\r\n     * Search providers are expected to implement a `query` method which returns\r\n     * a promise for a `modelResults` object.\r\n     *\r\n     * The search aggregator combines the results from multiple providers,\r\n     * removes aggregates, and converts the results to domain objects.\r\n     *\r\n     * @constructor\r\n     * @param $q Angular's $q, for promise consolidation.\r\n     * @param objectService\r\n     * @param {SearchProvider[]} providers The search providers to be\r\n     *        aggregated.\r\n     */\r\n    function SearchAggregator($q, objectService, providers) {\r\n        this.$q = $q;\r\n        this.objectService = objectService;\r\n        this.providers = providers;\r\n    }\r\n\r\n    /**\r\n     * If max results is not specified in query, use this as default.\r\n     */\r\n    SearchAggregator.prototype.DEFAULT_MAX_RESULTS = 100;\r\n\r\n    /**\r\n     * Because filtering isn't implemented inside each provider, the fudge\r\n     * factor is a multiplier on the number of results returned-- more results\r\n     * than requested will be fetched, and then will be filtered.  This helps\r\n     * provide more predictable pagination when large numbers of results are\r\n     * returned but very few results match filters.\r\n     *\r\n     * If a provider level filter implementation is implemented in the future,\r\n     * remove this.\r\n     */\r\n    SearchAggregator.prototype.FUDGE_FACTOR = 5;\r\n\r\n    /**\r\n     * Sends a query to each of the providers. Returns a promise for\r\n     *   a result object that has the format\r\n     *   {hits: searchResult[], total: number}\r\n     *   where a searchResult has the format\r\n     *   {id: string, object: domainObject, score: number}\r\n     *\r\n     * @param {String} inputText The text input that is the query.\r\n     * @param {Number} maxResults (optional) The maximum number of results\r\n     *   that this function should return. If not provided, a\r\n     *   default of 100 will be used.\r\n     * @param {Function} [filter] if provided, will be called for every\r\n     *   potential modelResult.  If it returns false, the model result will be\r\n     *   excluded from the search results.\r\n     * @returns {Promise} A Promise for a search result object.\r\n     */\r\n    SearchAggregator.prototype.query = function (\r\n        inputText,\r\n        maxResults,\r\n        filter\r\n    ) {\r\n\r\n        var aggregator = this,\r\n            resultPromises;\r\n\r\n        if (!maxResults) {\r\n            maxResults = this.DEFAULT_MAX_RESULTS;\r\n        }\r\n\r\n        resultPromises = this.providers.map(function (provider) {\r\n            return provider.query(\r\n                inputText,\r\n                maxResults * aggregator.FUDGE_FACTOR\r\n            );\r\n        });\r\n\r\n        return this.$q\r\n            .all(resultPromises)\r\n            .then(function (providerResults) {\r\n                var modelResults = {\r\n                        hits: [],\r\n                        total: 0\r\n                    };\r\n\r\n                providerResults.forEach(function (providerResult) {\r\n                    modelResults.hits =\r\n                        modelResults.hits.concat(providerResult.hits);\r\n                    modelResults.total += providerResult.total;\r\n                });\r\n\r\n                modelResults = aggregator.orderByScore(modelResults);\r\n                modelResults = aggregator.applyFilter(modelResults, filter);\r\n                modelResults = aggregator.removeDuplicates(modelResults);\r\n\r\n                return aggregator.asObjectResults(modelResults);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Order model results by score descending and return them.\r\n     */\r\n    SearchAggregator.prototype.orderByScore = function (modelResults) {\r\n        modelResults.hits.sort(function (a, b) {\r\n            if (a.score > b.score) {\r\n                return -1;\r\n            } else if (b.score > a.score) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n        return modelResults;\r\n    };\r\n\r\n    /**\r\n     * Apply a filter to each model result, removing it from search results\r\n     * if it does not match.\r\n     */\r\n    SearchAggregator.prototype.applyFilter = function (modelResults, filter) {\r\n        if (!filter) {\r\n            return modelResults;\r\n        }\r\n        var initialLength = modelResults.hits.length,\r\n            finalLength,\r\n            removedByFilter;\r\n\r\n        modelResults.hits = modelResults.hits.filter(function (hit) {\r\n            return filter(hit.model);\r\n        });\r\n\r\n        finalLength = modelResults.hits.length;\r\n        removedByFilter = initialLength - finalLength;\r\n        modelResults.total -= removedByFilter;\r\n\r\n        return modelResults;\r\n    };\r\n\r\n    /**\r\n     * Remove duplicate hits in a modelResults object, and decrement `total`\r\n     * each time a duplicate is removed.\r\n     */\r\n    SearchAggregator.prototype.removeDuplicates = function (modelResults) {\r\n        var includedIds = {};\r\n\r\n        modelResults.hits = modelResults\r\n            .hits\r\n            .filter(function alreadyInResults(hit) {\r\n                if (includedIds[hit.id]) {\r\n                    modelResults.total -= 1;\r\n                    return false;\r\n                }\r\n                includedIds[hit.id] = true;\r\n                return true;\r\n            });\r\n\r\n        return modelResults;\r\n    };\r\n\r\n    /**\r\n     * Convert modelResults to objectResults by fetching them from the object\r\n     * service.\r\n     *\r\n     * @returns {Promise} for an objectResults object.\r\n     */\r\n    SearchAggregator.prototype.asObjectResults = function (modelResults) {\r\n        var objectIds = modelResults.hits.map(function (modelResult) {\r\n            return modelResult.id;\r\n        });\r\n\r\n        return this\r\n            .objectService\r\n            .getObjects(objectIds)\r\n            .then(function (objects) {\r\n\r\n                var objectResults = {\r\n                    total: modelResults.total\r\n                };\r\n\r\n                objectResults.hits = modelResults\r\n                    .hits\r\n                    .map(function asObjectResult(hit) {\r\n                        return {\r\n                            id: hit.id,\r\n                            object: objects[hit.id],\r\n                            score: hit.score\r\n                        };\r\n                    });\r\n\r\n                return objectResults;\r\n            });\r\n    };\r\n\r\n    return SearchAggregator;\r\n});\r\n\n","\ndefine('text!platform/search/res/templates/search-item.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n--> \\r\\n\\r\\n<div class=\"search-result-item l-flex-row flex-elem grows\"\\r\\n     ng-class=\"{selected: ngModel.selectedObject.getId() === domainObject.getId()}\">\\r\\n    <mct-representation key=\"\\'label\\'\"\\r\\n                        mct-object=\"domainObject\"\\r\\n                        ng-model=\"ngModel\"\\r\\n                        ng-click=\"ngModel.selectedObject = domainObject\"\\r\\n                        class=\"l-flex-row flex-elem grows\">\\r\\n    </mct-representation>\\r\\n</div>';});\n\n","\ndefine('text!platform/search/res/templates/search.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n-->\\r\\n<div class=\"angular-w\" ng-controller=\"SearchController as controller\">\\r\\n    <div class=\"l-flex-col flex-elem grows holder holder-search\" ng-controller=\"SearchMenuController as menuController\">\\r\\n        <div class=\"search-bar flex-elem l-flex-row\"\\r\\n             ng-controller=\"ToggleController as toggle\"\\r\\n             ng-class=\"{ holder: !(ngModel.input === \\'\\' || ngModel.input === undefined) }\">\\r\\n            <div class=\"holder flex-elem grows\">\\r\\n                <input class=\"search-input\"\\r\\n                       type=\"text\"\\r\\n                       ng-model=\"ngModel.input\"\\r\\n                       ng-keyup=\"controller.search()\"/>\\r\\n                <a class=\"clear-icon clear-input icon-x-in-circle\"\\r\\n                   ng-class=\"{show: !(ngModel.input === \\'\\' || ngModel.input === undefined)}\"\\r\\n                   ng-click=\"ngModel.input = \\'\\'; controller.search()\"></a>\\r\\n\\r\\n                <!-- To prevent double triggering of clicks on click away, render\\r\\n                non-clickable version of the button when menu active-->\\r\\n                <a ng-if=\"!toggle.isActive()\" class=\"menu-icon context-available\"\\r\\n                   ng-click=\"toggle.toggle()\"></a>\\r\\n                <a ng-if=\"toggle.isActive()\" class=\"menu-icon context-available\"></a>\\r\\n\\r\\n                <mct-include key=\"\\'search-menu\\'\"\\r\\n                             class=\"menu-element search-menu-holder\"\\r\\n                             ng-class=\"{off: !toggle.isActive()}\"\\r\\n                             ng-model=\"ngModel\"\\r\\n                             parameters=\"{menuVisible: toggle.setState}\">\\r\\n                </mct-include>\\r\\n            </div>\\r\\n\\r\\n            <a class=\"holder s-button flex-elem btn-cancel\"\\r\\n               ng-show=\"!(ngModel.input === \\'\\' || ngModel.input === undefined)\"\\r\\n               ng-click=\"ngModel.input = \\'\\'; ngModel.checkAll = true; menuController.checkAll(); controller.search()\">\\r\\n                Cancel</a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\"active-filter-display flex-elem holder\"\\r\\n             ng-class=\"{off: ngModel.filtersString === \\'\\' || ngModel.filtersString === undefined || !ngModel.search}\">\\r\\n            <a class=\"clear-filters icon-x-in-circle s-icon-button\"\\r\\n               ng-click=\"ngModel.checkAll = true; menuController.checkAll()\"></a>Filtered by: {{ ngModel.filtersString }}\\r\\n        </div>\\r\\n\\r\\n        <div class=\"flex-elem holder results-msg\" ng-model=\"ngModel\" ng-show=\"!loading && ngModel.search\">\\r\\n            {{\\r\\n                !results.length > 0? \\'No results found\\':\\r\\n                    results.length + \\' result\\' + (results.length > 1? \\'s\\':\\'\\') + \\' found\\'\\r\\n            }}\\r\\n        </div>\\r\\n\\r\\n        <div class=\"search-results flex-elem holder grows vscroll\"\\r\\n             ng-class=\"{ off: !(loading || results.length > 0), loading: loading }\">\\r\\n            <mct-representation key=\"\\'search-item\\'\"\\r\\n                                ng-repeat=\"result in results\"\\r\\n                                mct-object=\"result.object\"\\r\\n                                ng-model=\"ngModel\"\\r\\n                                class=\"l-flex-row flex-elem grows\">\\r\\n            </mct-representation>\\r\\n            <a class=\"load-more-button s-button vsm\" ng-if=\"controller.areMore()\" ng-click=\"controller.loadMore()\">More Results</a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!platform/search/res/templates/search-menu.html',[],function () { return '<!--\\r\\n Open MCT, Copyright (c) 2014-2016, United States Government\\r\\n as represented by the Administrator of the National Aeronautics and Space\\r\\n Administration. All rights reserved.\\r\\n\\r\\n Open MCT is licensed under the Apache License, Version 2.0 (the\\r\\n \"License\"); you may not use this file except in compliance with the License.\\r\\n You may obtain a copy of the License at\\r\\n http://www.apache.org/licenses/LICENSE-2.0.\\r\\n\\r\\n Unless required by applicable law or agreed to in writing, software\\r\\n distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\\r\\n WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\r\\n License for the specific language governing permissions and limitations\\r\\n under the License.\\r\\n\\r\\n Open MCT includes source code licensed under additional open source\\r\\n licenses. See the Open Source Licenses file (LICENSES.md) included with\\r\\n this source code distribution or the Licensing information page available\\r\\n at runtime from the About dialog for additional information.\\r\\n--> \\r\\n\\r\\n<div ng-controller=\"SearchMenuController as controller\">\\r\\n\\r\\n    <div class=\"menu checkbox-menu\"\\r\\n         mct-click-elsewhere=\"parameters.menuVisible(false)\">\\r\\n        <ul>\\r\\n            <!-- First element is special - it\\'s a reset option -->\\r\\n            <li class=\"search-menu-item special icon-asterisk\"\\r\\n                title=\"Select all filters\"\\r\\n                ng-click=\"ngModel.checkAll = !ngModel.checkAll; controller.checkAll()\">\\r\\n                <label class=\"checkbox custom no-text\">\\r\\n                    <input type=\"checkbox\"\\r\\n                           class=\"checkbox\"\\r\\n                           ng-model=\"ngModel.checkAll\"\\r\\n                           ng-change=\"controller.checkAll()\" />\\r\\n                    <em></em>\\r\\n                </label>\\r\\n\\t\\t\\t\\tAll\\r\\n            </li>\\r\\n\\r\\n            <!-- The filter options, by type -->\\r\\n            <li class=\"search-menu-item {{ type.cssclass }}\"\\r\\n                ng-repeat=\"type in ngModel.types\"\\r\\n                ng-click=\"ngModel.checked[type.key] = !ngModel.checked[type.key]; controller.updateOptions()\">\\r\\n\\r\\n                <label class=\"checkbox custom no-text\">\\r\\n                    <input type=\"checkbox\"\\r\\n                           class=\"checkbox\"\\r\\n                           ng-model=\"ngModel.checked[type.key]\"\\r\\n                           ng-change=\"controller.updateOptions()\" />\\r\\n                    <em></em>\\r\\n                </label>\\r\\n\\t\\t\\t\\t{{ type.name }}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/search/bundle',[\r\n    \"./src/controllers/SearchController\",\r\n    \"./src/controllers/SearchMenuController\",\r\n    \"./src/services/GenericSearchProvider\",\r\n    \"./src/services/SearchAggregator\",\r\n    \"text!./res/templates/search-item.html\",\r\n    \"text!./res/templates/search.html\",\r\n    \"text!./res/templates/search-menu.html\",\r\n    'legacyRegistry'\r\n], function (\r\n    SearchController,\r\n    SearchMenuController,\r\n    GenericSearchProvider,\r\n    SearchAggregator,\r\n    searchItemTemplate,\r\n    searchTemplate,\r\n    searchMenuTemplate,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/search\", {\r\n        \"name\": \"Search\",\r\n        \"description\": \"Allows the user to search through the file tree.\",\r\n        \"extensions\": {\r\n            \"constants\": [\r\n                {\r\n                    \"key\": \"GENERIC_SEARCH_ROOTS\",\r\n                    \"value\": [\r\n                        \"ROOT\"\r\n                    ],\r\n                    \"priority\": \"fallback\"\r\n                }\r\n            ],\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"SearchController\",\r\n                    \"implementation\": SearchController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"searchService\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"key\": \"SearchMenuController\",\r\n                    \"implementation\": SearchMenuController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"types[]\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"representations\": [\r\n                {\r\n                    \"key\": \"search-item\",\r\n                    \"template\": searchItemTemplate\r\n                }\r\n            ],\r\n            \"templates\": [\r\n                {\r\n                    \"key\": \"search\",\r\n                    \"template\": searchTemplate\r\n                },\r\n                {\r\n                    \"key\": \"search-menu\",\r\n                    \"template\": searchMenuTemplate\r\n                }\r\n            ],\r\n            \"components\": [\r\n                {\r\n                    \"provides\": \"searchService\",\r\n                    \"type\": \"provider\",\r\n                    \"implementation\": GenericSearchProvider,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"$log\",\r\n                        \"modelService\",\r\n                        \"workerService\",\r\n                        \"topic\",\r\n                        \"GENERIC_SEARCH_ROOTS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"provides\": \"searchService\",\r\n                    \"type\": \"aggregator\",\r\n                    \"implementation\": SearchAggregator,\r\n                    \"depends\": [\r\n                        \"$q\",\r\n                        \"objectService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"workers\": [\r\n                {\r\n                    \"key\": \"genericSearchWorker\",\r\n                    \"scriptUrl\": \"services/GenericSearchWorker.js\"\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\ndefine('platform/status/src/StatusConstants',{\r\n    CSS_CLASS_PREFIX: 's-status-',\r\n    TOPIC_PREFIX: 'status:'\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/status/src/StatusRepresenter',['./StatusConstants'],\r\n    function (StatusConstants) {\r\n\r\n        var STATUS_CLASS_PREFIX = StatusConstants.CSS_CLASS_PREFIX;\r\n\r\n        /**\r\n         * Adds/removes CSS classes to `mct-representation`s to reflect the\r\n         * current status of represented domain objects, as reported by\r\n         * their `status` capability.\r\n         *\r\n         * Statuses are prefixed with `s-status-` to build CSS class names.\r\n         * As such, when a domain object has the status \"pending\", its\r\n         * representations will have the CSS class `s-status-pending`.\r\n         *\r\n         * @param {angular.Scope} scope the representation's scope object\r\n         * @param element the representation's jqLite-wrapped DOM element\r\n         * @implements {Representer}\r\n         * @constructor\r\n         * @memberof platform/status\r\n         */\r\n        function StatusRepresenter(scope, element) {\r\n            this.element = element;\r\n            this.lastClasses = [];\r\n        }\r\n\r\n        /**\r\n         * Remove any status-related classes from this representation.\r\n         * @private\r\n         */\r\n        StatusRepresenter.prototype.clearClasses = function () {\r\n            var element = this.element;\r\n            this.lastClasses.forEach(function (c) {\r\n                element.removeClass(c);\r\n            });\r\n        };\r\n\r\n        StatusRepresenter.prototype.represent = function (representation, domainObject) {\r\n            var self = this,\r\n                statusCapability = domainObject.getCapability('status');\r\n\r\n            function updateStatus(flags) {\r\n                var newClasses = flags.map(function (flag) {\r\n                    return STATUS_CLASS_PREFIX + flag;\r\n                });\r\n\r\n                self.clearClasses();\r\n\r\n                newClasses.forEach(function (c) {\r\n                    self.element.addClass(c);\r\n                });\r\n\r\n                self.lastClasses = newClasses;\r\n            }\r\n\r\n            updateStatus(statusCapability.list());\r\n            this.unlisten = statusCapability.listen(updateStatus);\r\n        };\r\n\r\n        StatusRepresenter.prototype.destroy = function () {\r\n            this.clearClasses();\r\n            if (this.unlisten) {\r\n                this.unlisten();\r\n                this.unlisten = undefined;\r\n            }\r\n        };\r\n\r\n\r\n        return StatusRepresenter;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/status/src/StatusCapability',[],\r\n    function () {\r\n\r\n        /**\r\n         * The `status` capability can be used to attach information\r\n         * about the state of a domain object, expressed as simple\r\n         * string flags.\r\n         *\r\n         * Representations of domain objects will also receive CSS\r\n         * classes which reflect their current status.\r\n         * (@see platform/status.StatusRepresenter)\r\n         *\r\n         * @param {platform/status.StatusService} statusService\r\n         *        the service which will track domain object status\r\n         *        within the application.\r\n         * @param {DomainObject} the domain object whose status will\r\n         *        be tracked.\r\n         * @constructor\r\n         * @memberof platform/status\r\n         */\r\n        function StatusCapability(statusService, domainObject) {\r\n            this.statusService = statusService;\r\n            this.domainObject = domainObject;\r\n        }\r\n\r\n        /**\r\n         * List all status flags currently set for this domain object.\r\n         * @returns {string[]} all current status flags.\r\n         */\r\n        StatusCapability.prototype.list = function () {\r\n            return this.statusService.listStatuses(this.domainObject.getId());\r\n        };\r\n\r\n        /**\r\n         * Check if a status flag is currently set for this domain object.\r\n         * @param {string} status the status to get\r\n         * @returns {boolean} true if the flag is present, otherwise false\r\n         */\r\n        StatusCapability.prototype.get = function (status) {\r\n            return this.list().indexOf(status) !== -1;\r\n        };\r\n\r\n        /**\r\n         * Set a status flag on this domain object.\r\n         * @param {string} status the status to set\r\n         * @param {boolean} state true if the domain object should\r\n         *        possess this status, false if it should not\r\n         */\r\n        StatusCapability.prototype.set = function (status, state) {\r\n            return this.statusService.setStatus(\r\n                this.domainObject.getId(),\r\n                status,\r\n                state\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Listen for changes in this domain object's status.\r\n         * @param {Function} callback function to invoke on changes;\r\n         *        called with the new status of the domain object, as an\r\n         *        array of strings\r\n         * @returns {Function} a function which can be used to stop\r\n         *          listening to status changes for this domain object.\r\n         */\r\n        StatusCapability.prototype.listen = function (callback) {\r\n            return this.statusService.listen(\r\n                this.domainObject.getId(),\r\n                callback\r\n            );\r\n        };\r\n\r\n        return StatusCapability;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/status/src/StatusService',['./StatusConstants'],\r\n    function (StatusConstants) {\r\n\r\n        var STATUS_PREFIX = StatusConstants.TOPIC_PREFIX;\r\n\r\n        /**\r\n         * The `statusService` maintains information about the current\r\n         * status of specific domain objects within the system. Status\r\n         * is represented as string flags which are present when a\r\n         * domain object possesses that status, and false when it does\r\n         * not.\r\n         *\r\n         * @param {platform/core.Topic} topic the `topic` service, used\r\n         *        to create/use named listeners.\r\n         * @constructor\r\n         * @memberof platform/status\r\n         */\r\n        function StatusService(topic) {\r\n            this.statusTable = {};\r\n            this.topic = topic;\r\n        }\r\n\r\n        /**\r\n         * Get all status flags currently set for a domain object.\r\n         * @param {string} id the identifier of the domain object\r\n         * @returns {string[]} an array containing all status flags currently\r\n         *          applicable to the object with this identifier\r\n         */\r\n        StatusService.prototype.listStatuses = function (id) {\r\n            return this.statusTable[id] || [];\r\n        };\r\n\r\n        /**\r\n         * Set a status flag for a domain object.\r\n         * @param {string} id the identifier of the domain object\r\n         * @param {string} status the status to set\r\n         * @param {boolean} state true if the domain object should\r\n         *        possess this status, false if it should not\r\n         */\r\n        StatusService.prototype.setStatus = function (id, status, state) {\r\n            this.statusTable[id] = this.statusTable[id] || [];\r\n            this.statusTable[id] = this.statusTable[id].filter(function (s) {\r\n                return s !== status;\r\n            });\r\n            if (state) {\r\n                this.statusTable[id].push(status);\r\n            }\r\n            this.topic(STATUS_PREFIX + id).notify(this.statusTable[id]);\r\n        };\r\n\r\n        /**\r\n         * Listen for changes in a domain object's status.\r\n         * @param {string} id the identifier of the domain object\r\n         * @param {Function} callback function to invoke on changes;\r\n         *        called with the new status of the domain object, as an\r\n         *        array of strings\r\n         * @returns {Function} a function which can be used to stop\r\n         *          listening to status changes for this domain object.\r\n         */\r\n        StatusService.prototype.listen = function (id, callback) {\r\n            return this.topic(STATUS_PREFIX + id).listen(callback);\r\n        };\r\n\r\n        return StatusService;\r\n\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/status/bundle',[\r\n    \"./src/StatusRepresenter\",\r\n    \"./src/StatusCapability\",\r\n    \"./src/StatusService\",\r\n    'legacyRegistry'\r\n], function (\r\n    StatusRepresenter,\r\n    StatusCapability,\r\n    StatusService,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/status\", {\r\n        \"extensions\": {\r\n            \"representers\": [\r\n                {\r\n                    \"implementation\": StatusRepresenter\r\n                }\r\n            ],\r\n            \"capabilities\": [\r\n                {\r\n                    \"key\": \"status\",\r\n                    \"implementation\": StatusCapability,\r\n                    \"depends\": [\r\n                        \"statusService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"services\": [\r\n                {\r\n                    \"key\": \"statusService\",\r\n                    \"implementation\": StatusService,\r\n                    \"depends\": [\r\n                        \"topic\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/regions/src/InspectorController',['../../browse/src/InspectorRegion'],\r\n    function (InspectorRegion) {\r\n\r\n        /**\r\n         * The InspectorController adds region data for a domain object's type\r\n         * to the scope.\r\n         *\r\n         * @constructor\r\n         */\r\n        function InspectorController($scope, policyService) {\r\n            var domainObject = $scope.domainObject,\r\n                typeCapability = domainObject.getCapability('type'),\r\n                statusListener;\r\n\r\n            /**\r\n             * Filters region parts to only those allowed by region policies\r\n             * @param regions\r\n             * @returns {{}}\r\n             */\r\n            function filterRegions(inspector) {\r\n                //Dupe so we're not modifying the type definition.\r\n                return inspector.regions && inspector.regions.filter(function (region) {\r\n                    return policyService.allow('region', region, domainObject);\r\n                });\r\n            }\r\n\r\n            function setRegions() {\r\n                $scope.regions = filterRegions(typeCapability.getDefinition().inspector || new InspectorRegion());\r\n            }\r\n\r\n            statusListener = domainObject.getCapability(\"status\").listen(setRegions);\r\n            $scope.$on(\"$destroy\", function () {\r\n                statusListener();\r\n            });\r\n\r\n            setRegions();\r\n        }\r\n\r\n        return InspectorController;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine(\r\n    'platform/commonUI/regions/src/EditableRegionPolicy',[],\r\n    function () {\r\n\r\n        /**\r\n         * A policy for determining whether a region part should be visible or\r\n         * not, based on its editability and the current state of the domain\r\n         * object .\r\n         * @constructor\r\n         * @implements {Policy}\r\n         * @memberof platform/commonUI/regions\r\n         */\r\n        function EditableRegionPolicy() {\r\n        }\r\n\r\n        EditableRegionPolicy.prototype.allow = function (regionPart, domainObject) {\r\n            if (!regionPart.modes) {\r\n                return true;\r\n            }\r\n            if (domainObject.hasCapability('editor') && domainObject.getCapability('editor').inEditContext()) {\r\n                //If the domain object is in edit mode, only include a part\r\n                // if it is marked editable\r\n                return regionPart.modes.indexOf('edit') !== -1;\r\n            } else {\r\n                //If the domain object is not in edit mode, return any parts\r\n                // that are not explicitly marked editable\r\n                return regionPart.modes.indexOf('browse') !== -1;\r\n            }\r\n        };\r\n\r\n        return EditableRegionPolicy;\r\n    }\r\n);\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\ndefine('platform/commonUI/regions/bundle',[\r\n    './src/InspectorController',\r\n    './src/EditableRegionPolicy',\r\n    'legacyRegistry'\r\n], function (\r\n    InspectorController,\r\n    EditableRegionPolicy,\r\n    legacyRegistry\r\n) {\r\n\r\n    legacyRegistry.register(\"platform/commonUI/regions\", {\r\n        \"extensions\": {\r\n            \"controllers\": [\r\n                {\r\n                    \"key\": \"InspectorController\",\r\n                    \"implementation\": InspectorController,\r\n                    \"depends\": [\r\n                        \"$scope\",\r\n                        \"policyService\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"policies\": [\r\n                {\r\n                    \"category\": \"region\",\r\n                    \"implementation\": EditableRegionPolicy\r\n                }\r\n            ]\r\n        }\r\n    });\r\n});\r\n\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n/*global requirejs*/\r\n\r\nrequirejs.config({\r\n    \"paths\": {\r\n        \"legacyRegistry\": \"src/legacyRegistry\",\r\n        \"angular\": \"bower_components/angular/angular.min\",\r\n        \"angular-route\": \"bower_components/angular-route/angular-route.min\",\r\n        \"csv\": \"bower_components/comma-separated-values/csv.min\",\r\n        \"es6-promise\": \"bower_components/es6-promise/promise.min\",\r\n        \"moment\": \"bower_components/moment/moment\",\r\n        \"moment-duration-format\": \"bower_components/moment-duration-format/lib/moment-duration-format\",\r\n        \"saveAs\": \"bower_components/FileSaver.js/FileSaver.min\",\r\n        \"screenfull\": \"bower_components/screenfull/dist/screenfull.min\",\r\n        \"text\": \"bower_components/text/text\",\r\n        \"uuid\": \"bower_components/node-uuid/uuid\",\r\n        \"zepto\": \"bower_components/zepto/zepto.min\"\r\n    },\r\n    \"shim\": {\r\n        \"angular\": {\r\n            \"exports\": \"angular\"\r\n        },\r\n        \"angular-route\": {\r\n            \"deps\": [\"angular\"]\r\n        },\r\n        \"moment-duration-format\": {\r\n            \"deps\": [\"moment\"]\r\n        },\r\n        \"screenfull\": {\r\n            \"exports\": \"screenfull\"\r\n        },\r\n        \"zepto\": {\r\n            \"exports\": \"Zepto\"\r\n        }\r\n    }\r\n});\r\n\r\ndefine('main',[\r\n    './platform/framework/src/Main',\r\n    'legacyRegistry',\r\n\r\n    './platform/framework/bundle',\r\n    './platform/core/bundle',\r\n    './platform/representation/bundle',\r\n    './platform/commonUI/about/bundle',\r\n    './platform/commonUI/browse/bundle',\r\n    './platform/commonUI/edit/bundle',\r\n    './platform/commonUI/dialog/bundle',\r\n    './platform/commonUI/formats/bundle',\r\n    './platform/commonUI/general/bundle',\r\n    './platform/commonUI/inspect/bundle',\r\n    './platform/commonUI/mobile/bundle',\r\n    './platform/commonUI/themes/espresso/bundle',\r\n    './platform/commonUI/notification/bundle',\r\n    './platform/containment/bundle',\r\n    './platform/execution/bundle',\r\n    './platform/exporters/bundle',\r\n    './platform/telemetry/bundle',\r\n    './platform/features/clock/bundle',\r\n    './platform/features/fixed/bundle',\r\n    './platform/features/imagery/bundle',\r\n    './platform/features/layout/bundle',\r\n    './platform/features/pages/bundle',\r\n    './platform/features/plot/bundle',\r\n    './platform/features/timeline/bundle',\r\n    './platform/features/table/bundle',\r\n    './platform/forms/bundle',\r\n    './platform/identity/bundle',\r\n    './platform/persistence/aggregator/bundle',\r\n    './platform/persistence/local/bundle',\r\n    './platform/persistence/queue/bundle',\r\n    './platform/policy/bundle',\r\n    './platform/entanglement/bundle',\r\n    './platform/search/bundle',\r\n    './platform/status/bundle',\r\n    './platform/commonUI/regions/bundle'\r\n], function (Main, legacyRegistry) {\r\n    return {\r\n        legacyRegistry: legacyRegistry,\r\n        run: function () {\r\n            return new Main().run(legacyRegistry);\r\n        }\r\n    };\r\n});\r\n\n"],"sourceRoot":"/source/"}