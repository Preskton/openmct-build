{"version":3,"file":"platform/features/timeline/res/css/timeline.css","sources":["platform/features/timeline/res/sass/timeline.scss","node_modules/bourbon/app/assets/stylesheets/_bourbon.scss","node_modules/bourbon/app/assets/stylesheets/settings/_prefixer.scss","node_modules/bourbon/app/assets/stylesheets/settings/_px-to-em.scss","node_modules/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss","node_modules/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss","node_modules/bourbon/app/assets/stylesheets/functions/_contains.scss","node_modules/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss","node_modules/bourbon/app/assets/stylesheets/functions/_is-length.scss","node_modules/bourbon/app/assets/stylesheets/functions/_is-light.scss","node_modules/bourbon/app/assets/stylesheets/functions/_is-number.scss","node_modules/bourbon/app/assets/stylesheets/functions/_is-size.scss","node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss","node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","node_modules/bourbon/app/assets/stylesheets/functions/_shade.scss","node_modules/bourbon/app/assets/stylesheets/functions/_strip-units.scss","node_modules/bourbon/app/assets/stylesheets/functions/_tint.scss","node_modules/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss","node_modules/bourbon/app/assets/stylesheets/functions/_unpack.scss","node_modules/bourbon/app/assets/stylesheets/functions/_modular-scale.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_convert-units.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_directional-values.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss","node_modules/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss","node_modules/bourbon/app/assets/stylesheets/css3/_animation.scss","node_modules/bourbon/app/assets/stylesheets/css3/_appearance.scss","node_modules/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss","node_modules/bourbon/app/assets/stylesheets/css3/_background.scss","node_modules/bourbon/app/assets/stylesheets/css3/_background-image.scss","node_modules/bourbon/app/assets/stylesheets/css3/_border-image.scss","node_modules/bourbon/app/assets/stylesheets/css3/_calc.scss","node_modules/bourbon/app/assets/stylesheets/css3/_columns.scss","node_modules/bourbon/app/assets/stylesheets/css3/_filter.scss","node_modules/bourbon/app/assets/stylesheets/css3/_flex-box.scss","node_modules/bourbon/app/assets/stylesheets/css3/_font-face.scss","node_modules/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss","node_modules/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss","node_modules/bourbon/app/assets/stylesheets/css3/_hyphens.scss","node_modules/bourbon/app/assets/stylesheets/css3/_image-rendering.scss","node_modules/bourbon/app/assets/stylesheets/css3/_keyframes.scss","node_modules/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss","node_modules/bourbon/app/assets/stylesheets/css3/_perspective.scss","node_modules/bourbon/app/assets/stylesheets/css3/_placeholder.scss","node_modules/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss","node_modules/bourbon/app/assets/stylesheets/css3/_selection.scss","node_modules/bourbon/app/assets/stylesheets/css3/_text-decoration.scss","node_modules/bourbon/app/assets/stylesheets/css3/_transform.scss","node_modules/bourbon/app/assets/stylesheets/css3/_transition.scss","node_modules/bourbon/app/assets/stylesheets/css3/_user-select.scss","node_modules/bourbon/app/assets/stylesheets/addons/_border-color.scss","node_modules/bourbon/app/assets/stylesheets/addons/_border-radius.scss","node_modules/bourbon/app/assets/stylesheets/addons/_border-style.scss","node_modules/bourbon/app/assets/stylesheets/addons/_border-width.scss","node_modules/bourbon/app/assets/stylesheets/addons/_buttons.scss","node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","node_modules/bourbon/app/assets/stylesheets/addons/_ellipsis.scss","node_modules/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","node_modules/bourbon/app/assets/stylesheets/addons/_hide-text.scss","node_modules/bourbon/app/assets/stylesheets/addons/_margin.scss","node_modules/bourbon/app/assets/stylesheets/addons/_padding.scss","node_modules/bourbon/app/assets/stylesheets/addons/_position.scss","node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss","node_modules/bourbon/app/assets/stylesheets/addons/_retina-image.scss","node_modules/bourbon/app/assets/stylesheets/addons/_size.scss","node_modules/bourbon/app/assets/stylesheets/addons/_text-inputs.scss","node_modules/bourbon/app/assets/stylesheets/addons/_timing-functions.scss","node_modules/bourbon/app/assets/stylesheets/addons/_triangle.scss","node_modules/bourbon/app/assets/stylesheets/addons/_word-wrap.scss","node_modules/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss","platform/commonUI/general/res/sass/_constants.scss","platform/commonUI/general/res/sass/_mixins.scss","platform/commonUI/themes/espresso/res/sass/_constants.scss","platform/commonUI/themes/espresso/res/sass/_mixins.scss","platform/features/timeline/res/sass/_constants.scss","platform/features/timeline/res/sass/_activities.scss","platform/features/timeline/res/sass/_timelines.scss"],"sourcesContent":["/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n@import \"bourbon\";\r\n\r\n@import \"../../../../commonUI/general/res/sass/constants\";\r\n@import \"../../../../commonUI/general/res/sass/mixins\";\r\n@import \"../../../../commonUI/themes/espresso/res/sass/constants\";\r\n@import \"../../../../commonUI/themes/espresso/res/sass/mixins\";\r\n@import \"constants\";\r\n@import \"activities\";\r\n@import \"timelines\";\r\n","// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n","@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n","$em-base: 16px !default;\n","@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n","@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n","@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n/************************** FEATURES */\r\n$enableImageryThumbs: false; // Set to true if historical imagery thumbnails are supported\r\n\r\n/************************** VERY INFLUENTIAL GLOBAL DIMENSIONS */\r\n$bodyMargin: 10px;\r\n$interiorMargin: 5px;\r\n$interiorMarginLg: $interiorMargin * 2;\r\n$interiorMarginSm: 3px;\r\n$badgeW: 35px;\r\n\r\n/************************** RATIOS */\r\n$ltGamma: 20%;\r\n$btnFontSizeToH: 0.45;\r\n\r\n/************************** LAYOUT */\r\n$ueTopBarH: 24px;\r\n$ueTopBarEditH: 30px;\r\n$ueTopBarBtnH: 35px;\r\n$ueFooterH: 25px;\r\n$ueColMargin: 1.5%;\r\n$ueAppLogoW: 80px;\r\n$ueEditToolBarH: 25px;\r\n$ueCollapsedPaneEdgeM: 22px;\r\n$uePaneMiniTabH: 22px;\r\n$uePaneMiniTabW: 8px;\r\n$uePaneMiniTabFontSize: 8px;\r\n$uePaneMiniTabCollapsedW: 18px;\r\n$ueEditLeftPaneW: 75%;\r\n$treeSearchInputBarH: 25px;\r\n$ueTimeControlH: (33px, 18px, 20px);\r\n/*************** Panes */\r\n$ueBrowseLeftPaneTreeMinW: 150px;\r\n$ueBrowseLeftPaneTreeMaxW: 35%;\r\n$ueBrowseLeftPaneTreeW: 25%;\r\n$ueBrowseRightPaneInspectMinW: 200px;\r\n$ueBrowseRightPaneInspectMaxW: 35%;\r\n$ueBrowseRightPaneInspectW: 20%;\r\n$ueDesktopMinW: 600px;\r\n/*************** Overlay */\r\n$ovrTopBarH: 45px;\r\n$ovrFooterH: 24px;\r\n$overlayMargin: 25px;\r\n/*************** Items */\r\n$ueBrowseGridItemLg: 200px;\r\n$ueBrowseGridItemTopBarH: 20px;\r\n$ueBrowseGridItemBottomBarH: 30px;\r\n$itemPadLR: 5px;\r\n/*************** Tree */\r\n$treeVCW: 10px;\r\n$treeTypeIconH: 1.4em; // was 16px\r\n$treeTypeIconHPx: 16px;\r\n$treeTypeIconW: 18px;\r\n$treeContextTriggerW: 20px;\r\n/*************** Tabular */\r\n$tabularHeaderH: 22px;\r\n$tabularTdPadLR: $itemPadLR;\r\n$tabularTdPadTB: 3px;\r\n/*************** Imagery */\r\n$imageMainControlBarH: 25px;\r\n$imageThumbsD: 120px;\r\n$imageThumbsWrapperH: $imageThumbsD * 1.4;\r\n$imageThumbPad: 1px;\r\n/*************** Ticks */\r\n$ticksH: 25px;\r\n$tickLblVMargin: 3px;\r\n$tickLblH: 15px;\r\n$tickLblW: 50px;\r\n$tickH: $ticksH - $tickLblVMargin - $tickLblH;\r\n$tickW: 1px;\r\n/*************** Plots */\r\n$plotYBarW: 60px;\r\n$plotYLabelMinH: 20px;\r\n$plotYLabelW: 10px;\r\n$plotXBarH: 32px;\r\n$plotLegendH: 20px;\r\n$plotSwatchD: 8px;\r\n// 1: Top, 2: right, 3: bottom, 4: left\r\n$plotDisplayArea: ($plotLegendH + $interiorMargin, 0, $plotXBarH + $interiorMargin, $plotYBarW);\r\n/* min plot height is based on user testing to find minimum useful height */\r\n$plotMinH: 95px;\r\n/*************** Bubbles */\r\n$bubbleArwSize: 10px;\r\n$bubblePad: $interiorMargin;\r\n$bubbleMinW: 100px;\r\n$bubbleMaxW: 300px;\r\n/*************** Forms */\r\n$reqSymbolW: 15px;\r\n$reqSymbolM: $interiorMargin * 2;\r\n$reqSymbolFontSize: 0.75em;\r\n/*************** Wait Spinner Defaults */\r\n$waitSpinnerD: 32px;\r\n$waitSpinnerTreeD: 20px;\r\n$waitSpinnerBorderW: 5px;\r\n$waitSpinnerTreeBorderW: 4px;\r\n\r\n/************************** CONTROLS */\r\n$controlDisabledOpacity: 0.3;\r\n$formLabelW: 30%;\r\n$formInputH: 22px;\r\n$formRowCtrlsH: 14px;\r\n$formTBPad: $interiorMargin;\r\n$formLRPad: $interiorMargin;\r\n$menuLineH: 1.5rem;\r\n$menuLineHPx: 24px;\r\n$btnStdH: 25px;\r\n$btnToolbarH: $btnStdH;\r\n$btnFrameH: 16px;\r\n\r\n/************************** PATHS */\r\n// Paths need to be relative to /platform/commonUI/theme/<theme-name>/css/ directory\r\n$dirCommonRes: '../../../../general/res/';\r\n$dirImgs: $dirCommonRes + 'images/';\r\n\r\n/************************** TIMINGS */\r\n$controlFadeMs: 100ms;\r\n$browseToEditAnimMs: 400ms;\r\n$editBorderPulseMs: 500ms;\r\n","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n\r\n@mixin absPosDefault($offset: 0px, $overflowHidden: hidden) {\r\n    overflow: $overflowHidden;\r\n    position: absolute;\r\n    top: $offset;\r\n    right: $offset;\r\n    bottom: $offset;\r\n    left: $offset;\r\n    width: auto;\r\n    height: auto;\r\n}\r\n\r\n@mixin ancillaryIcon($d, $c) {\r\n    // Used for small icons used in combination with larger icons,\r\n    // like the link and alert icons in tree items.\r\n    color: $c;\r\n    font-size: $d;\r\n    line-height: $d;\r\n    height: $d;\r\n    width: $d;\r\n}\r\n\r\n@mixin trans-prop-nice($props, $dur: 500ms, $delay: 0) {\r\n    // Multiple $props must be in parans like this: (left, right)\r\n    @if $dur == 0 {\r\n        @include transition-property(none);\r\n    } @else {\r\n        @include transition-property($props);\r\n        @include transition-duration($dur);\r\n        @include transition-timing-function(ease-in-out);\r\n        @include transition-delay($delay);\r\n    }\r\n}\r\n\r\n@mixin trans-prop-nice-fade($dur: 500ms, $delay: 0) {\r\n    @if $dur == 0 {\r\n        @include transition-property(none);\r\n    } @else {\r\n        @include transition-property(opacity, background-color, border-color, color);\r\n        @include transition-duration($dur);\r\n        @include transition-timing-function(ease-in-out);\r\n        @include transition-delay($delay);\r\n    }\r\n}\r\n\r\n@mixin trans-prop-nice-resize($t: 0.5s, $tf: ease-in-out) {\r\n    @include transition-property(height, width, top, right, bottom, left, opacity);\r\n    @include transition-duration($t);\r\n    @include transition-timing-function($tf);\r\n}\r\n\r\n@mixin trans-prop-nice-resize-h($dur: 500ms, $delay: 0) {\r\n    @include transition-property(height, bottom, top);\r\n    @include transition-duration($dur);\r\n    @include transition-timing-function(ease-in-out);\r\n    @include transition-delay($delay);\r\n}\r\n\r\n@mixin trans-prop-nice-resize-w($dur: 500ms, $delay: 0) {\r\n    @include transition-property(width, left, right);\r\n    @include transition-duration($dur);\r\n    @include transition-timing-function(ease-in-out);\r\n    @include transition-delay($delay);\r\n}\r\n\r\n@mixin triangle-right($size, $color) {\r\n    $size: $size/2;\r\n    $ratio: 1;\r\n    width: 0;\r\n    height: 0;\r\n    border-top: $size/$ratio solid transparent;\r\n    border-left: $size solid $color;\r\n    border-bottom: $size/$ratio solid transparent;\r\n}\r\n\r\n@mixin triangle-down($size, $color) {\r\n    $size: $size/2;\r\n    $ratio: 1;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: $size/$ratio solid transparent;\r\n    border-top: $size solid $color;\r\n    border-right: $size/$ratio solid transparent;\r\n}\r\n\r\n@mixin triangle($dir: \"left\", $size: 5px, $ratio: 1, $color: red) {\r\n    width: 0;\r\n    height: 0;\r\n    $slopedB: $size/$ratio solid transparent;\r\n    $straightB: $size solid $color;\r\n    @if $dir == \"up\" {\r\n        border-left: $slopedB;\r\n        border-right: $slopedB;\r\n        border-bottom: $straightB;\r\n    } @else if $dir == \"right\" {\r\n        border-top: $slopedB;\r\n        border-bottom: $slopedB;\r\n        border-left: $straightB;\r\n    } @else if $dir == \"down\" {\r\n        border-left: $slopedB;\r\n        border-right: $slopedB;\r\n        border-top: $straightB;\r\n    } @else {\r\n        border-top: $slopedB;\r\n        border-bottom: $slopedB;\r\n        border-right: $straightB;\r\n    }\r\n}\r\n\r\n@mixin bgDiagonalStripes($c: yellow, $a: 0.1, $d: 40px) {\r\n    @include background-image(linear-gradient(-45deg,\r\n        rgba($c, $a) 25%, transparent 25%,\r\n        transparent 50%, rgba($c, $a) 50%,\r\n        rgba($c, $a) 75%, transparent 75%,\r\n        transparent 100%\r\n    ));\r\n    background-repeat: repeat;\r\n    background-size: $d $d;\r\n}\r\n\r\n@mixin bgStripes($c: yellow, $a: 0.1, $bgsize: 5px, $angle: 90deg) {\r\n    @include background-image(linear-gradient($angle,\r\n        rgba($c, $a) 25%, transparent 25%,\r\n        transparent 50%, rgba($c, $a) 50%,\r\n        rgba($c, $a) 75%, transparent 75%,\r\n        transparent 100%\r\n    ));\r\n    background-repeat: repeat;\r\n    background-size: $bgsize $bgsize;\r\n}\r\n\r\n@mixin bgVertStripes($c: yellow, $a: 0.1, $d: 40px) {\r\n    @include background-image(linear-gradient(-90deg,\r\n        rgba($c, $a) 0%, rgba($c, $a) 50%,\r\n        transparent 50%, transparent 100%\r\n    ));\r\n    background-repeat: repeat;\r\n    background-size: $d $d;\r\n}\r\n\r\n@mixin bgVertFuzzyStripes($c: yellow, $a: 0.1, $d: 40px) {\r\n    @include background-image(linear-gradient(-90deg,\r\n        rgba($c, $a) 0%, transparent 50%,\r\n        transparent 50%, rgba($c, $a) 100%\r\n    ));\r\n    background-repeat: repeat;\r\n    background-size: $d $d;\r\n}\r\n\r\n@mixin bgTicks($c: $colorBodyFg, $repeatDir: 'x') {\r\n    $deg: 90deg;\r\n    @if ($repeatDir != 'x') {\r\n        $deg: 0deg;\r\n        $repeatDir: repeat-y;\r\n    } @else {\r\n        $repeatDir: repeat-x;\r\n    }\r\n\r\n    @include background-image(linear-gradient($deg,\r\n        $c 1px, transparent 1px,\r\n        transparent 100%\r\n    ));\r\n    background-repeat: $repeatDir;\r\n}\r\n\r\n@mixin sliderTrack($bg: $scrollbarTrackColorBg) {\r\n    //$b: 1px solid lighten($bg, 30%);\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    @include boxIncised(0.7);\r\n    background-color: $bg;\r\n    //border-bottom: $b;\r\n    //border-right: $b;\r\n}\r\n\r\n@mixin controlGrippy($b, $direction: horizontal, $w: 1px, $style: dotted) {\r\n    //&:before {\r\n    //@include trans-prop-nice(\"border-color\", 25ms);\r\n    content: '';\r\n    display: block;\r\n    //height: auto;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    z-index: 2;\r\n\r\n    @if $direction == \"horizontal\" {\r\n        border-top: $w $style darken($b, 15%);\r\n        top: 2px;\r\n        left: 5px;\r\n        right: 5px;\r\n        height: 1px;\r\n\r\n    } @else if $direction == \"vertical\" {\r\n        border-left: $w $style darken($b, 15%);\r\n        left: 2px;\r\n        bottom: 5px;\r\n        top: 5px;\r\n        width: 1px;\r\n    }\r\n}\r\n\r\n@mixin boxIncised($sVal: 0.6, $inset: 5px) {\r\n    box-shadow: inset rgba(black, $sVal) 0 1px $inset;\r\n}\r\n\r\n@mixin boxOutline($c: lighten($colorBodyBg, 20%)) {\r\n    border: 1px solid $c;\r\n}\r\n\r\n@mixin boxShdw($sVal: rgba(black, 0.4) 0 0 3px) {\r\n\t@if $sVal != 'none' {\r\n\t\tbox-shadow: $sVal;\r\n\t}\r\n}\r\n\r\n@mixin boxShdwSubtle($sVal: 0.2) {\r\n\t@if $sVal != 'none' {\r\n\t\tbox-shadow: rgba(black, $sVal) 0 1px 2px;\r\n\t}\r\n}\r\n\r\n@mixin boxShdwLarge($sVal: 0.7) {\r\n\t@if $sVal != 'none' {\r\n\t\tbox-shadow: rgba(black, $sVal) 0 3px 10px;\r\n\t}\r\n}\r\n\r\n@mixin outerGlow($color: #fff, $sVal: 0.3) {\r\n    box-shadow: rgba($color, $sVal) 0 0 30px;\r\n}\r\n\r\n@mixin linearGlow($deg: 0, $c: red, $a: 0.4) {\r\n    @include background-image(linear-gradient($deg, rgba($c, 0), rgba($c, $a) 100%));\r\n}\r\n\r\n@mixin subtleGrad($deg: 0, $c: red, $a0: 0.2, $a1: 0.3) {\r\n    @include background-image(linear-gradient($deg, rgba($c, $a0), rgba($c, $a1) 100%));\r\n}\r\n\r\n@mixin txtShdw($sVal) {\r\n\t//@if $sVal != 'none' {\r\n\t\ttext-shadow: $sVal;\r\n\t//}\r\n}\r\n\r\n@mixin txtShdwSubtle($sVal: 0.1) {\r\n\t@if $sVal != 'none' {\r\n\t    text-shadow: rgba(black, $sVal) 0 1px 2px;\r\n\t}\r\n}\r\n\r\n@mixin txtShdwLarge($sVal: 0.7) {\r\n    text-shadow: rgba(black, $sVal) 0 3px 7px;\r\n}\r\n\r\n@function pullForward($c, $p: 20%) {\r\n    // For dark interfaces, lighter things come forward\r\n    @return lighten($c, $p);\r\n}\r\n\r\n@function pushBack($c, $p: 20%) {\r\n    // For dark interfaces, darker things move back\r\n    @return darken($c, $p);\r\n}\r\n\r\n@function percentToDecimal($p) {\r\n\t@return $p / 100%;\r\n}\r\n\r\n@function decimalToPercent($d) {\r\n\t@return percentage($d);\r\n}\r\n\r\n@function splitterHandleInset($splitterD: 21px, $splitterHandleD: 1px) {\r\n    // Space to either side of the handle\r\n    @return ($splitterD - $splitterHandleD) / 2;\r\n}\r\n\r\n/*********************************************** CONTROLS, FORM ELEMENTS */\r\n\r\n@mixin containerBase($bg: $colorBodyBg, $fg: $colorBodyFg) {\r\n\tbackground-color: $bg;\r\n\tborder-radius: $controlCr;\r\n\tbox-sizing: border-box;\r\n\tcolor: $fg;\r\n\t//display: inline-block;\r\n}\r\n\r\n@mixin btnBase($bg: $colorBtnBg, $bgHov: $colorBtnBgHov, $fg: $colorBtnFg, $fgHov: $colorBtnFgHov, $ic: $colorBtnIcon, $icHov: $colorBtnIconHov) {\r\n\t@include user-select(none);\r\n    color: $fg;\r\n\t.icon,\r\n    &:before {\r\n\t\tcolor: $ic;\r\n\t}\r\n  @if $bgHov != none {\r\n      &:not(.disabled):hover {\r\n          background: $bgHov;\r\n          color: $fgHov;\r\n          >.icon,\r\n          &:before {\r\n              color: $icHov;\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n@mixin btnSubtle($bg: $colorBtnBg, $bgHov: $colorBtnBgHov, $fg: $colorBtnFg, $fgHov: $colorBtnFgHov, $ic: $colorBtnIcon, $icHov: $colorBtnIconHov) {\r\n    @include containerSubtle($bg, $fg);\r\n    @include btnBase($bgHov: $bgHov, $fg: $fg, $fgHov: $fgHov, $ic: $ic, $icHov: $icHov);\r\n    text-shadow: $shdwItemText;\r\n}\r\n\r\n@mixin input-base($bg: $colorInputBg, $fg: $colorInputFg, $shdw: rgba(black, 0.6) 0 1px 3px) {\r\n\t@include appearance(none);\r\n\tborder-radius: $controlCr;\r\n\tbox-sizing: border-box;\r\n\tbox-shadow: inset $shdw;\r\n\tbackground: $bg;\r\n\tborder: none;\r\n\tcolor: $fg;\r\n\toutline: none;\r\n\t&.error {\r\n\t\tbackground-color: $colorFormFieldErrorBg;\r\n        color: $colorFormFieldErrorFg;\r\n\t}\r\n}\r\n\r\n@mixin nice-input($bg: $colorInputBg, $fg: $colorInputFg) {\r\n\t@include input-base($bg, $fg);\r\n}\r\n\r\n@mixin contextArrow() {\r\n\ttext-shadow: none;\r\n\tcontent: $glyph-icon-arrow-down;\r\n\tdisplay: inline-block;\r\n\tfont-family: 'symbolsfont';\r\n\tmargin-left: $interiorMarginSm;\r\n}\r\n\r\n@mixin nice-textarea($bg: $colorBodyBg, $fg: $colorBodyFg) {\r\n    @include input-base($bg, $fg);\r\n    padding: $interiorMargin;\r\n}\r\n\r\n@mixin subdued-input($bg: $colorBodyBg, $fg: $colorBodyFg) {\r\n    @include nice-input($bg, $fg);\r\n    background: lighten($bg, 3%);\r\n    border-bottom: 1px solid lighten($bg, 10%);\r\n}\r\n\r\n@mixin menuUlReset() {\r\n    margin: 0;\r\n    padding: 0;\r\n    li {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n}\r\n\r\n@mixin webkitProp($name, $val) {\r\n\t#{$name}: #{$val};\r\n\t-webkit-#{$name}: #{$val};\r\n}\r\n\r\n@mixin webkitVal($name, $val) {\r\n\t#{$name}: #{$val};\r\n\t#{$name}: -webkit-#{$val};\r\n}\r\n\r\n@mixin verticalCenter {\r\n    /* This doesn't work on an element inside an element with absolute positioning that has height: auto */\r\n    //position: relative;\r\n    top: 50%;\r\n    @include transform(translateY(-50%));\r\n}\r\n\r\n@mixin verticalCenterBlock($holderH, $itemH) {\r\n    top: floor(($holderH - $itemH) / 2);\r\n    bottom: auto;\r\n    height: $itemH;\r\n}\r\n\r\n@mixin ellipsize() {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n\r\n@mixin scrollH($showBar: auto) {\r\n    overflow-x: $showBar;\r\n    overflow-y: hidden;\r\n}\r\n\r\n@mixin scrollV($showBar: auto) {\r\n    overflow-x: hidden;\r\n    overflow-y: $showBar;\r\n}\r\n\r\n@mixin test($c: #ffcc00, $a: 0.2) {\r\n    background-color: rgba($c, $a) !important;\r\n}\r\n\r\n@mixin tmpBorder($c: #ffcc00, $a: 0.75) {\r\n    box-sizing: border-box;\r\n    border: 1px dotted rgba($c, $a);\r\n}\r\n\r\n@mixin testObj($w: 2000px, $h: 1000px, $c: black, $a: 0.1) {\r\n    &:after {\r\n        box-sizing: border-box;\r\n        @include bgDiagonalStripes($c, $a);\r\n        color: rgba(white, 0.3);\r\n        font-style: italic;\r\n        content: \"Test Object\";\r\n        display: block;\r\n        padding: 20px;\r\n        position: relative;\r\n        width: $w;\r\n        height: $h;\r\n        transform: scaleX(1) scaleY(1) scaleZ(1);\r\n        transform-origin: 50% 50% 0;\r\n    }\r\n}\r\n\r\n@mixin s-stale($a: 0.5) {\r\n    color: rgba($colorTelemFresh, $a) !important;\r\n    font-style: italic;\r\n}\r\n","// Global\r\n$colorBodyBg: #333;\r\n$colorBodyFg: #999;\r\n$colorGenBg: #222;\r\n$colorStatusBarBg: #000;\r\n$colorKey: #0099cc;\r\n$colorKeySelectedBg: #005177;\r\n$colorKeyFg: #fff;\r\n$colorKeyHov: #00c0f6;\r\n$colorEditAreaBg: #31363e;\r\n$colorEditAreaFg: #587ab5;\r\n$colorInteriorBorder: rgba($colorBodyFg, 0.1);\r\n$colorA: #ccc;\r\n$colorAHov: #fff;\r\n$contrastRatioPercent: 7%;\r\n$hoverRatioPercent: 10%;\r\n$basicCr: 3px;\r\n$controlCr: 2px;\r\n$smallCr: 2px;\r\n\r\n// Buttons and Controls\r\n$colorBtnBg: pullForward($colorBodyBg, $contrastRatioPercent);\r\n$colorBtnBgHov: pullForward($colorBtnBg, $hoverRatioPercent);\r\n$colorBtnFg: $colorBodyFg;\r\n$colorBtnFgHov: pullForward($colorBtnFg, $hoverRatioPercent);\r\n$colorBtnIcon: $colorBtnFg;\r\n$colorBtnIconHov: $colorBtnFgHov;\r\n$colorBtnMajorBg: $colorKey;\r\n$colorBtnMajorBgHov: pullForward($colorBtnMajorBg, $hoverRatioPercent);\r\n$colorBtnMajorFg: $colorKeyFg;\r\n$colorBtnMajorFgHov: pullForward($colorBtnMajorFg, $hoverRatioPercent);\r\n$colorClickIcon: $colorKey;\r\n$colorClickIconHov: $colorKeyHov;\r\n$colorToggleIcon: rgba($colorBodyFg, 0.5);\r\n$colorToggleIconActive: $colorKey;\r\n$colorToggleIconHov: rgba($colorToggleIconActive, 0.5);\r\n$colorInvokeMenu: #fff;\r\n$contrastInvokeMenuPercent: 30%;\r\n$shdwBtns: rgba(black, 0.2) 0 1px 2px;\r\n$shdwBtnsOverlay: rgba(black, 0.5) 0 1px 5px;\r\n$sliderColorBase: $colorKey;\r\n$sliderColorRangeHolder: rgba(black, 0.1);\r\n$sliderColorRange: rgba($sliderColorBase, 0.3);\r\n$sliderColorRangeHov: rgba($sliderColorBase, 0.5);\r\n$sliderColorKnob: $sliderColorBase;\r\n$sliderColorKnobHov: pullForward($sliderColorKnob, $ltGamma);\r\n$sliderColorRangeValHovBg: rgba($sliderColorBase, 0.1);\r\n$sliderColorRangeValHovFg: $colorKeyFg;\r\n$sliderKnobW: 15px;\r\n$sliderKnobR: 2px;\r\n$timeControllerToiLineColor: #00c2ff;\r\n$timeControllerToiLineColorHov: #fff;\r\n\r\n// General Colors\r\n$colorAlt1: #ffc700;\r\n$colorAlert: #ff3c00;\r\n$colorIconLink: #49dedb;\r\n$colorPausedBg: #c56f01;\r\n$colorPausedFg: #fff;\r\n$colorCreateBtn: $colorKey;\r\n$colorGridLines: rgba(#fff, 0.05);\r\n$colorInvokeMenu: #fff;\r\n$colorObjHdrTxt: $colorBodyFg;\r\n$colorObjHdrIc: pullForward($colorObjHdrTxt, 20%);\r\n$colorTick: rgba(white, 0.2);\r\n\r\n// Menu colors\r\n$colorMenuBg: pullForward($colorBodyBg, 23%);\r\n$colorMenuFg: pullForward($colorMenuBg, 70%);\r\n$colorMenuIc: pullForward($colorKey, 17%);\r\n$colorMenuHovBg: pullForward($colorMenuBg, $hoverRatioPercent);\r\n$colorMenuHovFg: #fff;\r\n$colorMenuHovIc: $colorMenuHovFg;\r\n$shdwMenu: none;\r\n$shdwMenuText: rgba(black, 0.1) 0 1px 2px;\r\n$colorCreateMenuLgIcon: $colorMenuFg;\r\n$colorCreateMenuText: $colorMenuFg;\r\n\r\n// Form colors\r\n$colorCheck: $colorKey;\r\n$colorFormRequired: $colorAlt1;\r\n$colorFormValid: #33cc33;\r\n$colorFormError: #990000;\r\n$colorFormInvalid: #ff3300;\r\n$colorFormFieldErrorBg: $colorFormError;\r\n$colorFormFieldErrorFg: rgba(#fff, 0.6);\r\n$colorFormLines: rgba(#fff, 0.1);\r\n$colorFormSectionHeader: rgba(#fff, 0.1);\r\n$colorInputBg: rgba(#000, 0.1);\r\n$colorInputFg: pullForward($colorBodyFg, 20%);\r\n$colorFormText: rgba(#fff, 0.5);\r\n$colorInputIcon: pushBack($colorBodyFg, 15%);\r\n$colorFieldHint: pullForward($colorBodyFg, 20%);\r\n\r\n// Inspector\r\n$colorInspectorBg: pullForward($colorBodyBg, 3%);\r\n$colorInspectorFg: $colorBodyFg;\r\n$colorInspectorPropName: pushBack($colorBodyFg, 15%);\r\n$colorInspectorPropVal: pullForward($colorInspectorFg, 15%);\r\n$colorInspectorSectionHeaderBg: $colorFormSectionHeader;\r\n$colorInspectorSectionHeaderFg: pullForward($colorInspectorBg, 40%);\r\n\r\n// Status colors, mainly used for messaging and item ancillary symbols\r\n$colorStatusFg: #ccc;\r\n$colorStatusDefault: #ccc;\r\n$colorStatusInfo: #62ba72;\r\n$colorStatusAlert: #ffa66d;\r\n$colorStatusError: #d4585c;\r\n$colorStatusAvailable: $colorKey;\r\n$colorStatusBtnBg: $colorBtnBg;\r\n$colorProgressBarOuter: rgba(#000, 0.1);\r\n$colorProgressBarAmt: $colorKey;\r\n$progressBarHOverlay: 15px;\r\n$progressBarStripeW: 20px;\r\n$shdwStatusIc: rgba(black, 0.4) 0 1px 2px;\r\n\r\n// Selects\r\n$colorSelectBg: $colorBtnBg;\r\n$colorSelectFg: $colorBtnFg;\r\n\r\n// Limits and staleness colors\r\n$colorTelemFresh: pullForward($colorBodyFg, 20%);\r\n$colorTelemStale: pushBack($colorBodyFg, 20%);\r\n$styleTelemStale: italic;\r\n$colorLimitYellowBg: rgba(#ffaa00, 0.3);\r\n$colorLimitYellowIc: #ffaa00;\r\n$colorLimitRedBg: rgba(red, 0.3);\r\n$colorLimitRedIc: red;\r\n\r\n// Bubble colors\r\n$colorInfoBubbleBg: #ddd;\r\n$colorInfoBubbleFg: #666;\r\n$colorThumbsBubbleFg: pullForward($colorBodyFg, 10%);\r\n$colorThumbsBubbleBg: pullForward($colorBodyBg, 10%);\r\n\r\n// Overlay\r\n$colorOvrBlocker: rgba(black, 0.7);\r\n$colorOvrBg: pullForward($colorBodyBg, 10%);\r\n$colorOvrFg: pullForward($colorBodyFg, 30%);\r\n$colorOvrBtnBg: pullForward($colorOvrBg, 20%);\r\n$colorOvrBtnFg: #fff;\r\n$colorFieldHintOverlay: pullForward($colorOvrBg, 30%);\r\n\r\n// Items\r\n$colorItemBg: lighten($colorBodyBg, 5%);\r\n$colorItemBgHov: pullForward($colorItemBg, $hoverRatioPercent);\r\n$colorItemFg: lighten($colorItemBg, 50%);\r\n$colorItemFgDetails: lighten($colorItemBg, 30%);\r\n$colorItemIc: $colorKey;\r\n$colorItemSubIcons: $colorItemFgDetails;\r\n$colorItemOpenIcon: $colorItemFgDetails;\r\n$shdwItemText: rgba(black, 0.1) 0 1px 2px;\r\n$colorItemBgSelected: $colorKey;\r\n\r\n// Tabular\r\n$colorTabBorder: pullForward($colorBodyBg, 10%);\r\n$colorTabBodyBg: darken($colorBodyBg, 10%);\r\n$colorTabBodyFg: lighten($colorTabBodyBg, 40%);\r\n$colorTabHeaderBg: rgba(white, 0.1); // lighten($colorBodyBg, 10%);\r\n$colorTabHeaderFg: $colorBodyFg; //lighten($colorTabHeaderBg, 40%);\r\n$colorTabHeaderBorder: $colorBodyBg;\r\n\r\n// Plot\r\n$colorPlotBg: rgba(black, 0.1);\r\n$colorPlotFg: $colorBodyFg;\r\n$colorPlotHash: $colorTick;\r\n$stylePlotHash: dashed;\r\n$colorPlotAreaBorder: $colorInteriorBorder;\r\n$colorPlotLabelFg: pushBack($colorPlotFg, 20%);\r\n\r\n// Tree\r\n$colorItemTreeHoverBg: pullForward($colorBodyBg, $hoverRatioPercent);\r\n$colorItemTreeHoverFg: pullForward($colorBodyFg, $hoverRatioPercent);\r\n$colorItemTreeIcon: $colorKey;\r\n$colorItemTreeIconHover: lighten($colorItemTreeIcon, 20%);\r\n$colorItemTreeFg: $colorBodyFg;\r\n$colorItemTreeSelectedBg: pushBack($colorKey, 15%);\r\n$colorItemTreeSelectedFg: pullForward($colorBodyFg, 20%);\r\n$colorItemTreeEditingBg: #344154;\r\n$colorItemTreeEditingFg: $colorEditAreaFg;\r\n$colorItemTreeVC: $colorBodyFg;\r\n$colorItemTreeVCHover: pullForward($colorItemTreeVC, 20%);\r\n$colorItemTreeSelectedVC: $colorItemTreeVC;\r\n$shdwItemTreeIcon: 0.6;\r\n\r\n// Scrollbar\r\n$scrollbarTrackSize: 10px;\r\n$scrollbarTrackShdw: rgba(#000, 0.7) 0 1px 5px;\r\n$scrollbarTrackColorBg: rgba(#000, 0.4);\r\n$scrollbarThumbColor: pullForward($colorBodyBg, 10%);\r\n$scrollbarThumbColorHov: pullForward($scrollbarThumbColor, 2%);\r\n$scrollbarThumbColorOverlay: pullForward($colorOvrBg, 10%);\r\n$scrollbarThumbColorOverlayHov: pullForward($scrollbarThumbColorOverlay, 2%);\r\n\r\n// Splitter\r\n// All splitterD* values MUST both be either odd or even numbers\r\n$splitterD: 20px;\r\n$splitterDSm: 10px; // Smaller splitter, used inside elements like a Timeline view\r\n$splitterHandleD: 2px;\r\n$colorSplitterBaseBg: pullForward($colorBodyBg, 10%);\r\n$colorSplitterBg: $colorSplitterBaseBg;\r\n$splitterShdw: rgba(black, 0.4) 0 0 3px;\r\n$splitterEndCr: none;\r\n$colorSplitterHover: pullForward($colorSplitterBg, $hoverRatioPercent);\r\n$colorSplitterActive: $colorKey;\r\n\r\n// Minitabs\r\n$uePaneMiniTabH: 24px;\r\n$uePaneMiniTabW: 8px;\r\n$colorMiniTabBg: $colorSplitterBg;\r\n$colorMiniTabFg: pushBack($colorMiniTabBg, 10%);\r\n$colorMiniTabBgHov: $colorSplitterHover;\r\n$colorMiniTabFgHov: #fff;\r\n\r\n// Mobile\r\n$colorMobilePaneLeft: darken($colorBodyBg, 5%);\r\n$colorMobilePaneLeftTreeItemBg: pullForward($colorMobilePaneLeft, 3%);\r\n$colorMobileSelectListTreeItemBg: rgba(#fff, 0.05);\r\n\r\n// Datetime Picker\r\n$colorCalCellHovBg: $colorKey;\r\n$colorCalCellHovFg: $colorKeyFg;\r\n$colorCalCellSelectedBg: $colorItemTreeSelectedBg;\r\n$colorCalCellSelectedFg: $colorItemTreeSelectedFg;\r\n$colorCalCellInMonthBg: pushBack($colorMenuBg, 5%);\r\n\r\n// About Screen\r\n$colorAboutLink: #84b3ff;\r\n\r\n// Loading\r\n$colorLoadingFg: $colorAlt1;\r\n$colorLoadingBg: rgba($colorBodyFg, 0.2);","@mixin containerSubtle($bg: $colorBodyBg, $fg: $colorBodyFg, $gradRatio: 5%) {\r\n\t@include containerBase($bg, $fg);\r\n\t@include background-image(linear-gradient(pullForward($bg, $gradRatio), $bg));\r\n\t@include boxShdw($shdwBtns);\r\n}\r\n\r\n@function pullForward($c: $colorBodyBg, $p: 20%) {\r\n    // For dark interfaces, lighter things come forward - opposite for light interfaces\r\n    @return lighten($c, $p);\r\n}\r\n\r\n@function pushBack($c: $colorBodyBg, $p: 20%) {\r\n    // For dark interfaces, darker things move back - opposite for light interfaces\r\n    @return darken($c, $p);\r\n}","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n@mixin activityBg($bg, $gamma: 10) {\r\n    @include background-image(linear-gradient(lighten($bg, $gamma), $bg));\r\n}\r\n\r\n// Timeline constants\r\n$activityBarH: 17px;\r\n$timelinePaneLeftW: 30%;\r\n$timelinePaneBtmH: 30%;\r\n$timelineResourceGraphYLabelsMargin: 70px;\r\n$timelineTopPaneHeaderH: 30px;\r\n\r\n$timelineSwimlaneGanttVM: 2px; // The vertical space above and below the gantt bars\r\n$timelineSwimlaneH: $activityBarH + ($timelineSwimlaneGanttVM * 2);\r\n$timelineTopPaneHeaderElemMargin: $interiorMargin;\r\n\r\n// Timeline Tabular constants\r\n$timelineColIconW: 16px;\r\n$timelineColResourcePlotW: $timelineColIconW;\r\n$timelineColTitleW: 250px;\r\n$timelineColDatetimeW: 110px;\r\n$timelineColDurationW: 70px;\r\n$timelineColActivityModesW: $timelineColTitleW;\r\n$timelineColPadR: 50px;\r\n$timelineTabularTitleW: $timelineColResourcePlotW + $timelineColTitleW;\r\n$timelineTabularDataW: ($timelineColDatetimeW * 2) + $timelineColDurationW + $timelineColActivityModesW + $timelineColPadR;\r\n\r\n\r\n// // Ported from legacy timelines SASS\r\n$activitiesHolderM: 30px;\r\n$scenarioTopPad: 25px;\r\n$swimlaneVM: 2px;\r\n$timelineVM: 10px;\r\n$timelineBPad: $interiorMargin * 2;\r\n$graphResourceSummaryH: 200px;\r\n$graphResourceSummaryLegendH: 20px;\r\n$scenarioTimelineSummaryH: 20px;\r\n$scenarioTimelineSummaryHExpanded: $graphResourceSummaryH + 30px;\r\n$scenarioPanZoomSliderH: 16px;\r\n$scenarioTicksH: 7px;\r\n$scenarioTickLabelsH: 10px;\r\n\r\n\r\n",".l-timeline-gantt {\r\n    min-width: 2px;\r\n    overflow: hidden;\r\n\tposition: absolute;\r\n\ttop: $timelineSwimlaneGanttVM; bottom: $timelineSwimlaneGanttVM;\r\n\r\n\t.bar {\r\n\t\t@include ellipsize();\r\n\t\theight: $activityBarH;\r\n\t\tline-height: $activityBarH;\r\n\t\tpadding: 0 $interiorMargin;\r\n\r\n\t\tspan {\r\n            $iconW: 20px;\r\n            @include absPosDefault();\r\n            display: block;\r\n\t\t\t&.s-activity-type {\r\n                right: auto; width: $iconW;\r\n                text-align: center;\r\n\t\t\t\t&.timeline {\r\n\t\t\t\t\t&:before {\r\n\t\t\t\t\t\tcontent:\"S\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t&.activity {\r\n\t\t\t\t\t&:before {\r\n\t\t\t\t\t\tcontent:\"A\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&.s-title {\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                left: $iconW;\r\n\t\t\t}\r\n\t\t\t&.duration {\r\n\t\t\t\tleft: auto;\r\n\t\t\t\topacity: 0.75;\r\n\t\t\t\tright: 0;\r\n\t\t\t\ttext-align: right;\r\n\t\t\t\twidth: 60px;\r\n\t\t\t}\r\n\t\t\t&.handle {\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\theight: auto;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\t&.left {\r\n\t\t\t\t\tright: auto;\r\n\t\t\t\t}\r\n\t\t\t\t&.middle {\r\n\t\t\t\t\tright: 15px;\r\n\t\t\t\t\tleft: 15px;\r\n\t\t\t\t\twidth: auto;\r\n\t\t\t\t}\r\n\t\t\t\t&.right {\r\n\t\t\t\t\tright: 0;\r\n\t\t\t\t\tleft: auto;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    &.sm .bar span {\r\n        // Hide icon and label if width is too small\r\n        display: none;\r\n    }\r\n}\r\n\r\n.edit-mode .s-timeline-gantt,\r\n.s-status-editing .s-timeline-gantt {\r\n\t.handle {\r\n\t\tcursor: col-resize;\r\n\t\t&.mid {\r\n\t\t\tcursor: ew-resize;\r\n\t\t}\r\n\t}\r\n}","/*****************************************************************************\r\n * Open MCT, Copyright (c) 2014-2016, United States Government\r\n * as represented by the Administrator of the National Aeronautics and Space\r\n * Administration. All rights reserved.\r\n *\r\n * Open MCT is licensed under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations\r\n * under the License.\r\n *\r\n * Open MCT includes source code licensed under additional open source\r\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\r\n * this source code distribution or the Licensing information page available\r\n * at runtime from the About dialog for additional information.\r\n *****************************************************************************/\r\n//*************************************************************** LAYOUT\r\n.l-timeline-holder {\r\n    @include absPosDefault();\r\n\r\n    &.split-layout {\r\n        >.splitter {\r\n            // Top of splitter within Timelines should be 0\r\n            top: 0;\r\n        }\r\n    }\r\n\r\n    .l-header {\r\n        @include user-select(none);\r\n        cursor: default;\r\n    }\r\n\r\n    .l-timeline-pane {\r\n        @include absPosDefault();\r\n\r\n\t    .l-width-control {\r\n\t\t    position: relative;\r\n\t    }\r\n\r\n\t    .l-swimlanes-holder {\r\n\t\t    @include absPosDefault();\r\n\t\t    top: $timelineTopPaneHeaderH + 1;\r\n            .l-col.l-plot-resource {\r\n                cursor: pointer;\r\n            }\r\n\t    }\r\n\r\n\t    // Overall layout\r\n        &.t-pane-h {\r\n            &.s-timeline-tabular .t-pane-v {\r\n                // Vertical panes within tabular area\r\n                @include absPosDefault();\r\n                &.l-tabular-l {\r\n                    // Tree area with item title\r\n                    right: auto; // Set this to auto and uncomment width below when additional tabular columns are added\r\n                    width: $timelineTabularTitleW;\r\n                    .l-swimlanes-holder {\r\n                        bottom: $scrollbarTrackSize;\r\n                    }\r\n                }\r\n                &.l-tabular-r {\r\n                    // Start, end, duration, activity modes columns\r\n                    @include scrollH(scroll);\r\n                    left: $timelineTabularTitleW;\r\n\t                .l-width {\r\n\t\t                @include absPosDefault(0, visible);\r\n\t\t                min-width: $timelineTabularDataW;\r\n\t\t                width: 100%;\r\n\t                }\r\n                }\r\n            }\r\n            &.l-timeline-gantt {\r\n                .l-swimlanes-holder {\r\n                    @include scrollV(scroll);\r\n                    bottom: $scrollbarTrackSize;\r\n                }\r\n            }\r\n\t        &.l-timeline-resource-legend {\r\n\t\t        box-sizing: border-box;\r\n\t\t        padding: $interiorMargin 0;\r\n\t\t        white-space: nowrap;\r\n\r\n\t\t        .l-legend-items {\r\n\t\t\t        @include absPosDefault();\r\n\t\t\t        @include scrollV();\r\n\t\t\t        top: 25px;\r\n\t\t        }\r\n\t\t        .legend-item {\r\n\t\t\t        // Inherits from /platform/commonUI/general/res/sass/plots/_plots-main.scss\r\n\t\t\t        display: block;\r\n\t\t\t        margin-bottom: $interiorMarginSm;\r\n\t\t\t        overflow: hidden;\r\n\t\t\t        text-overflow: ellipsis;\r\n\t\t\t        white-space: nowrap;\r\n\t\t\t        .color-swatch {\r\n\t\t\t\t        vertical-align: baseline;\r\n\t\t\t        }\r\n\t\t\t        .title-label {\r\n\t\t\t\t        vertical-align: baseline;\r\n\t\t\t        }\r\n\t\t        }\r\n\t        }\r\n\r\n            &.l-timeline-resource-graph {\r\n\t            $m: $interiorMargin;\r\n\r\n                .l-graphs-holder {\r\n                    @include absPosDefault();\r\n                    bottom: $scrollbarTrackSize;\r\n\r\n                    .l-graphs {\r\n                        @include absPosDefault();\r\n                        @include scrollV(scroll);\r\n                    }\r\n\r\n                    .l-graph-labels-holder {\r\n                        @include absPosDefault();\r\n                        overflow: hidden;\r\n                        right: auto;\r\n                        width: 400px;\r\n                    }\r\n                }\r\n\r\n                .l-scroll-control {\r\n                    @include absPosDefault();\r\n                    overflow-x: scroll;\r\n                    overflow-y: hidden;\r\n                    top: auto; right: $scrollbarTrackSize;\r\n                    height: $scrollbarTrackSize;\r\n                    .l-width-control {\r\n                        height: 10px; // Need to add height to force scrollbar to appear\r\n                    }\r\n                }\r\n\r\n\t            .l-graph,\r\n\t            .l-graph-labels {\r\n\t\t            height: 80px;\r\n\t\t            margin-bottom: $interiorMarginSm;\r\n\t\t            position: relative;\r\n\t            }\r\n\r\n\t            .l-title {\r\n\t\t            @include ellipsize();\r\n\t\t            top: $m; left: $m;\r\n\t\t            position: absolute;\r\n\t            }\r\n\r\n\t            .l-graph {\r\n                    width: 100%;\r\n\t\t            .l-graph-area {\r\n\t\t\t            canvas {\r\n\t\t\t\t            width: 100%;\r\n\t\t\t\t            height: 100%;\r\n\t\t\t            }\r\n\t\t            }\r\n\t            }\r\n\r\n\t            .l-graph-labels {\r\n\t\t            z-index: 10;\r\n\t            }\r\n\r\n\t            .l-graph-area {\r\n\t\t            @include absPosDefault();\r\n\t\t            top: 20px; bottom: 5px;\r\n\t\t            .l-labels-holder {\r\n\t\t\t            @include absPosDefault();\r\n                        @include justify-content(space-between);\r\n\t\t\t            left: $m;\r\n\t\t\t            .t-resource-graph-tick-label {\r\n                            font-size: 0.9em;\r\n                            &.tick-label-y {\r\n                                text-align: left;\r\n                            }\r\n\t\t\t            }\r\n\t\t            }\r\n\t            }\r\n            }\r\n        }\r\n\r\n        &.l-pane-l {\r\n            right: auto;\r\n\t\t\tmin-width: 50px;\r\n\t\t\tmax-width: 90%;\r\n            width: $timelinePaneLeftW;\r\n        }\r\n\r\n        &.l-pane-r {\r\n            left: 0;\r\n\t\t\t&:hover {\r\n\t\t\t\t.l-hover-btns-holder {\r\n\t\t\t\t\t@include trans-prop-nice-fade(100ms);\r\n\t\t\t\t\topacity: 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n\r\n        &.l-pane-top {\r\n            bottom: $timelinePaneBtmH;\r\n        }\r\n        &.l-pane-btm {\r\n            top: auto;\r\n\t\t\tmin-height: 20px;\r\n\t\t\tmax-height: 80%;\r\n            height: $timelinePaneBtmH;\r\n        }\r\n    }\r\n\r\n    .l-swimlane {\r\n\t    height: $timelineSwimlaneH;\r\n\t    position: relative;\r\n    }\r\n\r\n\t// Header\r\n    .s-timeline-tabular .l-header,\r\n    .s-timeline-gantt .l-header {\r\n\t    @include absPosDefault(0, visible);\r\n        bottom: auto; height: $timelineTopPaneHeaderH;\r\n\r\n        .l-header-elem {\r\n\t\t    @include absPosDefault($timelineTopPaneHeaderElemMargin, visible);\r\n\t\t    display: block;\r\n\t\t    &.l-labels {\r\n\t\t\t    .l-label {\r\n\t\t\t\t    position: absolute;\r\n\t\t\t\t    width: 140px;\r\n\t\t\t\t    margin-left: -70px;\r\n\t\t\t\t    text-align: center;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n    }\r\n\r\n\t.l-hover-btns-holder {\r\n\t\t@include absPosDefault();\r\n\t\tbox-sizing: border-box;\r\n\t\t@include trans-prop-nice-fade(500ms);\r\n\t\topacity: 0;\r\n\t\theight: $timelineTopPaneHeaderH;\r\n        left: auto;\r\n\t\tpadding: $interiorMargin $interiorMargin $interiorMargin $interiorMargin * 10;\r\n\t\ttext-align: right;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t// Tabular Columns\r\n\t.l-cols {\r\n\t\t@include absPosDefault(0, visible);\r\n\t\ttext-wrap: none;\r\n\t\twhite-space: nowrap;\r\n\t\t.l-col {\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\t@include ellipsize();\r\n\t\t\tdisplay: inline-block;\r\n\t\t\theight: 100%;\r\n\t\t\tpadding: 0 $interiorMargin;\r\n\t\t\tposition: relative;\r\n\t\t\ttext-wrap: none;\r\n\t\t\twhite-space: nowrap;\r\n\r\n\t\t\t&.l-col-icon {\r\n\t\t\t\twidth: $timelineColIconW;\r\n                text-align: center;\r\n                padding: 0;\r\n\t\t\t}\r\n\r\n\t\t\t&.l-plot-resource {\r\n\t\t\t\tborder-left: none !important;\r\n\t\t\t\tpadding-left: 0;\r\n\t\t\t}\r\n\r\n\t\t\t&.l-title {\r\n\t\t\t\twidth: $timelineColTitleW;\r\n                .rep-object-label {\r\n                    border-radius: $basicCr;\r\n                    display: inline-block;\r\n                    padding: 0 $interiorMargin;\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\t&.l-start,\r\n\t\t\t&.l-end,\r\n\t\t\t&.l-duration {\r\n\t\t\t\twidth: $timelineColDatetimeW;\r\n\t\t\t}\r\n\r\n\t\t\t&.l-activity-modes {\r\n\t\t\t\tdisplay: none; // Temp, until modes can be displayed\r\n\t\t\t\twidth: $timelineColActivityModesW;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.s-timeline-tabular {\r\n\t\t.l-header .l-cols {\r\n\t\t\ttop: $timelineTopPaneHeaderElemMargin; bottom: $timelineTopPaneHeaderElemMargin;\r\n\t\t}\r\n\r\n\t\t.l-pane-l {\r\n\t\t\t// Left pane of the tabular area\r\n\t\t\t.l-cols {\r\n\t\t\t\tleft: $timelineTopPaneHeaderElemMargin;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Ticks\r\n\t.l-ticks,\r\n\t.l-subticks {\r\n\t\t@include absPosDefault();\r\n\t\ttop: auto; bottom: $interiorMarginSm;\r\n\t}\r\n\r\n\t.l-ticks {\r\n\t\theight: 10px\r\n\t}\r\n\r\n\t.l-subticks {\r\n\t\theight: 5px\r\n\t}\r\n}\r\n\r\n.s-status-editing .l-title .rep-object-label[draggable=\"true\"] {\r\n    @include transition(background-color, 0.25s);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: $colorItemTreeHoverBg;\r\n    }\r\n}\r\n"],"mappings":"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","names":[],"sourceRoot":"/source/"}